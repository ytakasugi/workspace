{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3","program":"/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rusttype","--edition=2018","/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"has-atomics\"","--cfg","feature=\"std\"","-C","metadata=07a716d6ec734973","-C","extra-filename=-07a716d6ec734973","--out-dir","/home/ytakasugi/000_learning/workspace/Rust_workspace/plotters_sample/target/rls/debug/deps","-L","dependency=/home/ytakasugi/000_learning/workspace/Rust_workspace/plotters_sample/target/rls/debug/deps","--extern","approx=/home/ytakasugi/000_learning/workspace/Rust_workspace/plotters_sample/target/rls/debug/deps/libapprox-ae346aae61f4dbf0.rmeta","--extern","ordered_float=/home/ytakasugi/000_learning/workspace/Rust_workspace/plotters_sample/target/rls/debug/deps/libordered_float-ec532e0c59ba6c34.rmeta","--extern","stb_truetype=/home/ytakasugi/000_learning/workspace/Rust_workspace/plotters_sample/target/rls/debug/deps/libstb_truetype-05ef975d7ea1f4ba.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ytakasugi/000_learning/workspace/Rust_workspace/plotters_sample/target/rls/debug/deps/librusttype-07a716d6ec734973.rmeta"},"prelude":{"crate_id":{"name":"rusttype","disambiguator":[818261992024014428,5798714133233605753]},"crate_root":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src","external_crates":[{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/rasterizer.rs","num":18,"id":{"name":"approx","disambiguator":[8391902732824745655,14888329288371716252]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/rasterizer.rs","num":19,"id":{"name":"num_traits","disambiguator":[11348060067260856026,14620577537453903898]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/rasterizer.rs","num":20,"id":{"name":"ordered_float","disambiguator":[8737709078068022642,5545901836533887568]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","num":21,"id":{"name":"stb_truetype","disambiguator":[12494656230749293558,10619810145812000154]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","num":22,"id":{"name":"byteorder","disambiguator":[10836038553012167767,15297481873074233491]}}],"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":0,"byte_end":42496,"line_start":1,"line_end":1112,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":6},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":5269,"byte_end":5274,"line_start":109,"line_end":109,"column_start":27,"column_end":32},"alias_span":null,"name":"point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":5276,"byte_end":5282,"line_start":109,"line_end":109,"column_start":34,"column_end":40},"alias_span":null,"name":"vector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":400},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":5284,"byte_end":5289,"line_start":109,"line_end":109,"column_start":42,"column_end":47},"alias_span":null,"name":"Curve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":379},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":5291,"byte_end":5295,"line_start":109,"line_end":109,"column_start":49,"column_end":53},"alias_span":null,"name":"Line","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":291},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":5297,"byte_end":5302,"line_start":109,"line_end":109,"column_start":55,"column_end":60},"alias_span":null,"name":"Point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":421},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":5304,"byte_end":5308,"line_start":109,"line_end":109,"column_start":62,"column_end":66},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":335},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":5310,"byte_end":5316,"line_start":109,"line_end":109,"column_start":68,"column_end":74},"alias_span":null,"name":"Vector","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":0,"byte_end":42496,"line_start":1,"line_end":1112,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":88},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":499},{"krate":0,"index":506},{"krate":0,"index":503},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":150},{"krate":0,"index":515},{"krate":0,"index":526},{"krate":0,"index":523},{"krate":0,"index":152},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":529},{"krate":0,"index":554},{"krate":0,"index":552},{"krate":0,"index":550},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":540},{"krate":0,"index":534},{"krate":0,"index":532},{"krate":0,"index":555},{"krate":0,"index":580},{"krate":0,"index":578},{"krate":0,"index":576},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":566},{"krate":0,"index":560},{"krate":0,"index":558},{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":169},{"krate":0,"index":587},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":628},{"krate":0,"index":626},{"krate":0,"index":624},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":610},{"krate":0,"index":629},{"krate":0,"index":655},{"krate":0,"index":653},{"krate":0,"index":651},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":633},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":656},{"krate":0,"index":661},{"krate":0,"index":176},{"krate":0,"index":664},{"krate":0,"index":669},{"krate":0,"index":178},{"krate":0,"index":672},{"krate":0,"index":693},{"krate":0,"index":691},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":677},{"krate":0,"index":675},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":197},{"krate":0,"index":201},{"krate":0,"index":205},{"krate":0,"index":694},{"krate":0,"index":700},{"krate":0,"index":224},{"krate":0,"index":705},{"krate":0,"index":714},{"krate":0,"index":231},{"krate":0,"index":237},{"krate":0,"index":718},{"krate":0,"index":729},{"krate":0,"index":727},{"krate":0,"index":725},{"krate":0,"index":730},{"krate":0,"index":734},{"krate":0,"index":732},{"krate":0,"index":246},{"krate":0,"index":267},{"krate":0,"index":736},{"krate":0,"index":745},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":289}],"decl_id":null,"docs":" RustType is a pure Rust alternative to libraries like FreeType.","sig":null,"attributes":[{"value":"/ RustType is a pure Rust alternative to libraries like FreeType.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":0,"byte_end":67,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":68,"byte_end":71,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The current capabilities of RustType:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":72,"byte_end":113,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":114,"byte_end":117,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * Reading TrueType formatted fonts and font collections. This includes","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":118,"byte_end":192,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/   `*.ttf` as well as a subset of `*.otf` font files.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":193,"byte_end":249,"line_start":6,"line_end":6,"column_start":1,"column_end":57}},{"value":"/ * Retrieving glyph shapes and commonly used properties for a font and its","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":250,"byte_end":327,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/   glyphs.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":328,"byte_end":341,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"/ * Laying out glyphs horizontally using horizontal and vertical metrics, and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":342,"byte_end":421,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/   glyph-pair-specific kerning.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":422,"byte_end":456,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ * Rasterising glyphs with sub-pixel positioning using an accurate analytical","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":457,"byte_end":537,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/   algorithm (not based on sampling).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":538,"byte_end":578,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/ * Managing a font cache on the GPU with the `gpu_cache` module. This keeps","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":579,"byte_end":657,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/   recently used glyph renderings in a dynamic cache in GPU memory to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":658,"byte_end":730,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   minimise texture uploads per-frame. It also allows you keep the draw call","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":731,"byte_end":810,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   count for text very low, as all glyphs are kept in one GPU texture.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":811,"byte_end":884,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":885,"byte_end":888,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Notable things that RustType does not support *yet*:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":889,"byte_end":945,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":946,"byte_end":949,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * OpenType formatted fonts that are not just TrueType fonts (OpenType is a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":950,"byte_end":1028,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/   superset of TrueType). Notably there is no support yet for cubic Bezier","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1029,"byte_end":1106,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   curves used in glyphs.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1107,"byte_end":1135,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ * Font hinting.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1136,"byte_end":1155,"line_start":23,"line_end":23,"column_start":1,"column_end":20}},{"value":"/ * Ligatures of any kind.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1156,"byte_end":1184,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ * Some less common TrueType sub-formats.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1185,"byte_end":1229,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ * Right-to-left and vertical text layout.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1230,"byte_end":1275,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1276,"byte_end":1279,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Getting Started","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1280,"byte_end":1301,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1302,"byte_end":1305,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ To hit the ground running with RustType, look at the `simple.rs` example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1306,"byte_end":1382,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ supplied with the crate. It demonstrates loading a font file, rasterising an","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1383,"byte_end":1463,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ arbitrary string, and displaying the result as ASCII art. If you prefer to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1464,"byte_end":1542,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ just look at the documentation, the entry point for loading fonts is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1543,"byte_end":1615,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ `FontCollection`, from which you can access individual fonts, then their","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1616,"byte_end":1692,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ glyphs.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1693,"byte_end":1704,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1705,"byte_end":1708,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Glyphs","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1709,"byte_end":1721,"line_start":37,"line_end":37,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1722,"byte_end":1725,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The glyph API uses wrapper structs to augment a glyph with information such","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1726,"byte_end":1805,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ as scaling and positioning, making relevant methods that make use of this","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1806,"byte_end":1883,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ information available as appropriate. For example, given a `Glyph` `glyph`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1884,"byte_end":1962,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ obtained directly from a `Font`:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":1963,"byte_end":1999,"line_start":42,"line_end":42,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":2000,"byte_end":2003,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":2004,"byte_end":2017,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/ # use rusttype::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":2018,"byte_end":2040,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/ # let glyph: Glyph<'static> = unimplemented!();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":2041,"byte_end":2092,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ // One of the few things you can do with an unsized, positionless glyph is get its id.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":2093,"byte_end":2183,"line_start":47,"line_end":47,"column_start":1,"column_end":91}},{"value":"/ let id = glyph.id();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":2184,"byte_end":2208,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/ let glyph = glyph.scaled(Scale::uniform(10.0));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":2209,"byte_end":2260,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/ // Now glyph is a ScaledGlyph, you can do more with it, as well as what you can do with Glyph.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":2261,"byte_end":2359,"line_start":50,"line_end":50,"column_start":1,"column_end":99}},{"value":"/ // For example, you can access the correctly scaled horizontal metrics for the glyph.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":2360,"byte_end":2449,"line_start":51,"line_end":51,"column_start":1,"column_end":90}},{"value":"/ let h_metrics = glyph.h_metrics();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":2450,"byte_end":2488,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ let glyph = glyph.positioned(point(5.0, 3.0));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":2489,"byte_end":2539,"line_start":53,"line_end":53,"column_start":1,"column_end":51}},{"value":"/ // Now glyph is a PositionedGlyph, and you can do even more with it, e.g. drawing.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":2540,"byte_end":2626,"line_start":54,"line_end":54,"column_start":1,"column_end":87}},{"value":"/ glyph.draw(|x, y, v| {}); // In this case the pixel values are not used.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":2627,"byte_end":2703,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":2704,"byte_end":2711,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":2712,"byte_end":2715,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # Unicode terminology","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":2716,"byte_end":2741,"line_start":58,"line_end":58,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":2742,"byte_end":2745,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This crate uses terminology for computerised typography as specified by the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":2746,"byte_end":2825,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ Unicode standard. If you are not sure of the differences between a code","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":2826,"byte_end":2901,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ point, a character, and a glyph, you may want to check the [official Unicode","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":2902,"byte_end":2982,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"/ glossary](http://unicode.org/glossary/), or alternatively, here's my take on","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":2983,"byte_end":3063,"line_start":63,"line_end":63,"column_start":1,"column_end":81}},{"value":"/ it from a practical perspective:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":3064,"byte_end":3100,"line_start":64,"line_end":64,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":3101,"byte_end":3104,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ * A character is what you would conventionally call a single symbol,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":3105,"byte_end":3177,"line_start":66,"line_end":66,"column_start":1,"column_end":73}},{"value":"/   independent of its appearance or representation in a particular font.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":3178,"byte_end":3253,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/   Examples include `a`, `A`, `ä`, `å`, `1`, `*`, `Ω`, etc.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":3254,"byte_end":3319,"line_start":68,"line_end":68,"column_start":1,"column_end":63}},{"value":"/ * A Unicode code point is the particular number that the Unicode standard","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":3320,"byte_end":3397,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/   associates with a particular character. Note however that code points also","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":3398,"byte_end":3478,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/   exist for things not conventionally thought of as characters by","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":3479,"byte_end":3548,"line_start":71,"line_end":71,"column_start":1,"column_end":70}},{"value":"/   themselves, but can be combined to form characters, such as diacritics","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":3549,"byte_end":3625,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/   like accents. These \"characters\" are known in Unicode as \"combining","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":3626,"byte_end":3699,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/   characters\". E.g., a diaeresis (`¨`) has the code point U+0308. If this","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":3700,"byte_end":3778,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/   code point follows the code point U+0055 (the letter `u`), this sequence","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":3779,"byte_end":3857,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/   represents the character `ü`. Note that there is also a single codepoint","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":3858,"byte_end":3937,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/   for `ü`, U+00FC. This means that what visually looks like the same string","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":3938,"byte_end":4018,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"/   can have multiple different Unicode representations. Some fonts will have","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":4019,"byte_end":4098,"line_start":78,"line_end":78,"column_start":1,"column_end":80}},{"value":"/   glyphs (see below) for one sequence of codepoints, but not another that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":4099,"byte_end":4176,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/   has the same meaning. To deal with this problem it is recommended to use","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":4177,"byte_end":4255,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/   Unicode normalisation, as provided by, for example, the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":4256,"byte_end":4317,"line_start":81,"line_end":81,"column_start":1,"column_end":62}},{"value":"/   [unicode-normalization](http://crates.io/crates/unicode-normalization)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":4318,"byte_end":4394,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"/   crate, to convert to code point sequences that work with the font in","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":4395,"byte_end":4469,"line_start":83,"line_end":83,"column_start":1,"column_end":75}},{"value":"/   question. Typically a font is more likely to support a single code point","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":4470,"byte_end":4548,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/   vs. a sequence with the same meaning, so the best normalisation to use is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":4549,"byte_end":4628,"line_start":85,"line_end":85,"column_start":1,"column_end":80}},{"value":"/   \"canonical recomposition\", known as NFC in the normalisation crate.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":4629,"byte_end":4702,"line_start":86,"line_end":86,"column_start":1,"column_end":74}},{"value":"/ * A glyph is a particular font's shape to draw the character for a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":4703,"byte_end":4773,"line_start":87,"line_end":87,"column_start":1,"column_end":71}},{"value":"/   particular Unicode code point. This will have its own identifying number","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":4774,"byte_end":4852,"line_start":88,"line_end":88,"column_start":1,"column_end":79}},{"value":"/   unique to the font, its ID.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":4853,"byte_end":4886,"line_start":89,"line_end":89,"column_start":1,"column_end":34}},{"value":"allow(clippy :: cognitive_complexity, clippy :: doc_markdown, clippy ::\n        cast_lossless, clippy :: many_single_char_names)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":4887,"byte_end":5021,"line_start":90,"line_end":95,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":291},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43295,"byte_end":43300,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"name":"Point","qualname":"::geometry::Point","value":"Point { x, y }","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294}],"decl_id":null,"docs":" A point in 2-dimensional space, with each dimension of type `N`.","sig":null,"attributes":[{"value":"/ A point in 2-dimensional space, with each dimension of type `N`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":42606,"byte_end":42674,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":42675,"byte_end":42678,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Legal operations on points are addition and subtraction by vectors, and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":42679,"byte_end":42754,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ subtraction between points, to give a vector representing the offset between","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":42755,"byte_end":42835,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ the two points. Combined with the legal operations on vectors, meaningful","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":42836,"byte_end":42913,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ manipulations of vectors and points can be performed.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":42914,"byte_end":42971,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":42972,"byte_end":42975,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ For example, to interpolate between two points by a factor `t`:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":42976,"byte_end":43043,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43044,"byte_end":43047,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43048,"byte_end":43055,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # use rusttype::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43056,"byte_end":43078,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/ # let t = 0.5; let p0 = point(0.0, 0.0); let p1 = point(0.0, 0.0);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43079,"byte_end":43149,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ let interpolated_point = p0 + (p1 - p0) * t;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43150,"byte_end":43198,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43199,"byte_end":43206,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":293},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43314,"byte_end":43315,"line_start":22,"line_end":22,"column_start":9,"column_end":10},"name":"x","qualname":"::geometry::Point::x","value":"N","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":294},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43328,"byte_end":43329,"line_start":23,"line_end":23,"column_start":9,"column_end":10},"name":"y","qualname":"::geometry::Point::y","value":"N","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":335},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43661,"byte_end":43667,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Vector","qualname":"::geometry::Vector","value":"Vector { x, y }","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338}],"decl_id":null,"docs":" A vector in 2-dimensional space, with each dimension of type `N`.","sig":null,"attributes":[{"value":"/ A vector in 2-dimensional space, with each dimension of type `N`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43337,"byte_end":43406,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43407,"byte_end":43410,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Legal operations on vectors are addition and subtraction by vectors,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43411,"byte_end":43483,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/ addition by points (to give points), and multiplication and division by","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43484,"byte_end":43559,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/ scalars.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43560,"byte_end":43572,"line_start":30,"line_end":30,"column_start":1,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":337},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43681,"byte_end":43682,"line_start":33,"line_end":33,"column_start":9,"column_end":10},"name":"x","qualname":"::geometry::Vector::x","value":"N","parent":{"krate":0,"index":335},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":338},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43695,"byte_end":43696,"line_start":34,"line_end":34,"column_start":9,"column_end":10},"name":"y","qualname":"::geometry::Vector::y","value":"N","parent":{"krate":0,"index":335},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43773,"byte_end":43778,"line_start":39,"line_end":39,"column_start":8,"column_end":13},"name":"point","qualname":"::geometry::point","value":"pub fn point<N>(N, N) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for generating `Point`s.\n","sig":null,"attributes":[{"value":"/ A convenience function for generating `Point`s.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43704,"byte_end":43755,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43756,"byte_end":43765,"line_start":38,"line_end":38,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43899,"byte_end":43905,"line_start":44,"line_end":44,"column_start":8,"column_end":14},"name":"vector","qualname":"::geometry::vector","value":"pub fn vector<N>(N, N) -> Vector<N>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for generating `Vector`s.\n","sig":null,"attributes":[{"value":"/ A convenience function for generating `Vector`s.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43829,"byte_end":43881,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":43882,"byte_end":43891,"line_start":43,"line_end":43,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":379},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":46580,"byte_end":46584,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"Line","qualname":"::geometry::Line","value":"Line { p }","parent":null,"children":[{"krate":0,"index":380}],"decl_id":null,"docs":" A straight line between two points, `p[0]` and `p[1]`\n","sig":null,"attributes":[{"value":"/ A straight line between two points, `p[0]` and `p[1]`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":46449,"byte_end":46506,"line_start":146,"line_end":146,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":380},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":46595,"byte_end":46596,"line_start":149,"line_end":149,"column_start":9,"column_end":10},"name":"p","qualname":"::geometry::Line::p","value":"[geometry::Point<f32>; 2]","parent":{"krate":0,"index":379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":400},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":46789,"byte_end":46794,"line_start":154,"line_end":154,"column_start":12,"column_end":17},"name":"Curve","qualname":"::geometry::Curve","value":"Curve { p }","parent":null,"children":[{"krate":0,"index":401}],"decl_id":null,"docs":" A quadratic Bezier curve, starting at `p[0]`, ending at `p[2]`, with control\n point `p[1]`.\n","sig":null,"attributes":[{"value":"/ A quadratic Bezier curve, starting at `p[0]`, ending at `p[2]`, with control","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":46617,"byte_end":46697,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ point `p[1]`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":46698,"byte_end":46715,"line_start":152,"line_end":152,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":401},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":46805,"byte_end":46806,"line_start":155,"line_end":155,"column_start":9,"column_end":10},"name":"p","qualname":"::geometry::Curve::p","value":"[geometry::Point<f32>; 3]","parent":{"krate":0,"index":400},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":421},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":47001,"byte_end":47005,"line_start":160,"line_end":160,"column_start":12,"column_end":16},"name":"Rect","qualname":"::geometry::Rect","value":"Rect { min, max }","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424}],"decl_id":null,"docs":" A rectangle, with top-left corner at `min`, and bottom-right corner at\n `max`.\n","sig":null,"attributes":[{"value":"/ A rectangle, with top-left corner at `min`, and bottom-right corner at","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":46827,"byte_end":46901,"line_start":157,"line_end":157,"column_start":1,"column_end":75}},{"value":"/ `max`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":46902,"byte_end":46912,"line_start":158,"line_end":158,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":423},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":47019,"byte_end":47022,"line_start":161,"line_end":161,"column_start":9,"column_end":12},"name":"min","qualname":"::geometry::Rect::min","value":"geometry::Point<N>","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":424},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":47042,"byte_end":47045,"line_start":162,"line_end":162,"column_start":9,"column_end":12},"name":"max","qualname":"::geometry::Rect::max","value":"geometry::Point<N>","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":47118,"byte_end":47123,"line_start":166,"line_end":166,"column_start":12,"column_end":17},"name":"width","qualname":"<Rect<N>>::width","value":"pub fn width(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":47187,"byte_end":47193,"line_start":169,"line_end":169,"column_start":12,"column_end":18},"name":"height","qualname":"<Rect<N>>::height","value":"pub fn height(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":95},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/rasterizer.rs","byte_start":52635,"byte_end":52643,"line_start":11,"line_end":11,"column_start":10,"column_end":18},"name":"PerSlice","qualname":"::rasterizer::SliceUp::PerSlice","value":"type PerSlice: Iterator<Item = Self>;","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":96},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/rasterizer.rs","byte_start":52677,"byte_end":52680,"line_start":12,"line_end":12,"column_start":10,"column_end":13},"name":"Out","qualname":"::rasterizer::SliceUp::Out","value":"type Out: Iterator<Item = Self::PerSlice>;","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":499},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6062,"byte_end":6076,"line_start":133,"line_end":133,"column_start":12,"column_end":26},"name":"FontCollection","qualname":"::FontCollection","value":"","parent":null,"children":[],"decl_id":null,"docs":" A collection of fonts read straight from a font file's data. The data in the\n collection is not validated. This structure may or may not own the font\n data.","sig":null,"attributes":[{"value":"/ A collection of fonts read straight from a font file's data. The data in the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":5658,"byte_end":5738,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ collection is not validated. This structure may or may not own the font","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":5739,"byte_end":5814,"line_start":125,"line_end":125,"column_start":1,"column_end":76}},{"value":"/ data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":5815,"byte_end":5824,"line_start":126,"line_end":126,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":5825,"byte_end":5828,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ # Lifetime","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":5829,"byte_end":5843,"line_start":128,"line_end":128,"column_start":1,"column_end":15}},{"value":"/ The lifetime reflects the font data lifetime. `FontCollection<'static>`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":5844,"byte_end":5919,"line_start":129,"line_end":129,"column_start":1,"column_end":76}},{"value":"/ covers most cases ie both dynamically loaded owned data and for referenced","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":5920,"byte_end":5998,"line_start":130,"line_end":130,"column_start":1,"column_end":79}},{"value":"/ compile time font data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":5999,"byte_end":6026,"line_start":131,"line_end":131,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":509},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6794,"byte_end":6798,"line_start":155,"line_end":155,"column_start":12,"column_end":16},"name":"Font","qualname":"::Font","value":"Font {  }","parent":null,"children":[{"krate":0,"index":511}],"decl_id":null,"docs":" A single font. This may or may not own the font data.","sig":null,"attributes":[{"value":"/ A single font. This may or may not own the font data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6099,"byte_end":6156,"line_start":134,"line_end":134,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6157,"byte_end":6160,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # Lifetime","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6161,"byte_end":6175,"line_start":136,"line_end":136,"column_start":1,"column_end":15}},{"value":"/ The lifetime reflects the font data lifetime. `Font<'static>` covers most","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6176,"byte_end":6253,"line_start":137,"line_end":137,"column_start":1,"column_end":78}},{"value":"/ cases ie both dynamically loaded owned data and for referenced compile time","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6254,"byte_end":6333,"line_start":138,"line_end":138,"column_start":1,"column_end":80}},{"value":"/ font data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6334,"byte_end":6348,"line_start":139,"line_end":139,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6349,"byte_end":6352,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6353,"byte_end":6366,"line_start":141,"line_end":141,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6367,"byte_end":6370,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6371,"byte_end":6378,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/ # use rusttype::{Font, Error};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6379,"byte_end":6413,"line_start":144,"line_end":144,"column_start":1,"column_end":35}},{"value":"/ # fn example() -> Result<(), Error> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6414,"byte_end":6455,"line_start":145,"line_end":145,"column_start":1,"column_end":42}},{"value":"/ let font_data: &[u8] = include_bytes!(\"../dev/fonts/dejavu/DejaVuSansMono.ttf\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6456,"byte_end":6540,"line_start":146,"line_end":146,"column_start":1,"column_end":85}},{"value":"/ let font: Font<'static> = Font::from_bytes(font_data)?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6541,"byte_end":6600,"line_start":147,"line_end":147,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6601,"byte_end":6604,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ let owned_font_data: Vec<u8> = font_data.to_vec();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6605,"byte_end":6659,"line_start":149,"line_end":149,"column_start":1,"column_end":55}},{"value":"/ let from_owned_font: Font<'static> = Font::from_bytes(owned_font_data)?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6660,"byte_end":6736,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/ # Ok(())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6737,"byte_end":6749,"line_start":151,"line_end":151,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6750,"byte_end":6757,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6758,"byte_end":6765,"line_start":153,"line_end":153,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":517},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":7516,"byte_end":7521,"line_start":176,"line_end":176,"column_start":5,"column_end":10},"name":"ByRef","qualname":"::SharedBytes::ByRef","value":"SharedBytes::ByRef(&'a [u8])","parent":{"krate":0,"index":515},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":520},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":7537,"byte_end":7542,"line_start":177,"line_end":177,"column_start":5,"column_end":10},"name":"ByArc","qualname":"::SharedBytes::ByArc","value":"SharedBytes::ByArc(Arc<[u8]>)","parent":{"krate":0,"index":515},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":515},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":7494,"byte_end":7505,"line_start":175,"line_end":175,"column_start":10,"column_end":21},"name":"SharedBytes","qualname":"::SharedBytes","value":"pub enum SharedBytes<'a> { ByRef(&'a [u8]), ByArc(Arc<[u8]>), }","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":520}],"decl_id":null,"docs":" `SharedBytes` handles the lifetime of font data used in RustType. The data\n is either a shared reference to externally owned data, or managed by\n reference counting. `SharedBytes` can be conveniently used with `From` and\n `Into`, and dereferences to the contained bytes.","sig":null,"attributes":[{"value":"/ `SharedBytes` handles the lifetime of font data used in RustType. The data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6978,"byte_end":7056,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ is either a shared reference to externally owned data, or managed by","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":7057,"byte_end":7129,"line_start":166,"line_end":166,"column_start":1,"column_end":73}},{"value":"/ reference counting. `SharedBytes` can be conveniently used with `From` and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":7130,"byte_end":7208,"line_start":167,"line_end":167,"column_start":1,"column_end":79}},{"value":"/ `Into`, and dereferences to the contained bytes.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":7209,"byte_end":7261,"line_start":168,"line_end":168,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":7262,"byte_end":7265,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ # Lifetime","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":7266,"byte_end":7280,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ The lifetime reflects the font data lifetime. `SharedBytes<'static>` covers","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":7281,"byte_end":7360,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ most cases ie both dynamically loaded owned data and for referenced compile","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":7361,"byte_end":7440,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"/ time font data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":7441,"byte_end":7460,"line_start":173,"line_end":173,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":529},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":9588,"byte_end":9597,"line_start":248,"line_end":248,"column_start":12,"column_end":21},"name":"Codepoint","qualname":"::Codepoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Unicode code point.\n","sig":null,"attributes":[{"value":"/ Represents a Unicode code point.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":9472,"byte_end":9508,"line_start":246,"line_end":246,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":531},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":9598,"byte_end":9605,"line_start":248,"line_end":248,"column_start":22,"column_end":29},"name":"0","qualname":"::Codepoint::0","value":"u32","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":555},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":9877,"byte_end":9884,"line_start":253,"line_end":253,"column_start":12,"column_end":19},"name":"GlyphId","qualname":"::GlyphId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a glyph identifier for a particular font. This identifier will\n not necessarily correspond to the correct glyph in a font other than the\n one that it was obtained from.\n","sig":null,"attributes":[{"value":"/ Represents a glyph identifier for a particular font. This identifier will","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":9608,"byte_end":9685,"line_start":249,"line_end":249,"column_start":1,"column_end":78}},{"value":"/ not necessarily correspond to the correct glyph in a font other than the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":9686,"byte_end":9762,"line_start":250,"line_end":250,"column_start":1,"column_end":77}},{"value":"/ one that it was obtained from.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":9763,"byte_end":9797,"line_start":251,"line_end":251,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":557},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":9885,"byte_end":9892,"line_start":253,"line_end":253,"column_start":20,"column_end":27},"name":"0","qualname":"::GlyphId::0","value":"u32","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":581},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":10299,"byte_end":10304,"line_start":262,"line_end":262,"column_start":12,"column_end":17},"name":"Glyph","qualname":"::Glyph","value":"Glyph {  }","parent":null,"children":[{"krate":0,"index":583}],"decl_id":null,"docs":" A single glyph of a font. this may either be a thin wrapper referring to the\n font and the glyph id, or it may be a standalone glyph that owns the data\n needed by it.","sig":null,"attributes":[{"value":"/ A single glyph of a font. this may either be a thin wrapper referring to the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":9895,"byte_end":9975,"line_start":254,"line_end":254,"column_start":1,"column_end":81}},{"value":"/ font and the glyph id, or it may be a standalone glyph that owns the data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":9976,"byte_end":10053,"line_start":255,"line_end":255,"column_start":1,"column_end":78}},{"value":"/ needed by it.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":10054,"byte_end":10071,"line_start":256,"line_end":256,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":10072,"byte_end":10075,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ A `Glyph` does not have an inherent scale or position associated with it. To","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":10076,"byte_end":10156,"line_start":258,"line_end":258,"column_start":1,"column_end":81}},{"value":"/ augment a glyph with a size, give it a scale using `scaled`. You can then","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":10157,"byte_end":10234,"line_start":259,"line_end":259,"column_start":1,"column_end":78}},{"value":"/ position it using `positioned`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":10235,"byte_end":10270,"line_start":260,"line_end":260,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":599},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":10642,"byte_end":10657,"line_start":279,"line_end":279,"column_start":12,"column_end":27},"name":"SharedGlyphData","qualname":"::SharedGlyphData","value":"SharedGlyphData { id, extents, scale_for_1_pixel, unit_h_metrics, shape }","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":600},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":10668,"byte_end":10670,"line_start":280,"line_end":280,"column_start":9,"column_end":11},"name":"id","qualname":"::SharedGlyphData::id","value":"u32","parent":{"krate":0,"index":599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":601},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":10685,"byte_end":10692,"line_start":281,"line_end":281,"column_start":9,"column_end":16},"name":"extents","qualname":"::SharedGlyphData::extents","value":"std::option::Option<geometry::Rect<i32>>","parent":{"krate":0,"index":599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":602},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":10721,"byte_end":10738,"line_start":282,"line_end":282,"column_start":9,"column_end":26},"name":"scale_for_1_pixel","qualname":"::SharedGlyphData::scale_for_1_pixel","value":"f32","parent":{"krate":0,"index":599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":603},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":10753,"byte_end":10767,"line_start":283,"line_end":283,"column_start":9,"column_end":23},"name":"unit_h_metrics","qualname":"::SharedGlyphData::unit_h_metrics","value":"HMetrics","parent":{"krate":0,"index":599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":604},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":10787,"byte_end":10792,"line_start":284,"line_end":284,"column_start":9,"column_end":14},"name":"shape","qualname":"::SharedGlyphData::shape","value":"std::option::Option<std::vec::Vec<stb_truetype::Vertex>>","parent":{"krate":0,"index":599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":607},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":11071,"byte_end":11079,"line_start":290,"line_end":290,"column_start":12,"column_end":20},"name":"HMetrics","qualname":"::HMetrics","value":"HMetrics { advance_width, left_side_bearing }","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609}],"decl_id":null,"docs":" The \"horizontal metrics\" of a glyph. This is useful for calculating the\n horizontal offset of a glyph from the previous one in a string when laying a\n string out horizontally.\n","sig":null,"attributes":[{"value":"/ The \"horizontal metrics\" of a glyph. This is useful for calculating the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":10821,"byte_end":10896,"line_start":286,"line_end":286,"column_start":1,"column_end":76}},{"value":"/ horizontal offset of a glyph from the previous one in a string when laying a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":10897,"byte_end":10977,"line_start":287,"line_end":287,"column_start":1,"column_end":81}},{"value":"/ string out horizontally.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":10978,"byte_end":11006,"line_start":288,"line_end":288,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":608},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":11203,"byte_end":11216,"line_start":293,"line_end":293,"column_start":9,"column_end":22},"name":"advance_width","qualname":"::HMetrics::advance_width","value":"f32","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":" The horizontal offset that the origin of the next glyph should be from\n the origin of this glyph.\n","sig":null,"attributes":[{"value":"/ The horizontal offset that the origin of the next glyph should be from","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":11086,"byte_end":11160,"line_start":291,"line_end":291,"column_start":5,"column_end":79}},{"value":"/ the origin of this glyph.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":11165,"byte_end":11194,"line_start":292,"line_end":292,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":609},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":11344,"byte_end":11361,"line_start":296,"line_end":296,"column_start":9,"column_end":26},"name":"left_side_bearing","qualname":"::HMetrics::left_side_bearing","value":"f32","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":" The horizontal offset between the origin of this glyph and the leftmost\n edge/point of the glyph.\n","sig":null,"attributes":[{"value":"/ The horizontal offset between the origin of this glyph and the leftmost","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":11227,"byte_end":11302,"line_start":294,"line_end":294,"column_start":5,"column_end":80}},{"value":"/ edge/point of the glyph.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":11307,"byte_end":11335,"line_start":295,"line_end":295,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":629},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":11650,"byte_end":11658,"line_start":302,"line_end":302,"column_start":12,"column_end":20},"name":"VMetrics","qualname":"::VMetrics","value":"VMetrics { ascent, descent, line_gap }","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632}],"decl_id":null,"docs":" The \"vertical metrics\" of a font at a particular scale. This is useful for\n calculating the amount of vertical space to give a line of text, and for\n computing the vertical offset between successive lines.\n","sig":null,"attributes":[{"value":"/ The \"vertical metrics\" of a font at a particular scale. This is useful for","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":11423,"byte_end":11501,"line_start":299,"line_end":299,"column_start":1,"column_end":79}},{"value":"/ calculating the amount of vertical space to give a line of text, and for","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":11502,"byte_end":11578,"line_start":300,"line_end":300,"column_start":1,"column_end":77}},{"value":"/ computing the vertical offset between successive lines.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":11579,"byte_end":11638,"line_start":301,"line_end":301,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":630},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":11781,"byte_end":11787,"line_start":305,"line_end":305,"column_start":9,"column_end":15},"name":"ascent","qualname":"::VMetrics::ascent","value":"f32","parent":{"krate":0,"index":629},"children":[],"decl_id":null,"docs":" The highest point that any glyph in the font extends to above the\n baseline. Typically positive.\n","sig":null,"attributes":[{"value":"/ The highest point that any glyph in the font extends to above the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":11665,"byte_end":11734,"line_start":303,"line_end":303,"column_start":5,"column_end":74}},{"value":"/ baseline. Typically positive.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":11739,"byte_end":11772,"line_start":304,"line_end":304,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":631},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":11913,"byte_end":11920,"line_start":308,"line_end":308,"column_start":9,"column_end":16},"name":"descent","qualname":"::VMetrics::descent","value":"f32","parent":{"krate":0,"index":629},"children":[],"decl_id":null,"docs":" The lowest point that any glyph in the font extends to below the\n baseline. Typically negative.\n","sig":null,"attributes":[{"value":"/ The lowest point that any glyph in the font extends to below the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":11798,"byte_end":11866,"line_start":306,"line_end":306,"column_start":5,"column_end":73}},{"value":"/ baseline. Typically negative.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":11871,"byte_end":11904,"line_start":307,"line_end":307,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":632},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":12094,"byte_end":12102,"line_start":311,"line_end":311,"column_start":9,"column_end":17},"name":"line_gap","qualname":"::VMetrics::line_gap","value":"f32","parent":{"krate":0,"index":629},"children":[],"decl_id":null,"docs":" The gap to leave between the descent of one line and the ascent of the\n next. This is of course only a guideline given by the font's designers.\n","sig":null,"attributes":[{"value":"/ The gap to leave between the descent of one line and the ascent of the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":11931,"byte_end":12005,"line_start":309,"line_end":309,"column_start":5,"column_end":79}},{"value":"/ next. This is of course only a guideline given by the font's designers.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":12010,"byte_end":12085,"line_start":310,"line_end":310,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":656},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":12771,"byte_end":12782,"line_start":339,"line_end":339,"column_start":12,"column_end":23},"name":"ScaledGlyph","qualname":"::ScaledGlyph","value":"ScaledGlyph {  }","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660}],"decl_id":null,"docs":" A glyph augmented with scaling information. You can query such a glyph for\n information that depends on the scale of the glyph.\n","sig":null,"attributes":[{"value":"/ A glyph augmented with scaling information. You can query such a glyph for","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":12608,"byte_end":12686,"line_start":336,"line_end":336,"column_start":1,"column_end":79}},{"value":"/ information that depends on the scale of the glyph.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":12687,"byte_end":12742,"line_start":337,"line_end":337,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":664},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":13306,"byte_end":13321,"line_start":358,"line_end":358,"column_start":12,"column_end":27},"name":"PositionedGlyph","qualname":"::PositionedGlyph","value":"PositionedGlyph {  }","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668}],"decl_id":null,"docs":" A glyph augmented with positioning and scaling information. You can query\n such a glyph for information that depends on the scale and position of the\n glyph.\n","sig":null,"attributes":[{"value":"/ A glyph augmented with positioning and scaling information. You can query","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":13110,"byte_end":13187,"line_start":354,"line_end":354,"column_start":1,"column_end":78}},{"value":"/ such a glyph for information that depends on the scale and position of the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":13188,"byte_end":13266,"line_start":355,"line_end":355,"column_start":1,"column_end":79}},{"value":"/ glyph.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":13267,"byte_end":13277,"line_start":356,"line_end":356,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":672},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14195,"byte_end":14200,"line_start":381,"line_end":381,"column_start":12,"column_end":17},"name":"Scale","qualname":"::Scale","value":"Scale { x, y }","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674}],"decl_id":null,"docs":" Defines the size of a rendered face of a font, in pixels, horizontally and\n vertically. A vertical scale of `y` pixels means that the distance betwen\n the ascent and descent lines (see `VMetrics`) of the face will be `y`\n pixels. If `x` and `y` are equal the scaling is uniform. Non-uniform scaling\n by a factor *f* in the horizontal direction is achieved by setting `x` equal\n to *f* times `y`.\n","sig":null,"attributes":[{"value":"/ Defines the size of a rendered face of a font, in pixels, horizontally and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":13716,"byte_end":13794,"line_start":374,"line_end":374,"column_start":1,"column_end":79}},{"value":"/ vertically. A vertical scale of `y` pixels means that the distance betwen","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":13795,"byte_end":13872,"line_start":375,"line_end":375,"column_start":1,"column_end":78}},{"value":"/ the ascent and descent lines (see `VMetrics`) of the face will be `y`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":13873,"byte_end":13946,"line_start":376,"line_end":376,"column_start":1,"column_end":74}},{"value":"/ pixels. If `x` and `y` are equal the scaling is uniform. Non-uniform scaling","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":13947,"byte_end":14027,"line_start":377,"line_end":377,"column_start":1,"column_end":81}},{"value":"/ by a factor *f* in the horizontal direction is achieved by setting `x` equal","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14028,"byte_end":14108,"line_start":378,"line_end":378,"column_start":1,"column_end":81}},{"value":"/ to *f* times `y`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14109,"byte_end":14130,"line_start":379,"line_end":379,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":673},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14248,"byte_end":14249,"line_start":383,"line_end":383,"column_start":9,"column_end":10},"name":"x","qualname":"::Scale::x","value":"f32","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" Horizontal scale, in pixels.\n","sig":null,"attributes":[{"value":"/ Horizontal scale, in pixels.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14207,"byte_end":14239,"line_start":382,"line_end":382,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":674},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14299,"byte_end":14300,"line_start":385,"line_end":385,"column_start":9,"column_end":10},"name":"y","qualname":"::Scale::y","value":"f32","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" Vertical scale, in pixels.\n","sig":null,"attributes":[{"value":"/ Vertical scale, in pixels.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14260,"byte_end":14290,"line_start":384,"line_end":384,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14411,"byte_end":14418,"line_start":391,"line_end":391,"column_start":12,"column_end":19},"name":"uniform","qualname":"<Scale>::uniform","value":"pub fn uniform(f32) -> Scale","parent":null,"children":[],"decl_id":null,"docs":" Uniform scaling, equivalent to `Scale { x: s, y: s }`.\n","sig":null,"attributes":[{"value":"/ Uniform scaling, equivalent to `Scale { x: s, y: s }`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14327,"byte_end":14385,"line_start":389,"line_end":389,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14390,"byte_end":14399,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":182},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14784,"byte_end":14795,"line_start":401,"line_end":401,"column_start":11,"column_end":22},"name":"IntoGlyphId","qualname":"::IntoGlyphId","value":"IntoGlyphId","parent":null,"children":[{"krate":0,"index":183}],"decl_id":null,"docs":" A trait for types that can be converted into a `GlyphId`, in the context of\n a specific font.","sig":null,"attributes":[{"value":"/ A trait for types that can be converted into a `GlyphId`, in the context of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14475,"byte_end":14554,"line_start":395,"line_end":395,"column_start":1,"column_end":80}},{"value":"/ a specific font.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14555,"byte_end":14575,"line_start":396,"line_end":396,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14576,"byte_end":14579,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ Many `rusttype` functions that operate on characters accept values of any","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14580,"byte_end":14657,"line_start":398,"line_end":398,"column_start":1,"column_end":78}},{"value":"/ type that implements `IntoGlyphId`. Such types include `char`, `Codepoint`,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14658,"byte_end":14737,"line_start":399,"line_end":399,"column_start":1,"column_end":80}},{"value":"/ and obviously `GlyphId` itself.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14738,"byte_end":14773,"line_start":400,"line_end":400,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14903,"byte_end":14916,"line_start":404,"line_end":404,"column_start":8,"column_end":21},"name":"into_glyph_id","qualname":"::IntoGlyphId::into_glyph_id","value":"pub fn into_glyph_id(Self, &Font) -> GlyphId","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Convert `self` into a `GlyphId`, consulting the index map of `font` if\n necessary.\n","sig":null,"attributes":[{"value":"/ Convert `self` into a `GlyphId`, consulting the index map of `font` if","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14802,"byte_end":14876,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ necessary.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14881,"byte_end":14895,"line_start":403,"line_end":403,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":15894,"byte_end":15904,"line_start":431,"line_end":431,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<FontCollection>::from_bytes","value":"pub fn from_bytes<B: Into<SharedBytes>>(B) -> Result<FontCollection, Error>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a font collection from an array of bytes, typically loaded\n from a font file, which may be a single font or a TrueType Collection\n holding a number of fonts. This array may be owned (e.g. `Vec<u8>`), or\n borrowed (`&[u8]`). As long as `From<T>` is implemented for `Bytes` for\n some type `T`, `T` can be used as input.","sig":null,"attributes":[{"value":"/ Constructs a font collection from an array of bytes, typically loaded","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":15409,"byte_end":15482,"line_start":423,"line_end":423,"column_start":5,"column_end":78}},{"value":"/ from a font file, which may be a single font or a TrueType Collection","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":15487,"byte_end":15560,"line_start":424,"line_end":424,"column_start":5,"column_end":78}},{"value":"/ holding a number of fonts. This array may be owned (e.g. `Vec<u8>`), or","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":15565,"byte_end":15640,"line_start":425,"line_end":425,"column_start":5,"column_end":80}},{"value":"/ borrowed (`&[u8]`). As long as `From<T>` is implemented for `Bytes` for","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":15645,"byte_end":15720,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/ some type `T`, `T` can be used as input.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":15725,"byte_end":15769,"line_start":427,"line_end":427,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":15774,"byte_end":15777,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ This returns an error if `bytes` does not seem to be font data in a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":15782,"byte_end":15853,"line_start":429,"line_end":429,"column_start":5,"column_end":76}},{"value":"/ format we recognize.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":15858,"byte_end":15882,"line_start":430,"line_end":430,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":16946,"byte_end":16955,"line_start":452,"line_end":452,"column_start":12,"column_end":21},"name":"into_font","qualname":"<FontCollection>::into_font","value":"pub fn into_font(Self) -> Result<Font, Error>","parent":null,"children":[],"decl_id":null,"docs":" If this `FontCollection` holds a single font, or a TrueType Collection\n containing only one font, return that as a `Font`. The `FontCollection`\n is consumed.","sig":null,"attributes":[{"value":"/ If this `FontCollection` holds a single font, or a TrueType Collection","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":16321,"byte_end":16395,"line_start":441,"line_end":441,"column_start":5,"column_end":79}},{"value":"/ containing only one font, return that as a `Font`. The `FontCollection`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":16400,"byte_end":16475,"line_start":442,"line_end":442,"column_start":5,"column_end":80}},{"value":"/ is consumed.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":16480,"byte_end":16496,"line_start":443,"line_end":443,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":16501,"byte_end":16504,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ If this `FontCollection` holds multiple fonts, return a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":16509,"byte_end":16568,"line_start":445,"line_end":445,"column_start":5,"column_end":64}},{"value":"/ `CollectionContainsMultipleFonts` error.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":16573,"byte_end":16617,"line_start":446,"line_end":446,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":16622,"byte_end":16625,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ If an error occurs, the `FontCollection` is lost, since this function","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":16630,"byte_end":16703,"line_start":448,"line_end":448,"column_start":5,"column_end":78}},{"value":"/ takes ownership of it, and the error values don't give it back. If that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":16708,"byte_end":16783,"line_start":449,"line_end":449,"column_start":5,"column_end":80}},{"value":"/ is a problem, use the `font_at` or `into_fonts` methods instead, which","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":16788,"byte_end":16862,"line_start":450,"line_end":450,"column_start":5,"column_end":79}},{"value":"/ borrow the `FontCollection` rather than taking ownership of it.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":16867,"byte_end":16934,"line_start":451,"line_end":451,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":17982,"byte_end":17989,"line_start":473,"line_end":473,"column_start":12,"column_end":19},"name":"font_at","qualname":"<FontCollection>::font_at","value":"pub fn font_at(&Self, usize) -> Result<Font, Error>","parent":null,"children":[],"decl_id":null,"docs":" Gets the font at index `i` in the font collection, if it exists and is\n valid. The produced font borrows the font data that is either borrowed\n or owned by this font collection.\n","sig":null,"attributes":[{"value":"/ Gets the font at index `i` in the font collection, if it exists and is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":17775,"byte_end":17849,"line_start":470,"line_end":470,"column_start":5,"column_end":79}},{"value":"/ valid. The produced font borrows the font data that is either borrowed","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":17854,"byte_end":17928,"line_start":471,"line_end":471,"column_start":5,"column_end":79}},{"value":"/ or owned by this font collection.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":17933,"byte_end":17970,"line_start":472,"line_end":472,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":18408,"byte_end":18418,"line_start":481,"line_end":481,"column_start":12,"column_end":22},"name":"into_fonts","qualname":"<FontCollection>::into_fonts","value":"pub fn into_fonts(Self) -> IntoFontsIter","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into an `Iterator` yielding each `Font` that exists\n within the collection.\n","sig":null,"attributes":[{"value":"/ Converts `self` into an `Iterator` yielding each `Font` that exists","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":18294,"byte_end":18365,"line_start":479,"line_end":479,"column_start":5,"column_end":76}},{"value":"/ within the collection.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":18370,"byte_end":18396,"line_start":480,"line_end":480,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":197},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":18558,"byte_end":18571,"line_start":488,"line_end":488,"column_start":12,"column_end":25},"name":"IntoFontsIter","qualname":"::IntoFontsIter","value":"IntoFontsIter {  }","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":19176,"byte_end":19186,"line_start":506,"line_end":506,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Font>::from_bytes","value":"pub fn from_bytes<B: Into<SharedBytes>>(B) -> Result<Font, Error>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a font from an array of bytes, this is a shortcut for\n `FontCollection::from_bytes` for collections comprised of a single font.\n","sig":null,"attributes":[{"value":"/ Constructs a font from an array of bytes, this is a shortcut for","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":19015,"byte_end":19083,"line_start":504,"line_end":504,"column_start":5,"column_end":73}},{"value":"/ `FontCollection::from_bytes` for collections comprised of a single font.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":19088,"byte_end":19164,"line_start":505,"line_end":505,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":19502,"byte_end":19511,"line_start":512,"line_end":512,"column_start":12,"column_end":21},"name":"v_metrics","qualname":"<Font>::v_metrics","value":"pub fn v_metrics(&Self, Scale) -> VMetrics","parent":null,"children":[],"decl_id":null,"docs":" The \"vertical metrics\" for this font at a given scale. These metrics are\n shared by all of the glyphs in the font. See `VMetrics` for more detail.\n","sig":null,"attributes":[{"value":"/ The \"vertical metrics\" for this font at a given scale. These metrics are","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":19333,"byte_end":19409,"line_start":510,"line_end":510,"column_start":5,"column_end":81}},{"value":"/ shared by all of the glyphs in the font. See `VMetrics` for more detail.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":19414,"byte_end":19490,"line_start":511,"line_end":511,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":19818,"byte_end":19836,"line_start":520,"line_end":520,"column_start":12,"column_end":30},"name":"v_metrics_unscaled","qualname":"<Font>::v_metrics_unscaled","value":"pub fn v_metrics_unscaled(&Self) -> VMetrics","parent":null,"children":[],"decl_id":null,"docs":" Get the unscaled VMetrics for this font, shared by all glyphs.\n See `VMetrics` for more detail.\n","sig":null,"attributes":[{"value":"/ Get the unscaled VMetrics for this font, shared by all glyphs.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":19700,"byte_end":19766,"line_start":518,"line_end":518,"column_start":5,"column_end":71}},{"value":"/ See `VMetrics` for more detail.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":19771,"byte_end":19806,"line_start":519,"line_end":519,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":19979,"byte_end":19991,"line_start":525,"line_end":525,"column_start":12,"column_end":24},"name":"units_per_em","qualname":"<Font>::units_per_em","value":"pub fn units_per_em(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the units per EM square of this font\n","sig":null,"attributes":[{"value":"/ Returns the units per EM square of this font","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":19919,"byte_end":19967,"line_start":524,"line_end":524,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":20202,"byte_end":20213,"line_start":531,"line_end":531,"column_start":12,"column_end":23},"name":"glyph_count","qualname":"<Font>::glyph_count","value":"pub fn glyph_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of glyphs present in this font. Glyph identifiers for this\n font will always be in the range `0..self.glyph_count()`\n","sig":null,"attributes":[{"value":"/ The number of glyphs present in this font. Glyph identifiers for this","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":20052,"byte_end":20125,"line_start":529,"line_end":529,"column_start":5,"column_end":78}},{"value":"/ font will always be in the range `0..self.glyph_count()`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":20130,"byte_end":20190,"line_start":530,"line_end":530,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":20836,"byte_end":20841,"line_start":545,"line_end":545,"column_start":12,"column_end":17},"name":"glyph","qualname":"<Font>::glyph","value":"pub fn glyph<C: IntoGlyphId>(&Self, C) -> Glyph","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding glyph for a Unicode code point or a glyph id\n for this font.","sig":null,"attributes":[{"value":"/ Returns the corresponding glyph for a Unicode code point or a glyph id","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":20287,"byte_end":20361,"line_start":535,"line_end":535,"column_start":5,"column_end":79}},{"value":"/ for this font.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":20366,"byte_end":20384,"line_start":536,"line_end":536,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":20389,"byte_end":20392,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ If `id` is a `GlyphId`, it must be valid for this font; otherwise, this","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":20397,"byte_end":20472,"line_start":538,"line_end":538,"column_start":5,"column_end":80}},{"value":"/ function panics. `GlyphId`s should always be produced by looking up some","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":20477,"byte_end":20553,"line_start":539,"line_end":539,"column_start":5,"column_end":81}},{"value":"/ other sort of designator (like a Unicode code point) in a font, and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":20558,"byte_end":20629,"line_start":540,"line_end":540,"column_start":5,"column_end":76}},{"value":"/ should only be used to index the font they were produced for.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":20634,"byte_end":20699,"line_start":541,"line_end":541,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":20704,"byte_end":20707,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ Note that code points without corresponding glyphs in this font map to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":20712,"byte_end":20786,"line_start":543,"line_end":543,"column_start":5,"column_end":79}},{"value":"/ the \".notdef\" glyph, glyph 0.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":20791,"byte_end":20824,"line_start":544,"line_end":544,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":21388,"byte_end":21398,"line_start":557,"line_end":557,"column_start":12,"column_end":22},"name":"glyphs_for","qualname":"<Font>::glyphs_for","value":"pub fn glyphs_for<I: Iterator>(&Self, I) -> GlyphIter where\nI::Item: IntoGlyphId","parent":null,"children":[],"decl_id":null,"docs":" A convenience function.","sig":null,"attributes":[{"value":"/ A convenience function.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":21115,"byte_end":21142,"line_start":551,"line_end":551,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":21147,"byte_end":21150,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ Returns an iterator that produces the glyphs corresponding to the code","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":21155,"byte_end":21229,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ points or glyph ids produced by the given iterator `itr`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":21234,"byte_end":21295,"line_start":554,"line_end":554,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":21300,"byte_end":21303,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ This is equivalent in behaviour to `itr.map(|c| font.glyph(c))`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":21308,"byte_end":21376,"line_start":556,"line_end":556,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":21610,"byte_end":21627,"line_start":564,"line_end":564,"column_start":12,"column_end":29},"name":"font_name_strings","qualname":"<Font>::font_name_strings","value":"pub fn font_name_strings(&Self) -> tt::FontNameIter<, SharedBytes>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the names for this font.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the names for this font.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":21545,"byte_end":21598,"line_start":563,"line_end":563,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23811,"byte_end":23817,"line_start":613,"line_end":613,"column_start":12,"column_end":18},"name":"layout","qualname":"<Font>::layout","value":"pub fn layout<'b>(&'b Self, &'b str, Scale, Point<f32>) -> LayoutIter","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for laying out glyphs for a string horizontally.\n It does not take control characters like line breaks into account, as\n treatment of these is likely to depend on the application.","sig":null,"attributes":[{"value":"/ A convenience function for laying out glyphs for a string horizontally.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":21730,"byte_end":21805,"line_start":567,"line_end":567,"column_start":5,"column_end":80}},{"value":"/ It does not take control characters like line breaks into account, as","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":21810,"byte_end":21883,"line_start":568,"line_end":568,"column_start":5,"column_end":78}},{"value":"/ treatment of these is likely to depend on the application.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":21888,"byte_end":21950,"line_start":569,"line_end":569,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":21955,"byte_end":21958,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ Note that this function does not perform Unicode normalisation.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":21963,"byte_end":22030,"line_start":571,"line_end":571,"column_start":5,"column_end":72}},{"value":"/ Composite characters (such as ö constructed from two code points, ¨ and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":22035,"byte_end":22112,"line_start":572,"line_end":572,"column_start":5,"column_end":80}},{"value":"/ o), will not be normalised to single code points. So if a font does not","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":22117,"byte_end":22192,"line_start":573,"line_end":573,"column_start":5,"column_end":80}},{"value":"/ contain a glyph for each separate code point, but does contain one for","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":22197,"byte_end":22271,"line_start":574,"line_end":574,"column_start":5,"column_end":79}},{"value":"/ the normalised single code point (which is common), the desired glyph","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":22276,"byte_end":22349,"line_start":575,"line_end":575,"column_start":5,"column_end":78}},{"value":"/ will not be produced, despite being present in the font. Deal with this","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":22354,"byte_end":22429,"line_start":576,"line_end":576,"column_start":5,"column_end":80}},{"value":"/ by performing Unicode normalisation on the input string before passing","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":22434,"byte_end":22508,"line_start":577,"line_end":577,"column_start":5,"column_end":79}},{"value":"/ it to `layout`. The crate","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":22513,"byte_end":22542,"line_start":578,"line_end":578,"column_start":5,"column_end":34}},{"value":"/ [unicode-normalization](http://crates.io/crates/unicode-normalization)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":22547,"byte_end":22621,"line_start":579,"line_end":579,"column_start":5,"column_end":79}},{"value":"/ is perfect for this purpose.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":22626,"byte_end":22658,"line_start":580,"line_end":580,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":22663,"byte_end":22666,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ Calling this function is equivalent to a longer sequence of operations","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":22671,"byte_end":22745,"line_start":582,"line_end":582,"column_start":5,"column_end":79}},{"value":"/ involving `glyphs_for`, e.g.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":22750,"byte_end":22782,"line_start":583,"line_end":583,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":22787,"byte_end":22790,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":22795,"byte_end":22808,"line_start":585,"line_end":585,"column_start":5,"column_end":18}},{"value":"/ # use rusttype::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":22813,"byte_end":22835,"line_start":586,"line_end":586,"column_start":5,"column_end":27}},{"value":"/ # let (scale, start) = (Scale::uniform(0.0), point(0.0, 0.0));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":22840,"byte_end":22906,"line_start":587,"line_end":587,"column_start":5,"column_end":71}},{"value":"/ # let font: Font = unimplemented!();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":22911,"byte_end":22951,"line_start":588,"line_end":588,"column_start":5,"column_end":45}},{"value":"/ font.layout(\"Hello World!\", scale, start)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":22956,"byte_end":23001,"line_start":589,"line_end":589,"column_start":5,"column_end":50}},{"value":"/ # ;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23006,"byte_end":23013,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23018,"byte_end":23025,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23030,"byte_end":23033,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ produces an iterator with behaviour equivalent to the following:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23038,"byte_end":23106,"line_start":593,"line_end":593,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23111,"byte_end":23114,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23119,"byte_end":23132,"line_start":595,"line_end":595,"column_start":5,"column_end":18}},{"value":"/ # use rusttype::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23137,"byte_end":23159,"line_start":596,"line_end":596,"column_start":5,"column_end":27}},{"value":"/ # let (scale, start) = (Scale::uniform(0.0), point(0.0, 0.0));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23164,"byte_end":23230,"line_start":597,"line_end":597,"column_start":5,"column_end":71}},{"value":"/ # let font: Font = unimplemented!();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23235,"byte_end":23275,"line_start":598,"line_end":598,"column_start":5,"column_end":45}},{"value":"/ font.glyphs_for(\"Hello World!\".chars())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23280,"byte_end":23323,"line_start":599,"line_end":599,"column_start":5,"column_end":48}},{"value":"/     .scan((None, 0.0), |&mut (mut last, mut x), g| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23328,"byte_end":23384,"line_start":600,"line_end":600,"column_start":5,"column_end":61}},{"value":"/         let g = g.scaled(scale);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23389,"byte_end":23425,"line_start":601,"line_end":601,"column_start":5,"column_end":41}},{"value":"/         if let Some(last) = last {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23430,"byte_end":23468,"line_start":602,"line_end":602,"column_start":5,"column_end":43}},{"value":"/             x += font.pair_kerning(scale, last, g.id());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23473,"byte_end":23533,"line_start":603,"line_end":603,"column_start":5,"column_end":65}},{"value":"/         }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23538,"byte_end":23551,"line_start":604,"line_end":604,"column_start":5,"column_end":18}},{"value":"/         let w = g.h_metrics().advance_width;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23556,"byte_end":23604,"line_start":605,"line_end":605,"column_start":5,"column_end":53}},{"value":"/         let next = g.positioned(start + vector(x, 0.0));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23609,"byte_end":23669,"line_start":606,"line_end":606,"column_start":5,"column_end":65}},{"value":"/         last = Some(next.id());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23674,"byte_end":23709,"line_start":607,"line_end":607,"column_start":5,"column_end":40}},{"value":"/         x += w;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23714,"byte_end":23733,"line_start":608,"line_end":608,"column_start":5,"column_end":24}},{"value":"/         Some(next)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23738,"byte_end":23760,"line_start":609,"line_end":609,"column_start":5,"column_end":27}},{"value":"/     })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23765,"byte_end":23775,"line_start":610,"line_end":610,"column_start":5,"column_end":15}},{"value":"/ # ;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23780,"byte_end":23787,"line_start":611,"line_end":611,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":23792,"byte_end":23799,"line_start":612,"line_end":612,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":24214,"byte_end":24226,"line_start":625,"line_end":625,"column_start":12,"column_end":24},"name":"pair_kerning","qualname":"<Font>::pair_kerning","value":"pub fn pair_kerning<A, B>(&Self, Scale, A, B) -> f32 where A: IntoGlyphId,\nB: IntoGlyphId","parent":null,"children":[],"decl_id":null,"docs":" Returns additional kerning to apply as well as that given by HMetrics\n for a particular pair of glyphs.\n","sig":null,"attributes":[{"value":"/ Returns additional kerning to apply as well as that given by HMetrics","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":24088,"byte_end":24161,"line_start":623,"line_end":623,"column_start":5,"column_end":78}},{"value":"/ for a particular pair of glyphs.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":24166,"byte_end":24202,"line_start":624,"line_end":624,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":694},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":24677,"byte_end":24686,"line_start":638,"line_end":638,"column_start":12,"column_end":21},"name":"GlyphIter","qualname":"::GlyphIter","value":"GlyphIter {  }","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":705},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":25035,"byte_end":25045,"line_start":655,"line_end":655,"column_start":12,"column_end":22},"name":"LayoutIter","qualname":"::LayoutIter","value":"LayoutIter {  }","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":26168,"byte_end":26172,"line_start":686,"line_end":686,"column_start":12,"column_end":16},"name":"font","qualname":"<Glyph>::font","value":"pub fn font(&Self) -> Option<&Font>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph\n that owns its resources, it no longer has a reference to the font which\n it was created from (using `standalone()`). In which case, `None` is\n returned.\n","sig":null,"attributes":[{"value":"/ The font to which this glyph belongs. If the glyph is a standalone glyph","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":25905,"byte_end":25981,"line_start":682,"line_end":682,"column_start":5,"column_end":81}},{"value":"/ that owns its resources, it no longer has a reference to the font which","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":25986,"byte_end":26061,"line_start":683,"line_end":683,"column_start":5,"column_end":80}},{"value":"/ it was created from (using `standalone()`). In which case, `None` is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":26066,"byte_end":26138,"line_start":684,"line_end":684,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":26143,"byte_end":26156,"line_start":685,"line_end":685,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":26397,"byte_end":26399,"line_start":693,"line_end":693,"column_start":12,"column_end":14},"name":"id","qualname":"<Glyph>::id","value":"pub fn id(&Self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[{"value":"/ The glyph identifier for this glyph.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":26345,"byte_end":26385,"line_start":692,"line_end":692,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":26715,"byte_end":26721,"line_start":701,"line_end":701,"column_start":12,"column_end":18},"name":"scaled","qualname":"<Glyph>::scaled","value":"pub fn scaled(Self, Scale) -> ScaledGlyph","parent":null,"children":[],"decl_id":null,"docs":" Augments this glyph with scaling information, making methods that depend\n on the scale of the glyph available.\n","sig":null,"attributes":[{"value":"/ Augments this glyph with scaling information, making methods that depend","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":26582,"byte_end":26658,"line_start":699,"line_end":699,"column_start":5,"column_end":81}},{"value":"/ on the scale of the glyph available.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":26663,"byte_end":26703,"line_start":700,"line_end":700,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":27734,"byte_end":27744,"line_start":726,"line_end":726,"column_start":12,"column_end":22},"name":"standalone","qualname":"<Glyph>::standalone","value":"pub fn standalone(&Self) -> Glyph","parent":null,"children":[],"decl_id":null,"docs":" Turns a `Glyph<'a>` into a `Glyph<'static>`. This produces a glyph that\n owns its resources, extracted from the font. This glyph can outlive the\n font that it comes from.","sig":null,"attributes":[{"value":"/ Turns a `Glyph<'a>` into a `Glyph<'static>`. This produces a glyph that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":27411,"byte_end":27486,"line_start":720,"line_end":720,"column_start":5,"column_end":80}},{"value":"/ owns its resources, extracted from the font. This glyph can outlive the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":27491,"byte_end":27566,"line_start":721,"line_end":721,"column_start":5,"column_end":80}},{"value":"/ font that it comes from.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":27571,"byte_end":27599,"line_start":722,"line_end":722,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":27604,"byte_end":27607,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ Calling `standalone()` on a standalone glyph shares the resources, and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":27612,"byte_end":27686,"line_start":724,"line_end":724,"column_start":5,"column_end":79}},{"value":"/ is equivalent to `clone()`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":27691,"byte_end":27722,"line_start":725,"line_end":725,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":28931,"byte_end":28939,"line_start":751,"line_end":751,"column_start":12,"column_end":20},"name":"get_data","qualname":"<Glyph>::get_data","value":"pub fn get_data(&Self) -> Option<Arc<SharedGlyphData>>","parent":null,"children":[],"decl_id":null,"docs":" Get the data from this glyph (such as width, extents, vertices, etc.).\n Only possible if the glyph is a shared glyph.\n","sig":null,"attributes":[{"value":"/ Get the data from this glyph (such as width, extents, vertices, etc.).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":28791,"byte_end":28865,"line_start":749,"line_end":749,"column_start":5,"column_end":79}},{"value":"/ Only possible if the glyph is a shared glyph.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":28870,"byte_end":28919,"line_start":750,"line_end":750,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":719},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":29235,"byte_end":29239,"line_start":761,"line_end":761,"column_start":5,"column_end":9},"name":"Line","qualname":"::Segment::Line","value":"Segment::Line(Line)","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":722},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":29251,"byte_end":29256,"line_start":762,"line_end":762,"column_start":5,"column_end":10},"name":"Curve","qualname":"::Segment::Curve","value":"Segment::Curve(Curve)","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":718},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":29221,"byte_end":29228,"line_start":760,"line_end":760,"column_start":10,"column_end":17},"name":"Segment","qualname":"::Segment","value":"pub enum Segment { Line(Line), Curve(Curve), }","parent":null,"children":[{"krate":0,"index":719},{"krate":0,"index":722}],"decl_id":null,"docs":" Part of a `Contour`, either a `Line` or a `Curve`.\n","sig":null,"attributes":[{"value":"/ Part of a `Contour`, either a `Line` or a `Curve`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":29127,"byte_end":29181,"line_start":758,"line_end":758,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":730},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":29360,"byte_end":29367,"line_start":766,"line_end":766,"column_start":12,"column_end":19},"name":"Contour","qualname":"::Contour","value":"Contour { segments }","parent":null,"children":[{"krate":0,"index":731}],"decl_id":null,"docs":" A closed loop consisting of a sequence of `Segment`s.\n","sig":null,"attributes":[{"value":"/ A closed loop consisting of a sequence of `Segment`s.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":29267,"byte_end":29324,"line_start":764,"line_end":764,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":731},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":29378,"byte_end":29386,"line_start":767,"line_end":767,"column_start":9,"column_end":17},"name":"segments","qualname":"::Contour::segments","value":"std::vec::Vec<Segment>","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":29487,"byte_end":29489,"line_start":771,"line_end":771,"column_start":12,"column_end":14},"name":"id","qualname":"<ScaledGlyph>::id","value":"pub fn id(&Self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[{"value":"/ The glyph identifier for this glyph.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":29435,"byte_end":29475,"line_start":770,"line_end":770,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":29803,"byte_end":29807,"line_start":778,"line_end":778,"column_start":12,"column_end":16},"name":"font","qualname":"<ScaledGlyph>::font","value":"pub fn font(&Self) -> Option<&Font>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph\n that owns its resources, it no longer has a reference to the font which\n it was created from (using `standalone()`). In which case, `None` is\n returned.\n","sig":null,"attributes":[{"value":"/ The font to which this glyph belongs. If the glyph is a standalone glyph","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":29540,"byte_end":29616,"line_start":774,"line_end":774,"column_start":5,"column_end":81}},{"value":"/ that owns its resources, it no longer has a reference to the font which","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":29621,"byte_end":29696,"line_start":775,"line_end":775,"column_start":5,"column_end":80}},{"value":"/ it was created from (using `standalone()`). In which case, `None` is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":29701,"byte_end":29773,"line_start":776,"line_end":776,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":29778,"byte_end":29791,"line_start":777,"line_end":777,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":29931,"byte_end":29944,"line_start":782,"line_end":782,"column_start":12,"column_end":25},"name":"into_unscaled","qualname":"<ScaledGlyph>::into_unscaled","value":"pub fn into_unscaled(Self) -> Glyph","parent":null,"children":[],"decl_id":null,"docs":" A reference to this glyph without the scaling\n","sig":null,"attributes":[{"value":"/ A reference to this glyph without the scaling","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":29870,"byte_end":29919,"line_start":781,"line_end":781,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":30042,"byte_end":30050,"line_start":786,"line_end":786,"column_start":12,"column_end":20},"name":"unscaled","qualname":"<ScaledGlyph>::unscaled","value":"pub fn unscaled(&Self) -> &Glyph","parent":null,"children":[],"decl_id":null,"docs":" Removes the scaling from this glyph\n","sig":null,"attributes":[{"value":"/ Removes the scaling from this glyph","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":29991,"byte_end":30030,"line_start":785,"line_end":785,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":30240,"byte_end":30250,"line_start":791,"line_end":791,"column_start":12,"column_end":22},"name":"positioned","qualname":"<ScaledGlyph>::positioned","value":"pub fn positioned(Self, Point<f32>) -> PositionedGlyph","parent":null,"children":[],"decl_id":null,"docs":" Augments this glyph with positioning information, making methods that\n depend on the position of the glyph available.\n","sig":null,"attributes":[{"value":"/ Augments this glyph with positioning information, making methods that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":30100,"byte_end":30173,"line_start":789,"line_end":789,"column_start":5,"column_end":78}},{"value":"/ depend on the position of the glyph available.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":30178,"byte_end":30228,"line_start":790,"line_end":790,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":30455,"byte_end":30460,"line_start":799,"line_end":799,"column_start":12,"column_end":17},"name":"scale","qualname":"<ScaledGlyph>::scale","value":"pub fn scale(&Self) -> Scale","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":30617,"byte_end":30626,"line_start":804,"line_end":804,"column_start":12,"column_end":21},"name":"h_metrics","qualname":"<ScaledGlyph>::h_metrics","value":"pub fn h_metrics(&Self) -> HMetrics","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the \"horizontal metrics\" of this glyph. See `HMetrics` for\n more detail.\n","sig":null,"attributes":[{"value":"/ Retrieves the \"horizontal metrics\" of this glyph. See `HMetrics` for","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":30512,"byte_end":30584,"line_start":802,"line_end":802,"column_start":5,"column_end":77}},{"value":"/ more detail.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":30589,"byte_end":30605,"line_start":803,"line_end":803,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":33291,"byte_end":33296,"line_start":867,"line_end":867,"column_start":12,"column_end":17},"name":"shape","qualname":"<ScaledGlyph>::shape","value":"pub fn shape(&Self) -> Option<Vec<Contour>>","parent":null,"children":[],"decl_id":null,"docs":" Produces a list of the contours that make up the shape of this glyph.\n Each contour consists of a sequence of segments. Each segment is either\n a straight `Line` or a `Curve`.","sig":null,"attributes":[{"value":"/ Produces a list of the contours that make up the shape of this glyph.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":32968,"byte_end":33041,"line_start":861,"line_end":861,"column_start":5,"column_end":78}},{"value":"/ Each contour consists of a sequence of segments. Each segment is either","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":33046,"byte_end":33121,"line_start":862,"line_end":862,"column_start":5,"column_end":80}},{"value":"/ a straight `Line` or a `Curve`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":33126,"byte_end":33161,"line_start":863,"line_end":863,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":33166,"byte_end":33169,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ The winding of the produced contours is clockwise for closed shapes,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":33174,"byte_end":33246,"line_start":865,"line_end":865,"column_start":5,"column_end":77}},{"value":"/ anticlockwise for holes.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":33251,"byte_end":33279,"line_start":866,"line_end":866,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":33608,"byte_end":33626,"line_start":873,"line_end":873,"column_start":12,"column_end":30},"name":"exact_bounding_box","qualname":"<ScaledGlyph>::exact_bounding_box","value":"pub fn exact_bounding_box(&Self) -> Option<Rect<f32>>","parent":null,"children":[],"decl_id":null,"docs":" The bounding box of the shape of this glyph, not to be confused with\n `pixel_bounding_box`, the conservative pixel-boundary bounding box. The\n coordinates are relative to the glyph's origin.\n","sig":null,"attributes":[{"value":"/ The bounding box of the shape of this glyph, not to be confused with","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":33388,"byte_end":33460,"line_start":870,"line_end":870,"column_start":5,"column_end":77}},{"value":"/ `pixel_bounding_box`, the conservative pixel-boundary bounding box. The","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":33465,"byte_end":33540,"line_start":871,"line_end":871,"column_start":5,"column_end":80}},{"value":"/ coordinates are relative to the glyph's origin.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":33545,"byte_end":33596,"line_start":872,"line_end":872,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":34532,"byte_end":34542,"line_start":893,"line_end":893,"column_start":12,"column_end":22},"name":"standalone","qualname":"<ScaledGlyph>::standalone","value":"pub fn standalone(&Self) -> ScaledGlyph","parent":null,"children":[],"decl_id":null,"docs":" Constructs a glyph that owns its data from this glyph. This is similar\n to `Glyph::standalone`. See that function for more details.\n","sig":null,"attributes":[{"value":"/ Constructs a glyph that owns its data from this glyph. This is similar","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":34378,"byte_end":34452,"line_start":891,"line_end":891,"column_start":5,"column_end":79}},{"value":"/ to `Glyph::standalone`. See that function for more details.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":34457,"byte_end":34520,"line_start":892,"line_end":892,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":36095,"byte_end":36097,"line_start":932,"line_end":932,"column_start":12,"column_end":14},"name":"id","qualname":"<PositionedGlyph>::id","value":"pub fn id(&Self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[{"value":"/ The glyph identifier for this glyph.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":36043,"byte_end":36083,"line_start":931,"line_end":931,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":36412,"byte_end":36416,"line_start":939,"line_end":939,"column_start":12,"column_end":16},"name":"font","qualname":"<PositionedGlyph>::font","value":"pub fn font(&Self) -> Option<&Font>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph\n that owns its resources, it no longer has a reference to the font which\n it was created from (using `standalone()`). In which case, `None` is\n returned.\n","sig":null,"attributes":[{"value":"/ The font to which this glyph belongs. If the glyph is a standalone glyph","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":36149,"byte_end":36225,"line_start":935,"line_end":935,"column_start":5,"column_end":81}},{"value":"/ that owns its resources, it no longer has a reference to the font which","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":36230,"byte_end":36305,"line_start":936,"line_end":936,"column_start":5,"column_end":80}},{"value":"/ it was created from (using `standalone()`). In which case, `None` is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":36310,"byte_end":36382,"line_start":937,"line_end":937,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":36387,"byte_end":36400,"line_start":938,"line_end":938,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":36541,"byte_end":36553,"line_start":943,"line_end":943,"column_start":12,"column_end":24},"name":"unpositioned","qualname":"<PositionedGlyph>::unpositioned","value":"pub fn unpositioned(&Self) -> &ScaledGlyph","parent":null,"children":[],"decl_id":null,"docs":" A reference to this glyph without positioning\n","sig":null,"attributes":[{"value":"/ A reference to this glyph without positioning","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":36480,"byte_end":36529,"line_start":942,"line_end":942,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":36665,"byte_end":36682,"line_start":947,"line_end":947,"column_start":12,"column_end":29},"name":"into_unpositioned","qualname":"<PositionedGlyph>::into_unpositioned","value":"pub fn into_unpositioned(Self) -> ScaledGlyph","parent":null,"children":[],"decl_id":null,"docs":" Removes the positioning from this glyph\n","sig":null,"attributes":[{"value":"/ Removes the positioning from this glyph","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":36610,"byte_end":36653,"line_start":946,"line_end":946,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":37061,"byte_end":37079,"line_start":954,"line_end":954,"column_start":12,"column_end":30},"name":"pixel_bounding_box","qualname":"<PositionedGlyph>::pixel_bounding_box","value":"pub fn pixel_bounding_box(&Self) -> Option<Rect<i32>>","parent":null,"children":[],"decl_id":null,"docs":" The conservative pixel-boundary bounding box for this glyph. This is the\n smallest rectangle aligned to pixel boundaries that encloses the shape\n of this glyph at this position. Note that the origin of the glyph, at\n pixel-space coordinates (0, 0), is at the top left of the bounding box.\n","sig":null,"attributes":[{"value":"/ The conservative pixel-boundary bounding box for this glyph. This is the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":36736,"byte_end":36812,"line_start":950,"line_end":950,"column_start":5,"column_end":81}},{"value":"/ smallest rectangle aligned to pixel boundaries that encloses the shape","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":36817,"byte_end":36891,"line_start":951,"line_end":951,"column_start":5,"column_end":79}},{"value":"/ of this glyph at this position. Note that the origin of the glyph, at","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":36896,"byte_end":36969,"line_start":952,"line_end":952,"column_start":5,"column_end":78}},{"value":"/ pixel-space coordinates (0, 0), is at the top left of the bounding box.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":36974,"byte_end":37049,"line_start":953,"line_end":953,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":37249,"byte_end":37254,"line_start":959,"line_end":959,"column_start":12,"column_end":17},"name":"shape","qualname":"<PositionedGlyph>::shape","value":"pub fn shape(&Self) -> Option<Vec<Contour>>","parent":null,"children":[],"decl_id":null,"docs":" Similar to `ScaledGlyph::shape()`, but with the position of the glyph\n taken into account.\n","sig":null,"attributes":[{"value":"/ Similar to `ScaledGlyph::shape()`, but with the position of the glyph","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":37136,"byte_end":37209,"line_start":957,"line_end":957,"column_start":5,"column_end":78}},{"value":"/ taken into account.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":37214,"byte_end":37237,"line_start":958,"line_end":958,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":37354,"byte_end":37359,"line_start":962,"line_end":962,"column_start":12,"column_end":17},"name":"scale","qualname":"<PositionedGlyph>::scale","value":"pub fn scale(&Self) -> Scale","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":37421,"byte_end":37429,"line_start":965,"line_end":965,"column_start":12,"column_end":20},"name":"position","qualname":"<PositionedGlyph>::position","value":"pub fn position(&Self) -> Point<f32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":38209,"byte_end":38213,"line_start":988,"line_end":988,"column_start":12,"column_end":16},"name":"draw","qualname":"<PositionedGlyph>::draw","value":"pub fn draw<O: FnMut(u32, u32, f32) -> ()>(&Self, O)","parent":null,"children":[],"decl_id":null,"docs":" Rasterises this glyph. For each pixel in the rect given by\n `pixel_bounding_box()`, `o` is called:","sig":null,"attributes":[{"value":"/ Rasterises this glyph. For each pixel in the rect given by","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":37485,"byte_end":37547,"line_start":968,"line_end":968,"column_start":5,"column_end":67}},{"value":"/ `pixel_bounding_box()`, `o` is called:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":37552,"byte_end":37594,"line_start":969,"line_end":969,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":37599,"byte_end":37602,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":37607,"byte_end":37620,"line_start":971,"line_end":971,"column_start":5,"column_end":18}},{"value":"/ o(x, y, v)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":37625,"byte_end":37639,"line_start":972,"line_end":972,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":37644,"byte_end":37651,"line_start":973,"line_end":973,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":37656,"byte_end":37659,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ where `x` and `y` are the coordinates of the pixel relative to the `min`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":37664,"byte_end":37740,"line_start":975,"line_end":975,"column_start":5,"column_end":81}},{"value":"/ coordinates of the bounding box, and `v` is the analytically calculated","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":37745,"byte_end":37820,"line_start":976,"line_end":976,"column_start":5,"column_end":80}},{"value":"/ coverage of the pixel by the shape of the glyph. Calls to `o` proceed in","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":37825,"byte_end":37901,"line_start":977,"line_end":977,"column_start":5,"column_end":81}},{"value":"/ horizontal scanline order, similar to this pseudo-code:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":37906,"byte_end":37965,"line_start":978,"line_end":978,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":37970,"byte_end":37973,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":37978,"byte_end":37991,"line_start":980,"line_end":980,"column_start":5,"column_end":18}},{"value":"/ let bb = glyph.pixel_bounding_box();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":37996,"byte_end":38036,"line_start":981,"line_end":981,"column_start":5,"column_end":45}},{"value":"/ for y in 0..bb.height() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":38041,"byte_end":38070,"line_start":982,"line_end":982,"column_start":5,"column_end":34}},{"value":"/     for x in 0..bb.width() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":38075,"byte_end":38107,"line_start":983,"line_end":983,"column_start":5,"column_end":37}},{"value":"/         o(x, y, calc_coverage(&glyph, x, y));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":38112,"byte_end":38161,"line_start":984,"line_end":984,"column_start":5,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":38166,"byte_end":38175,"line_start":985,"line_end":985,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":38180,"byte_end":38185,"line_start":986,"line_end":986,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":38190,"byte_end":38197,"line_start":987,"line_end":987,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":40007,"byte_end":40017,"line_start":1035,"line_end":1035,"column_start":12,"column_end":22},"name":"standalone","qualname":"<PositionedGlyph>::standalone","value":"pub fn standalone(&Self) -> PositionedGlyph","parent":null,"children":[],"decl_id":null,"docs":" Constructs a glyph that owns its data from this glyph. This is similar\n to `Glyph::standalone`. See that function for more details.\n","sig":null,"attributes":[{"value":"/ Constructs a glyph that owns its data from this glyph. This is similar","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":39853,"byte_end":39927,"line_start":1033,"line_end":1033,"column_start":5,"column_end":79}},{"value":"/ to `Glyph::standalone`. See that function for more details.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":39932,"byte_end":39995,"line_start":1034,"line_end":1034,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":40288,"byte_end":40300,"line_start":1044,"line_end":1044,"column_start":12,"column_end":24},"name":"set_position","qualname":"<PositionedGlyph>::set_position","value":"pub fn set_position(&mut Self, Point<f32>)","parent":null,"children":[],"decl_id":null,"docs":" Resets positioning information and recalculates the pixel bounding box\n","sig":null,"attributes":[{"value":"/ Resets positioning information and recalculates the pixel bounding box","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":40202,"byte_end":40276,"line_start":1043,"line_end":1043,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":737},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":41002,"byte_end":41020,"line_start":1064,"line_end":1064,"column_start":5,"column_end":23},"name":"UnrecognizedFormat","qualname":"::Error::UnrecognizedFormat","value":"Error::UnrecognizedFormat","parent":{"krate":0,"index":736},"children":[],"decl_id":null,"docs":" Font data presented to rusttype is not in a format that the library\n recognizes.\n","sig":null,"attributes":[{"value":"/ Font data presented to rusttype is not in a format that the library","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":40906,"byte_end":40977,"line_start":1062,"line_end":1062,"column_start":5,"column_end":76}},{"value":"/ recognizes.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":40982,"byte_end":40997,"line_start":1063,"line_end":1063,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":739},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":41131,"byte_end":41140,"line_start":1068,"line_end":1068,"column_start":5,"column_end":14},"name":"IllFormed","qualname":"::Error::IllFormed","value":"Error::IllFormed","parent":{"krate":0,"index":736},"children":[],"decl_id":null,"docs":" Font data presented to rusttype was ill-formed (lacking necessary\n tables, for example).\n","sig":null,"attributes":[{"value":"/ Font data presented to rusttype was ill-formed (lacking necessary","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":41027,"byte_end":41096,"line_start":1066,"line_end":1066,"column_start":5,"column_end":74}},{"value":"/ tables, for example).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":41101,"byte_end":41126,"line_start":1067,"line_end":1067,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":741},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":41283,"byte_end":41309,"line_start":1072,"line_end":1072,"column_start":5,"column_end":31},"name":"CollectionIndexOutOfBounds","qualname":"::Error::CollectionIndexOutOfBounds","value":"Error::CollectionIndexOutOfBounds","parent":{"krate":0,"index":736},"children":[],"decl_id":null,"docs":" The caller tried to access the `i`'th font from a `FontCollection`, but\n the collection doesn't contain that many fonts.\n","sig":null,"attributes":[{"value":"/ The caller tried to access the `i`'th font from a `FontCollection`, but","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":41147,"byte_end":41222,"line_start":1070,"line_end":1070,"column_start":5,"column_end":80}},{"value":"/ the collection doesn't contain that many fonts.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":41227,"byte_end":41278,"line_start":1071,"line_end":1071,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":743},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":41462,"byte_end":41493,"line_start":1076,"line_end":1076,"column_start":5,"column_end":36},"name":"CollectionContainsMultipleFonts","qualname":"::Error::CollectionContainsMultipleFonts","value":"Error::CollectionContainsMultipleFonts","parent":{"krate":0,"index":736},"children":[],"decl_id":null,"docs":" The caller tried to convert a `FontCollection` into a font via\n `into_font`, but the `FontCollection` contains more than one font.\n","sig":null,"attributes":[{"value":"/ The caller tried to convert a `FontCollection` into a font via","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":41316,"byte_end":41382,"line_start":1074,"line_end":1074,"column_start":5,"column_end":71}},{"value":"/ `into_font`, but the `FontCollection` contains more than one font.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":41387,"byte_end":41457,"line_start":1075,"line_end":1075,"column_start":5,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":736},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":40894,"byte_end":40899,"line_start":1061,"line_end":1061,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error {\n\n    /// Font data presented to rusttype is not in a format that the library\n    /// recognizes.\n    UnrecognizedFormat,\n\n    /// Font data presented to rusttype was ill-formed (lacking necessary\n    /// tables, for example).\n    IllFormed,\n\n    /// The caller tried to access the `i`'th font from a `FontCollection`, but\n    /// the collection doesn't contain that many fonts.\n    CollectionIndexOutOfBounds,\n\n    /// The caller tried to convert a `FontCollection` into a font via\n    /// `into_font`, but the `FontCollection` contains more than one font.\n    CollectionContainsMultipleFonts,\n}","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":743}],"decl_id":null,"docs":" The type for errors returned by rusttype.\n","sig":null,"attributes":[{"value":"/ The type for errors returned by rusttype.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":40822,"byte_end":40867,"line_start":1059,"line_end":1059,"column_start":1,"column_end":46}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":44002,"byte_end":44007,"line_start":48,"line_end":48,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":44188,"byte_end":44194,"line_start":55,"line_end":55,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":44376,"byte_end":44382,"line_start":62,"line_end":62,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":44544,"byte_end":44550,"line_start":69,"line_end":69,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":44880,"byte_end":44886,"line_start":83,"line_end":83,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":45216,"byte_end":45222,"line_start":97,"line_end":97,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":45552,"byte_end":45558,"line_start":111,"line_end":111,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":45919,"byte_end":45924,"line_start":125,"line_end":125,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":46114,"byte_end":46119,"line_start":132,"line_end":132,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":46308,"byte_end":46314,"line_start":139,"line_end":139,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":47097,"byte_end":47101,"line_start":165,"line_end":165,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":47612,"byte_end":47616,"line_start":187,"line_end":187,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":48016,"byte_end":48021,"line_start":206,"line_end":206,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":49515,"byte_end":49520,"line_start":252,"line_end":252,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":49981,"byte_end":49985,"line_start":269,"line_end":269,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":50881,"byte_end":50902,"line_start":306,"line_end":306,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/rasterizer.rs","byte_start":53013,"byte_end":53026,"line_start":28,"line_end":28,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/rasterizer.rs","byte_start":54178,"byte_end":54182,"line_start":65,"line_end":65,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/rasterizer.rs","byte_start":54954,"byte_end":54968,"line_start":101,"line_end":101,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/rasterizer.rs","byte_start":58038,"byte_end":58043,"line_start":188,"line_end":188,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6869,"byte_end":6873,"line_start":159,"line_end":159,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":7588,"byte_end":7599,"line_start":180,"line_end":180,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":7998,"byte_end":8009,"line_start":195,"line_end":195,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":8354,"byte_end":8365,"line_start":207,"line_end":207,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":8690,"byte_end":8701,"line_start":218,"line_end":218,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":9013,"byte_end":9024,"line_start":229,"line_end":229,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":9355,"byte_end":9366,"line_start":240,"line_end":240,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":10361,"byte_end":10366,"line_start":266,"line_end":266,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":12140,"byte_end":12148,"line_start":314,"line_end":314,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":12374,"byte_end":12382,"line_start":324,"line_end":324,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":12876,"byte_end":12887,"line_start":345,"line_end":345,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":13429,"byte_end":13444,"line_start":364,"line_end":364,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14315,"byte_end":14320,"line_start":388,"line_end":388,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":15122,"byte_end":15131,"line_start":411,"line_end":411,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":15272,"byte_end":15279,"line_start":416,"line_end":416,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":15384,"byte_end":15398,"line_start":422,"line_end":422,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":18661,"byte_end":18674,"line_start":492,"line_end":492,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":19000,"byte_end":19004,"line_start":503,"line_end":503,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":24819,"byte_end":24828,"line_start":645,"line_end":645,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":25231,"byte_end":25241,"line_start":663,"line_end":663,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":25810,"byte_end":25815,"line_start":678,"line_end":678,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":29413,"byte_end":29424,"line_start":769,"line_end":769,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":36017,"byte_end":36032,"line_start":930,"line_end":930,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":41503,"byte_end":41508,"line_start":1079,"line_end":1079,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":42039,"byte_end":42044,"line_start":1094,"line_end":1094,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":42235,"byte_end":42240,"line_start":1101,"line_end":1101,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":42383,"byte_end":42388,"line_start":1108,"line_end":1108,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":44002,"byte_end":44007,"line_start":48,"line_end":48,"column_start":44,"column_end":49},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":291},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":44188,"byte_end":44194,"line_start":55,"line_end":55,"column_start":44,"column_end":50},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":44376,"byte_end":44382,"line_start":62,"line_end":62,"column_start":44,"column_end":50},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":44544,"byte_end":44550,"line_start":69,"line_end":69,"column_start":24,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":44880,"byte_end":44886,"line_start":83,"line_end":83,"column_start":24,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":45216,"byte_end":45222,"line_start":97,"line_end":97,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":2151}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":45552,"byte_end":45558,"line_start":111,"line_end":111,"column_start":24,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":2151}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":45919,"byte_end":45924,"line_start":125,"line_end":125,"column_start":55,"column_end":60},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":291},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":46114,"byte_end":46119,"line_start":132,"line_end":132,"column_start":55,"column_end":60},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":291},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":46308,"byte_end":46314,"line_start":139,"line_end":139,"column_start":54,"column_end":60},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":47097,"byte_end":47101,"line_start":165,"line_end":165,"column_start":38,"column_end":42},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":47612,"byte_end":47616,"line_start":187,"line_end":187,"column_start":27,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":379},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":48016,"byte_end":48021,"line_start":206,"line_end":206,"column_start":27,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":49299,"byte_end":49304,"line_start":244,"line_end":244,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":49515,"byte_end":49520,"line_start":252,"line_end":252,"column_start":14,"column_end":19},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":49981,"byte_end":49985,"line_start":269,"line_end":269,"column_start":14,"column_end":18},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":379},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/geometry.rs","byte_start":50881,"byte_end":50902,"line_start":306,"line_end":306,"column_start":6,"column_end":27},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/rasterizer.rs","byte_start":52618,"byte_end":52623,"line_start":10,"line_end":10,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/rasterizer.rs","byte_start":53013,"byte_end":53026,"line_start":28,"line_end":28,"column_start":19,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/rasterizer.rs","byte_start":54178,"byte_end":54182,"line_start":65,"line_end":65,"column_start":18,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":379},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/rasterizer.rs","byte_start":54954,"byte_end":54968,"line_start":101,"line_end":101,"column_start":19,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":109},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/rasterizer.rs","byte_start":58038,"byte_end":58043,"line_start":188,"line_end":188,"column_start":18,"column_end":23},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":6869,"byte_end":6873,"line_start":159,"line_end":159,"column_start":21,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":509},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":7588,"byte_end":7599,"line_start":180,"line_end":180,"column_start":31,"column_end":42},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":515},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":7998,"byte_end":8009,"line_start":195,"line_end":195,"column_start":29,"column_end":40},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":515},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":8354,"byte_end":8365,"line_start":207,"line_end":207,"column_start":26,"column_end":37},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":515},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":8690,"byte_end":8701,"line_start":218,"line_end":218,"column_start":26,"column_end":37},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":515},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":9013,"byte_end":9024,"line_start":229,"line_end":229,"column_start":24,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":515},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":9355,"byte_end":9366,"line_start":240,"line_end":240,"column_start":42,"column_end":53},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":515},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":10361,"byte_end":10366,"line_start":266,"line_end":266,"column_start":21,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":581},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":12140,"byte_end":12148,"line_start":314,"line_end":314,"column_start":29,"column_end":37},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":629},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":12374,"byte_end":12382,"line_start":324,"line_end":324,"column_start":30,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":629},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":12876,"byte_end":12887,"line_start":345,"line_end":345,"column_start":21,"column_end":32},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":656},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":13429,"byte_end":13444,"line_start":364,"line_end":364,"column_start":21,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":664},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":14315,"byte_end":14320,"line_start":388,"line_end":388,"column_start":6,"column_end":11},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":15122,"byte_end":15131,"line_start":411,"line_end":411,"column_start":22,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":529},"to":{"krate":0,"index":182}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":15272,"byte_end":15279,"line_start":416,"line_end":416,"column_start":22,"column_end":29},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":555},"to":{"krate":0,"index":182}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":15384,"byte_end":15398,"line_start":422,"line_end":422,"column_start":10,"column_end":24},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":18661,"byte_end":18674,"line_start":492,"line_end":492,"column_start":23,"column_end":36},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":197},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":19000,"byte_end":19004,"line_start":503,"line_end":503,"column_start":10,"column_end":14},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":24819,"byte_end":24828,"line_start":645,"line_end":645,"column_start":40,"column_end":49},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":694},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":25231,"byte_end":25241,"line_start":663,"line_end":663,"column_start":27,"column_end":37},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":705},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":25810,"byte_end":25815,"line_start":678,"line_end":678,"column_start":10,"column_end":15},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":29413,"byte_end":29424,"line_start":769,"line_end":769,"column_start":10,"column_end":21},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":36017,"byte_end":36032,"line_start":930,"line_end":930,"column_start":10,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":41503,"byte_end":41508,"line_start":1079,"line_end":1079,"column_start":6,"column_end":11},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":42039,"byte_end":42044,"line_start":1094,"line_end":1094,"column_start":23,"column_end":28},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":736},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":42235,"byte_end":42240,"line_start":1101,"line_end":1101,"column_start":28,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":736},"to":{"krate":1,"index":1724}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.8.3/src/lib.rs","byte_start":42383,"byte_end":42388,"line_start":1108,"line_end":1108,"column_start":45,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":1,"index":2717},"to":{"krate":2,"index":1989}}]}