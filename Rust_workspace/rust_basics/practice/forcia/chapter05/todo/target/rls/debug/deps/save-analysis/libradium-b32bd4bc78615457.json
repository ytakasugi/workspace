{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3","program":"/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","radium","--edition=2018","/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=b32bd4bc78615457","-C","extra-filename=-b32bd4bc78615457","--out-dir","/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter05/todo/target/rls/debug/deps","-L","dependency=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter05/todo/target/rls/debug/deps","--cap-lints","allow","--cfg","radium_atomic_8","--cfg","radium_atomic_16","--cfg","radium_atomic_32","--cfg","radium_atomic_64","--cfg","radium_atomic_ptr","--error-format=json","--sysroot","/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter05/todo/target/rls/debug/deps/libradium-b32bd4bc78615457.rmeta"},"prelude":{"crate_id":{"name":"radium","disambiguator":[2908993488986752730,7044001045306482652]},"crate_root":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src","external_crates":[{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11533795067257537051,6600409280955634707]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12614123221401343543,9564301585503608515]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[1785005413158388284,2453622026203223019]}}],"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":0,"byte_end":27375,"line_start":1,"line_end":822,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":0,"byte_end":27375,"line_start":1,"line_end":822,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":45},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":58},{"krate":0,"index":67}],"decl_id":null,"docs":" `radium` provides a series of helper traits providing a uniform API for\n interacting with both atomic types like\n [`AtomicUsize`], and non-atomic types like [`Cell<T>`].","sig":null,"attributes":[{"value":"/ `radium` provides a series of helper traits providing a uniform API for","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":0,"byte_end":75,"line_start":1,"line_end":1,"column_start":1,"column_end":76}},{"value":"/ interacting with both atomic types like","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":76,"byte_end":119,"line_start":2,"line_end":2,"column_start":1,"column_end":44}},{"value":"/ [`AtomicUsize`], and non-atomic types like [`Cell<T>`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":120,"byte_end":179,"line_start":3,"line_end":3,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":180,"byte_end":183,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This crate is `#![no_std]`-compatible, and uses no non-core types.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":184,"byte_end":254,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":255,"byte_end":258,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ For details, see the documentation for [`Radium`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":259,"byte_end":313,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":314,"byte_end":317,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Additionally, `radium` exports type aliases that map to the atomic types in","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":318,"byte_end":397,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ `core::sync::atomic` when they exist, and fall back to `Cell` wrappers when","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":398,"byte_end":477,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ the atomic is missing. These are accessible through the `types` module; you","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":478,"byte_end":557,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ can use these names for a guaranteed-portable symbol with best-effort atomic","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":558,"byte_end":638,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ behavior.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":639,"byte_end":652,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":653,"byte_end":656,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ---","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":657,"byte_end":664,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":665,"byte_end":668,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ **@kneecaw** - <https://twitter.com/kneecaw/status/1132695060812849154>","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":669,"byte_end":744,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ > Feelin' lazy: Has someone already written a helper trait abstracting","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":745,"byte_end":819,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ > operations over `AtomicUsize` and `Cell<usize>` for generic code which may","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":820,"byte_end":900,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ > not care about atomicity?","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":901,"byte_end":932,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":933,"byte_end":936,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ **@ManishEarth** - <https://twitter.com/ManishEarth/status/1132706585300496384>","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":937,"byte_end":1020,"line_start":22,"line_end":22,"column_start":1,"column_end":84}},{"value":"/ > no but call the crate radium","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":1021,"byte_end":1055,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ >","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":1056,"byte_end":1061,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ > (since people didn't care that it was radioactive and used it in everything)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":1062,"byte_end":1144,"line_start":25,"line_end":25,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":1145,"byte_end":1148,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`AtomicUsize`]: core::sync::atomic::AtomicUsize","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":1149,"byte_end":1201,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/ [`Cell<T>`]: core::cell::Cell","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":1202,"byte_end":1235,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"no_std","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":1237,"byte_end":1247,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"deny(unconditional_recursion)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":1248,"byte_end":1281,"line_start":31,"line_end":31,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::types","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":6}],"decl_id":null,"docs":" Best-effort atomic types","sig":null,"attributes":[{"value":"/ Best-effort atomic types","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":27377,"byte_end":27405,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":27406,"byte_end":27409,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module exports `RadiumType` aliases that map to the `AtomicType` on","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":27410,"byte_end":27486,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ targets that have it, or `Cell<Type>` on targets that do not. This alias can","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":27487,"byte_end":27567,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ be used as a consistent name for crates that need consistent names to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":27568,"byte_end":27641,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ portable types.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":27642,"byte_end":27661,"line_start":6,"line_end":6,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":76},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":28035,"byte_end":28045,"line_start":21,"line_end":21,"column_start":5,"column_end":15},"name":"RadiumBool","qualname":"::types::RadiumBool","value":"core::sync::atomic::AtomicBool","parent":null,"children":[],"decl_id":null,"docs":"`AtomicBool`\n","sig":null,"attributes":[{"value":"cfg(radium_atomic_8)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":27821,"byte_end":27834,"line_start":11,"line_end":11,"column_start":9,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":77},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":28102,"byte_end":28110,"line_start":22,"line_end":22,"column_start":5,"column_end":13},"name":"RadiumI8","qualname":"::types::RadiumI8","value":"core::sync::atomic::AtomicI8","parent":null,"children":[],"decl_id":null,"docs":"`AtomicI8`\n","sig":null,"attributes":[{"value":"cfg(radium_atomic_8)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":27821,"byte_end":27834,"line_start":11,"line_end":11,"column_start":9,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":78},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":28159,"byte_end":28167,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"name":"RadiumU8","qualname":"::types::RadiumU8","value":"core::sync::atomic::AtomicU8","parent":null,"children":[],"decl_id":null,"docs":"`AtomicU8`\n","sig":null,"attributes":[{"value":"cfg(radium_atomic_8)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":27821,"byte_end":27834,"line_start":11,"line_end":11,"column_start":9,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":79},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":28250,"byte_end":28259,"line_start":27,"line_end":27,"column_start":5,"column_end":14},"name":"RadiumI16","qualname":"::types::RadiumI16","value":"core::sync::atomic::AtomicI16","parent":null,"children":[],"decl_id":null,"docs":"`AtomicI16`\n","sig":null,"attributes":[{"value":"cfg(radium_atomic_16)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":27821,"byte_end":27834,"line_start":11,"line_end":11,"column_start":9,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":80},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":28312,"byte_end":28321,"line_start":28,"line_end":28,"column_start":5,"column_end":14},"name":"RadiumU16","qualname":"::types::RadiumU16","value":"core::sync::atomic::AtomicU16","parent":null,"children":[],"decl_id":null,"docs":"`AtomicU16`\n","sig":null,"attributes":[{"value":"cfg(radium_atomic_16)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":27821,"byte_end":27834,"line_start":11,"line_end":11,"column_start":9,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":81},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":28408,"byte_end":28417,"line_start":32,"line_end":32,"column_start":5,"column_end":14},"name":"RadiumI32","qualname":"::types::RadiumI32","value":"core::sync::atomic::AtomicI32","parent":null,"children":[],"decl_id":null,"docs":"`AtomicI32`\n","sig":null,"attributes":[{"value":"cfg(radium_atomic_32)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":27821,"byte_end":27834,"line_start":11,"line_end":11,"column_start":9,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":82},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":28470,"byte_end":28479,"line_start":33,"line_end":33,"column_start":5,"column_end":14},"name":"RadiumU32","qualname":"::types::RadiumU32","value":"core::sync::atomic::AtomicU32","parent":null,"children":[],"decl_id":null,"docs":"`AtomicU32`\n","sig":null,"attributes":[{"value":"cfg(radium_atomic_32)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":27821,"byte_end":27834,"line_start":11,"line_end":11,"column_start":9,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":83},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":28566,"byte_end":28575,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"name":"RadiumI64","qualname":"::types::RadiumI64","value":"core::sync::atomic::AtomicI64","parent":null,"children":[],"decl_id":null,"docs":"`AtomicI64`\n","sig":null,"attributes":[{"value":"cfg(radium_atomic_64)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":27821,"byte_end":27834,"line_start":11,"line_end":11,"column_start":9,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":84},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":28628,"byte_end":28637,"line_start":38,"line_end":38,"column_start":5,"column_end":14},"name":"RadiumU64","qualname":"::types::RadiumU64","value":"core::sync::atomic::AtomicU64","parent":null,"children":[],"decl_id":null,"docs":"`AtomicU64`\n","sig":null,"attributes":[{"value":"cfg(radium_atomic_64)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":27821,"byte_end":27834,"line_start":11,"line_end":11,"column_start":9,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":85},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":28725,"byte_end":28736,"line_start":42,"line_end":42,"column_start":5,"column_end":16},"name":"RadiumIsize","qualname":"::types::RadiumIsize","value":"core::sync::atomic::AtomicIsize","parent":null,"children":[],"decl_id":null,"docs":"`AtomicIsize`\n","sig":null,"attributes":[{"value":"cfg(radium_atomic_ptr)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":27821,"byte_end":27834,"line_start":11,"line_end":11,"column_start":9,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":86},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":28797,"byte_end":28808,"line_start":43,"line_end":43,"column_start":5,"column_end":16},"name":"RadiumUsize","qualname":"::types::RadiumUsize","value":"core::sync::atomic::AtomicUsize","parent":null,"children":[],"decl_id":null,"docs":"`AtomicUsize`\n","sig":null,"attributes":[{"value":"cfg(radium_atomic_ptr)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":27821,"byte_end":27834,"line_start":11,"line_end":11,"column_start":9,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":6},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":28920,"byte_end":28929,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"name":"RadiumPtr","qualname":"::types::RadiumPtr","value":"core::sync::atomic::AtomicPtr<T>","parent":null,"children":[],"decl_id":null,"docs":" `AtomicPtr`\n","sig":null,"attributes":[{"value":"/ `AtomicPtr`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":28869,"byte_end":28884,"line_start":46,"line_end":46,"column_start":1,"column_end":16}},{"value":"cfg(radium_atomic_ptr)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/types.rs","byte_start":28885,"byte_end":28910,"line_start":47,"line_end":47,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":27},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":2531,"byte_end":2537,"line_start":68,"line_end":68,"column_start":11,"column_end":17},"name":"Radium","qualname":"::Radium","value":"Radium","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44}],"decl_id":null,"docs":" A maybe-atomic shared mutable fundamental type `T`.","sig":null,"attributes":[{"value":"/ A maybe-atomic shared mutable fundamental type `T`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":1751,"byte_end":1806,"line_start":53,"line_end":53,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":1807,"byte_end":1810,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented by both the [atomic wrapper] type for `T`, and by","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":1811,"byte_end":1890,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ [`Cell<T>`], providing a consistent interface for interacting with the two","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":1891,"byte_end":1969,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ types.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":1970,"byte_end":1980,"line_start":57,"line_end":57,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":1981,"byte_end":1984,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This trait provides methods predicated on marker traits for the underlying","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":1985,"byte_end":2063,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ fundamental. Only types which can be viewed as sequences of bits may use the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":2064,"byte_end":2144,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ functions for bit-wise arithmetic, and only types which can be used as","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":2145,"byte_end":2219,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ integers may use the functions for numeric arithmetic. Use of these methods","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":2220,"byte_end":2299,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ on insufficient underlying types (for example, `Radium::fetch_and` on an","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":2300,"byte_end":2376,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ atomic or cell-wrapped pointer) will cause a compiler error.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":2377,"byte_end":2441,"line_start":64,"line_end":64,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":2442,"byte_end":2445,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [atomic wrapper]: core::sync::atomic","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":2446,"byte_end":2486,"line_start":66,"line_end":66,"column_start":1,"column_end":41}},{"value":"/ [`Cell<T>`]: core::cell::Cell","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":2487,"byte_end":2520,"line_start":67,"line_end":67,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":28},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":2549,"byte_end":2553,"line_start":69,"line_end":69,"column_start":10,"column_end":14},"name":"Item","qualname":"::Radium::Item","value":"type Item;","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":2604,"byte_end":2607,"line_start":71,"line_end":71,"column_start":8,"column_end":11},"name":"new","qualname":"::Radium::new","value":"pub fn new(Self::Item) -> Self","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Creates a new value of this type.\n","sig":null,"attributes":[{"value":"/ Creates a new value of this type.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":2559,"byte_end":2596,"line_start":70,"line_end":70,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":2869,"byte_end":2874,"line_start":78,"line_end":78,"column_start":8,"column_end":13},"name":"fence","qualname":"::Radium::fence","value":"pub fn fence(Ordering)","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" If the underlying value is atomic, calls [`fence`] with the given\n [`Ordering`]. Otherwise, does nothing.","sig":null,"attributes":[{"value":"/ If the underlying value is atomic, calls [`fence`] with the given","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":2641,"byte_end":2710,"line_start":73,"line_end":73,"column_start":5,"column_end":74}},{"value":"/ [`Ordering`]. Otherwise, does nothing.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":2715,"byte_end":2757,"line_start":74,"line_end":74,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":2762,"byte_end":2765,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: core::sync::atomic::Ordering","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":2770,"byte_end":2816,"line_start":76,"line_end":76,"column_start":5,"column_end":51}},{"value":"/ [`fence`]: core::sync::atomic::fence","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":2821,"byte_end":2861,"line_start":77,"line_end":77,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3096,"byte_end":3103,"line_start":84,"line_end":84,"column_start":8,"column_end":15},"name":"get_mut","qualname":"::Radium::get_mut","value":"pub fn get_mut(&mut Self) -> &mut Self::Item","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying value.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":2898,"byte_end":2954,"line_start":80,"line_end":80,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":2959,"byte_end":2962,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This is safe because the mutable reference to `self` guarantees that no","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":2967,"byte_end":3042,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ other references exist to this value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3047,"byte_end":3088,"line_start":83,"line_end":83,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3289,"byte_end":3299,"line_start":89,"line_end":89,"column_start":8,"column_end":18},"name":"into_inner","qualname":"::Radium::into_inner","value":"pub fn into_inner(Self) -> Self::Item","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Consumes the wrapper and returns the contained value.","sig":null,"attributes":[{"value":"/ Consumes the wrapper and returns the contained value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3140,"byte_end":3197,"line_start":86,"line_end":86,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3202,"byte_end":3205,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is safe as passing by value ensures no other references exist.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3210,"byte_end":3281,"line_start":88,"line_end":88,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3559,"byte_end":3563,"line_start":98,"line_end":98,"column_start":8,"column_end":12},"name":"load","qualname":"::Radium::load","value":"pub fn load(&Self, Ordering) -> Self::Item","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Load a value from this object.","sig":null,"attributes":[{"value":"/ Load a value from this object.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3326,"byte_end":3360,"line_start":91,"line_end":91,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3365,"byte_end":3368,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Ordering values are ignored by non-atomic types.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3373,"byte_end":3425,"line_start":93,"line_end":93,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3430,"byte_end":3433,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::load`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3438,"byte_end":3474,"line_start":95,"line_end":95,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3479,"byte_end":3482,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::load`]: core::sync::atomic::AtomicUsize::load","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3487,"byte_end":3551,"line_start":97,"line_end":97,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3846,"byte_end":3851,"line_start":107,"line_end":107,"column_start":8,"column_end":13},"name":"store","qualname":"::Radium::store","value":"pub fn store(&Self, Self::Item, Ordering)","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Store a value in this object.","sig":null,"attributes":[{"value":"/ Store a value in this object.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3608,"byte_end":3641,"line_start":100,"line_end":100,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3646,"byte_end":3649,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3654,"byte_end":3709,"line_start":102,"line_end":102,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3714,"byte_end":3717,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::store`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3722,"byte_end":3759,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3764,"byte_end":3767,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::store`]: core::sync::atomic::AtomicUsize::store","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3772,"byte_end":3838,"line_start":106,"line_end":106,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":4149,"byte_end":4153,"line_start":116,"line_end":116,"column_start":8,"column_end":12},"name":"swap","qualname":"::Radium::swap","value":"pub fn swap(&Self, Self::Item, Ordering) -> Self::Item","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Swap with the value stored in this object.","sig":null,"attributes":[{"value":"/ Swap with the value stored in this object.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3901,"byte_end":3947,"line_start":109,"line_end":109,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3952,"byte_end":3955,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":3960,"byte_end":4015,"line_start":111,"line_end":111,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":4020,"byte_end":4023,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::swap`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":4028,"byte_end":4064,"line_start":113,"line_end":113,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":4069,"byte_end":4072,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::swap`]: core::sync::atomic::AtomicUsize::swap","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":4077,"byte_end":4141,"line_start":115,"line_end":115,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":4712,"byte_end":4728,"line_start":129,"line_end":129,"column_start":8,"column_end":24},"name":"compare_and_swap","qualname":"::Radium::compare_and_swap","value":"pub fn compare_and_swap(&Self, Self::Item, Self::Item, Ordering) -> Self::Item","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Stores a value into this object if the currently-stored value is the\n same as the `current` value.","sig":null,"attributes":[{"value":"/ Stores a value into this object if the currently-stored value is the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":4217,"byte_end":4289,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/ same as the `current` value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":4294,"byte_end":4326,"line_start":119,"line_end":119,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":4331,"byte_end":4334,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ The return value is always the previously-stored value. If it is equal to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":4339,"byte_end":4416,"line_start":121,"line_end":121,"column_start":5,"column_end":82}},{"value":"/ `current`, then the value was updated with `new`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":4421,"byte_end":4474,"line_start":122,"line_end":122,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":4479,"byte_end":4482,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":4487,"byte_end":4542,"line_start":124,"line_end":124,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":4547,"byte_end":4550,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::compare_and_swap`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":4555,"byte_end":4603,"line_start":126,"line_end":126,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":4608,"byte_end":4611,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::compare_and_swap`]: core::sync::atomic::AtomicUsize::compare_and_swap","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":4616,"byte_end":4704,"line_start":128,"line_end":128,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":5382,"byte_end":5398,"line_start":144,"line_end":144,"column_start":8,"column_end":24},"name":"compare_exchange","qualname":"::Radium::compare_exchange","value":"pub fn compare_exchange(&Self, Self::Item, Self::Item, Ordering, Ordering)\n-> Result<Self::Item, Self::Item>","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Stores a value into this object if the currently-stored value is the\n same as the `current` value.","sig":null,"attributes":[{"value":"/ Stores a value into this object if the currently-stored value is the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":4819,"byte_end":4891,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/ same as the `current` value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":4896,"byte_end":4928,"line_start":133,"line_end":133,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":4933,"byte_end":4936,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ The return value is a `Result` indicating whether the new value was","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":4941,"byte_end":5012,"line_start":135,"line_end":135,"column_start":5,"column_end":76}},{"value":"/ written, and containing the previously-stored value. On success, this","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":5017,"byte_end":5090,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ value is guaranteed to be equal to `current`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":5095,"byte_end":5144,"line_start":137,"line_end":137,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":5149,"byte_end":5152,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":5157,"byte_end":5212,"line_start":139,"line_end":139,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":5217,"byte_end":5220,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::compare_exchange`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":5225,"byte_end":5273,"line_start":141,"line_end":141,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":5278,"byte_end":5281,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::compare_exchange`]: core::sync::atomic::AtomicUsize::compare_exchange","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":5286,"byte_end":5374,"line_start":143,"line_end":143,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":6265,"byte_end":6286,"line_start":166,"line_end":166,"column_start":8,"column_end":29},"name":"compare_exchange_weak","qualname":"::Radium::compare_exchange_weak","value":"pub fn compare_exchange_weak(&Self, Self::Item, Self::Item, Ordering,\n                             Ordering) -> Result<Self::Item, Self::Item>","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Stores a value into this object if the currently-stored value is the\n same as the `current` value.","sig":null,"attributes":[{"value":"/ Stores a value into this object if the currently-stored value is the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":5569,"byte_end":5641,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ same as the `current` value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":5646,"byte_end":5678,"line_start":153,"line_end":153,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":5683,"byte_end":5686,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Unlike `compare_exchange`, this function is allowed to spuriously fail","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":5691,"byte_end":5765,"line_start":155,"line_end":155,"column_start":5,"column_end":79}},{"value":"/ even when the comparison succeeds, which can result in more efficient","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":5770,"byte_end":5843,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ code on some platforms. The return value is a `Result` indicating","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":5848,"byte_end":5917,"line_start":157,"line_end":157,"column_start":5,"column_end":74}},{"value":"/ whether the new value was written, and containing the previously-stored","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":5922,"byte_end":5997,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":6002,"byte_end":6012,"line_start":159,"line_end":159,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":6017,"byte_end":6020,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":6025,"byte_end":6080,"line_start":161,"line_end":161,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":6085,"byte_end":6088,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::compare_exchange_weak`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":6093,"byte_end":6146,"line_start":163,"line_end":163,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":6151,"byte_end":6154,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::compare_exchange_weak`]: core::sync::atomic::AtomicUsize::compare_exchange_weak","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":6159,"byte_end":6257,"line_start":165,"line_end":165,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":6852,"byte_end":6861,"line_start":184,"line_end":184,"column_start":8,"column_end":17},"name":"fetch_and","qualname":"::Radium::fetch_and","value":"pub fn fetch_and(&Self, Self::Item, Ordering) -> Self::Item where\nSelf::Item: marker::BitOps","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Performs a bitwise \"and\" on the currently-stored value and the argument\n `value`, and stores the result in `self`.","sig":null,"attributes":[{"value":"/ Performs a bitwise \"and\" on the currently-stored value and the argument","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":6457,"byte_end":6532,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ `value`, and stores the result in `self`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":6537,"byte_end":6582,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":6587,"byte_end":6590,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":6595,"byte_end":6635,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":6640,"byte_end":6643,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":6648,"byte_end":6703,"line_start":179,"line_end":179,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":6708,"byte_end":6711,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_and`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":6716,"byte_end":6757,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":6762,"byte_end":6765,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_and`]: core::sync::atomic::AtomicUsize::fetch_and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":6770,"byte_end":6844,"line_start":183,"line_end":183,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7369,"byte_end":7379,"line_start":198,"line_end":198,"column_start":8,"column_end":18},"name":"fetch_nand","qualname":"::Radium::fetch_nand","value":"pub fn fetch_nand(&Self, Self::Item, Ordering) -> Self::Item where\nSelf::Item: marker::BitOps","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Performs a bitwise \"nand\" on the currently-stored value and the argument\n `value`, and stores the result in `self`.","sig":null,"attributes":[{"value":"/ Performs a bitwise \"nand\" on the currently-stored value and the argument","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":6970,"byte_end":7046,"line_start":188,"line_end":188,"column_start":5,"column_end":81}},{"value":"/ `value`, and stores the result in `self`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7051,"byte_end":7096,"line_start":189,"line_end":189,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7101,"byte_end":7104,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7109,"byte_end":7149,"line_start":191,"line_end":191,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7154,"byte_end":7157,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7162,"byte_end":7217,"line_start":193,"line_end":193,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7222,"byte_end":7225,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_nand`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7230,"byte_end":7272,"line_start":195,"line_end":195,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7277,"byte_end":7280,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_nand`]: core::sync::atomic::AtomicUsize::fetch_nand","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7285,"byte_end":7361,"line_start":197,"line_end":197,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7879,"byte_end":7887,"line_start":212,"line_end":212,"column_start":8,"column_end":16},"name":"fetch_or","qualname":"::Radium::fetch_or","value":"pub fn fetch_or(&Self, Self::Item, Ordering) -> Self::Item where\nSelf::Item: marker::BitOps","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Performs a bitwise \"or\" on the currently-stored value and the argument\n `value`, and stores the result in `self`.","sig":null,"attributes":[{"value":"/ Performs a bitwise \"or\" on the currently-stored value and the argument","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7488,"byte_end":7562,"line_start":202,"line_end":202,"column_start":5,"column_end":79}},{"value":"/ `value`, and stores the result in `self`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7567,"byte_end":7612,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7617,"byte_end":7620,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7625,"byte_end":7665,"line_start":205,"line_end":205,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7670,"byte_end":7673,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7678,"byte_end":7733,"line_start":207,"line_end":207,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7738,"byte_end":7741,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_or`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7746,"byte_end":7786,"line_start":209,"line_end":209,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7791,"byte_end":7794,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_or`]: core::sync::atomic::AtomicUsize::fetch_or","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7799,"byte_end":7871,"line_start":211,"line_end":211,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":8391,"byte_end":8400,"line_start":226,"line_end":226,"column_start":8,"column_end":17},"name":"fetch_xor","qualname":"::Radium::fetch_xor","value":"pub fn fetch_xor(&Self, Self::Item, Ordering) -> Self::Item where\nSelf::Item: marker::BitOps","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Performs a bitwise \"xor\" on the currently-stored value and the argument\n `value`, and stores the result in `self`.","sig":null,"attributes":[{"value":"/ Performs a bitwise \"xor\" on the currently-stored value and the argument","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":7996,"byte_end":8071,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ `value`, and stores the result in `self`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":8076,"byte_end":8121,"line_start":217,"line_end":217,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":8126,"byte_end":8129,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":8134,"byte_end":8174,"line_start":219,"line_end":219,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":8179,"byte_end":8182,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":8187,"byte_end":8242,"line_start":221,"line_end":221,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":8247,"byte_end":8250,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_xor`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":8255,"byte_end":8296,"line_start":223,"line_end":223,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":8301,"byte_end":8304,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_xor`]: core::sync::atomic::AtomicUsize::fetch_xor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":8309,"byte_end":8383,"line_start":225,"line_end":225,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":8889,"byte_end":8898,"line_start":240,"line_end":240,"column_start":8,"column_end":17},"name":"fetch_add","qualname":"::Radium::fetch_add","value":"pub fn fetch_add(&Self, Self::Item, Ordering) -> Self::Item where\nSelf::Item: marker::NumericOps","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Adds `value` to the currently-stored value, wrapping on overflow, and\n stores the result in `self`.","sig":null,"attributes":[{"value":"/ Adds `value` to the currently-stored value, wrapping on overflow, and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":8509,"byte_end":8582,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/ stores the result in `self`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":8587,"byte_end":8619,"line_start":231,"line_end":231,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":8624,"byte_end":8627,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":8632,"byte_end":8672,"line_start":233,"line_end":233,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":8677,"byte_end":8680,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":8685,"byte_end":8740,"line_start":235,"line_end":235,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":8745,"byte_end":8748,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_add`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":8753,"byte_end":8794,"line_start":237,"line_end":237,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":8799,"byte_end":8802,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_add`]: core::sync::atomic::AtomicUsize::fetch_add","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":8807,"byte_end":8881,"line_start":239,"line_end":239,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9399,"byte_end":9408,"line_start":254,"line_end":254,"column_start":8,"column_end":17},"name":"fetch_sub","qualname":"::Radium::fetch_sub","value":"pub fn fetch_sub(&Self, Self::Item, Ordering) -> Self::Item where\nSelf::Item: marker::NumericOps","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Subtracts `value` from the currently-stored value, wrapping on\n underflow, and stores the result in `self`.","sig":null,"attributes":[{"value":"/ Subtracts `value` from the currently-stored value, wrapping on","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9011,"byte_end":9077,"line_start":244,"line_end":244,"column_start":5,"column_end":71}},{"value":"/ underflow, and stores the result in `self`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9082,"byte_end":9129,"line_start":245,"line_end":245,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9134,"byte_end":9137,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9142,"byte_end":9182,"line_start":247,"line_end":247,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9187,"byte_end":9190,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9195,"byte_end":9250,"line_start":249,"line_end":249,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9255,"byte_end":9258,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_sub`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9263,"byte_end":9304,"line_start":251,"line_end":251,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9309,"byte_end":9312,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_sub`]: core::sync::atomic::AtomicUsize::fetch_sub","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9317,"byte_end":9391,"line_start":253,"line_end":253,"column_start":5,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":45},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9565,"byte_end":9571,"line_start":260,"line_end":260,"column_start":9,"column_end":15},"name":"marker","qualname":"::marker","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"decl_id":null,"docs":" Marker traits used by [`Radium`].\n","sig":null,"attributes":[{"value":"/ Marker traits used by [`Radium`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9519,"byte_end":9556,"line_start":259,"line_end":259,"column_start":1,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":46},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10614,"byte_end":10620,"line_start":289,"line_end":289,"column_start":15,"column_end":21},"name":"BitOps","qualname":"::marker::BitOps","value":"BitOps","parent":null,"children":[],"decl_id":null,"docs":" Types supporting maybe-atomic bitwise operations.","sig":null,"attributes":[{"value":"/ Types supporting maybe-atomic bitwise operations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9578,"byte_end":9631,"line_start":261,"line_end":261,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9636,"byte_end":9639,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Types implementing this trait support the [`fetch_and`], [`fetch_nand`],","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9644,"byte_end":9720,"line_start":263,"line_end":263,"column_start":5,"column_end":81}},{"value":"/ [`fetch_or`], and [`fetch_xor`] maybe-atomic operations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9725,"byte_end":9785,"line_start":264,"line_end":264,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9790,"byte_end":9793,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ [`fetch_and`]: crate::Radium::fetch_and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9798,"byte_end":9841,"line_start":266,"line_end":266,"column_start":5,"column_end":48}},{"value":"/ [`fetch_nand`]: crate::Radium::fetch_nand","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9846,"byte_end":9891,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/ [`fetch_or`]: crate::Radium::fetch_or","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9896,"byte_end":9937,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ [`fetch_xor`]: crate::Radium::fetch_xor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9942,"byte_end":9985,"line_start":269,"line_end":269,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9990,"byte_end":9993,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ `bool` and all integer fundamental types implement this.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":9998,"byte_end":10058,"line_start":271,"line_end":271,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10063,"byte_end":10066,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10071,"byte_end":10082,"line_start":273,"line_end":273,"column_start":5,"column_end":16}},{"value":"/ # use core::sync::atomic::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10087,"byte_end":10119,"line_start":274,"line_end":274,"column_start":5,"column_end":37}},{"value":"/ # use radium::Radium;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10124,"byte_end":10149,"line_start":275,"line_end":275,"column_start":5,"column_end":30}},{"value":"/ let num: AtomicUsize = AtomicUsize::new(0);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10154,"byte_end":10201,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/ Radium::fetch_or(&num, 2, Ordering::Relaxed);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10206,"byte_end":10255,"line_start":277,"line_end":277,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10260,"byte_end":10267,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10272,"byte_end":10275,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Pointers do not. This will cause a compiler error.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10280,"byte_end":10334,"line_start":280,"line_end":280,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10339,"byte_end":10342,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```rust,compile_fail","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10347,"byte_end":10371,"line_start":282,"line_end":282,"column_start":5,"column_end":29}},{"value":"/ # use core::sync::atomic::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10376,"byte_end":10408,"line_start":283,"line_end":283,"column_start":5,"column_end":37}},{"value":"/ # use radium::Radium;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10413,"byte_end":10438,"line_start":284,"line_end":284,"column_start":5,"column_end":30}},{"value":"/ # use core::ptr;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10443,"byte_end":10463,"line_start":285,"line_end":285,"column_start":5,"column_end":25}},{"value":"/ let ptr: AtomicPtr<usize> = Default::default();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10468,"byte_end":10519,"line_start":286,"line_end":286,"column_start":5,"column_end":56}},{"value":"/ Radium::fetch_or(&ptr, ptr::null_mut(), Ordering::Relaxed);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10524,"byte_end":10587,"line_start":287,"line_end":287,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10592,"byte_end":10599,"line_start":288,"line_end":288,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":47},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":11527,"byte_end":11537,"line_start":316,"line_end":316,"column_start":15,"column_end":25},"name":"NumericOps","qualname":"::marker::NumericOps","value":"NumericOps: BitOps","parent":null,"children":[],"decl_id":null,"docs":" Types supporting maybe-atomic arithmetic operations.","sig":null,"attributes":[{"value":"/ Types supporting maybe-atomic arithmetic operations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10629,"byte_end":10685,"line_start":291,"line_end":291,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10690,"byte_end":10693,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Types implementing this trait support the [`fetch_add`] and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10698,"byte_end":10761,"line_start":293,"line_end":293,"column_start":5,"column_end":68}},{"value":"/ [`fetch_sub`] maybe-atomic operations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10766,"byte_end":10808,"line_start":294,"line_end":294,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10813,"byte_end":10816,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ [`fetch_add`]: crate::Radium::fetch_add","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10821,"byte_end":10864,"line_start":296,"line_end":296,"column_start":5,"column_end":48}},{"value":"/ [`fetch_sub`]: crate::Radium::fetch_sub","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10869,"byte_end":10912,"line_start":297,"line_end":297,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10917,"byte_end":10920,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The integer types, such as `usize` and `i32`, implement this trait.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":10925,"byte_end":10996,"line_start":299,"line_end":299,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":11001,"byte_end":11004,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":11009,"byte_end":11020,"line_start":301,"line_end":301,"column_start":5,"column_end":16}},{"value":"/ # use core::sync::atomic::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":11025,"byte_end":11057,"line_start":302,"line_end":302,"column_start":5,"column_end":37}},{"value":"/ # use radium::Radium;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":11062,"byte_end":11087,"line_start":303,"line_end":303,"column_start":5,"column_end":30}},{"value":"/ let num: AtomicUsize = AtomicUsize::new(2);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":11092,"byte_end":11139,"line_start":304,"line_end":304,"column_start":5,"column_end":52}},{"value":"/ Radium::fetch_add(&num, 2, Ordering::Relaxed);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":11144,"byte_end":11194,"line_start":305,"line_end":305,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":11199,"byte_end":11206,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":11211,"byte_end":11214,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ `bool` and pointers do not. This will cause a compiler error.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":11219,"byte_end":11284,"line_start":308,"line_end":308,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":11289,"byte_end":11292,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```rust,compile_fail","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":11297,"byte_end":11321,"line_start":310,"line_end":310,"column_start":5,"column_end":29}},{"value":"/ # use core::sync::atomic::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":11326,"byte_end":11358,"line_start":311,"line_end":311,"column_start":5,"column_end":37}},{"value":"/ # use radium::Radium;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":11363,"byte_end":11388,"line_start":312,"line_end":312,"column_start":5,"column_end":30}},{"value":"/ let bit: AtomicBool = AtomicBool::new(false);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":11393,"byte_end":11442,"line_start":313,"line_end":313,"column_start":5,"column_end":54}},{"value":"/ Radium::fetch_add(&bit, true, Ordering::Relaxed);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":11447,"byte_end":11500,"line_start":314,"line_end":314,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":11505,"byte_end":11512,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]}],"impls":[{"id":31,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":18171,"byte_end":18181,"line_start":571,"line_end":571,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":19020,"byte_end":19024,"line_start":600,"line_end":600,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":19902,"byte_end":19911,"line_start":630,"line_end":630,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":22396,"byte_end":22400,"line_start":702,"line_end":702,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":1291,"byte_end":1296,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":11539,"byte_end":11545,"line_start":316,"line_end":316,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":46},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":18171,"byte_end":18181,"line_start":571,"line_end":571,"column_start":17,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":1,"index":6226},"to":{"krate":0,"index":27}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":19020,"byte_end":19024,"line_start":600,"line_end":600,"column_start":17,"column_end":21},"kind":{"Impl":{"id":32}},"from":{"krate":1,"index":2931},"to":{"krate":0,"index":27}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":19902,"byte_end":19911,"line_start":630,"line_end":630,"column_start":20,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":1,"index":6231},"to":{"krate":0,"index":27}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.5.3/src/lib.rs","byte_start":22396,"byte_end":22400,"line_start":702,"line_end":702,"column_start":20,"column_end":24},"kind":{"Impl":{"id":34}},"from":{"krate":1,"index":2931},"to":{"krate":0,"index":27}}]}