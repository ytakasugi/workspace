{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1","program":"/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","nom","--edition=2018","/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"bitvec\"","--cfg","feature=\"default\"","--cfg","feature=\"lexical\"","--cfg","feature=\"lexical-core\"","--cfg","feature=\"std\"","-C","metadata=214165e2a4a4cbce","-C","extra-filename=-214165e2a4a4cbce","--out-dir","/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter05/todo/target/rls/debug/deps","-L","dependency=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter05/todo/target/rls/debug/deps","--extern","bitvec=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter05/todo/target/rls/debug/deps/libbitvec-13ad3a9b1a4b13d5.rmeta","--extern","lexical_core=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter05/todo/target/rls/debug/deps/liblexical_core-2a925d6604e647d3.rmeta","--extern","memchr=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter05/todo/target/rls/debug/deps/libmemchr-e03602aba27a22bc.rmeta","--cap-lints","allow","--cfg","stable_i128","--error-format=json","--sysroot","/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter05/todo/target/rls/debug/deps/libnom-214165e2a4a4cbce.rmeta"},"prelude":{"crate_id":{"name":"nom","disambiguator":[17677981890187917384,4451921282748745531]},"crate_root":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src","external_crates":[{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3329901521826220148,8779651902869174066]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","num":2,"id":{"name":"core","disambiguator":[11533795067257537051,6600409280955634707]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12614123221401343543,9564301585503608515]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1785005413158388284,2453622026203223019]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12957079427417428001,17718260667887668647]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10214993728156300765,14618204673916620187]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12453517098623888364,4709794086161820998]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12634510118091288440,7983944581587655387]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14017342134866723280,9256858969587329629]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7061025862014072460,14171357653989770935]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2285728033677722481,16182084057206383065]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7305883247437987566,266452839079745451]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13956229687295891598,15294992126055156716]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[931598532372339641,10024719927090962737]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[11150552510595322945,15608256962932530162]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4217706585212656622,592289864015908737]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[2229008352226773351,3496425060661471051]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":18,"id":{"name":"bitvec","disambiguator":[16577759501949899799,15066631457274531154]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":19,"id":{"name":"radium","disambiguator":[2908993488986752730,7044001045306482652]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":20,"id":{"name":"tap","disambiguator":[12246002842407992581,3056087882222114568]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":21,"id":{"name":"wyz","disambiguator":[15287551747375584116,14499585698310660079]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":22,"id":{"name":"funty","disambiguator":[14661551773932970847,10268375393342111390]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":23,"id":{"name":"lexical_core","disambiguator":[17489013756221905619,5342518127276885659]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":24,"id":{"name":"bitflags","disambiguator":[797144981761019717,1142778400565498576]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":25,"id":{"name":"cfg_if","disambiguator":[4121556712136841209,17620395886025762475]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":26,"id":{"name":"static_assertions","disambiguator":[10216390207992543984,1741064941202172077]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":27,"id":{"name":"arrayvec","disambiguator":[16908077979622261005,10987373476741161021]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":28,"id":{"name":"ryu","disambiguator":[17023738057273796742,7494221060338848067]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","num":29,"id":{"name":"memchr","disambiguator":[9456190808489834254,10531728292932033513]}}],"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":0,"byte_end":17028,"line_start":1,"line_end":519,"column_start":1,"column_end":19}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":6311},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":15983,"byte_end":15988,"line_start":458,"line_end":458,"column_start":7,"column_end":12},"alias_span":null,"name":"alloc","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":5,"index":377},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":15990,"byte_end":15996,"line_start":458,"line_end":458,"column_start":14,"column_end":20},"alias_span":null,"name":"borrow","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":5,"index":49},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":15998,"byte_end":16003,"line_start":458,"line_end":458,"column_start":22,"column_end":27},"alias_span":null,"name":"boxed","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":2,"index":1768},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16005,"byte_end":16008,"line_start":458,"line_end":458,"column_start":29,"column_end":32},"alias_span":null,"name":"cmp","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":1,"index":573},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16010,"byte_end":16021,"line_start":458,"line_end":458,"column_start":34,"column_end":45},"alias_span":null,"name":"collections","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":2,"index":1910},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16023,"byte_end":16030,"line_start":458,"line_end":458,"column_start":47,"column_end":54},"alias_span":null,"name":"convert","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":5,"index":3349},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16032,"byte_end":16035,"line_start":458,"line_end":458,"column_start":56,"column_end":59},"alias_span":null,"name":"fmt","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":2,"index":6739},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16037,"byte_end":16041,"line_start":458,"line_end":458,"column_start":61,"column_end":65},"alias_span":null,"name":"hash","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":2,"index":3392},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16043,"byte_end":16047,"line_start":458,"line_end":458,"column_start":67,"column_end":71},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":2,"index":1220},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16049,"byte_end":16052,"line_start":458,"line_end":458,"column_start":73,"column_end":76},"alias_span":null,"name":"mem","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":2,"index":2108},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16054,"byte_end":16057,"line_start":458,"line_end":458,"column_start":78,"column_end":81},"alias_span":null,"name":"ops","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":2,"index":5655},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16059,"byte_end":16065,"line_start":458,"line_end":458,"column_start":83,"column_end":89},"alias_span":null,"name":"option","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":2,"index":6018},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16067,"byte_end":16073,"line_start":458,"line_end":458,"column_start":91,"column_end":97},"alias_span":null,"name":"result","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":5,"index":3803},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16081,"byte_end":16086,"line_start":459,"line_end":459,"column_start":7,"column_end":12},"alias_span":null,"name":"slice","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":5,"index":3955},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16088,"byte_end":16091,"line_start":459,"line_end":459,"column_start":14,"column_end":17},"alias_span":null,"name":"str","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":5,"index":4061},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16093,"byte_end":16099,"line_start":459,"line_end":459,"column_start":19,"column_end":25},"alias_span":null,"name":"string","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":5,"index":4712},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16101,"byte_end":16104,"line_start":459,"line_end":459,"column_start":27,"column_end":30},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":5,"index":5},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16101,"byte_end":16104,"line_start":459,"line_end":459,"column_start":27,"column_end":30},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":25}},{"kind":"Use","ref_id":{"krate":1,"index":15},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16200,"byte_end":16207,"line_start":464,"line_end":464,"column_start":20,"column_end":27},"alias_span":null,"name":"v1","value":"","parent":{"krate":0,"index":26}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16295,"byte_end":16296,"line_start":472,"line_end":472,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16322,"byte_end":16323,"line_start":473,"line_end":473,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16347,"byte_end":16348,"line_start":474,"line_end":474,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16370,"byte_end":16371,"line_start":475,"line_end":475,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16445,"byte_end":16446,"line_start":479,"line_end":479,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":0,"byte_end":17028,"line_start":1,"line_end":519,"column_start":1,"column_end":19},"name":"","qualname":"::","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":58},{"krate":0,"index":155},{"krate":0,"index":337},{"krate":0,"index":808},{"krate":0,"index":1137},{"krate":0,"index":1182},{"krate":0,"index":1311},{"krate":0,"index":1544},{"krate":0,"index":1825},{"krate":0,"index":1938},{"krate":0,"index":2195},{"krate":0,"index":2196}],"decl_id":null,"docs":" # nom, eating data byte by byte","sig":null,"attributes":[{"value":"/ # nom, eating data byte by byte","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ nom is a parser combinator library with a focus on safe parsing,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":40,"byte_end":108,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ streaming patterns, and as much as possible zero copy.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":109,"byte_end":167,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":168,"byte_end":171,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":172,"byte_end":186,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":187,"byte_end":190,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":191,"byte_end":202,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"/ extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":203,"byte_end":224,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":225,"byte_end":228,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ use nom::{","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":229,"byte_end":243,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/   IResult,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":244,"byte_end":258,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/   bytes::complete::{tag, take_while_m_n},","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":259,"byte_end":304,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/   combinator::map_res,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":305,"byte_end":331,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/   sequence::tuple};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":332,"byte_end":355,"line_start":15,"line_end":15,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":356,"byte_end":359,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug,PartialEq)]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":360,"byte_end":390,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/ pub struct Color {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":391,"byte_end":413,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"/   pub red:     u8,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":414,"byte_end":436,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/   pub green:   u8,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":437,"byte_end":459,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/   pub blue:    u8,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":460,"byte_end":482,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":483,"byte_end":488,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":489,"byte_end":492,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ fn from_hex(input: &str) -> Result<u8, std::num::ParseIntError> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":493,"byte_end":562,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/   u8::from_str_radix(input, 16)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":563,"byte_end":598,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":599,"byte_end":604,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":605,"byte_end":608,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn is_hex_digit(c: char) -> bool {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":609,"byte_end":647,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/   c.is_digit(16)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":648,"byte_end":668,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":669,"byte_end":674,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":675,"byte_end":678,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ fn hex_primary(input: &str) -> IResult<&str, u8> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":679,"byte_end":733,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/   map_res(","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":734,"byte_end":748,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/     take_while_m_n(2, 2, is_hex_digit),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":749,"byte_end":792,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/     from_hex","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":793,"byte_end":809,"line_start":35,"line_end":35,"column_start":1,"column_end":17}},{"value":"/   )(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":810,"byte_end":824,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":825,"byte_end":830,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":831,"byte_end":834,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ fn hex_color(input: &str) -> IResult<&str, Color> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":835,"byte_end":890,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/   let (input, _) = tag(\"#\")(input)?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":891,"byte_end":931,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/   let (input, (red, green, blue)) = tuple((hex_primary, hex_primary, hex_primary))(input)?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":932,"byte_end":1027,"line_start":41,"line_end":41,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1028,"byte_end":1031,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/   Ok((input, Color { red, green, blue }))","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1032,"byte_end":1077,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1078,"byte_end":1083,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1084,"byte_end":1087,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1088,"byte_end":1103,"line_start":46,"line_end":46,"column_start":1,"column_end":16}},{"value":"/   assert_eq!(hex_color(\"#2F14DF\"), Ok((\"\", Color {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1104,"byte_end":1158,"line_start":47,"line_end":47,"column_start":1,"column_end":55}},{"value":"/     red: 47,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1159,"byte_end":1175,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/     green: 20,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1176,"byte_end":1194,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/     blue: 223,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1195,"byte_end":1213,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/   })));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1214,"byte_end":1225,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1226,"byte_end":1231,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1232,"byte_end":1239,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1240,"byte_end":1243,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The code is available on [Github](https://github.com/Geal/nom)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1244,"byte_end":1310,"line_start":55,"line_end":55,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1311,"byte_end":1314,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ There are a few [guides](https://github.com/Geal/nom/tree/master/doc) with more details","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1315,"byte_end":1406,"line_start":57,"line_end":57,"column_start":1,"column_end":92}},{"value":"/ about [the design of nom macros](https://github.com/Geal/nom/blob/master/doc/how_nom_macros_work.md),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1407,"byte_end":1512,"line_start":58,"line_end":58,"column_start":1,"column_end":106}},{"value":"/ [how to write parsers](https://github.com/Geal/nom/blob/master/doc/making_a_new_parser_from_scratch.md),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1513,"byte_end":1621,"line_start":59,"line_end":59,"column_start":1,"column_end":109}},{"value":"/ or the [error management system](https://github.com/Geal/nom/blob/master/doc/error_management.md).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1622,"byte_end":1724,"line_start":60,"line_end":60,"column_start":1,"column_end":103}},{"value":"/ You can also check out the [recipes] module that contains examples of common patterns.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1725,"byte_end":1815,"line_start":61,"line_end":61,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1816,"byte_end":1819,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ **Looking for a specific combinator? Read the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1820,"byte_end":1869,"line_start":63,"line_end":63,"column_start":1,"column_end":50}},{"value":"/ [\"choose a combinator\" guide](https://github.com/Geal/nom/blob/master/doc/choosing_a_combinator.md)**","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1870,"byte_end":1975,"line_start":64,"line_end":64,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1976,"byte_end":1979,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ If you are upgrading to nom 5.0, please read the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":1980,"byte_end":2032,"line_start":66,"line_end":66,"column_start":1,"column_end":53}},{"value":"/ [migration document](https://github.com/Geal/nom/blob/master/doc/upgrading_to_nom_5.md).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":2033,"byte_end":2125,"line_start":67,"line_end":67,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":2126,"byte_end":2129,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ See also the [FAQ](https://github.com/Geal/nom/blob/master/doc/FAQ.md).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":2130,"byte_end":2205,"line_start":69,"line_end":69,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":2206,"byte_end":2209,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ## Parser combinators","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":2210,"byte_end":2235,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":2236,"byte_end":2239,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Parser combinators are an approach to parsers that is very different from","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":2240,"byte_end":2317,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ software like [lex](https://en.wikipedia.org/wiki/Lex_(software)) and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":2318,"byte_end":2391,"line_start":74,"line_end":74,"column_start":1,"column_end":74}},{"value":"/ [yacc](https://en.wikipedia.org/wiki/Yacc). Instead of writing the grammar","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":2392,"byte_end":2470,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ in a separate syntax and generating the corresponding code, you use very small","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":2471,"byte_end":2553,"line_start":76,"line_end":76,"column_start":1,"column_end":83}},{"value":"/ functions with very specific purposes, like \"take 5 bytes\", or \"recognize the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":2554,"byte_end":2635,"line_start":77,"line_end":77,"column_start":1,"column_end":82}},{"value":"/ word 'HTTP'\", and assemble them in meaningful patterns like \"recognize","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":2636,"byte_end":2710,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/ 'HTTP', then a space, then a version\".","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":2711,"byte_end":2753,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/ The resulting code is small, and looks like the grammar you would have","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":2754,"byte_end":2828,"line_start":80,"line_end":80,"column_start":1,"column_end":75}},{"value":"/ written with other parser approaches.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":2829,"byte_end":2870,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":2871,"byte_end":2874,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ This gives us a few advantages:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":2875,"byte_end":2910,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":2911,"byte_end":2914,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ - The parsers are small and easy to write","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":2915,"byte_end":2960,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"/ - The parsers components are easy to reuse (if they're general enough, please add them to nom!)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":2961,"byte_end":3060,"line_start":86,"line_end":86,"column_start":1,"column_end":100}},{"value":"/ - The parsers components are easy to test separately (unit tests and property-based tests)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3061,"byte_end":3155,"line_start":87,"line_end":87,"column_start":1,"column_end":95}},{"value":"/ - The parser combination code looks close to the grammar you would have written","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3156,"byte_end":3239,"line_start":88,"line_end":88,"column_start":1,"column_end":84}},{"value":"/ - You can build partial parsers, specific to the data you need at the moment, and ignore the rest","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3240,"byte_end":3341,"line_start":89,"line_end":89,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3342,"byte_end":3345,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Here is an example of one such parser, to recognize text between parentheses:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3346,"byte_end":3427,"line_start":91,"line_end":91,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3428,"byte_end":3431,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3432,"byte_end":3443,"line_start":93,"line_end":93,"column_start":1,"column_end":12}},{"value":"/ use nom::{","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3444,"byte_end":3458,"line_start":94,"line_end":94,"column_start":1,"column_end":15}},{"value":"/   IResult,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3459,"byte_end":3473,"line_start":95,"line_end":95,"column_start":1,"column_end":15}},{"value":"/   sequence::delimited,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3474,"byte_end":3500,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/   // see the \"streaming/complete\" paragraph lower for an explanation of these submodules","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3501,"byte_end":3593,"line_start":97,"line_end":97,"column_start":1,"column_end":93}},{"value":"/   character::complete::char,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3594,"byte_end":3626,"line_start":98,"line_end":98,"column_start":1,"column_end":33}},{"value":"/   bytes::complete::is_not","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3627,"byte_end":3656,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3657,"byte_end":3663,"line_start":100,"line_end":100,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3664,"byte_end":3667,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ fn parens(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3668,"byte_end":3719,"line_start":102,"line_end":102,"column_start":1,"column_end":52}},{"value":"/   delimited(char('('), is_not(\")\"), char(')'))(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3720,"byte_end":3777,"line_start":103,"line_end":103,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3778,"byte_end":3783,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3784,"byte_end":3791,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3792,"byte_end":3795,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ It defines a function named `parens` which will recognize a sequence of the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3796,"byte_end":3875,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"/ character `(`, the longest byte array not containing `)`, then the character","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3876,"byte_end":3956,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ `)`, and will return the byte array in the middle.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":3957,"byte_end":4011,"line_start":109,"line_end":109,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4012,"byte_end":4015,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Here is another parser, written without using nom's combinators this time:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4016,"byte_end":4094,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4095,"byte_end":4098,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4099,"byte_end":4110,"line_start":113,"line_end":113,"column_start":1,"column_end":12}},{"value":"/ #[macro_use]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4111,"byte_end":4127,"line_start":114,"line_end":114,"column_start":1,"column_end":17}},{"value":"/ extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4128,"byte_end":4149,"line_start":115,"line_end":115,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4150,"byte_end":4153,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ use nom::{IResult, Err, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4154,"byte_end":4190,"line_start":117,"line_end":117,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4191,"byte_end":4194,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4195,"byte_end":4212,"line_start":119,"line_end":119,"column_start":1,"column_end":18}},{"value":"/ fn take4(i: &[u8]) -> IResult<&[u8], &[u8]>{","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4213,"byte_end":4261,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/   if i.len() < 4 {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4262,"byte_end":4284,"line_start":121,"line_end":121,"column_start":1,"column_end":23}},{"value":"/     Err(Err::Incomplete(Needed::new(4)))","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4285,"byte_end":4329,"line_start":122,"line_end":122,"column_start":1,"column_end":45}},{"value":"/   } else {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4330,"byte_end":4344,"line_start":123,"line_end":123,"column_start":1,"column_end":15}},{"value":"/     Ok((&i[4..], &i[0..4]))","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4345,"byte_end":4376,"line_start":124,"line_end":124,"column_start":1,"column_end":32}},{"value":"/   }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4377,"byte_end":4384,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4385,"byte_end":4390,"line_start":126,"line_end":126,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4391,"byte_end":4398,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4399,"byte_end":4406,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4407,"byte_end":4410,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This function takes a byte array as input, and tries to consume 4 bytes.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4411,"byte_end":4487,"line_start":130,"line_end":130,"column_start":1,"column_end":77}},{"value":"/ Writing all the parsers manually, like this, is dangerous, despite Rust's","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4488,"byte_end":4565,"line_start":131,"line_end":131,"column_start":1,"column_end":78}},{"value":"/ safety features. There are still a lot of mistakes one can make. That's why","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4566,"byte_end":4645,"line_start":132,"line_end":132,"column_start":1,"column_end":80}},{"value":"/ nom provides a list of function and macros to help in developing parsers.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4646,"byte_end":4723,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4724,"byte_end":4727,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ With functions, you would write it like this:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4728,"byte_end":4777,"line_start":135,"line_end":135,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4778,"byte_end":4781,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4782,"byte_end":4793,"line_start":137,"line_end":137,"column_start":1,"column_end":12}},{"value":"/ use nom::{IResult, bytes::streaming::take};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4794,"byte_end":4841,"line_start":138,"line_end":138,"column_start":1,"column_end":48}},{"value":"/ fn take4(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4842,"byte_end":4892,"line_start":139,"line_end":139,"column_start":1,"column_end":51}},{"value":"/   take(4u8)(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4893,"byte_end":4915,"line_start":140,"line_end":140,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4916,"byte_end":4921,"line_start":141,"line_end":141,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4922,"byte_end":4929,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4930,"byte_end":4933,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ With macros, you would write it like this:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4934,"byte_end":4980,"line_start":144,"line_end":144,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4981,"byte_end":4984,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4985,"byte_end":4996,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ #[macro_use]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":4997,"byte_end":5013,"line_start":147,"line_end":147,"column_start":1,"column_end":17}},{"value":"/ extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5014,"byte_end":5035,"line_start":148,"line_end":148,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5036,"byte_end":5039,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5040,"byte_end":5057,"line_start":150,"line_end":150,"column_start":1,"column_end":18}},{"value":"/ named!(take4, take!(4));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5058,"byte_end":5086,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5087,"byte_end":5094,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5095,"byte_end":5102,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5103,"byte_end":5106,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ nom has used macros for combinators from versions 1 to 4, and from version","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5107,"byte_end":5185,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ 5, it proposes new combinators as functions, but still allows the macros style","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5186,"byte_end":5268,"line_start":156,"line_end":156,"column_start":1,"column_end":83}},{"value":"/ (macros have been rewritten to use the functions under the hood).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5269,"byte_end":5338,"line_start":157,"line_end":157,"column_start":1,"column_end":70}},{"value":"/ For new parsers, we recommend using the functions instead of macros, since","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5339,"byte_end":5417,"line_start":158,"line_end":158,"column_start":1,"column_end":79}},{"value":"/ rustc messages will be much easier to understand.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5418,"byte_end":5471,"line_start":159,"line_end":159,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5472,"byte_end":5475,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5476,"byte_end":5479,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ A parser in nom is a function which, for an input type `I`, an output type `O`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5480,"byte_end":5562,"line_start":162,"line_end":162,"column_start":1,"column_end":83}},{"value":"/ and an optional error type `E`, will have the following signature:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5563,"byte_end":5633,"line_start":163,"line_end":163,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5634,"byte_end":5637,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5638,"byte_end":5656,"line_start":165,"line_end":165,"column_start":1,"column_end":19}},{"value":"/ fn parser(input: I) -> IResult<I, O, E>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5657,"byte_end":5701,"line_start":166,"line_end":166,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5702,"byte_end":5709,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5710,"byte_end":5713,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ Or like this, if you don't want to specify a custom error type (it will be `(I, ErrorKind)` by default):","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5714,"byte_end":5822,"line_start":169,"line_end":169,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5823,"byte_end":5826,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5827,"byte_end":5845,"line_start":171,"line_end":171,"column_start":1,"column_end":19}},{"value":"/ fn parser(input: I) -> IResult<I, O>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5846,"byte_end":5887,"line_start":172,"line_end":172,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5888,"byte_end":5895,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5896,"byte_end":5899,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ `IResult` is an alias for the `Result` type:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5900,"byte_end":5948,"line_start":175,"line_end":175,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5949,"byte_end":5952,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5953,"byte_end":5964,"line_start":177,"line_end":177,"column_start":1,"column_end":12}},{"value":"/ use nom::{Needed, error::ErrorKind};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":5965,"byte_end":6005,"line_start":178,"line_end":178,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":6006,"byte_end":6009,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ type IResult<I, O, E = (I,ErrorKind)> = Result<(I, O), Err<E>>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":6010,"byte_end":6077,"line_start":180,"line_end":180,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":6078,"byte_end":6081,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ enum Err<E> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":6082,"byte_end":6099,"line_start":182,"line_end":182,"column_start":1,"column_end":18}},{"value":"/   Incomplete(Needed),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":6100,"byte_end":6125,"line_start":183,"line_end":183,"column_start":1,"column_end":26}},{"value":"/   Error(E),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":6126,"byte_end":6141,"line_start":184,"line_end":184,"column_start":1,"column_end":16}},{"value":"/   Failure(E),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":6142,"byte_end":6159,"line_start":185,"line_end":185,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":6160,"byte_end":6165,"line_start":186,"line_end":186,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":6166,"byte_end":6173,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":6174,"byte_end":6177,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ It can have the following values:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":6178,"byte_end":6215,"line_start":189,"line_end":189,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":6216,"byte_end":6219,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ - A correct result `Ok((I,O))` with the first element being the remaining of the input (not parsed yet), and the second the output value;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":6220,"byte_end":6361,"line_start":191,"line_end":191,"column_start":1,"column_end":142}},{"value":"/ - An error `Err(Err::Error(c))` with `c` an error that can be built from the input position and a parser specific error","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":6362,"byte_end":6485,"line_start":192,"line_end":192,"column_start":1,"column_end":124}},{"value":"/ - An error `Err(Err::Incomplete(Needed))` indicating that more input is necessary. `Needed` can indicate how much data is needed","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":6486,"byte_end":6618,"line_start":193,"line_end":193,"column_start":1,"column_end":133}},{"value":"/ - An error `Err(Err::Failure(c))`. It works like the `Error` case, except it indicates an unrecoverable error: We cannot backtrack and test another parser","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":6619,"byte_end":6777,"line_start":194,"line_end":194,"column_start":1,"column_end":159}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":6778,"byte_end":6781,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ Please refer to the [\"choose a combinator\" guide](https://github.com/Geal/nom/blob/master/doc/choosing_a_combinator.md) for an exhaustive list of parsers.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":6782,"byte_end":6940,"line_start":196,"line_end":196,"column_start":1,"column_end":159}},{"value":"/ See also the rest of the documentation [here](https://github.com/Geal/nom/blob/master/doc).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":6941,"byte_end":7036,"line_start":197,"line_end":197,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7037,"byte_end":7040,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ## Making new parsers with function combinators","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7041,"byte_end":7092,"line_start":199,"line_end":199,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7093,"byte_end":7096,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ nom is based on functions that generate parsers, with a signature like","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7097,"byte_end":7171,"line_start":201,"line_end":201,"column_start":1,"column_end":75}},{"value":"/ this: `(arguments) -> impl Fn(Input) -> IResult<Input, Output, Error>`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7172,"byte_end":7247,"line_start":202,"line_end":202,"column_start":1,"column_end":76}},{"value":"/ The arguments of a combinator can be direct values (like `take` which uses","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7248,"byte_end":7326,"line_start":203,"line_end":203,"column_start":1,"column_end":79}},{"value":"/ a number of bytes or character as argument) or even other parsers (like","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7327,"byte_end":7402,"line_start":204,"line_end":204,"column_start":1,"column_end":76}},{"value":"/ `delimited` which takes as argument 3 parsers, and returns the result of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7403,"byte_end":7479,"line_start":205,"line_end":205,"column_start":1,"column_end":77}},{"value":"/ the second one if all are successful).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7480,"byte_end":7522,"line_start":206,"line_end":206,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7523,"byte_end":7526,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ Here are some examples:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7527,"byte_end":7554,"line_start":208,"line_end":208,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7555,"byte_end":7558,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7559,"byte_end":7570,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/ use nom::IResult;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7571,"byte_end":7592,"line_start":211,"line_end":211,"column_start":1,"column_end":22}},{"value":"/ use nom::bytes::complete::{tag, take};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7593,"byte_end":7635,"line_start":212,"line_end":212,"column_start":1,"column_end":43}},{"value":"/ fn abcd_parser(i: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7636,"byte_end":7688,"line_start":213,"line_end":213,"column_start":1,"column_end":53}},{"value":"/   tag(\"abcd\")(i) // will consume bytes if the input begins with \"abcd\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7689,"byte_end":7763,"line_start":214,"line_end":214,"column_start":1,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7764,"byte_end":7769,"line_start":215,"line_end":215,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7770,"byte_end":7773,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ fn take_10(i: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7774,"byte_end":7825,"line_start":217,"line_end":217,"column_start":1,"column_end":52}},{"value":"/   take(10u8)(i) // will consume and return 10 bytes of input","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7826,"byte_end":7890,"line_start":218,"line_end":218,"column_start":1,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7891,"byte_end":7896,"line_start":219,"line_end":219,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7897,"byte_end":7904,"line_start":220,"line_end":220,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7905,"byte_end":7908,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ ## Combining parsers","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7909,"byte_end":7933,"line_start":222,"line_end":222,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7934,"byte_end":7937,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ There are higher level patterns, like the **`alt`** combinator, which","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":7938,"byte_end":8011,"line_start":224,"line_end":224,"column_start":1,"column_end":74}},{"value":"/ provides a choice between multiple parsers. If one branch fails, it tries","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8012,"byte_end":8089,"line_start":225,"line_end":225,"column_start":1,"column_end":78}},{"value":"/ the next, and returns the result of the first parser that succeeds:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8090,"byte_end":8161,"line_start":226,"line_end":226,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8162,"byte_end":8165,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8166,"byte_end":8177,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ use nom::IResult;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8178,"byte_end":8199,"line_start":229,"line_end":229,"column_start":1,"column_end":22}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8200,"byte_end":8225,"line_start":230,"line_end":230,"column_start":1,"column_end":26}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8226,"byte_end":8260,"line_start":231,"line_end":231,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8261,"byte_end":8264,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ let mut alt_tags = alt((tag(\"abcd\"), tag(\"efgh\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8265,"byte_end":8320,"line_start":233,"line_end":233,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8321,"byte_end":8324,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alt_tags(&b\"abcdxxx\"[..]), Ok((&b\"xxx\"[..], &b\"abcd\"[..])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8325,"byte_end":8400,"line_start":235,"line_end":235,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(alt_tags(&b\"efghxxx\"[..]), Ok((&b\"xxx\"[..], &b\"efgh\"[..])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8401,"byte_end":8476,"line_start":236,"line_end":236,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(alt_tags(&b\"ijklxxx\"[..]), Err(nom::Err::Error((&b\"ijklxxx\"[..], nom::error::ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8477,"byte_end":8588,"line_start":237,"line_end":237,"column_start":1,"column_end":112}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8589,"byte_end":8596,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8597,"byte_end":8600,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ The **`opt`** combinator makes a parser optional. If the child parser returns","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8601,"byte_end":8682,"line_start":240,"line_end":240,"column_start":1,"column_end":82}},{"value":"/ an error, **`opt`** will still succeed and return None:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8683,"byte_end":8742,"line_start":241,"line_end":241,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8743,"byte_end":8746,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8747,"byte_end":8758,"line_start":243,"line_end":243,"column_start":1,"column_end":12}},{"value":"/ use nom::{IResult, combinator::opt, bytes::complete::tag};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8759,"byte_end":8821,"line_start":244,"line_end":244,"column_start":1,"column_end":63}},{"value":"/ fn abcd_opt(i: &[u8]) -> IResult<&[u8], Option<&[u8]>> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8822,"byte_end":8882,"line_start":245,"line_end":245,"column_start":1,"column_end":61}},{"value":"/   opt(tag(\"abcd\"))(i)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8883,"byte_end":8908,"line_start":246,"line_end":246,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8909,"byte_end":8914,"line_start":247,"line_end":247,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8915,"byte_end":8918,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(abcd_opt(&b\"abcdxxx\"[..]), Ok((&b\"xxx\"[..], Some(&b\"abcd\"[..]))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":8919,"byte_end":9000,"line_start":249,"line_end":249,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(abcd_opt(&b\"efghxxx\"[..]), Ok((&b\"efghxxx\"[..], None)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9001,"byte_end":9072,"line_start":250,"line_end":250,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9073,"byte_end":9080,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9081,"byte_end":9084,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ **`many0`** applies a parser 0 or more times, and returns a vector of the aggregated results:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9085,"byte_end":9182,"line_start":253,"line_end":253,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9183,"byte_end":9186,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9187,"byte_end":9198,"line_start":255,"line_end":255,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9199,"byte_end":9235,"line_start":256,"line_end":256,"column_start":1,"column_end":37}},{"value":"/ # #[cfg(feature = \"alloc\")]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9236,"byte_end":9267,"line_start":257,"line_end":257,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9268,"byte_end":9285,"line_start":258,"line_end":258,"column_start":1,"column_end":18}},{"value":"/ use nom::{IResult, multi::many0, bytes::complete::tag};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9286,"byte_end":9345,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"/ use std::str;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9346,"byte_end":9363,"line_start":260,"line_end":260,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9364,"byte_end":9367,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ fn multi(i: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9368,"byte_end":9419,"line_start":262,"line_end":262,"column_start":1,"column_end":52}},{"value":"/   many0(tag(\"abcd\"))(i)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9420,"byte_end":9447,"line_start":263,"line_end":263,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9448,"byte_end":9453,"line_start":264,"line_end":264,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9454,"byte_end":9457,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ let a = \"abcdef\";","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9458,"byte_end":9479,"line_start":266,"line_end":266,"column_start":1,"column_end":22}},{"value":"/ let b = \"abcdabcdef\";","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9480,"byte_end":9505,"line_start":267,"line_end":267,"column_start":1,"column_end":26}},{"value":"/ let c = \"azerty\";","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9506,"byte_end":9527,"line_start":268,"line_end":268,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(multi(a), Ok((\"ef\",     vec![\"abcd\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9528,"byte_end":9583,"line_start":269,"line_end":269,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(multi(b), Ok((\"ef\",     vec![\"abcd\", \"abcd\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9584,"byte_end":9647,"line_start":270,"line_end":270,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(multi(c), Ok((\"azerty\", Vec::new())));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9648,"byte_end":9701,"line_start":271,"line_end":271,"column_start":1,"column_end":54}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9702,"byte_end":9709,"line_start":272,"line_end":272,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(not(feature = \"alloc\"))]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9710,"byte_end":9746,"line_start":273,"line_end":273,"column_start":1,"column_end":37}},{"value":"/ # fn main() {}","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9747,"byte_end":9765,"line_start":274,"line_end":274,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9766,"byte_end":9773,"line_start":275,"line_end":275,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9774,"byte_end":9777,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ Here are some basic combining macros available:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9778,"byte_end":9829,"line_start":277,"line_end":277,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9830,"byte_end":9833,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ - **`opt`**: Will make the parser optional (if it returns the `O` type, the new parser returns `Option<O>`)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9834,"byte_end":9945,"line_start":279,"line_end":279,"column_start":1,"column_end":112}},{"value":"/ - **`many0`**: Will apply the parser 0 or more times (if it returns the `O` type, the new parser returns `Vec<O>`)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":9946,"byte_end":10064,"line_start":280,"line_end":280,"column_start":1,"column_end":119}},{"value":"/ - **`many1`**: Will apply the parser 1 or more times","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10065,"byte_end":10121,"line_start":281,"line_end":281,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10122,"byte_end":10125,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ There are more complex (and more useful) parsers like `tuple!`, which is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10126,"byte_end":10202,"line_start":283,"line_end":283,"column_start":1,"column_end":77}},{"value":"/ used to apply a series of parsers then assemble their results.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10203,"byte_end":10269,"line_start":284,"line_end":284,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10270,"byte_end":10273,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ Example with `tuple`:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10274,"byte_end":10299,"line_start":286,"line_end":286,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10300,"byte_end":10303,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10304,"byte_end":10315,"line_start":288,"line_end":288,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10316,"byte_end":10352,"line_start":289,"line_end":289,"column_start":1,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10353,"byte_end":10370,"line_start":290,"line_end":290,"column_start":1,"column_end":18}},{"value":"/ use nom::{error::ErrorKind, Needed,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10371,"byte_end":10410,"line_start":291,"line_end":291,"column_start":1,"column_end":40}},{"value":"/ number::streaming::be_u16,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10411,"byte_end":10441,"line_start":292,"line_end":292,"column_start":1,"column_end":31}},{"value":"/ bytes::streaming::{tag, take},","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10442,"byte_end":10476,"line_start":293,"line_end":293,"column_start":1,"column_end":35}},{"value":"/ sequence::tuple};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10477,"byte_end":10498,"line_start":294,"line_end":294,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10499,"byte_end":10502,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ let mut tpl = tuple((be_u16, take(3u8), tag(\"fg\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10503,"byte_end":10559,"line_start":296,"line_end":296,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10560,"byte_end":10563,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10564,"byte_end":10579,"line_start":298,"line_end":298,"column_start":1,"column_end":16}},{"value":"/   tpl(&b\"abcdefgh\"[..]),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10580,"byte_end":10608,"line_start":299,"line_end":299,"column_start":1,"column_end":29}},{"value":"/   Ok((","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10609,"byte_end":10619,"line_start":300,"line_end":300,"column_start":1,"column_end":11}},{"value":"/     &b\"h\"[..],","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10620,"byte_end":10638,"line_start":301,"line_end":301,"column_start":1,"column_end":19}},{"value":"/     (0x6162u16, &b\"cde\"[..], &b\"fg\"[..])","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10639,"byte_end":10683,"line_start":302,"line_end":302,"column_start":1,"column_end":45}},{"value":"/   ))","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10684,"byte_end":10692,"line_start":303,"line_end":303,"column_start":1,"column_end":9}},{"value":"/ );","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10693,"byte_end":10699,"line_start":304,"line_end":304,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(tpl(&b\"abcde\"[..]), Err(nom::Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10700,"byte_end":10778,"line_start":305,"line_end":305,"column_start":1,"column_end":79}},{"value":"/ let input = &b\"abcdejk\"[..];","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10779,"byte_end":10811,"line_start":306,"line_end":306,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(tpl(input), Err(nom::Err::Error((&input[5..], ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10812,"byte_end":10892,"line_start":307,"line_end":307,"column_start":1,"column_end":81}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10893,"byte_end":10900,"line_start":308,"line_end":308,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10901,"byte_end":10908,"line_start":309,"line_end":309,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10909,"byte_end":10912,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ But you can also use a sequence of combinators written in imperative style,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10913,"byte_end":10992,"line_start":311,"line_end":311,"column_start":1,"column_end":80}},{"value":"/ thanks to the `?` operator:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":10993,"byte_end":11024,"line_start":312,"line_end":312,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11025,"byte_end":11028,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11029,"byte_end":11040,"line_start":314,"line_end":314,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11041,"byte_end":11077,"line_start":315,"line_end":315,"column_start":1,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11078,"byte_end":11095,"line_start":316,"line_end":316,"column_start":1,"column_end":18}},{"value":"/ use nom::{IResult, bytes::complete::tag};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11096,"byte_end":11141,"line_start":317,"line_end":317,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11142,"byte_end":11145,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11146,"byte_end":11177,"line_start":319,"line_end":319,"column_start":1,"column_end":32}},{"value":"/ struct A {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11178,"byte_end":11192,"line_start":320,"line_end":320,"column_start":1,"column_end":15}},{"value":"/   a: u8,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11193,"byte_end":11205,"line_start":321,"line_end":321,"column_start":1,"column_end":13}},{"value":"/   b: u8","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11206,"byte_end":11217,"line_start":322,"line_end":322,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11218,"byte_end":11223,"line_start":323,"line_end":323,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11224,"byte_end":11227,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ fn ret_int1(i:&[u8]) -> IResult<&[u8], u8> { Ok((i,1)) }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11228,"byte_end":11288,"line_start":325,"line_end":325,"column_start":1,"column_end":61}},{"value":"/ fn ret_int2(i:&[u8]) -> IResult<&[u8], u8> { Ok((i,2)) }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11289,"byte_end":11349,"line_start":326,"line_end":326,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11350,"byte_end":11353,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ fn f(i: &[u8]) -> IResult<&[u8], A> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11354,"byte_end":11395,"line_start":328,"line_end":328,"column_start":1,"column_end":42}},{"value":"/   // if successful, the parser returns `Ok((remaining_input, output_value))` that we can destructure","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11396,"byte_end":11500,"line_start":329,"line_end":329,"column_start":1,"column_end":105}},{"value":"/   let (i, _) = tag(\"abcd\")(i)?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11501,"byte_end":11536,"line_start":330,"line_end":330,"column_start":1,"column_end":36}},{"value":"/   let (i, a) = ret_int1(i)?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11537,"byte_end":11569,"line_start":331,"line_end":331,"column_start":1,"column_end":33}},{"value":"/   let (i, _) = tag(\"efgh\")(i)?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11570,"byte_end":11605,"line_start":332,"line_end":332,"column_start":1,"column_end":36}},{"value":"/   let (i, b) = ret_int2(i)?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11606,"byte_end":11638,"line_start":333,"line_end":333,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11639,"byte_end":11642,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/   Ok((i, A { a, b }))","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11643,"byte_end":11668,"line_start":335,"line_end":335,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11669,"byte_end":11674,"line_start":336,"line_end":336,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11675,"byte_end":11678,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ let r = f(b\"abcdefghX\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11679,"byte_end":11707,"line_start":338,"line_end":338,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(r, Ok((&b\"X\"[..], A{a: 1, b: 2})));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11708,"byte_end":11758,"line_start":339,"line_end":339,"column_start":1,"column_end":51}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11759,"byte_end":11766,"line_start":340,"line_end":340,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11767,"byte_end":11774,"line_start":341,"line_end":341,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11775,"byte_end":11778,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ ## Streaming / Complete","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11779,"byte_end":11806,"line_start":343,"line_end":343,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11807,"byte_end":11810,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ Some of nom's modules have `streaming` or `complete` submodules. They hold","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11811,"byte_end":11889,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/ different variants of the same combinators.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11890,"byte_end":11937,"line_start":346,"line_end":346,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11938,"byte_end":11941,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ A streaming parser assumes that we might not have all of the input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":11942,"byte_end":12018,"line_start":348,"line_end":348,"column_start":1,"column_end":77}},{"value":"/ This can happen with some network protocol or large file parsers, where the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12019,"byte_end":12098,"line_start":349,"line_end":349,"column_start":1,"column_end":80}},{"value":"/ input buffer can be full and need to be resized or refilled.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12099,"byte_end":12163,"line_start":350,"line_end":350,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12164,"byte_end":12167,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ A complete parser assumes that we already have all of the input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12168,"byte_end":12241,"line_start":352,"line_end":352,"column_start":1,"column_end":74}},{"value":"/ This will be the common case with small files that can be read entirely to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12242,"byte_end":12320,"line_start":353,"line_end":353,"column_start":1,"column_end":79}},{"value":"/ memory.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12321,"byte_end":12332,"line_start":354,"line_end":354,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12333,"byte_end":12336,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ Here is how it works in practice:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12337,"byte_end":12374,"line_start":356,"line_end":356,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12375,"byte_end":12378,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12379,"byte_end":12390,"line_start":358,"line_end":358,"column_start":1,"column_end":12}},{"value":"/ use nom::{IResult, Err, Needed, error::{Error, ErrorKind}, bytes, character};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12391,"byte_end":12472,"line_start":359,"line_end":359,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12473,"byte_end":12476,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ fn take_streaming(i: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12477,"byte_end":12535,"line_start":361,"line_end":361,"column_start":1,"column_end":59}},{"value":"/   bytes::streaming::take(4u8)(i)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12536,"byte_end":12572,"line_start":362,"line_end":362,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12573,"byte_end":12578,"line_start":363,"line_end":363,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12579,"byte_end":12582,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ fn take_complete(i: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12583,"byte_end":12640,"line_start":365,"line_end":365,"column_start":1,"column_end":58}},{"value":"/   bytes::complete::take(4u8)(i)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12641,"byte_end":12676,"line_start":366,"line_end":366,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12677,"byte_end":12682,"line_start":367,"line_end":367,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12683,"byte_end":12686,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ // both parsers will take 4 bytes as expected","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12687,"byte_end":12736,"line_start":369,"line_end":369,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(take_streaming(&b\"abcde\"[..]), Ok((&b\"e\"[..], &b\"abcd\"[..])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12737,"byte_end":12814,"line_start":370,"line_end":370,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(take_complete(&b\"abcde\"[..]), Ok((&b\"e\"[..], &b\"abcd\"[..])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12815,"byte_end":12891,"line_start":371,"line_end":371,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12892,"byte_end":12895,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ // if the input is smaller than 4 bytes, the streaming parser","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12896,"byte_end":12961,"line_start":373,"line_end":373,"column_start":1,"column_end":66}},{"value":"/ // will return `Incomplete` to indicate that we need more data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":12962,"byte_end":13028,"line_start":374,"line_end":374,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(take_streaming(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13029,"byte_end":13111,"line_start":375,"line_end":375,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13112,"byte_end":13115,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ // but the complete parser will return an error","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13116,"byte_end":13167,"line_start":377,"line_end":377,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(take_complete(&b\"abc\"[..]), Err(Err::Error(Error::new(&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13168,"byte_end":13269,"line_start":378,"line_end":378,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13270,"byte_end":13273,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/ // the alpha0 function recognizes 0 or more alphabetic characters","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13274,"byte_end":13343,"line_start":380,"line_end":380,"column_start":1,"column_end":70}},{"value":"/ fn alpha0_streaming(i: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13344,"byte_end":13401,"line_start":381,"line_end":381,"column_start":1,"column_end":58}},{"value":"/   character::streaming::alpha0(i)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13402,"byte_end":13439,"line_start":382,"line_end":382,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13440,"byte_end":13445,"line_start":383,"line_end":383,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13446,"byte_end":13449,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ fn alpha0_complete(i: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13450,"byte_end":13506,"line_start":385,"line_end":385,"column_start":1,"column_end":57}},{"value":"/   character::complete::alpha0(i)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13507,"byte_end":13543,"line_start":386,"line_end":386,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13544,"byte_end":13549,"line_start":387,"line_end":387,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13550,"byte_end":13553,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ // if there's a clear limit to the recognized characters, both parsers work the same way","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13554,"byte_end":13646,"line_start":389,"line_end":389,"column_start":1,"column_end":93}},{"value":"/ assert_eq!(alpha0_streaming(\"abcd;\"), Ok((\";\", \"abcd\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13647,"byte_end":13708,"line_start":390,"line_end":390,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(alpha0_complete(\"abcd;\"), Ok((\";\", \"abcd\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13709,"byte_end":13769,"line_start":391,"line_end":391,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13770,"byte_end":13773,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ // but when there's no limit, the streaming version returns `Incomplete`, because it cannot","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13774,"byte_end":13869,"line_start":393,"line_end":393,"column_start":1,"column_end":96}},{"value":"/ // know if more input data should be recognized. The whole input could be \"abcd;\", or","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13870,"byte_end":13959,"line_start":394,"line_end":394,"column_start":1,"column_end":90}},{"value":"/ // \"abcde;\"","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13960,"byte_end":13975,"line_start":395,"line_end":395,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(alpha0_streaming(\"abcd\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":13976,"byte_end":14055,"line_start":396,"line_end":396,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":14056,"byte_end":14059,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ // while the complete version knows that all of the data is there","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":14060,"byte_end":14129,"line_start":398,"line_end":398,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha0_complete(\"abcd\"), Ok((\"\", \"abcd\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":14130,"byte_end":14188,"line_start":399,"line_end":399,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":14189,"byte_end":14196,"line_start":400,"line_end":400,"column_start":1,"column_end":8}},{"value":"/ **Going further:** Read the [guides](https://github.com/Geal/nom/tree/master/doc),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":14197,"byte_end":14283,"line_start":401,"line_end":401,"column_start":1,"column_end":87}},{"value":"/ check out the [recipes]!","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":14284,"byte_end":14312,"line_start":402,"line_end":402,"column_start":1,"column_end":29}},{"value":"deny(missing_docs)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":14568,"byte_end":14590,"line_start":408,"line_end":408,"column_start":1,"column_end":23}},{"value":"warn(missing_doc_code_examples)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":14591,"byte_end":14626,"line_start":409,"line_end":409,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":15211,"byte_end":15214,"line_start":432,"line_end":432,"column_start":9,"column_end":12},"name":"lib","qualname":"::lib","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":7}],"decl_id":null,"docs":" Lib module to re-export everything needed from `std` or `core`/`alloc`. This is how `serde` does\n it, albeit there it is not public.\n","sig":null,"attributes":[{"value":"/ Lib module to re-export everything needed from `std` or `core`/`alloc`. This is how `serde` does","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":15027,"byte_end":15127,"line_start":429,"line_end":429,"column_start":1,"column_end":101}},{"value":"/ it, albeit there it is not public.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":15128,"byte_end":15166,"line_start":430,"line_end":430,"column_start":1,"column_end":39}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":15167,"byte_end":15202,"line_start":431,"line_end":431,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":15952,"byte_end":15955,"line_start":456,"line_end":456,"column_start":11,"column_end":14},"name":"std","qualname":"::lib::std","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":6175},{"krate":0,"index":26}],"decl_id":null,"docs":" internal std exports for no_std compatibility\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":15828,"byte_end":15851,"line_start":453,"line_end":453,"column_start":3,"column_end":26}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":15854,"byte_end":15889,"line_start":454,"line_end":454,"column_start":3,"column_end":38}},{"value":"/ internal std exports for no_std compatibility","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":15892,"byte_end":15941,"line_start":455,"line_end":455,"column_start":3,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":26},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16171,"byte_end":16178,"line_start":463,"line_end":463,"column_start":13,"column_end":20},"name":"prelude","qualname":"::lib::std::prelude","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":27}],"decl_id":null,"docs":" internal reproduction of std prelude\n","sig":null,"attributes":[{"value":"/ internal reproduction of std prelude","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16118,"byte_end":16158,"line_start":462,"line_end":462,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":36},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":17275,"byte_end":17285,"line_start":9,"line_end":9,"column_start":11,"column_end":21},"name":"HexDisplay","qualname":"::util::HexDisplay","value":"HexDisplay","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38}],"decl_id":null,"docs":" Helper trait to show a byte slice as a hex dump\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":17130,"byte_end":17153,"line_start":6,"line_end":6,"column_start":1,"column_end":24}},{"value":"/ Helper trait to show a byte slice as a hex dump","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":17213,"byte_end":17264,"line_start":8,"line_end":8,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":17379,"byte_end":17385,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"name":"to_hex","qualname":"::util::HexDisplay::to_hex","value":"pub fn to_hex(&Self, usize) -> String","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a hex dump, returning the owned\n `String`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a hex dump, returning the owned","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":17290,"byte_end":17357,"line_start":10,"line_end":10,"column_start":3,"column_end":70}},{"value":"/ `String`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":17360,"byte_end":17373,"line_start":11,"line_end":11,"column_start":3,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":17543,"byte_end":17554,"line_start":16,"line_end":16,"column_start":6,"column_end":17},"name":"to_hex_from","qualname":"::util::HexDisplay::to_hex_from","value":"pub fn to_hex_from(&Self, usize, usize) -> String","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a hex dump beginning at `from` address, returning the owned\n `String`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a hex dump beginning at `from` address, returning the owned","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":17426,"byte_end":17521,"line_start":14,"line_end":14,"column_start":3,"column_end":98}},{"value":"/ `String`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":17524,"byte_end":17537,"line_start":15,"line_end":15,"column_start":3,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":50},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":21055,"byte_end":21062,"line_start":162,"line_end":162,"column_start":8,"column_end":15},"name":"dbg_dmp","qualname":"::util::dbg_dmp","value":"pub fn dbg_dmp<'a, F, O, E: Debug>(F, &'static str) -> /*impl Trait*/ where\nF: Fn(&'a [u8]) -> IResult<&'a [u8], O, E>","parent":null,"children":[],"decl_id":null,"docs":" Prints a message and the input if the parser fails.","sig":null,"attributes":[{"value":"/ Prints a message and the input if the parser fails.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20340,"byte_end":20395,"line_start":139,"line_end":139,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20396,"byte_end":20399,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ The message prints the `Error` or `Incomplete`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20400,"byte_end":20450,"line_start":141,"line_end":141,"column_start":1,"column_end":51}},{"value":"/ and the parser's calling code.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20451,"byte_end":20485,"line_start":142,"line_end":142,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20486,"byte_end":20489,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ It also displays the input in hexdump format","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20490,"byte_end":20538,"line_start":144,"line_end":144,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20539,"byte_end":20542,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20543,"byte_end":20554,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ use nom::{IResult, dbg_dmp, bytes::complete::tag};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20555,"byte_end":20609,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20610,"byte_end":20613,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ fn f(i: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20614,"byte_end":20659,"line_start":149,"line_end":149,"column_start":1,"column_end":46}},{"value":"/   dbg_dmp(tag(\"abcd\"), \"tag\")(i)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20660,"byte_end":20696,"line_start":150,"line_end":150,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20697,"byte_end":20702,"line_start":151,"line_end":151,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20703,"byte_end":20706,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/   let a = &b\"efghijkl\"[..];","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20707,"byte_end":20738,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20739,"byte_end":20742,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ // Will print the following message:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20743,"byte_end":20783,"line_start":155,"line_end":155,"column_start":1,"column_end":41}},{"value":"/ // Error(Position(0, [101, 102, 103, 104, 105, 106, 107, 108])) at l.5 by ' tag ! ( \"abcd\" ) '","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20784,"byte_end":20882,"line_start":156,"line_end":156,"column_start":1,"column_end":99}},{"value":"/ // 00000000        65 66 67 68 69 6a 6b 6c         efghijkl","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20883,"byte_end":20946,"line_start":157,"line_end":157,"column_start":1,"column_end":64}},{"value":"/ f(a);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20947,"byte_end":20956,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20957,"byte_end":20964,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/util.rs","byte_start":20965,"byte_end":20988,"line_start":160,"line_end":160,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":58},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":2535},{"krate":0,"index":2545},{"krate":0,"index":2539},{"krate":0,"index":2541},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":102},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":2548},{"krate":0,"index":2560},{"krate":0,"index":2557},{"krate":0,"index":2551},{"krate":0,"index":2553},{"krate":0,"index":2563},{"krate":0,"index":2579},{"krate":0,"index":2577},{"krate":0,"index":2573},{"krate":0,"index":2574},{"krate":0,"index":118},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":143},{"krate":0,"index":2581},{"krate":0,"index":2700},{"krate":0,"index":2697},{"krate":0,"index":2698},{"krate":0,"index":2694},{"krate":0,"index":2695},{"krate":0,"index":2691},{"krate":0,"index":2689},{"krate":0,"index":2688},{"krate":0,"index":2702},{"krate":0,"index":150}],"decl_id":null,"docs":" Error management","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16473,"byte_end":16485,"line_start":484,"line_end":484,"column_start":1,"column_end":13}},{"value":"/ Error management","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":22533,"byte_end":22553,"line_start":1,"line_end":1,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":22554,"byte_end":22557,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Parsers are generic over their error type, requiring that it implements","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":22558,"byte_end":22633,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ the `error::ParseError<Input>` trait.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":22634,"byte_end":22675,"line_start":4,"line_end":4,"column_start":1,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":61},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":23046,"byte_end":23056,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"name":"ParseError","qualname":"::error::ParseError","value":"ParseError<I>: Sized","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"decl_id":null,"docs":" This trait must be implemented by the error type of a nom parser.","sig":null,"attributes":[{"value":"/ This trait must be implemented by the error type of a nom parser.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":22733,"byte_end":22802,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":22803,"byte_end":22806,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ There are already implementations of it for `(Input, ErrorKind)`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":22807,"byte_end":22875,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ and `VerboseError<Input>`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":22876,"byte_end":22906,"line_start":12,"line_end":12,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":22907,"byte_end":22910,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ It provides methods to create an error from some combinators,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":22911,"byte_end":22976,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ and combine existing errors in combinators like `alt`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":22977,"byte_end":23035,"line_start":15,"line_end":15,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":23140,"byte_end":23155,"line_start":18,"line_end":18,"column_start":6,"column_end":21},"name":"from_error_kind","qualname":"::error::ParseError::from_error_kind","value":"pub fn from_error_kind(I, ErrorKind) -> Self","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Creates an error from the input position and an [ErrorKind]\n","sig":null,"attributes":[{"value":"/ Creates an error from the input position and an [ErrorKind]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":23071,"byte_end":23134,"line_start":17,"line_end":17,"column_start":3,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":23403,"byte_end":23409,"line_start":23,"line_end":23,"column_start":6,"column_end":12},"name":"append","qualname":"::error::ParseError::append","value":"pub fn append(I, ErrorKind, Self) -> Self","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Combines an existing error with a new one created from the input\n position and an [ErrorKind]. This is useful when backtracking\n through a parse tree, accumulating error context on the way\n","sig":null,"attributes":[{"value":"/ Combines an existing error with a new one created from the input","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":23195,"byte_end":23263,"line_start":20,"line_end":20,"column_start":3,"column_end":71}},{"value":"/ position and an [ErrorKind]. This is useful when backtracking","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":23266,"byte_end":23331,"line_start":21,"line_end":21,"column_start":3,"column_end":68}},{"value":"/ through a parse tree, accumulating error context on the way","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":23334,"byte_end":23397,"line_start":22,"line_end":22,"column_start":3,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":23537,"byte_end":23546,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"name":"from_char","qualname":"::error::ParseError::from_char","value":"pub fn from_char(I, char) -> Self","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Creates an error from an input position and an expected character\n","sig":null,"attributes":[{"value":"/ Creates an error from an input position and an expected character","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":23462,"byte_end":23531,"line_start":25,"line_end":25,"column_start":3,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":23757,"byte_end":23759,"line_start":32,"line_end":32,"column_start":6,"column_end":8},"name":"or","qualname":"::error::ParseError::or","value":"pub fn or(Self, Self) -> Self","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Combines two existing errors. This function is used to compare errors\n generated in various branches of [alt]\n","sig":null,"attributes":[{"value":"/ Combines two existing errors. This function is used to compare errors","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":23633,"byte_end":23706,"line_start":30,"line_end":30,"column_start":3,"column_end":76}},{"value":"/ generated in various branches of [alt]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":23709,"byte_end":23751,"line_start":31,"line_end":31,"column_start":3,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":67},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":23919,"byte_end":23931,"line_start":39,"line_end":39,"column_start":11,"column_end":23},"name":"ContextError","qualname":"::error::ContextError","value":"ContextError<I>: Sized","parent":null,"children":[{"krate":0,"index":69}],"decl_id":null,"docs":" This trait is required by the `context` combinator to add a static string\n to an existing error\n","sig":null,"attributes":[{"value":"/ This trait is required by the `context` combinator to add a static string","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":23806,"byte_end":23883,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ to an existing error","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":23884,"byte_end":23908,"line_start":38,"line_end":38,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":24181,"byte_end":24192,"line_start":43,"line_end":43,"column_start":6,"column_end":17},"name":"add_context","qualname":"::error::ContextError::add_context","value":"pub fn add_context(I, &'static str, Self) -> Self","parent":{"krate":0,"index":67},"children":[],"decl_id":null,"docs":" Creates a new error from an input position, a static string and an existing error.\n This is used mainly in the [context] combinator, to add user friendly information\n to errors when backtracking through a parse tree\n","sig":null,"attributes":[{"value":"/ Creates a new error from an input position, a static string and an existing error.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":23946,"byte_end":24032,"line_start":40,"line_end":40,"column_start":3,"column_end":89}},{"value":"/ This is used mainly in the [context] combinator, to add user friendly information","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":24035,"byte_end":24120,"line_start":41,"line_end":41,"column_start":3,"column_end":88}},{"value":"/ to errors when backtracking through a parse tree","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":24123,"byte_end":24175,"line_start":42,"line_end":42,"column_start":3,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":70},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":24408,"byte_end":24425,"line_start":50,"line_end":50,"column_start":11,"column_end":28},"name":"FromExternalError","qualname":"::error::FromExternalError","value":"FromExternalError<I, E>","parent":null,"children":[{"krate":0,"index":73}],"decl_id":null,"docs":" This trait is required by the [map_res] combinator to integrate\n error types from external functions, like [std::str::FromStr]\n","sig":null,"attributes":[{"value":"/ This trait is required by the [map_res] combinator to integrate","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":24264,"byte_end":24331,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"/ error types from external functions, like [std::str::FromStr]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":24332,"byte_end":24397,"line_start":49,"line_end":49,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":24564,"byte_end":24583,"line_start":53,"line_end":53,"column_start":6,"column_end":25},"name":"from_external_error","qualname":"::error::FromExternalError::from_external_error","value":"pub fn from_external_error(I, ErrorKind, E) -> Self","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":" Creates a new error from an input position, an [ErrorKind] indicating the\n wrapping parser, and an external error\n","sig":null,"attributes":[{"value":"/ Creates a new error from an input position, an [ErrorKind] indicating the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":24436,"byte_end":24513,"line_start":51,"line_end":51,"column_start":3,"column_end":80}},{"value":"/ wrapping parser, and an external error","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":24516,"byte_end":24558,"line_start":52,"line_end":52,"column_start":3,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":2535},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":24735,"byte_end":24740,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error { input, code }","parent":null,"children":[{"krate":0,"index":2537},{"krate":0,"index":2538}],"decl_id":null,"docs":" default error type, only contains the error' location and code\n","sig":null,"attributes":[{"value":"/ default error type, only contains the error' location and code","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":24629,"byte_end":24695,"line_start":56,"line_end":56,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":2537},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":24798,"byte_end":24803,"line_start":60,"line_end":60,"column_start":7,"column_end":12},"name":"input","qualname":"::error::Error::input","value":"I","parent":{"krate":0,"index":2535},"children":[],"decl_id":null,"docs":" position of the error in the input data\n","sig":null,"attributes":[{"value":"/ position of the error in the input data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":24748,"byte_end":24791,"line_start":59,"line_end":59,"column_start":3,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2538},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":24835,"byte_end":24839,"line_start":62,"line_end":62,"column_start":7,"column_end":11},"name":"code","qualname":"::error::Error::code","value":"error::ErrorKind","parent":{"krate":0,"index":2535},"children":[],"decl_id":null,"docs":" nom error code\n","sig":null,"attributes":[{"value":"/ nom error code","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":24810,"byte_end":24828,"line_start":61,"line_end":61,"column_start":3,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":24915,"byte_end":24918,"line_start":67,"line_end":67,"column_start":10,"column_end":13},"name":"new","qualname":"<Error<I>>::new","value":"pub fn new(I, ErrorKind) -> Error<I>","parent":null,"children":[],"decl_id":null,"docs":" creates a new basic error\n","sig":null,"attributes":[{"value":"/ creates a new basic error","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":24876,"byte_end":24905,"line_start":66,"line_end":66,"column_start":3,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":112},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":26670,"byte_end":26680,"line_start":134,"line_end":134,"column_start":8,"column_end":18},"name":"make_error","qualname":"::error::make_error","value":"pub fn make_error<I, E: ParseError<I>>(I, ErrorKind) -> E","parent":null,"children":[],"decl_id":null,"docs":" Creates an error from the input position and an [ErrorKind]\n","sig":null,"attributes":[{"value":"/ Creates an error from the input position and an [ErrorKind]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":26599,"byte_end":26662,"line_start":133,"line_end":133,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":115},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":26979,"byte_end":26991,"line_start":141,"line_end":141,"column_start":8,"column_end":20},"name":"append_error","qualname":"::error::append_error","value":"pub fn append_error<I, E: ParseError<I>>(I, ErrorKind, E) -> E","parent":null,"children":[],"decl_id":null,"docs":" Combines an existing error with a new one created from the input\n position and an [ErrorKind]. This is useful when backtracking\n through a parse tree, accumulating error context on the way\n","sig":null,"attributes":[{"value":"/ Combines an existing error with a new one created from the input","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":26773,"byte_end":26841,"line_start":138,"line_end":138,"column_start":1,"column_end":69}},{"value":"/ position and an [ErrorKind]. This is useful when backtracking","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":26842,"byte_end":26907,"line_start":139,"line_end":139,"column_start":1,"column_end":66}},{"value":"/ through a parse tree, accumulating error context on the way","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":26908,"byte_end":26971,"line_start":140,"line_end":140,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":2548},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":27437,"byte_end":27449,"line_start":151,"line_end":151,"column_start":12,"column_end":24},"name":"VerboseError","qualname":"::error::VerboseError","value":"VerboseError { errors }","parent":null,"children":[{"krate":0,"index":2550}],"decl_id":null,"docs":" This error type accumulates errors and their position when backtracking\n through a parse tree. With some post processing (cf `examples/json.rs`),\n it can be used to display user friendly error messages\n","sig":null,"attributes":[{"value":"/ This error type accumulates errors and their position when backtracking","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":27092,"byte_end":27167,"line_start":145,"line_end":145,"column_start":1,"column_end":76}},{"value":"/ through a parse tree. With some post processing (cf `examples/json.rs`),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":27168,"byte_end":27244,"line_start":146,"line_end":146,"column_start":1,"column_end":77}},{"value":"/ it can be used to display user friendly error messages","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":27245,"byte_end":27303,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":27304,"byte_end":27329,"line_start":148,"line_end":148,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2550},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":27580,"byte_end":27586,"line_start":154,"line_end":154,"column_start":7,"column_end":13},"name":"errors","qualname":"::error::VerboseError::errors","value":"std::vec::Vec<(I, error::VerboseErrorKind)>","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":" List of errors accumulated by `VerboseError`, containing the affected\n part of input data, and some context\n","sig":null,"attributes":[{"value":"/ List of errors accumulated by `VerboseError`, containing the affected","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":27457,"byte_end":27530,"line_start":152,"line_end":152,"column_start":3,"column_end":76}},{"value":"/ part of input data, and some context","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":27533,"byte_end":27573,"line_start":153,"line_end":153,"column_start":3,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2564},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":27882,"byte_end":27889,"line_start":163,"line_end":163,"column_start":3,"column_end":10},"name":"Context","qualname":"::error::VerboseErrorKind::Context","value":"VerboseErrorKind::Context(&'static str)","parent":{"krate":0,"index":2563},"children":[],"decl_id":null,"docs":" Static string added by the `context` function\n","sig":null,"attributes":[{"value":"/ Static string added by the `context` function","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":27830,"byte_end":27879,"line_start":162,"line_end":162,"column_start":3,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2567},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":27975,"byte_end":27979,"line_start":165,"line_end":165,"column_start":3,"column_end":7},"name":"Char","qualname":"::error::VerboseErrorKind::Char","value":"VerboseErrorKind::Char(char)","parent":{"krate":0,"index":2563},"children":[],"decl_id":null,"docs":" Indicates which character was expected by the `char` function\n","sig":null,"attributes":[{"value":"/ Indicates which character was expected by the `char` function","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":27907,"byte_end":27972,"line_start":164,"line_end":164,"column_start":3,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2570},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":28035,"byte_end":28038,"line_start":167,"line_end":167,"column_start":3,"column_end":6},"name":"Nom","qualname":"::error::VerboseErrorKind::Nom","value":"VerboseErrorKind::Nom(ErrorKind)","parent":{"krate":0,"index":2563},"children":[],"decl_id":null,"docs":" Error kind given by various nom parsers\n","sig":null,"attributes":[{"value":"/ Error kind given by various nom parsers","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":27989,"byte_end":28032,"line_start":166,"line_end":166,"column_start":3,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":2563},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":27809,"byte_end":27825,"line_start":161,"line_end":161,"column_start":10,"column_end":26},"name":"VerboseErrorKind","qualname":"::error::VerboseErrorKind","value":"pub enum VerboseErrorKind {\n\n    /// Static string added by the `context` function\n    Context(&'static str),\n\n    /// Indicates which character was expected by the `char` function\n    Char(char),\n\n    /// Error kind given by various nom parsers\n    Nom(ErrorKind),\n}","parent":null,"children":[{"krate":0,"index":2564},{"krate":0,"index":2567},{"krate":0,"index":2570}],"decl_id":null,"docs":" Error context for `VerboseError`\n","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":27641,"byte_end":27666,"line_start":157,"line_end":157,"column_start":1,"column_end":26}},{"value":"/ Error context for `VerboseError`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":27763,"byte_end":27799,"line_start":160,"line_end":160,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":136},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":30014,"byte_end":30021,"line_start":230,"line_end":230,"column_start":8,"column_end":15},"name":"context","qualname":"::error::context","value":"pub fn context<I: Clone, E: ContextError<I>, F, O>(&'static str, F)\n-> /*impl Trait*/ where F: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Create a new error from an input position, a static string and an existing error.\n This is used mainly in the [context] combinator, to add user friendly information\n to errors when backtracking through a parse tree\n","sig":null,"attributes":[{"value":"/ Create a new error from an input position, a static string and an existing error.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":29782,"byte_end":29867,"line_start":227,"line_end":227,"column_start":1,"column_end":86}},{"value":"/ This is used mainly in the [context] combinator, to add user friendly information","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":29868,"byte_end":29953,"line_start":228,"line_end":228,"column_start":1,"column_end":86}},{"value":"/ to errors when backtracking through a parse tree","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":29954,"byte_end":30006,"line_start":229,"line_end":229,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":143},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":30612,"byte_end":30625,"line_start":248,"line_end":248,"column_start":8,"column_end":21},"name":"convert_error","qualname":"::error::convert_error","value":"pub fn convert_error<I: core::ops::Deref<Target = str>>(I, VerboseError<I>)\n-> crate::lib::std::string::String","parent":null,"children":[],"decl_id":null,"docs":" Transforms a `VerboseError` into a trace with input position information\n","sig":null,"attributes":[{"value":"/ Transforms a `VerboseError` into a trace with input position information","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":30441,"byte_end":30517,"line_start":245,"line_end":245,"column_start":1,"column_end":77}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":30518,"byte_end":30543,"line_start":246,"line_end":246,"column_start":1,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2582},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34144,"byte_end":34147,"line_start":364,"line_end":364,"column_start":3,"column_end":6},"name":"Tag","qualname":"::error::ErrorKind::Tag","value":"ErrorKind::Tag","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2584},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34151,"byte_end":34157,"line_start":365,"line_end":365,"column_start":3,"column_end":9},"name":"MapRes","qualname":"::error::ErrorKind::MapRes","value":"ErrorKind::MapRes","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2586},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34161,"byte_end":34167,"line_start":366,"line_end":366,"column_start":3,"column_end":9},"name":"MapOpt","qualname":"::error::ErrorKind::MapOpt","value":"ErrorKind::MapOpt","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2588},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34171,"byte_end":34174,"line_start":367,"line_end":367,"column_start":3,"column_end":6},"name":"Alt","qualname":"::error::ErrorKind::Alt","value":"ErrorKind::Alt","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2590},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34178,"byte_end":34183,"line_start":368,"line_end":368,"column_start":3,"column_end":8},"name":"IsNot","qualname":"::error::ErrorKind::IsNot","value":"ErrorKind::IsNot","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2592},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34187,"byte_end":34190,"line_start":369,"line_end":369,"column_start":3,"column_end":6},"name":"IsA","qualname":"::error::ErrorKind::IsA","value":"ErrorKind::IsA","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2594},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34194,"byte_end":34207,"line_start":370,"line_end":370,"column_start":3,"column_end":16},"name":"SeparatedList","qualname":"::error::ErrorKind::SeparatedList","value":"ErrorKind::SeparatedList","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2596},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34211,"byte_end":34232,"line_start":371,"line_end":371,"column_start":3,"column_end":24},"name":"SeparatedNonEmptyList","qualname":"::error::ErrorKind::SeparatedNonEmptyList","value":"ErrorKind::SeparatedNonEmptyList","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2598},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34236,"byte_end":34241,"line_start":372,"line_end":372,"column_start":3,"column_end":8},"name":"Many0","qualname":"::error::ErrorKind::Many0","value":"ErrorKind::Many0","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2600},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34245,"byte_end":34250,"line_start":373,"line_end":373,"column_start":3,"column_end":8},"name":"Many1","qualname":"::error::ErrorKind::Many1","value":"ErrorKind::Many1","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2602},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34254,"byte_end":34262,"line_start":374,"line_end":374,"column_start":3,"column_end":11},"name":"ManyTill","qualname":"::error::ErrorKind::ManyTill","value":"ErrorKind::ManyTill","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2604},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34266,"byte_end":34271,"line_start":375,"line_end":375,"column_start":3,"column_end":8},"name":"Count","qualname":"::error::ErrorKind::Count","value":"ErrorKind::Count","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2606},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34275,"byte_end":34284,"line_start":376,"line_end":376,"column_start":3,"column_end":12},"name":"TakeUntil","qualname":"::error::ErrorKind::TakeUntil","value":"ErrorKind::TakeUntil","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2608},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34288,"byte_end":34299,"line_start":377,"line_end":377,"column_start":3,"column_end":14},"name":"LengthValue","qualname":"::error::ErrorKind::LengthValue","value":"ErrorKind::LengthValue","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2610},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34303,"byte_end":34313,"line_start":378,"line_end":378,"column_start":3,"column_end":13},"name":"TagClosure","qualname":"::error::ErrorKind::TagClosure","value":"ErrorKind::TagClosure","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2612},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34317,"byte_end":34322,"line_start":379,"line_end":379,"column_start":3,"column_end":8},"name":"Alpha","qualname":"::error::ErrorKind::Alpha","value":"ErrorKind::Alpha","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2614},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34326,"byte_end":34331,"line_start":380,"line_end":380,"column_start":3,"column_end":8},"name":"Digit","qualname":"::error::ErrorKind::Digit","value":"ErrorKind::Digit","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2616},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34335,"byte_end":34343,"line_start":381,"line_end":381,"column_start":3,"column_end":11},"name":"HexDigit","qualname":"::error::ErrorKind::HexDigit","value":"ErrorKind::HexDigit","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2618},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34347,"byte_end":34355,"line_start":382,"line_end":382,"column_start":3,"column_end":11},"name":"OctDigit","qualname":"::error::ErrorKind::OctDigit","value":"ErrorKind::OctDigit","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2620},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34359,"byte_end":34371,"line_start":383,"line_end":383,"column_start":3,"column_end":15},"name":"AlphaNumeric","qualname":"::error::ErrorKind::AlphaNumeric","value":"ErrorKind::AlphaNumeric","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2622},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34375,"byte_end":34380,"line_start":384,"line_end":384,"column_start":3,"column_end":8},"name":"Space","qualname":"::error::ErrorKind::Space","value":"ErrorKind::Space","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2624},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34384,"byte_end":34394,"line_start":385,"line_end":385,"column_start":3,"column_end":13},"name":"MultiSpace","qualname":"::error::ErrorKind::MultiSpace","value":"ErrorKind::MultiSpace","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2626},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34398,"byte_end":34411,"line_start":386,"line_end":386,"column_start":3,"column_end":16},"name":"LengthValueFn","qualname":"::error::ErrorKind::LengthValueFn","value":"ErrorKind::LengthValueFn","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2628},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34415,"byte_end":34418,"line_start":387,"line_end":387,"column_start":3,"column_end":6},"name":"Eof","qualname":"::error::ErrorKind::Eof","value":"ErrorKind::Eof","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2630},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34422,"byte_end":34428,"line_start":388,"line_end":388,"column_start":3,"column_end":9},"name":"Switch","qualname":"::error::ErrorKind::Switch","value":"ErrorKind::Switch","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2632},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34432,"byte_end":34439,"line_start":389,"line_end":389,"column_start":3,"column_end":10},"name":"TagBits","qualname":"::error::ErrorKind::TagBits","value":"ErrorKind::TagBits","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2634},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34443,"byte_end":34448,"line_start":390,"line_end":390,"column_start":3,"column_end":8},"name":"OneOf","qualname":"::error::ErrorKind::OneOf","value":"ErrorKind::OneOf","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2636},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34452,"byte_end":34458,"line_start":391,"line_end":391,"column_start":3,"column_end":9},"name":"NoneOf","qualname":"::error::ErrorKind::NoneOf","value":"ErrorKind::NoneOf","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2638},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34462,"byte_end":34466,"line_start":392,"line_end":392,"column_start":3,"column_end":7},"name":"Char","qualname":"::error::ErrorKind::Char","value":"ErrorKind::Char","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2640},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34470,"byte_end":34474,"line_start":393,"line_end":393,"column_start":3,"column_end":7},"name":"CrLf","qualname":"::error::ErrorKind::CrLf","value":"ErrorKind::CrLf","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2642},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34478,"byte_end":34489,"line_start":394,"line_end":394,"column_start":3,"column_end":14},"name":"RegexpMatch","qualname":"::error::ErrorKind::RegexpMatch","value":"ErrorKind::RegexpMatch","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2644},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34493,"byte_end":34506,"line_start":395,"line_end":395,"column_start":3,"column_end":16},"name":"RegexpMatches","qualname":"::error::ErrorKind::RegexpMatches","value":"ErrorKind::RegexpMatches","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2646},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34510,"byte_end":34520,"line_start":396,"line_end":396,"column_start":3,"column_end":13},"name":"RegexpFind","qualname":"::error::ErrorKind::RegexpFind","value":"ErrorKind::RegexpFind","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2648},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34524,"byte_end":34537,"line_start":397,"line_end":397,"column_start":3,"column_end":16},"name":"RegexpCapture","qualname":"::error::ErrorKind::RegexpCapture","value":"ErrorKind::RegexpCapture","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2650},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34541,"byte_end":34555,"line_start":398,"line_end":398,"column_start":3,"column_end":17},"name":"RegexpCaptures","qualname":"::error::ErrorKind::RegexpCaptures","value":"ErrorKind::RegexpCaptures","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2652},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34559,"byte_end":34569,"line_start":399,"line_end":399,"column_start":3,"column_end":13},"name":"TakeWhile1","qualname":"::error::ErrorKind::TakeWhile1","value":"ErrorKind::TakeWhile1","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2654},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34573,"byte_end":34581,"line_start":400,"line_end":400,"column_start":3,"column_end":11},"name":"Complete","qualname":"::error::ErrorKind::Complete","value":"ErrorKind::Complete","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2656},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34585,"byte_end":34588,"line_start":401,"line_end":401,"column_start":3,"column_end":6},"name":"Fix","qualname":"::error::ErrorKind::Fix","value":"ErrorKind::Fix","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2658},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34592,"byte_end":34599,"line_start":402,"line_end":402,"column_start":3,"column_end":10},"name":"Escaped","qualname":"::error::ErrorKind::Escaped","value":"ErrorKind::Escaped","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2660},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34603,"byte_end":34619,"line_start":403,"line_end":403,"column_start":3,"column_end":19},"name":"EscapedTransform","qualname":"::error::ErrorKind::EscapedTransform","value":"ErrorKind::EscapedTransform","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2662},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34623,"byte_end":34631,"line_start":404,"line_end":404,"column_start":3,"column_end":11},"name":"NonEmpty","qualname":"::error::ErrorKind::NonEmpty","value":"ErrorKind::NonEmpty","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2664},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34635,"byte_end":34641,"line_start":405,"line_end":405,"column_start":3,"column_end":9},"name":"ManyMN","qualname":"::error::ErrorKind::ManyMN","value":"ErrorKind::ManyMN","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2666},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34645,"byte_end":34648,"line_start":406,"line_end":406,"column_start":3,"column_end":6},"name":"Not","qualname":"::error::ErrorKind::Not","value":"ErrorKind::Not","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2668},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34652,"byte_end":34663,"line_start":407,"line_end":407,"column_start":3,"column_end":14},"name":"Permutation","qualname":"::error::ErrorKind::Permutation","value":"ErrorKind::Permutation","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2670},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34667,"byte_end":34673,"line_start":408,"line_end":408,"column_start":3,"column_end":9},"name":"Verify","qualname":"::error::ErrorKind::Verify","value":"ErrorKind::Verify","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2672},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34677,"byte_end":34686,"line_start":409,"line_end":409,"column_start":3,"column_end":12},"name":"TakeTill1","qualname":"::error::ErrorKind::TakeTill1","value":"ErrorKind::TakeTill1","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2674},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34690,"byte_end":34701,"line_start":410,"line_end":410,"column_start":3,"column_end":14},"name":"TakeWhileMN","qualname":"::error::ErrorKind::TakeWhileMN","value":"ErrorKind::TakeWhileMN","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2676},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34705,"byte_end":34712,"line_start":411,"line_end":411,"column_start":3,"column_end":10},"name":"ParseTo","qualname":"::error::ErrorKind::ParseTo","value":"ErrorKind::ParseTo","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2678},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34716,"byte_end":34724,"line_start":412,"line_end":412,"column_start":3,"column_end":11},"name":"TooLarge","qualname":"::error::ErrorKind::TooLarge","value":"ErrorKind::TooLarge","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2680},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34728,"byte_end":34738,"line_start":413,"line_end":413,"column_start":3,"column_end":13},"name":"Many0Count","qualname":"::error::ErrorKind::Many0Count","value":"ErrorKind::Many0Count","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2682},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34742,"byte_end":34752,"line_start":414,"line_end":414,"column_start":3,"column_end":13},"name":"Many1Count","qualname":"::error::ErrorKind::Many1Count","value":"ErrorKind::Many1Count","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2684},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34756,"byte_end":34761,"line_start":415,"line_end":415,"column_start":3,"column_end":8},"name":"Float","qualname":"::error::ErrorKind::Float","value":"ErrorKind::Float","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2686},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34765,"byte_end":34772,"line_start":416,"line_end":416,"column_start":3,"column_end":10},"name":"Satisfy","qualname":"::error::ErrorKind::Satisfy","value":"ErrorKind::Satisfy","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2581},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34130,"byte_end":34139,"line_start":363,"line_end":363,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"pub enum ErrorKind {\n    Tag,\n    MapRes,\n    MapOpt,\n    Alt,\n    IsNot,\n    IsA,\n    SeparatedList,\n    SeparatedNonEmptyList,\n    Many0,\n    Many1,\n    ManyTill,\n    Count,\n    TakeUntil,\n    LengthValue,\n    TagClosure,\n    Alpha,\n    Digit,\n    HexDigit,\n    OctDigit,\n    AlphaNumeric,\n    Space,\n    MultiSpace,\n    LengthValueFn,\n    Eof,\n    Switch,\n    TagBits,\n    OneOf,\n    NoneOf,\n    Char,\n    CrLf,\n    RegexpMatch,\n    RegexpMatches,\n    RegexpFind,\n    RegexpCapture,\n    RegexpCaptures,\n    TakeWhile1,\n    Complete,\n    Fix,\n    Escaped,\n    EscapedTransform,\n    NonEmpty,\n    ManyMN,\n    Not,\n    Permutation,\n    Verify,\n    TakeTill1,\n    TakeWhileMN,\n    ParseTo,\n    TooLarge,\n    Many0Count,\n    Many1Count,\n    Float,\n    Satisfy,\n}","parent":null,"children":[{"krate":0,"index":2582},{"krate":0,"index":2584},{"krate":0,"index":2586},{"krate":0,"index":2588},{"krate":0,"index":2590},{"krate":0,"index":2592},{"krate":0,"index":2594},{"krate":0,"index":2596},{"krate":0,"index":2598},{"krate":0,"index":2600},{"krate":0,"index":2602},{"krate":0,"index":2604},{"krate":0,"index":2606},{"krate":0,"index":2608},{"krate":0,"index":2610},{"krate":0,"index":2612},{"krate":0,"index":2614},{"krate":0,"index":2616},{"krate":0,"index":2618},{"krate":0,"index":2620},{"krate":0,"index":2622},{"krate":0,"index":2624},{"krate":0,"index":2626},{"krate":0,"index":2628},{"krate":0,"index":2630},{"krate":0,"index":2632},{"krate":0,"index":2634},{"krate":0,"index":2636},{"krate":0,"index":2638},{"krate":0,"index":2640},{"krate":0,"index":2642},{"krate":0,"index":2644},{"krate":0,"index":2646},{"krate":0,"index":2648},{"krate":0,"index":2650},{"krate":0,"index":2652},{"krate":0,"index":2654},{"krate":0,"index":2656},{"krate":0,"index":2658},{"krate":0,"index":2660},{"krate":0,"index":2662},{"krate":0,"index":2664},{"krate":0,"index":2666},{"krate":0,"index":2668},{"krate":0,"index":2670},{"krate":0,"index":2672},{"krate":0,"index":2674},{"krate":0,"index":2676},{"krate":0,"index":2678},{"krate":0,"index":2680},{"krate":0,"index":2682},{"krate":0,"index":2684},{"krate":0,"index":2686}],"decl_id":null,"docs":" Indicates which parser returned an error\n","sig":null,"attributes":[{"value":"/ Indicates which parser returned an error","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":33979,"byte_end":34023,"line_start":359,"line_end":359,"column_start":1,"column_end":45}},{"value":"allow(deprecated, missing_docs)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34087,"byte_end":34120,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"rustfmt::skip","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34024,"byte_end":34040,"line_start":360,"line_end":360,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":2702},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34860,"byte_end":34872,"line_start":422,"line_end":422,"column_start":8,"column_end":20},"name":"error_to_u32","qualname":"::error::error_to_u32","value":"pub fn error_to_u32(&ErrorKind) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Converts an ErrorKind to a number\n","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34794,"byte_end":34814,"line_start":420,"line_end":420,"column_start":1,"column_end":21}},{"value":"/ Converts an ErrorKind to a number","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34815,"byte_end":34852,"line_start":421,"line_end":421,"column_start":1,"column_end":38}},{"value":"rustfmt::skip","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":34777,"byte_end":34793,"line_start":419,"line_end":419,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2703},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":37570,"byte_end":37581,"line_start":484,"line_end":484,"column_start":10,"column_end":21},"name":"description","qualname":"<ErrorKind>::description","value":"pub fn description(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Converts an ErrorKind to a text description\n","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":37490,"byte_end":37510,"line_start":482,"line_end":482,"column_start":3,"column_end":23}},{"value":"/ Converts an ErrorKind to a text description","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":37513,"byte_end":37560,"line_start":483,"line_end":483,"column_start":3,"column_end":50}},{"value":"rustfmt::skip","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":37471,"byte_end":37487,"line_start":481,"line_end":481,"column_start":3,"column_end":19}}]},{"kind":"Type","id":{"krate":0,"index":162},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":50797,"byte_end":50804,"line_start":18,"line_end":18,"column_start":10,"column_end":17},"name":"IResult","qualname":"::internal::IResult","value":"Result<(I, O), Err<E>>","parent":null,"children":[],"decl_id":null,"docs":" Holds the result of parsing functions","sig":null,"attributes":[{"value":"/ Holds the result of parsing functions","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":50305,"byte_end":50346,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":50347,"byte_end":50350,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ It depends on the input type `I`, the output type `O`, and the error type `E`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":50351,"byte_end":50432,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ (by default `(I, nom::ErrorKind)`)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":50433,"byte_end":50471,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":50472,"byte_end":50475,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The `Ok` side is a pair containing the remainder of the input (the part of the data that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":50476,"byte_end":50568,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/ was not parsed) and the produced value. The `Err` side contains an instance of `nom::Err`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":50569,"byte_end":50663,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":50664,"byte_end":50667,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Outside of the parsing code, you can use the [Finish::finish] method to convert","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":50668,"byte_end":50751,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/ it to a more common result type","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":50752,"byte_end":50787,"line_start":17,"line_end":17,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":166},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":50941,"byte_end":50947,"line_start":21,"line_end":21,"column_start":11,"column_end":17},"name":"Finish","qualname":"::internal::Finish","value":"Finish<I, O, E>","parent":null,"children":[{"krate":0,"index":170}],"decl_id":null,"docs":" Helper trait to convert a parser's result to a more manageable type\n","sig":null,"attributes":[{"value":"/ Helper trait to convert a parser's result to a more manageable type","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":50859,"byte_end":50930,"line_start":20,"line_end":20,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":51693,"byte_end":51699,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"name":"finish","qualname":"::internal::Finish::finish","value":"pub fn finish(Self) -> Result<(I, O), E>","parent":{"krate":0,"index":166},"children":[],"decl_id":null,"docs":" converts the parser's result to a type that is more consumable by error\n management libraries. It keeps the same `Ok` branch, and merges `Err::Error`\n and `Err::Failure` into the `Err` side.","sig":null,"attributes":[{"value":"/ converts the parser's result to a type that is more consumable by error","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":50961,"byte_end":51036,"line_start":22,"line_end":22,"column_start":3,"column_end":78}},{"value":"/ management libraries. It keeps the same `Ok` branch, and merges `Err::Error`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":51039,"byte_end":51119,"line_start":23,"line_end":23,"column_start":3,"column_end":83}},{"value":"/ and `Err::Failure` into the `Err` side.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":51122,"byte_end":51165,"line_start":24,"line_end":24,"column_start":3,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":51168,"byte_end":51171,"line_start":25,"line_end":25,"column_start":3,"column_end":6}},{"value":"/ *warning*: if the result is `Err(Err::Incomplete(_))`, this method will panic.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":51174,"byte_end":51256,"line_start":26,"line_end":26,"column_start":3,"column_end":85}},{"value":"/ - \"complete\" parsers: It will not be an issue, `Incomplete` is never used","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":51259,"byte_end":51336,"line_start":27,"line_end":27,"column_start":3,"column_end":80}},{"value":"/ - \"streaming\" parsers: `Incomplete` will be returned if there's not enough data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":51339,"byte_end":51422,"line_start":28,"line_end":28,"column_start":3,"column_end":86}},{"value":"/ for the parser to decide, and you should gather more data before parsing again.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":51425,"byte_end":51508,"line_start":29,"line_end":29,"column_start":3,"column_end":86}},{"value":"/ Once the parser returns either `Ok(_)`, `Err(Err::Error(_))` or `Err(Err::Failure(_))`,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":51511,"byte_end":51602,"line_start":30,"line_end":30,"column_start":3,"column_end":94}},{"value":"/ you can get out of the parsing loop and call `finish()` on the parser's result","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":51605,"byte_end":51687,"line_start":31,"line_end":31,"column_start":3,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2705},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":52418,"byte_end":52425,"line_start":52,"line_end":52,"column_start":3,"column_end":10},"name":"Unknown","qualname":"::internal::Needed::Unknown","value":"Needed::Unknown","parent":{"krate":0,"index":2704},"children":[],"decl_id":null,"docs":" Needs more data, but we do not know how much\n","sig":null,"attributes":[{"value":"/ Needs more data, but we do not know how much","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":52367,"byte_end":52415,"line_start":51,"line_end":51,"column_start":3,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2707},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":52476,"byte_end":52480,"line_start":54,"line_end":54,"column_start":3,"column_end":7},"name":"Size","qualname":"::internal::Needed::Size","value":"Needed::Size(NonZeroUsize)","parent":{"krate":0,"index":2704},"children":[],"decl_id":null,"docs":" Contains the required data size in bytes\n","sig":null,"attributes":[{"value":"/ Contains the required data size in bytes","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":52429,"byte_end":52473,"line_start":53,"line_end":53,"column_start":3,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":2704},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":52356,"byte_end":52362,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Needed","qualname":"::internal::Needed","value":"pub enum Needed {\n\n    /// Needs more data, but we do not know how much\n    Unknown,\n\n    /// Contains the required data size in bytes\n    Size(NonZeroUsize),\n}","parent":null,"children":[{"krate":0,"index":2705},{"krate":0,"index":2707}],"decl_id":null,"docs":" Contains information on needed data if a parser returned `Incomplete`\n","sig":null,"attributes":[{"value":"/ Contains information on needed data if a parser returned `Incomplete`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":52192,"byte_end":52265,"line_start":47,"line_end":47,"column_start":1,"column_end":74}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":52311,"byte_end":52346,"line_start":49,"line_end":49,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":52605,"byte_end":52608,"line_start":59,"line_end":59,"column_start":10,"column_end":13},"name":"new","qualname":"<Needed>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates `Needed` instance, returns `Needed::Unknown` if the argument is zero\n","sig":null,"attributes":[{"value":"/ Creates `Needed` instance, returns `Needed::Unknown` if the argument is zero","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":52515,"byte_end":52595,"line_start":58,"line_end":58,"column_start":3,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":52799,"byte_end":52807,"line_start":67,"line_end":67,"column_start":10,"column_end":18},"name":"is_known","qualname":"<Needed>::is_known","value":"pub fn is_known(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if we know how many bytes we need\n","sig":null,"attributes":[{"value":"/ Indicates if we know how many bytes we need","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":52742,"byte_end":52789,"line_start":66,"line_end":66,"column_start":3,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":52958,"byte_end":52961,"line_start":73,"line_end":73,"column_start":10,"column_end":13},"name":"map","qualname":"<Needed>::map","value":"pub fn map<F: Fn(NonZeroUsize) -> usize>(Self, F) -> Needed","parent":null,"children":[],"decl_id":null,"docs":" Maps a `Needed` to `Needed` by applying a function to a contained `Size` value.\n","sig":null,"attributes":[{"value":"/ Maps a `Needed` to `Needed` by applying a function to a contained `Size` value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":52853,"byte_end":52936,"line_start":71,"line_end":71,"column_start":3,"column_end":86}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":52939,"byte_end":52948,"line_start":72,"line_end":72,"column_start":3,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2724},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":54033,"byte_end":54043,"line_start":99,"line_end":99,"column_start":3,"column_end":13},"name":"Incomplete","qualname":"::internal::Err::Incomplete","value":"Err::Incomplete(Needed)","parent":{"krate":0,"index":2722},"children":[],"decl_id":null,"docs":" There was not enough data\n","sig":null,"attributes":[{"value":"/ There was not enough data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":54001,"byte_end":54030,"line_start":98,"line_end":98,"column_start":3,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2727},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":54099,"byte_end":54104,"line_start":101,"line_end":101,"column_start":3,"column_end":8},"name":"Error","qualname":"::internal::Err::Error","value":"Err::Error(E)","parent":{"krate":0,"index":2722},"children":[],"decl_id":null,"docs":" The parser had an error (recoverable)\n","sig":null,"attributes":[{"value":"/ The parser had an error (recoverable)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":54055,"byte_end":54096,"line_start":100,"line_end":100,"column_start":3,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2730},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":54267,"byte_end":54274,"line_start":105,"line_end":105,"column_start":3,"column_end":10},"name":"Failure","qualname":"::internal::Err::Failure","value":"Err::Failure(E)","parent":{"krate":0,"index":2722},"children":[],"decl_id":null,"docs":" The parser had an unrecoverable error: we got to the right\n branch and we know other branches won't work, so backtrack\n as fast as possible\n","sig":null,"attributes":[{"value":"/ The parser had an unrecoverable error: we got to the right","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":54111,"byte_end":54173,"line_start":102,"line_end":102,"column_start":3,"column_end":65}},{"value":"/ branch and we know other branches won't work, so backtrack","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":54176,"byte_end":54238,"line_start":103,"line_end":103,"column_start":3,"column_end":65}},{"value":"/ as fast as possible","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":54241,"byte_end":54264,"line_start":104,"line_end":104,"column_start":3,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":2722},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":53990,"byte_end":53993,"line_start":97,"line_end":97,"column_start":10,"column_end":13},"name":"Err","qualname":"::internal::Err","value":"pub enum Err<E> {\n\n    /// There was not enough data\n    Incomplete(Needed),\n\n    /// The parser had an error (recoverable)\n    Error(E),\n\n    /// The parser had an unrecoverable error: we got to the right\n    /// branch and we know other branches won't work, so backtrack\n    /// as fast as possible\n    Failure(E),\n}","parent":null,"children":[{"krate":0,"index":2724},{"krate":0,"index":2727},{"krate":0,"index":2730}],"decl_id":null,"docs":" The `Err` enum indicates the parser was not successful","sig":null,"attributes":[{"value":"/ The `Err` enum indicates the parser was not successful","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":53108,"byte_end":53166,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":53167,"byte_end":53170,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ It has three cases:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":53171,"byte_end":53194,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":53195,"byte_end":53198,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ * `Incomplete` indicates that more data is needed to decide. The `Needed` enum","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":53199,"byte_end":53281,"line_start":85,"line_end":85,"column_start":1,"column_end":83}},{"value":"/ can contain how many additional bytes are necessary. If you are sure your parser","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":53282,"byte_end":53366,"line_start":86,"line_end":86,"column_start":1,"column_end":85}},{"value":"/ is working on full data, you can wrap your parser with the `complete` combinator","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":53367,"byte_end":53451,"line_start":87,"line_end":87,"column_start":1,"column_end":85}},{"value":"/ to transform that case in `Error`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":53452,"byte_end":53489,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/ * `Error` means some parser did not succeed, but another one might (as an example,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":53490,"byte_end":53576,"line_start":89,"line_end":89,"column_start":1,"column_end":87}},{"value":"/ when testing different branches of an `alt` combinator)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":53577,"byte_end":53636,"line_start":90,"line_end":90,"column_start":1,"column_end":60}},{"value":"/ * `Failure` indicates an unrecoverable error. As an example, if you recognize a prefix","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":53637,"byte_end":53727,"line_start":91,"line_end":91,"column_start":1,"column_end":91}},{"value":"/ to decide on the next parser to apply, and that parser fails, you know there's no need","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":53728,"byte_end":53818,"line_start":92,"line_end":92,"column_start":1,"column_end":91}},{"value":"/ to try other parsers, you were already in the right branch, so the data is invalid","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":53819,"byte_end":53905,"line_start":93,"line_end":93,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":53906,"byte_end":53909,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":53945,"byte_end":53980,"line_start":96,"line_end":96,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":54348,"byte_end":54361,"line_start":110,"line_end":110,"column_start":10,"column_end":23},"name":"is_incomplete","qualname":"<Err<E>>::is_incomplete","value":"pub fn is_incomplete(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if the result is Incomplete\n","sig":null,"attributes":[{"value":"/ Tests if the result is Incomplete","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":54301,"byte_end":54338,"line_start":109,"line_end":109,"column_start":3,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":54526,"byte_end":54529,"line_start":119,"line_end":119,"column_start":10,"column_end":13},"name":"map","qualname":"<Err<E>>::map","value":"pub fn map<E2, F>(Self, F) -> Err<E2> where F: FnOnce(E) -> E2","parent":null,"children":[],"decl_id":null,"docs":" Applies the given function to the inner error\n","sig":null,"attributes":[{"value":"/ Applies the given function to the inner error","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":54467,"byte_end":54516,"line_start":118,"line_end":118,"column_start":3,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":54846,"byte_end":54853,"line_start":131,"line_end":131,"column_start":10,"column_end":17},"name":"convert","qualname":"<Err<E>>::convert","value":"pub fn convert<F>(Err<F>) -> Self where E: From<F>","parent":null,"children":[],"decl_id":null,"docs":" Automatically converts between errors if the underlying type supports it\n","sig":null,"attributes":[{"value":"/ Automatically converts between errors if the underlying type supports it","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":54760,"byte_end":54836,"line_start":130,"line_end":130,"column_start":3,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":55083,"byte_end":55092,"line_start":141,"line_end":141,"column_start":10,"column_end":19},"name":"map_input","qualname":"<Err<(T, ErrorKind)>>::map_input","value":"pub fn map_input<U, F>(Self, F) -> Err<(U, ErrorKind)> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":" Maps `Err<(T, ErrorKind)>` to `Err<(U, ErrorKind)>` with the given `F: T -> U`\n","sig":null,"attributes":[{"value":"/ Maps `Err<(T, ErrorKind)>` to `Err<(U, ErrorKind)>` with the given `F: T -> U`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":54991,"byte_end":55073,"line_start":140,"line_end":140,"column_start":3,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":55616,"byte_end":55624,"line_start":159,"line_end":159,"column_start":10,"column_end":18},"name":"to_owned","qualname":"<Err<(&'_ [u8], ErrorKind)>>::to_owned","value":"pub fn to_owned(Self) -> Err<(Vec<u8>, ErrorKind)>","parent":null,"children":[],"decl_id":null,"docs":" Obtaining ownership\n","sig":null,"attributes":[{"value":"/ Obtaining ownership","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":55520,"byte_end":55543,"line_start":157,"line_end":157,"column_start":3,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":55914,"byte_end":55922,"line_start":168,"line_end":168,"column_start":10,"column_end":18},"name":"to_owned","qualname":"<Err<(&'_ str, ErrorKind)>>::to_owned","value":"pub fn to_owned(Self) -> Err<(String, ErrorKind)>","parent":null,"children":[],"decl_id":null,"docs":" Automatically converts between errors if the underlying type supports it\n","sig":null,"attributes":[{"value":"/ Automatically converts between errors if the underlying type supports it","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":55765,"byte_end":55841,"line_start":166,"line_end":166,"column_start":3,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":211},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":56743,"byte_end":56749,"line_start":203,"line_end":203,"column_start":11,"column_end":17},"name":"Parser","qualname":"::internal::Parser","value":"Parser<I, O, E>","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":231}],"decl_id":null,"docs":" All nom parsers implement this trait\n","sig":null,"attributes":[{"value":"/ All nom parsers implement this trait","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":56692,"byte_end":56732,"line_start":202,"line_end":202,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":56903,"byte_end":56908,"line_start":206,"line_end":206,"column_start":6,"column_end":11},"name":"parse","qualname":"::internal::Parser::parse","value":"pub fn parse(&mut Self, I) -> IResult<I, O, E>","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" A parser takes in input type, and returns a `Result` containing\n either the remaining input and the output value, or an error\n","sig":null,"attributes":[{"value":"/ A parser takes in input type, and returns a `Result` containing","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":56763,"byte_end":56830,"line_start":204,"line_end":204,"column_start":3,"column_end":70}},{"value":"/ either the remaining input and the output value, or an error","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":56833,"byte_end":56897,"line_start":205,"line_end":205,"column_start":3,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":57007,"byte_end":57010,"line_start":209,"line_end":209,"column_start":6,"column_end":9},"name":"map","qualname":"::internal::Parser::map","value":"pub fn map<G, O2>(Self, G) -> Map<Self, G, O> where G: Fn(O) -> O2,\nSelf: core::marker::Sized","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Maps a function over the result of a parser\n","sig":null,"attributes":[{"value":"/ Maps a function over the result of a parser","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":56954,"byte_end":57001,"line_start":208,"line_end":208,"column_start":3,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":57306,"byte_end":57314,"line_start":222,"line_end":222,"column_start":6,"column_end":14},"name":"flat_map","qualname":"::internal::Parser::flat_map","value":"pub fn flat_map<G, H, O2>(Self, G) -> FlatMap<Self, G, O> where G: Fn(O) -> H,\nH: Parser<I, O2, E>, Self: core::marker::Sized","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Creates a second parser from the output of the first one, then apply over the rest of the input\n","sig":null,"attributes":[{"value":"/ Creates a second parser from the output of the first one, then apply over the rest of the input","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":57201,"byte_end":57300,"line_start":221,"line_end":221,"column_start":3,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":57606,"byte_end":57614,"line_start":236,"line_end":236,"column_start":6,"column_end":14},"name":"and_then","qualname":"::internal::Parser::and_then","value":"pub fn and_then<G, O2>(Self, G) -> AndThen<Self, G, O> where\nG: Parser<O, O2, E>, Self: core::marker::Sized","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Applies a second parser over the output of the first one\n","sig":null,"attributes":[{"value":"/ Applies a second parser over the output of the first one","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":57540,"byte_end":57600,"line_start":235,"line_end":235,"column_start":3,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":57904,"byte_end":57907,"line_start":249,"line_end":249,"column_start":6,"column_end":9},"name":"and","qualname":"::internal::Parser::and","value":"pub fn and<G, O2>(Self, G) -> And<Self, G> where G: Parser<I, O2, E>,\nSelf: core::marker::Sized","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Applies a second parser after the first one, return their results as a tuple\n","sig":null,"attributes":[{"value":"/ Applies a second parser after the first one, return their results as a tuple","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":57818,"byte_end":57898,"line_start":248,"line_end":248,"column_start":3,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":58113,"byte_end":58115,"line_start":258,"line_end":258,"column_start":6,"column_end":8},"name":"or","qualname":"::internal::Parser::or","value":"pub fn or<G>(Self, G) -> Or<Self, G> where G: Parser<I, O, E>,\nSelf: core::marker::Sized","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Applies a second parser over the input if the first one failed\n","sig":null,"attributes":[{"value":"/ Applies a second parser over the input if the first one failed","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":58041,"byte_end":58107,"line_start":257,"line_end":257,"column_start":3,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":58377,"byte_end":58381,"line_start":268,"line_end":268,"column_start":6,"column_end":10},"name":"into","qualname":"::internal::Parser::into","value":"pub fn into<O2: From<O>, E2: From<E>>(Self) -> Into<Self, O, O2, E, E2> where\nSelf: core::marker::Sized","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" automatically converts the parser's output and error values to another type, as long as they\n implement the `From` trait\n","sig":null,"attributes":[{"value":"/ automatically converts the parser's output and error values to another type, as long as they","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":58242,"byte_end":58338,"line_start":266,"line_end":266,"column_start":3,"column_end":99}},{"value":"/ implement the `From` trait","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":58341,"byte_end":58371,"line_start":267,"line_end":267,"column_start":3,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":241},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":58956,"byte_end":58959,"line_start":293,"line_end":293,"column_start":12,"column_end":15},"name":"Map","qualname":"::internal::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247}],"decl_id":null,"docs":" Implementation of `Parser:::map`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser:::map`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":58872,"byte_end":58908,"line_start":291,"line_end":291,"column_start":1,"column_end":37}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":58909,"byte_end":58944,"line_start":292,"line_end":292,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":257},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":59377,"byte_end":59384,"line_start":310,"line_end":310,"column_start":12,"column_end":19},"name":"FlatMap","qualname":"::internal::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"decl_id":null,"docs":" Implementation of `Parser::flat_map`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::flat_map`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":59289,"byte_end":59329,"line_start":308,"line_end":308,"column_start":1,"column_end":41}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":59330,"byte_end":59365,"line_start":309,"line_end":309,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":274},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":59790,"byte_end":59797,"line_start":327,"line_end":327,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::internal::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280}],"decl_id":null,"docs":" Implementation of `Parser::and_then`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::and_then`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":59702,"byte_end":59742,"line_start":325,"line_end":325,"column_start":1,"column_end":41}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":59743,"byte_end":59778,"line_start":326,"line_end":326,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":290},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":60210,"byte_end":60213,"line_start":345,"line_end":345,"column_start":12,"column_end":15},"name":"And","qualname":"::internal::And","value":"And {  }","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294}],"decl_id":null,"docs":" Implementation of `Parser::and`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::and`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":60127,"byte_end":60162,"line_start":343,"line_end":343,"column_start":1,"column_end":36}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":60163,"byte_end":60198,"line_start":344,"line_end":344,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":304},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":60587,"byte_end":60589,"line_start":362,"line_end":362,"column_start":12,"column_end":14},"name":"Or","qualname":"::internal::Or","value":"Or {  }","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308}],"decl_id":null,"docs":" Implementation of `Parser::or`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::or`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":60505,"byte_end":60539,"line_start":360,"line_end":360,"column_start":1,"column_end":35}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":60540,"byte_end":60575,"line_start":361,"line_end":361,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":317},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":61086,"byte_end":61090,"line_start":383,"line_end":383,"column_start":12,"column_end":16},"name":"Into","qualname":"::internal::Into","value":"Into {  }","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327}],"decl_id":null,"docs":" Implementation of `Parser::into`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::into`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":61002,"byte_end":61038,"line_start":381,"line_end":381,"column_start":1,"column_end":37}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":61039,"byte_end":61074,"line_start":382,"line_end":382,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":361},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":63133,"byte_end":63144,"line_start":21,"line_end":21,"column_start":11,"column_end":22},"name":"InputLength","qualname":"::traits::InputLength","value":"InputLength","parent":null,"children":[{"krate":0,"index":362}],"decl_id":null,"docs":" Abstract method to calculate the input length\n","sig":null,"attributes":[{"value":"/ Abstract method to calculate the input length","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":63073,"byte_end":63122,"line_start":20,"line_end":20,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":63252,"byte_end":63261,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"name":"input_len","qualname":"::traits::InputLength::input_len","value":"pub fn input_len(&Self) -> usize","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" Calculates the input length, as indicated by its name,\n and the name of the trait itself\n","sig":null,"attributes":[{"value":"/ Calculates the input length, as indicated by its name,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":63149,"byte_end":63207,"line_start":22,"line_end":22,"column_start":3,"column_end":61}},{"value":"/ and the name of the trait itself","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":63210,"byte_end":63246,"line_start":23,"line_end":23,"column_start":3,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":378},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":64023,"byte_end":64029,"line_start":63,"line_end":63,"column_start":11,"column_end":17},"name":"Offset","qualname":"::traits::Offset","value":"Offset","parent":null,"children":[{"krate":0,"index":379}],"decl_id":null,"docs":" Useful functions to calculate the offset between slices and show a hexdump of a slice\n","sig":null,"attributes":[{"value":"/ Useful functions to calculate the offset between slices and show a hexdump of a slice","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":63923,"byte_end":64012,"line_start":62,"line_end":62,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":64116,"byte_end":64122,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"name":"offset","qualname":"::traits::Offset::offset","value":"pub fn offset(&Self, &Self) -> usize","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" Offset between the first byte of self and the first byte of the argument\n","sig":null,"attributes":[{"value":"/ Offset between the first byte of self and the first byte of the argument","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":64034,"byte_end":64110,"line_start":64,"line_end":64,"column_start":3,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":399},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":65353,"byte_end":65360,"line_start":129,"line_end":129,"column_start":11,"column_end":18},"name":"AsBytes","qualname":"::traits::AsBytes","value":"AsBytes","parent":null,"children":[{"krate":0,"index":400}],"decl_id":null,"docs":" Helper trait for types that can be viewed as a byte slice\n","sig":null,"attributes":[{"value":"/ Helper trait for types that can be viewed as a byte slice","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":65281,"byte_end":65342,"line_start":128,"line_end":128,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":65411,"byte_end":65419,"line_start":131,"line_end":131,"column_start":6,"column_end":14},"name":"as_bytes","qualname":"::traits::AsBytes::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":" Casts the input type to a byte slice\n","sig":null,"attributes":[{"value":"/ Casts the input type to a byte slice","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":65365,"byte_end":65405,"line_start":130,"line_end":130,"column_start":3,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":419},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":67189,"byte_end":67195,"line_start":230,"line_end":230,"column_start":11,"column_end":17},"name":"AsChar","qualname":"::traits::AsChar","value":"AsChar","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426}],"decl_id":null,"docs":" Transforms common types to a char for basic token parsing\n","sig":null,"attributes":[{"value":"/ Transforms common types to a char for basic token parsing","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":67117,"byte_end":67178,"line_start":229,"line_end":229,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":67232,"byte_end":67239,"line_start":232,"line_end":232,"column_start":6,"column_end":13},"name":"as_char","qualname":"::traits::AsChar::as_char","value":"pub fn as_char(Self) -> char","parent":{"krate":0,"index":419},"children":[],"decl_id":null,"docs":" makes a char from self\n","sig":null,"attributes":[{"value":"/ makes a char from self","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":67200,"byte_end":67226,"line_start":231,"line_end":231,"column_start":3,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":67416,"byte_end":67424,"line_start":238,"line_end":238,"column_start":6,"column_end":14},"name":"is_alpha","qualname":"::traits::AsChar::is_alpha","value":"pub fn is_alpha(Self) -> bool","parent":{"krate":0,"index":419},"children":[],"decl_id":null,"docs":" Tests that self is an alphabetic character","sig":null,"attributes":[{"value":"/ Tests that self is an alphabetic character","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":67258,"byte_end":67304,"line_start":234,"line_end":234,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":67307,"byte_end":67310,"line_start":235,"line_end":235,"column_start":3,"column_end":6}},{"value":"/ Warning: for `&str` it recognizes alphabetic","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":67313,"byte_end":67361,"line_start":236,"line_end":236,"column_start":3,"column_end":51}},{"value":"/ characters outside of the 52 ASCII letters","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":67364,"byte_end":67410,"line_start":237,"line_end":237,"column_start":3,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":67520,"byte_end":67531,"line_start":242,"line_end":242,"column_start":6,"column_end":17},"name":"is_alphanum","qualname":"::traits::AsChar::is_alphanum","value":"pub fn is_alphanum(Self) -> bool","parent":{"krate":0,"index":419},"children":[],"decl_id":null,"docs":" Tests that self is an alphabetic character\n or a decimal digit\n","sig":null,"attributes":[{"value":"/ Tests that self is an alphabetic character","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":67443,"byte_end":67489,"line_start":240,"line_end":240,"column_start":3,"column_end":49}},{"value":"/ or a decimal digit","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":67492,"byte_end":67514,"line_start":241,"line_end":241,"column_start":3,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":67593,"byte_end":67605,"line_start":244,"line_end":244,"column_start":6,"column_end":18},"name":"is_dec_digit","qualname":"::traits::AsChar::is_dec_digit","value":"pub fn is_dec_digit(Self) -> bool","parent":{"krate":0,"index":419},"children":[],"decl_id":null,"docs":" Tests that self is a decimal digit\n","sig":null,"attributes":[{"value":"/ Tests that self is a decimal digit","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":67549,"byte_end":67587,"line_start":243,"line_end":243,"column_start":3,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":67664,"byte_end":67676,"line_start":246,"line_end":246,"column_start":6,"column_end":18},"name":"is_hex_digit","qualname":"::traits::AsChar::is_hex_digit","value":"pub fn is_hex_digit(Self) -> bool","parent":{"krate":0,"index":419},"children":[],"decl_id":null,"docs":" Tests that self is an hex digit\n","sig":null,"attributes":[{"value":"/ Tests that self is an hex digit","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":67623,"byte_end":67658,"line_start":245,"line_end":245,"column_start":3,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":67737,"byte_end":67749,"line_start":248,"line_end":248,"column_start":6,"column_end":18},"name":"is_oct_digit","qualname":"::traits::AsChar::is_oct_digit","value":"pub fn is_oct_digit(Self) -> bool","parent":{"krate":0,"index":419},"children":[],"decl_id":null,"docs":" Tests that self is an octal digit\n","sig":null,"attributes":[{"value":"/ Tests that self is an octal digit","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":67694,"byte_end":67731,"line_start":247,"line_end":247,"column_start":3,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":67807,"byte_end":67810,"line_start":250,"line_end":250,"column_start":6,"column_end":9},"name":"len","qualname":"::traits::AsChar::len","value":"pub fn len(Self) -> usize","parent":{"krate":0,"index":419},"children":[],"decl_id":null,"docs":" Gets the len in bytes for self\n","sig":null,"attributes":[{"value":"/ Gets the len in bytes for self","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":67767,"byte_end":67801,"line_start":249,"line_end":249,"column_start":3,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":461},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":70349,"byte_end":70358,"line_start":381,"line_end":381,"column_start":11,"column_end":20},"name":"InputIter","qualname":"::traits::InputIter","value":"InputIter","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":469}],"decl_id":null,"docs":" Abstracts common iteration operations on the input type\n","sig":null,"attributes":[{"value":"/ Abstracts common iteration operations on the input type","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":70279,"byte_end":70338,"line_start":380,"line_end":380,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":462},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":70491,"byte_end":70495,"line_start":385,"line_end":385,"column_start":8,"column_end":12},"name":"Item","qualname":"::traits::InputIter::Item","value":"type Item;","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":" The current input type is a sequence of that `Item` type.","sig":null,"attributes":[{"value":"/ The current input type is a sequence of that `Item` type.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":70363,"byte_end":70424,"line_start":382,"line_end":382,"column_start":3,"column_end":64}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":70427,"byte_end":70430,"line_start":383,"line_end":383,"column_start":3,"column_end":6}},{"value":"/ Example: `u8` for `&[u8]` or `char` for `&str`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":70433,"byte_end":70483,"line_start":384,"line_end":384,"column_start":3,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":463},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":70705,"byte_end":70709,"line_start":389,"line_end":389,"column_start":8,"column_end":12},"name":"Iter","qualname":"::traits::InputIter::Iter","value":"type Iter: Iterator<Item = (usize, Self::Item)>;","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":" An iterator over the input type, producing the item and its position\n for use with [Slice]. If we're iterating over `&str`, the position\n corresponds to the byte index of the character\n","sig":null,"attributes":[{"value":"/ An iterator over the input type, producing the item and its position","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":70499,"byte_end":70571,"line_start":386,"line_end":386,"column_start":3,"column_end":75}},{"value":"/ for use with [Slice]. If we're iterating over `&str`, the position","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":70574,"byte_end":70644,"line_start":387,"line_end":387,"column_start":3,"column_end":73}},{"value":"/ corresponds to the byte index of the character","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":70647,"byte_end":70697,"line_start":388,"line_end":388,"column_start":3,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":464},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":70815,"byte_end":70823,"line_start":392,"line_end":392,"column_start":8,"column_end":16},"name":"IterElem","qualname":"::traits::InputIter::IterElem","value":"type IterElem: Iterator<Item = Self::Item>;","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":" An iterator over the input type, producing the item\n","sig":null,"attributes":[{"value":"/ An iterator over the input type, producing the item","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":70752,"byte_end":70807,"line_start":391,"line_end":391,"column_start":3,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":70927,"byte_end":70939,"line_start":395,"line_end":395,"column_start":6,"column_end":18},"name":"iter_indices","qualname":"::traits::InputIter::iter_indices","value":"pub fn iter_indices(&Self) -> Self::Iter","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":" Returns an iterator over the elements and their byte offsets\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the elements and their byte offsets","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":70857,"byte_end":70921,"line_start":394,"line_end":394,"column_start":3,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":71011,"byte_end":71024,"line_start":397,"line_end":397,"column_start":6,"column_end":19},"name":"iter_elements","qualname":"::traits::InputIter::iter_elements","value":"pub fn iter_elements(&Self) -> Self::IterElem","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":" Returns an iterator over the elements\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the elements","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":70964,"byte_end":71005,"line_start":396,"line_end":396,"column_start":3,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":71101,"byte_end":71109,"line_start":399,"line_end":399,"column_start":6,"column_end":14},"name":"position","qualname":"::traits::InputIter::position","value":"pub fn position<P>(&Self, P) -> Option<usize> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":" Finds the byte position of the element\n","sig":null,"attributes":[{"value":"/ Finds the byte position of the element","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":71053,"byte_end":71095,"line_start":398,"line_end":398,"column_start":3,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":71263,"byte_end":71274,"line_start":403,"line_end":403,"column_start":6,"column_end":17},"name":"slice_index","qualname":"::traits::InputIter::slice_index","value":"pub fn slice_index(&Self, usize) -> Result<usize, Needed>","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":" Get the byte offset from the element's position in the stream\n","sig":null,"attributes":[{"value":"/ Get the byte offset from the element's position in the stream","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":71192,"byte_end":71257,"line_start":402,"line_end":402,"column_start":3,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":470},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":71368,"byte_end":71377,"line_start":407,"line_end":407,"column_start":11,"column_end":20},"name":"InputTake","qualname":"::traits::InputTake","value":"InputTake: Sized","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472}],"decl_id":null,"docs":" Abstracts slicing operations\n","sig":null,"attributes":[{"value":"/ Abstracts slicing operations","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":71325,"byte_end":71357,"line_start":406,"line_end":406,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":71457,"byte_end":71461,"line_start":409,"line_end":409,"column_start":6,"column_end":10},"name":"take","qualname":"::traits::InputTake::take","value":"pub fn take(&Self, usize) -> Self","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" Returns a slice of `count` bytes. panics if count > length\n","sig":null,"attributes":[{"value":"/ Returns a slice of `count` bytes. panics if count > length","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":71389,"byte_end":71451,"line_start":408,"line_end":408,"column_start":3,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":71573,"byte_end":71583,"line_start":411,"line_end":411,"column_start":6,"column_end":16},"name":"take_split","qualname":"::traits::InputTake::take_split","value":"pub fn take_split(&Self, usize) -> (Self, Self)","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" Split the stream at the `count` byte offset. panics if count > length\n","sig":null,"attributes":[{"value":"/ Split the stream at the `count` byte offset. panics if count > length","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":71494,"byte_end":71567,"line_start":410,"line_end":410,"column_start":3,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":520},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":75240,"byte_end":75258,"line_start":573,"line_end":573,"column_start":11,"column_end":29},"name":"UnspecializedInput","qualname":"::traits::UnspecializedInput","value":"UnspecializedInput","parent":null,"children":[],"decl_id":null,"docs":" Dummy trait used for default implementations (currently only used for `InputTakeAtPosition` and `Compare`).","sig":null,"attributes":[{"value":"/ Dummy trait used for default implementations (currently only used for `InputTakeAtPosition` and `Compare`).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":74675,"byte_end":74786,"line_start":564,"line_end":564,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":74787,"byte_end":74790,"line_start":565,"line_end":565,"column_start":1,"column_end":4}},{"value":"/ When implementing a custom input type, it is possible to use directly the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":74791,"byte_end":74868,"line_start":566,"line_end":566,"column_start":1,"column_end":78}},{"value":"/ default implementation: If the input type implements `InputLength`, `InputIter`,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":74869,"byte_end":74953,"line_start":567,"line_end":567,"column_start":1,"column_end":85}},{"value":"/ `InputTake` and `Clone`, you can implement `UnspecializedInput` and get","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":74954,"byte_end":75029,"line_start":568,"line_end":568,"column_start":1,"column_end":76}},{"value":"/ a default version of `InputTakeAtPosition` and `Compare`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":75030,"byte_end":75091,"line_start":569,"line_end":569,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":75092,"byte_end":75095,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ For performance reasons, you might want to write a custom implementation of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":75096,"byte_end":75175,"line_start":571,"line_end":571,"column_start":1,"column_end":80}},{"value":"/ `InputTakeAtPosition` (like the one for `&[u8]`).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":75176,"byte_end":75229,"line_start":572,"line_end":572,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":521},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":75457,"byte_end":75476,"line_start":578,"line_end":578,"column_start":11,"column_end":30},"name":"InputTakeAtPosition","qualname":"::traits::InputTakeAtPosition","value":"InputTakeAtPosition: Sized","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":532}],"decl_id":null,"docs":" Methods to take as much input as possible until the provided function returns true for the current element.","sig":null,"attributes":[{"value":"/ Methods to take as much input as possible until the provided function returns true for the current element.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":75263,"byte_end":75374,"line_start":575,"line_end":575,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":75375,"byte_end":75378,"line_start":576,"line_end":576,"column_start":1,"column_end":4}},{"value":"/ A large part of nom's basic parsers are built using this trait.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":75379,"byte_end":75446,"line_start":577,"line_end":577,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":522},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":75616,"byte_end":75620,"line_start":582,"line_end":582,"column_start":8,"column_end":12},"name":"Item","qualname":"::traits::InputTakeAtPosition::Item","value":"type Item;","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" The current input type is a sequence of that `Item` type.","sig":null,"attributes":[{"value":"/ The current input type is a sequence of that `Item` type.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":75488,"byte_end":75549,"line_start":579,"line_end":579,"column_start":3,"column_end":64}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":75552,"byte_end":75555,"line_start":580,"line_end":580,"column_start":3,"column_end":6}},{"value":"/ Example: `u8` for `&[u8]` or `char` for `&str`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":75558,"byte_end":75608,"line_start":581,"line_end":581,"column_start":3,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":75877,"byte_end":75894,"line_start":588,"line_end":588,"column_start":6,"column_end":23},"name":"split_at_position","qualname":"::traits::InputTakeAtPosition::split_at_position","value":"pub fn split_at_position<P, E: ParseError<Self>>(&Self, P)\n-> IResult<Self, Self, E> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" Looks for the first element of the input type for which the condition returns true,\n and returns the input up to this position.","sig":null,"attributes":[{"value":"/ Looks for the first element of the input type for which the condition returns true,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":75625,"byte_end":75712,"line_start":584,"line_end":584,"column_start":3,"column_end":90}},{"value":"/ and returns the input up to this position.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":75715,"byte_end":75761,"line_start":585,"line_end":585,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":75764,"byte_end":75767,"line_start":586,"line_end":586,"column_start":3,"column_end":6}},{"value":"/ *streaming version*: If no element is found matching the condition, this will return `Incomplete`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":75770,"byte_end":75871,"line_start":587,"line_end":587,"column_start":3,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":76309,"byte_end":76327,"line_start":598,"line_end":598,"column_start":6,"column_end":24},"name":"split_at_position1","qualname":"::traits::InputTakeAtPosition::split_at_position1","value":"pub fn split_at_position1<P, E: ParseError<Self>>(&Self, P, ErrorKind)\n-> IResult<Self, Self, E> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" Looks for the first element of the input type for which the condition returns true\n and returns the input up to this position.","sig":null,"attributes":[{"value":"/ Looks for the first element of the input type for which the condition returns true","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":76008,"byte_end":76094,"line_start":592,"line_end":592,"column_start":3,"column_end":89}},{"value":"/ and returns the input up to this position.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":76097,"byte_end":76143,"line_start":593,"line_end":593,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":76146,"byte_end":76149,"line_start":594,"line_end":594,"column_start":3,"column_end":6}},{"value":"/ Fails if the produced slice is empty.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":76152,"byte_end":76193,"line_start":595,"line_end":595,"column_start":3,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":76196,"byte_end":76199,"line_start":596,"line_end":596,"column_start":3,"column_end":6}},{"value":"/ *streaming version*: If no element is found matching the condition, this will return `Incomplete`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":76202,"byte_end":76303,"line_start":597,"line_end":597,"column_start":3,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":76726,"byte_end":76752,"line_start":610,"line_end":610,"column_start":6,"column_end":32},"name":"split_at_position_complete","qualname":"::traits::InputTakeAtPosition::split_at_position_complete","value":"pub fn split_at_position_complete<P, E: ParseError<Self>>(&Self, P)\n-> IResult<Self, Self, E> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" Looks for the first element of the input type for which the condition returns true,\n and returns the input up to this position.","sig":null,"attributes":[{"value":"/ Looks for the first element of the input type for which the condition returns true,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":76472,"byte_end":76559,"line_start":606,"line_end":606,"column_start":3,"column_end":90}},{"value":"/ and returns the input up to this position.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":76562,"byte_end":76608,"line_start":607,"line_end":607,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":76611,"byte_end":76614,"line_start":608,"line_end":608,"column_start":3,"column_end":6}},{"value":"/ *complete version*: If no element is found matching the condition, this will return the whole input","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":76617,"byte_end":76720,"line_start":609,"line_end":609,"column_start":3,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":77182,"byte_end":77209,"line_start":623,"line_end":623,"column_start":6,"column_end":33},"name":"split_at_position1_complete","qualname":"::traits::InputTakeAtPosition::split_at_position1_complete","value":"pub fn split_at_position1_complete<P,\n                                   E: ParseError<Self>>(&Self, P, ErrorKind)\n-> IResult<Self, Self, E> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" Looks for the first element of the input type for which the condition returns true\n and returns the input up to this position.","sig":null,"attributes":[{"value":"/ Looks for the first element of the input type for which the condition returns true","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":76879,"byte_end":76965,"line_start":617,"line_end":617,"column_start":3,"column_end":89}},{"value":"/ and returns the input up to this position.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":76968,"byte_end":77014,"line_start":618,"line_end":618,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":77017,"byte_end":77020,"line_start":619,"line_end":619,"column_start":3,"column_end":6}},{"value":"/ Fails if the produced slice is empty.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":77023,"byte_end":77064,"line_start":620,"line_end":620,"column_start":3,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":77067,"byte_end":77070,"line_start":621,"line_end":621,"column_start":3,"column_end":6}},{"value":"/ *complete version*: If no element is found matching the condition, this will return the whole input","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":77073,"byte_end":77176,"line_start":622,"line_end":622,"column_start":3,"column_end":106}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3274},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":83983,"byte_end":83985,"line_start":899,"line_end":899,"column_start":3,"column_end":5},"name":"Ok","qualname":"::traits::CompareResult::Ok","value":"CompareResult::Ok","parent":{"krate":0,"index":3273},"children":[],"decl_id":null,"docs":" Comparison was successful\n","sig":null,"attributes":[{"value":"/ Comparison was successful","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":83951,"byte_end":83980,"line_start":898,"line_end":898,"column_start":3,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3276},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":84024,"byte_end":84034,"line_start":901,"line_end":901,"column_start":3,"column_end":13},"name":"Incomplete","qualname":"::traits::CompareResult::Incomplete","value":"CompareResult::Incomplete","parent":{"krate":0,"index":3273},"children":[],"decl_id":null,"docs":" We need more data to be sure\n","sig":null,"attributes":[{"value":"/ We need more data to be sure","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":83989,"byte_end":84021,"line_start":900,"line_end":900,"column_start":3,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3278},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":84062,"byte_end":84067,"line_start":903,"line_end":903,"column_start":3,"column_end":8},"name":"Error","qualname":"::traits::CompareResult::Error","value":"CompareResult::Error","parent":{"krate":0,"index":3273},"children":[],"decl_id":null,"docs":" Comparison failed\n","sig":null,"attributes":[{"value":"/ Comparison failed","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":84038,"byte_end":84059,"line_start":902,"line_end":902,"column_start":3,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":3273},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":83933,"byte_end":83946,"line_start":897,"line_end":897,"column_start":10,"column_end":23},"name":"CompareResult","qualname":"::traits::CompareResult","value":"pub enum CompareResult {\n\n    /// Comparison was successful\n    Ok,\n\n    /// We need more data to be sure\n    Incomplete,\n\n    /// Comparison failed\n    Error,\n}","parent":null,"children":[{"krate":0,"index":3274},{"krate":0,"index":3276},{"krate":0,"index":3278}],"decl_id":null,"docs":" Indicates wether a comparison was successful, an error, or\n if more data was needed\n","sig":null,"attributes":[{"value":"/ Indicates wether a comparison was successful, an error, or","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":83805,"byte_end":83867,"line_start":894,"line_end":894,"column_start":1,"column_end":63}},{"value":"/ if more data was needed","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":83868,"byte_end":83895,"line_start":895,"line_end":895,"column_start":1,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":607},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":84118,"byte_end":84125,"line_start":907,"line_end":907,"column_start":11,"column_end":18},"name":"Compare","qualname":"::traits::Compare","value":"Compare<T>","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610}],"decl_id":null,"docs":" Abstracts comparison operations\n","sig":null,"attributes":[{"value":"/ Abstracts comparison operations","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":84072,"byte_end":84107,"line_start":906,"line_end":906,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":84186,"byte_end":84193,"line_start":909,"line_end":909,"column_start":6,"column_end":13},"name":"compare","qualname":"::traits::Compare::compare","value":"pub fn compare(&Self, T) -> CompareResult","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":" Compares self to another value for equality\n","sig":null,"attributes":[{"value":"/ Compares self to another value for equality","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":84133,"byte_end":84180,"line_start":908,"line_end":908,"column_start":3,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":84497,"byte_end":84512,"line_start":917,"line_end":917,"column_start":6,"column_end":21},"name":"compare_no_case","qualname":"::traits::Compare::compare_no_case","value":"pub fn compare_no_case(&Self, T) -> CompareResult","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":" Compares self to another value for equality\n independently of the case.","sig":null,"attributes":[{"value":"/ Compares self to another value for equality","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":84227,"byte_end":84274,"line_start":910,"line_end":910,"column_start":3,"column_end":50}},{"value":"/ independently of the case.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":84277,"byte_end":84307,"line_start":911,"line_end":911,"column_start":3,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":84310,"byte_end":84313,"line_start":912,"line_end":912,"column_start":3,"column_end":6}},{"value":"/ Warning: for `&str`, the comparison is done","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":84316,"byte_end":84363,"line_start":913,"line_end":913,"column_start":3,"column_end":50}},{"value":"/ by lowercasing both strings and comparing","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":84366,"byte_end":84411,"line_start":914,"line_end":914,"column_start":3,"column_end":48}},{"value":"/ the result. This is a temporary solution until","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":84414,"byte_end":84464,"line_start":915,"line_end":915,"column_start":3,"column_end":53}},{"value":"/ a better one appears","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":84467,"byte_end":84491,"line_start":916,"line_end":916,"column_start":3,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":647},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":88278,"byte_end":88287,"line_start":1083,"line_end":1083,"column_start":11,"column_end":20},"name":"FindToken","qualname":"::traits::FindToken","value":"FindToken<T>","parent":null,"children":[{"krate":0,"index":649}],"decl_id":null,"docs":" Look for a token in self\n","sig":null,"attributes":[{"value":"/ Look for a token in self","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":88239,"byte_end":88267,"line_start":1082,"line_end":1082,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":88344,"byte_end":88354,"line_start":1085,"line_end":1085,"column_start":6,"column_end":16},"name":"find_token","qualname":"::traits::FindToken::find_token","value":"pub fn find_token(&Self, T) -> bool","parent":{"krate":0,"index":647},"children":[],"decl_id":null,"docs":" Returns true if self contains the token\n","sig":null,"attributes":[{"value":"/ Returns true if self contains the token","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":88295,"byte_end":88338,"line_start":1084,"line_end":1084,"column_start":3,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":684},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":89684,"byte_end":89697,"line_start":1147,"line_end":1147,"column_start":11,"column_end":24},"name":"FindSubstring","qualname":"::traits::FindSubstring","value":"FindSubstring<T>","parent":null,"children":[{"krate":0,"index":686}],"decl_id":null,"docs":" Look for a substring in self\n","sig":null,"attributes":[{"value":"/ Look for a substring in self","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":89641,"byte_end":89673,"line_start":1146,"line_end":1146,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":89772,"byte_end":89786,"line_start":1149,"line_end":1149,"column_start":6,"column_end":20},"name":"find_substring","qualname":"::traits::FindSubstring::find_substring","value":"pub fn find_substring(&Self, T) -> Option<usize>","parent":{"krate":0,"index":684},"children":[],"decl_id":null,"docs":" Returns the byte position of the substring if it is found\n","sig":null,"attributes":[{"value":"/ Returns the byte position of the substring if it is found","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":89705,"byte_end":89766,"line_start":1148,"line_end":1148,"column_start":3,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":708},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":91589,"byte_end":91596,"line_start":1223,"line_end":1223,"column_start":11,"column_end":18},"name":"ParseTo","qualname":"::traits::ParseTo","value":"ParseTo<R>","parent":null,"children":[{"krate":0,"index":710}],"decl_id":null,"docs":" Used to integrate `str`'s `parse()` method\n","sig":null,"attributes":[{"value":"/ Used to integrate `str`'s `parse()` method","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":91532,"byte_end":91578,"line_start":1222,"line_end":1222,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":91751,"byte_end":91759,"line_start":1226,"line_end":1226,"column_start":6,"column_end":14},"name":"parse_to","qualname":"::traits::ParseTo::parse_to","value":"pub fn parse_to(&Self) -> Option<R>","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":" Succeeds if `parse()` succeeded. The byte slice implementation\n will first convert it to a `&str`, then apply the `parse()` function\n","sig":null,"attributes":[{"value":"/ Succeeds if `parse()` succeeded. The byte slice implementation","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":91604,"byte_end":91670,"line_start":1224,"line_end":1224,"column_start":3,"column_end":69}},{"value":"/ will first convert it to a `&str`, then apply the `parse()` function","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":91673,"byte_end":91745,"line_start":1225,"line_end":1225,"column_start":3,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":720},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":92205,"byte_end":92210,"line_start":1246,"line_end":1246,"column_start":11,"column_end":16},"name":"Slice","qualname":"::traits::Slice","value":"Slice<R>","parent":null,"children":[{"krate":0,"index":722}],"decl_id":null,"docs":" Slicing operations using ranges.","sig":null,"attributes":[{"value":"/ Slicing operations using ranges.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":92039,"byte_end":92075,"line_start":1241,"line_end":1241,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":92076,"byte_end":92079,"line_start":1242,"line_end":1242,"column_start":1,"column_end":4}},{"value":"/ This trait is loosely based on","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":92080,"byte_end":92114,"line_start":1243,"line_end":1243,"column_start":1,"column_end":35}},{"value":"/ `Index`, but can actually return","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":92115,"byte_end":92151,"line_start":1244,"line_end":1244,"column_start":1,"column_end":37}},{"value":"/ something else than a `&[T]` or `&str`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":92152,"byte_end":92194,"line_start":1245,"line_end":1245,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":92271,"byte_end":92276,"line_start":1248,"line_end":1248,"column_start":6,"column_end":11},"name":"slice","qualname":"::traits::Slice::slice","value":"pub fn slice(&Self, R) -> Self","parent":{"krate":0,"index":720},"children":[],"decl_id":null,"docs":" Slices self according to the range argument\n","sig":null,"attributes":[{"value":"/ Slices self according to the range argument","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":92218,"byte_end":92265,"line_start":1247,"line_end":1247,"column_start":3,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":727},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":95937,"byte_end":95947,"line_start":1396,"line_end":1396,"column_start":11,"column_end":21},"name":"ExtendInto","qualname":"::traits::ExtendInto","value":"ExtendInto","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731}],"decl_id":null,"docs":" Abstracts something which can extend an `Extend`.\n Used to build modified input slices in `escaped_transform`\n","sig":null,"attributes":[{"value":"/ Abstracts something which can extend an `Extend`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":95810,"byte_end":95863,"line_start":1394,"line_end":1394,"column_start":1,"column_end":54}},{"value":"/ Used to build modified input slices in `escaped_transform`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":95864,"byte_end":95926,"line_start":1395,"line_end":1395,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":728},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":96080,"byte_end":96084,"line_start":1400,"line_end":1400,"column_start":8,"column_end":12},"name":"Item","qualname":"::traits::ExtendInto::Item","value":"type Item;","parent":{"krate":0,"index":727},"children":[],"decl_id":null,"docs":" The current input type is a sequence of that `Item` type.","sig":null,"attributes":[{"value":"/ The current input type is a sequence of that `Item` type.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":95952,"byte_end":96013,"line_start":1397,"line_end":1397,"column_start":3,"column_end":64}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":96016,"byte_end":96019,"line_start":1398,"line_end":1398,"column_start":3,"column_end":6}},{"value":"/ Example: `u8` for `&[u8]` or `char` for `&str`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":96022,"byte_end":96072,"line_start":1399,"line_end":1399,"column_start":3,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":729},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":96131,"byte_end":96139,"line_start":1403,"line_end":1403,"column_start":8,"column_end":16},"name":"Extender","qualname":"::traits::ExtendInto::Extender","value":"type Extender;","parent":{"krate":0,"index":727},"children":[],"decl_id":null,"docs":" The type that will be produced\n","sig":null,"attributes":[{"value":"/ The type that will be produced","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":96089,"byte_end":96123,"line_start":1402,"line_end":1402,"column_start":3,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":96195,"byte_end":96206,"line_start":1406,"line_end":1406,"column_start":6,"column_end":17},"name":"new_builder","qualname":"::traits::ExtendInto::new_builder","value":"pub fn new_builder(&Self) -> Self::Extender","parent":{"krate":0,"index":727},"children":[],"decl_id":null,"docs":" Create a new `Extend` of the correct type\n","sig":null,"attributes":[{"value":"/ Create a new `Extend` of the correct type","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":96144,"byte_end":96189,"line_start":1405,"line_end":1405,"column_start":3,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":96285,"byte_end":96296,"line_start":1408,"line_end":1408,"column_start":6,"column_end":17},"name":"extend_into","qualname":"::traits::ExtendInto::extend_into","value":"pub fn extend_into(&Self, &mut Self::Extender)","parent":{"krate":0,"index":727},"children":[],"decl_id":null,"docs":" Accumulate the input into an accumulator\n","sig":null,"attributes":[{"value":"/ Accumulate the input into an accumulator","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":96235,"byte_end":96279,"line_start":1407,"line_end":1407,"column_start":3,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":772},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":98674,"byte_end":98681,"line_start":1532,"line_end":1532,"column_start":11,"column_end":18},"name":"ToUsize","qualname":"::traits::ToUsize","value":"ToUsize","parent":null,"children":[{"krate":0,"index":773}],"decl_id":null,"docs":" Helper trait to convert numbers to usize.","sig":null,"attributes":[{"value":"/ Helper trait to convert numbers to usize.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":98368,"byte_end":98413,"line_start":1526,"line_end":1526,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":98414,"byte_end":98417,"line_start":1527,"line_end":1527,"column_start":1,"column_end":4}},{"value":"/ By default, usize implements `From<u8>` and `From<u16>` but not","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":98418,"byte_end":98485,"line_start":1528,"line_end":1528,"column_start":1,"column_end":68}},{"value":"/ `From<u32>` and `From<u64>` because that would be invalid on some","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":98486,"byte_end":98555,"line_start":1529,"line_end":1529,"column_start":1,"column_end":70}},{"value":"/ platforms. This trait implements the conversion for platforms","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":98556,"byte_end":98621,"line_start":1530,"line_end":1530,"column_start":1,"column_end":66}},{"value":"/ with 32 and 64 bits pointer platforms","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":98622,"byte_end":98663,"line_start":1531,"line_end":1531,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":98718,"byte_end":98726,"line_start":1534,"line_end":1534,"column_start":6,"column_end":14},"name":"to_usize","qualname":"::traits::ToUsize::to_usize","value":"pub fn to_usize(&Self) -> usize","parent":{"krate":0,"index":772},"children":[],"decl_id":null,"docs":" converts self to usize\n","sig":null,"attributes":[{"value":"/ converts self to usize","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":98686,"byte_end":98712,"line_start":1533,"line_end":1533,"column_start":3,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":784},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":99393,"byte_end":99405,"line_start":1575,"line_end":1575,"column_start":11,"column_end":23},"name":"ErrorConvert","qualname":"::traits::ErrorConvert","value":"ErrorConvert<E>","parent":null,"children":[{"krate":0,"index":786}],"decl_id":null,"docs":" Equivalent From implementation to avoid orphan rules in bits parsers\n","sig":null,"attributes":[{"value":"/ Equivalent From implementation to avoid orphan rules in bits parsers","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":99310,"byte_end":99382,"line_start":1574,"line_end":1574,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":99454,"byte_end":99461,"line_start":1577,"line_end":1577,"column_start":6,"column_end":13},"name":"convert","qualname":"::traits::ErrorConvert::convert","value":"pub fn convert(Self) -> E","parent":{"krate":0,"index":784},"children":[],"decl_id":null,"docs":" Transform to another error type\n","sig":null,"attributes":[{"value":"/ Transform to another error type","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":99413,"byte_end":99448,"line_start":1576,"line_end":1576,"column_start":3,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":808},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"combinator","qualname":"::combinator","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":6261},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":874},{"krate":0,"index":881},{"krate":0,"index":891},{"krate":0,"index":899},{"krate":0,"index":908},{"krate":0,"index":915},{"krate":0,"index":924},{"krate":0,"index":931},{"krate":0,"index":941},{"krate":0,"index":948},{"krate":0,"index":953},{"krate":0,"index":960},{"krate":0,"index":965},{"krate":0,"index":972},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":987},{"krate":0,"index":992},{"krate":0,"index":999},{"krate":0,"index":1008},{"krate":0,"index":1015},{"krate":0,"index":1024},{"krate":0,"index":1030},{"krate":0,"index":1037},{"krate":0,"index":1042},{"krate":0,"index":1049},{"krate":0,"index":1054},{"krate":0,"index":1061},{"krate":0,"index":1066},{"krate":0,"index":1073},{"krate":0,"index":1078},{"krate":0,"index":1087},{"krate":0,"index":1094},{"krate":0,"index":1099},{"krate":0,"index":1106},{"krate":0,"index":1111},{"krate":0,"index":1119},{"krate":0,"index":1131}],"decl_id":null,"docs":" General purpose combinators\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16541,"byte_end":16553,"line_start":490,"line_end":490,"column_start":1,"column_end":13}},{"value":"/ General purpose combinators","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":101383,"byte_end":101414,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"allow(unused_imports)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":101416,"byte_end":101441,"line_start":3,"line_end":3,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":859},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102244,"byte_end":102248,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"rest","qualname":"::combinator::rest","value":"pub fn rest<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<RangeFrom<usize>>, T: InputLength","parent":null,"children":[],"decl_id":null,"docs":" Return the remaining input.","sig":null,"attributes":[{"value":"/ Return the remaining input.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":101981,"byte_end":102012,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102013,"byte_end":102016,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102017,"byte_end":102028,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ # use nom::error::ErrorKind;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102029,"byte_end":102061,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ use nom::combinator::rest;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102062,"byte_end":102092,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(rest::<_,(_, ErrorKind)>(\"abc\"), Ok((\"\", \"abc\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102093,"byte_end":102158,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(rest::<_,(_, ErrorKind)>(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102159,"byte_end":102218,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102219,"byte_end":102226,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102227,"byte_end":102236,"line_start":30,"line_end":30,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":862},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102694,"byte_end":102702,"line_start":48,"line_end":48,"column_start":8,"column_end":16},"name":"rest_len","qualname":"::combinator::rest_len","value":"pub fn rest_len<T, E: ParseError<T>>(T) -> IResult<T, usize, E> where\nT: InputLength","parent":null,"children":[],"decl_id":null,"docs":" Return the length of the remaining input.","sig":null,"attributes":[{"value":"/ Return the length of the remaining input.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102407,"byte_end":102452,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102453,"byte_end":102456,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102457,"byte_end":102468,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"/ # use nom::error::ErrorKind;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102469,"byte_end":102501,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/ use nom::combinator::rest_len;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102502,"byte_end":102536,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(rest_len::<_,(_, ErrorKind)>(\"abc\"), Ok((\"abc\", 3)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102537,"byte_end":102605,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(rest_len::<_,(_, ErrorKind)>(\"\"), Ok((\"\", 0)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102606,"byte_end":102668,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102669,"byte_end":102676,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102677,"byte_end":102686,"line_start":47,"line_end":47,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":865},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":103415,"byte_end":103418,"line_start":74,"line_end":74,"column_start":8,"column_end":11},"name":"map","qualname":"::combinator::map","value":"pub fn map<I, O1, O2, E, F, G>(F, G) -> /*impl Trait*/ where\nF: Parser<I, O1, E>, G: FnMut(O1) -> O2","parent":null,"children":[],"decl_id":null,"docs":" Maps a function on the result of a parser.","sig":null,"attributes":[{"value":"/ Maps a function on the result of a parser.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102837,"byte_end":102883,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102884,"byte_end":102887,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102888,"byte_end":102899,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102900,"byte_end":102936,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult,Parser};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102937,"byte_end":102991,"line_start":60,"line_end":60,"column_start":1,"column_end":55}},{"value":"/ use nom::character::complete::digit1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":102992,"byte_end":103033,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/ use nom::combinator::map;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":103034,"byte_end":103063,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":103064,"byte_end":103081,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":103082,"byte_end":103085,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let mut parser = map(digit1, |s: &str| s.len());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":103086,"byte_end":103138,"line_start":65,"line_end":65,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":103139,"byte_end":103142,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // the parser will count how many characters were returned by digit1","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":103143,"byte_end":103215,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(parser.parse(\"123456\"), Ok((\"\", 6)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":103216,"byte_end":103268,"line_start":68,"line_end":68,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":103269,"byte_end":103272,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // this will fail if digit1 fails","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":103273,"byte_end":103310,"line_start":70,"line_end":70,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(parser.parse(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Digit))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":103311,"byte_end":103391,"line_start":71,"line_end":71,"column_start":1,"column_end":81}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":103392,"byte_end":103399,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":103400,"byte_end":103407,"line_start":73,"line_end":73,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":874},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":103679,"byte_end":103683,"line_start":86,"line_end":86,"column_start":8,"column_end":12},"name":"mapc","qualname":"::combinator::mapc","value":"pub fn mapc<I, O1, O2, E, F, G>(I, F, G) -> IResult<I, O2, E> where F: Fn(I)\n-> IResult<I, O1, E>, G: Fn(O1) -> O2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":881},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":104616,"byte_end":104623,"line_start":115,"line_end":115,"column_start":8,"column_end":15},"name":"map_res","qualname":"::combinator::map_res","value":"pub fn map_res<I: Clone, O1, O2, E: FromExternalError<I, E2>, E2, F, G>(F, G)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: FnMut(O1) -> Result<O2, E2>","parent":null,"children":[],"decl_id":null,"docs":" Applies a function returning a `Result` over the result of a parser.","sig":null,"attributes":[{"value":"/ Applies a function returning a `Result` over the result of a parser.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":103853,"byte_end":103925,"line_start":94,"line_end":94,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":103926,"byte_end":103929,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":103930,"byte_end":103941,"line_start":96,"line_end":96,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":103942,"byte_end":103978,"line_start":97,"line_end":97,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":103979,"byte_end":104026,"line_start":98,"line_end":98,"column_start":1,"column_end":48}},{"value":"/ use nom::character::complete::digit1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":104027,"byte_end":104068,"line_start":99,"line_end":99,"column_start":1,"column_end":42}},{"value":"/ use nom::combinator::map_res;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":104069,"byte_end":104102,"line_start":100,"line_end":100,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":104103,"byte_end":104120,"line_start":101,"line_end":101,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":104121,"byte_end":104124,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ let mut parse = map_res(digit1, |s: &str| s.parse::<u8>());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":104125,"byte_end":104188,"line_start":103,"line_end":103,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":104189,"byte_end":104192,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ // the parser will convert the result of digit1 to a number","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":104193,"byte_end":104256,"line_start":105,"line_end":105,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parse(\"123\"), Ok((\"\", 123)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":104257,"byte_end":104301,"line_start":106,"line_end":106,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":104302,"byte_end":104305,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // this will fail if digit1 fails","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":104306,"byte_end":104343,"line_start":108,"line_end":108,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(parse(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Digit))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":104344,"byte_end":104417,"line_start":109,"line_end":109,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":104418,"byte_end":104421,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ // this will fail if the mapped function fails (a `u8` is too small to hold `123456`)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":104422,"byte_end":104511,"line_start":111,"line_end":111,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parse(\"123456\"), Err(Err::Error((\"123456\", ErrorKind::MapRes))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":104512,"byte_end":104592,"line_start":112,"line_end":112,"column_start":1,"column_end":81}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":104593,"byte_end":104600,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":104601,"byte_end":104608,"line_start":114,"line_end":114,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":891},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":105083,"byte_end":105091,"line_start":134,"line_end":134,"column_start":8,"column_end":16},"name":"map_resc","qualname":"::combinator::map_resc","value":"pub fn map_resc<I: Clone, O1, O2, E: FromExternalError<I, E2>, E2, F,\n                G>(I, F, G) -> IResult<I, O2, E> where F: Fn(I) ->\nIResult<I, O1, E>, G: Fn(O1) -> Result<O2, E2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":899},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":106086,"byte_end":106093,"line_start":167,"line_end":167,"column_start":8,"column_end":15},"name":"map_opt","qualname":"::combinator::map_opt","value":"pub fn map_opt<I: Clone, O1, O2, E: ParseError<I>, F, G>(F, G)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: FnMut(O1) -> Option<O2>","parent":null,"children":[],"decl_id":null,"docs":" Applies a function returning an `Option` over the result of a parser.","sig":null,"attributes":[{"value":"/ Applies a function returning an `Option` over the result of a parser.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":105317,"byte_end":105390,"line_start":146,"line_end":146,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":105391,"byte_end":105394,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":105395,"byte_end":105406,"line_start":148,"line_end":148,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":105407,"byte_end":105443,"line_start":149,"line_end":149,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":105444,"byte_end":105491,"line_start":150,"line_end":150,"column_start":1,"column_end":48}},{"value":"/ use nom::character::complete::digit1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":105492,"byte_end":105533,"line_start":151,"line_end":151,"column_start":1,"column_end":42}},{"value":"/ use nom::combinator::map_opt;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":105534,"byte_end":105567,"line_start":152,"line_end":152,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":105568,"byte_end":105585,"line_start":153,"line_end":153,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":105586,"byte_end":105589,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ let mut parse = map_opt(digit1, |s: &str| s.parse::<u8>().ok());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":105590,"byte_end":105658,"line_start":155,"line_end":155,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":105659,"byte_end":105662,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ // the parser will convert the result of digit1 to a number","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":105663,"byte_end":105726,"line_start":157,"line_end":157,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parse(\"123\"), Ok((\"\", 123)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":105727,"byte_end":105771,"line_start":158,"line_end":158,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":105772,"byte_end":105775,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ // this will fail if digit1 fails","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":105776,"byte_end":105813,"line_start":160,"line_end":160,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(parse(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Digit))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":105814,"byte_end":105887,"line_start":161,"line_end":161,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":105888,"byte_end":105891,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ // this will fail if the mapped function fails (a `u8` is too small to hold `123456`)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":105892,"byte_end":105981,"line_start":163,"line_end":163,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parse(\"123456\"), Err(Err::Error((\"123456\", ErrorKind::MapOpt))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":105982,"byte_end":106062,"line_start":164,"line_end":164,"column_start":1,"column_end":81}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":106063,"byte_end":106070,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":106071,"byte_end":106078,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":908},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":106527,"byte_end":106535,"line_start":186,"line_end":186,"column_start":8,"column_end":16},"name":"map_optc","qualname":"::combinator::map_optc","value":"pub fn map_optc<I: Clone, O1, O2, E: ParseError<I>, F, G>(I, F, G)\n-> IResult<I, O2, E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(O1) ->\nOption<O2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":915},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":107283,"byte_end":107293,"line_start":215,"line_end":215,"column_start":8,"column_end":18},"name":"map_parser","qualname":"::combinator::map_parser","value":"pub fn map_parser<I: Clone, O1, O2, E: ParseError<I>, F, G>(F, G)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: Parser<O1, O2, E>,\nO1: InputLength","parent":null,"children":[],"decl_id":null,"docs":" Applies a parser over the result of another one.","sig":null,"attributes":[{"value":"/ Applies a parser over the result of another one.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":106742,"byte_end":106794,"line_start":198,"line_end":198,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":106795,"byte_end":106798,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":106799,"byte_end":106810,"line_start":200,"line_end":200,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":106811,"byte_end":106847,"line_start":201,"line_end":201,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":106848,"byte_end":106895,"line_start":202,"line_end":202,"column_start":1,"column_end":48}},{"value":"/ use nom::character::complete::digit1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":106896,"byte_end":106937,"line_start":203,"line_end":203,"column_start":1,"column_end":42}},{"value":"/ use nom::bytes::complete::take;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":106938,"byte_end":106973,"line_start":204,"line_end":204,"column_start":1,"column_end":36}},{"value":"/ use nom::combinator::map_parser;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":106974,"byte_end":107010,"line_start":205,"line_end":205,"column_start":1,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":107011,"byte_end":107028,"line_start":206,"line_end":206,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":107029,"byte_end":107032,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ let mut parse = map_parser(take(5u8), digit1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":107033,"byte_end":107083,"line_start":208,"line_end":208,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":107084,"byte_end":107087,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parse(\"12345\"), Ok((\"\", \"12345\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":107088,"byte_end":107138,"line_start":210,"line_end":210,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parse(\"123ab\"), Ok((\"\", \"123\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":107139,"byte_end":107187,"line_start":211,"line_end":211,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(parse(\"123\"), Err(Err::Error((\"123\", ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":107188,"byte_end":107259,"line_start":212,"line_end":212,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":107260,"byte_end":107267,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":107268,"byte_end":107275,"line_start":214,"line_end":214,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":924},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":107633,"byte_end":107644,"line_start":232,"line_end":232,"column_start":8,"column_end":19},"name":"map_parserc","qualname":"::combinator::map_parserc","value":"pub fn map_parserc<I: Clone, O1, O2, E: ParseError<I>, F, G>(I, F, G)\n-> IResult<I, O2, E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(O1) ->\nIResult<O1, O2, E>, O1: InputLength","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":931},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108454,"byte_end":108462,"line_start":261,"line_end":261,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::combinator::flat_map","value":"pub fn flat_map<I, O1, O2, E: ParseError<I>, F, G, H>(F, G) -> /*impl Trait*/\nwhere F: Parser<I, O1, E>, G: Fn(O1) -> H, H: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new parser from the output of the first parser, then apply that parser over the rest of the input.","sig":null,"attributes":[{"value":"/ Creates a new parser from the output of the first parser, then apply that parser over the rest of the input.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":107881,"byte_end":107993,"line_start":245,"line_end":245,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":107994,"byte_end":107997,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":107998,"byte_end":108009,"line_start":247,"line_end":247,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108010,"byte_end":108046,"line_start":248,"line_end":248,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108047,"byte_end":108094,"line_start":249,"line_end":249,"column_start":1,"column_end":48}},{"value":"/ use nom::bytes::complete::take;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108095,"byte_end":108130,"line_start":250,"line_end":250,"column_start":1,"column_end":36}},{"value":"/ use nom::number::complete::u8;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108131,"byte_end":108165,"line_start":251,"line_end":251,"column_start":1,"column_end":35}},{"value":"/ use nom::combinator::flat_map;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108166,"byte_end":108200,"line_start":252,"line_end":252,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108201,"byte_end":108218,"line_start":253,"line_end":253,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108219,"byte_end":108222,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ let mut parse = flat_map(u8, take);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108223,"byte_end":108262,"line_start":255,"line_end":255,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108263,"byte_end":108266,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parse(&[2, 0, 1, 2][..]), Ok((&[2][..], &[0, 1][..])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108267,"byte_end":108337,"line_start":257,"line_end":257,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(parse(&[4, 0, 1, 2][..]), Err(Err::Error((&[0, 1, 2][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108338,"byte_end":108430,"line_start":258,"line_end":258,"column_start":1,"column_end":93}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108431,"byte_end":108438,"line_start":259,"line_end":259,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108439,"byte_end":108446,"line_start":260,"line_end":260,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":941},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":109215,"byte_end":109218,"line_start":293,"line_end":293,"column_start":8,"column_end":11},"name":"opt","qualname":"::combinator::opt","value":"pub fn opt<I: Clone, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Optional parser: Will return `None` if not successful.","sig":null,"attributes":[{"value":"/ Optional parser: Will return `None` if not successful.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108741,"byte_end":108799,"line_start":276,"line_end":276,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108800,"byte_end":108803,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108804,"byte_end":108815,"line_start":278,"line_end":278,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108816,"byte_end":108852,"line_start":279,"line_end":279,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108853,"byte_end":108900,"line_start":280,"line_end":280,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::opt;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108901,"byte_end":108930,"line_start":281,"line_end":281,"column_start":1,"column_end":30}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108931,"byte_end":108972,"line_start":282,"line_end":282,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108973,"byte_end":108990,"line_start":283,"line_end":283,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108991,"byte_end":108994,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ fn parser(i: &str) -> IResult<&str, Option<&str>> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":108995,"byte_end":109050,"line_start":285,"line_end":285,"column_start":1,"column_end":56}},{"value":"/   opt(alpha1)(i)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":109051,"byte_end":109071,"line_start":286,"line_end":286,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":109072,"byte_end":109077,"line_start":287,"line_end":287,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":109078,"byte_end":109081,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd;\"), Ok((\";\", Some(\"abcd\"))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":109082,"byte_end":109139,"line_start":289,"line_end":289,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"123;\"), Ok((\"123;\", None)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":109140,"byte_end":109191,"line_start":290,"line_end":290,"column_start":1,"column_end":52}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":109192,"byte_end":109199,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":109200,"byte_end":109207,"line_start":292,"line_end":292,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":948},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":109552,"byte_end":109556,"line_start":308,"line_end":308,"column_start":8,"column_end":12},"name":"optc","qualname":"::combinator::optc","value":"pub fn optc<I: Clone, O, E: ParseError<I>, F>(I, F)\n-> IResult<I, Option<O>, E> where F: Fn(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":953},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":110346,"byte_end":110350,"line_start":334,"line_end":334,"column_start":8,"column_end":12},"name":"cond","qualname":"::combinator::cond","value":"pub fn cond<I, O, E: ParseError<I>, F>(bool, F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Calls the parser if the condition is met.","sig":null,"attributes":[{"value":"/ Calls the parser if the condition is met.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":109694,"byte_end":109739,"line_start":315,"line_end":315,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":109740,"byte_end":109743,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":109744,"byte_end":109755,"line_start":317,"line_end":317,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":109756,"byte_end":109792,"line_start":318,"line_end":318,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":109793,"byte_end":109850,"line_start":319,"line_end":319,"column_start":1,"column_end":58}},{"value":"/ use nom::combinator::cond;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":109851,"byte_end":109881,"line_start":320,"line_end":320,"column_start":1,"column_end":31}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":109882,"byte_end":109923,"line_start":321,"line_end":321,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":109924,"byte_end":109941,"line_start":322,"line_end":322,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":109942,"byte_end":109945,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ fn parser(b: bool, i: &str) -> IResult<&str, Option<&str>> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":109946,"byte_end":110010,"line_start":324,"line_end":324,"column_start":1,"column_end":65}},{"value":"/   cond(b, alpha1)(i)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":110011,"byte_end":110035,"line_start":325,"line_end":325,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":110036,"byte_end":110041,"line_start":326,"line_end":326,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":110042,"byte_end":110045,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(true, \"abcd;\"), Ok((\";\", Some(\"abcd\"))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":110046,"byte_end":110109,"line_start":328,"line_end":328,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(false, \"abcd;\"), Ok((\"abcd;\", None)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":110110,"byte_end":110170,"line_start":329,"line_end":329,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(parser(true, \"123;\"), Err(Err::Error(Error::new(\"123;\", ErrorKind::Alpha))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":110171,"byte_end":110263,"line_start":330,"line_end":330,"column_start":1,"column_end":93}},{"value":"/ assert_eq!(parser(false, \"123;\"), Ok((\"123;\", None)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":110264,"byte_end":110322,"line_start":331,"line_end":331,"column_start":1,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":110323,"byte_end":110330,"line_start":332,"line_end":332,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":110331,"byte_end":110338,"line_start":333,"line_end":333,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":960},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":110685,"byte_end":110690,"line_start":354,"line_end":354,"column_start":8,"column_end":13},"name":"condc","qualname":"::combinator::condc","value":"pub fn condc<I, O, E: ParseError<I>, F>(I, bool, F)\n-> IResult<I, Option<O>, E> where F: Fn(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":965},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111284,"byte_end":111288,"line_start":376,"line_end":376,"column_start":8,"column_end":12},"name":"peek","qualname":"::combinator::peek","value":"pub fn peek<I: Clone, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Tries to apply its parser without consuming the input.","sig":null,"attributes":[{"value":"/ Tries to apply its parser without consuming the input.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":110834,"byte_end":110892,"line_start":361,"line_end":361,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":110893,"byte_end":110896,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":110897,"byte_end":110908,"line_start":363,"line_end":363,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":110909,"byte_end":110945,"line_start":364,"line_end":364,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":110946,"byte_end":110993,"line_start":365,"line_end":365,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::peek;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":110994,"byte_end":111024,"line_start":366,"line_end":366,"column_start":1,"column_end":31}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111025,"byte_end":111066,"line_start":367,"line_end":367,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111067,"byte_end":111084,"line_start":368,"line_end":368,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111085,"byte_end":111088,"line_start":369,"line_end":369,"column_start":1,"column_end":4}},{"value":"/ let mut parser = peek(alpha1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111089,"byte_end":111123,"line_start":370,"line_end":370,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111124,"byte_end":111127,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd;\"), Ok((\"abcd;\", \"abcd\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111128,"byte_end":111183,"line_start":372,"line_end":372,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"123;\"), Err(Err::Error((\"123;\", ErrorKind::Alpha))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111184,"byte_end":111260,"line_start":373,"line_end":373,"column_start":1,"column_end":77}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111261,"byte_end":111268,"line_start":374,"line_end":374,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111269,"byte_end":111276,"line_start":375,"line_end":375,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":972},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111565,"byte_end":111570,"line_start":390,"line_end":390,"column_start":8,"column_end":13},"name":"peekc","qualname":"::combinator::peekc","value":"pub fn peekc<I: Clone, O, E: ParseError<I>, F>(I, F) -> IResult<I, O, E> where\nF: Fn(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":977},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112165,"byte_end":112168,"line_start":414,"line_end":414,"column_start":8,"column_end":11},"name":"eof","qualname":"::combinator::eof","value":"pub fn eof<I: InputLength + Copy, E: ParseError<I>>(I) -> IResult<I, I, E>","parent":null,"children":[],"decl_id":null,"docs":" returns its input if it is at the end of input data","sig":null,"attributes":[{"value":"/ returns its input if it is at the end of input data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111701,"byte_end":111756,"line_start":397,"line_end":397,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111757,"byte_end":111760,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ When we're at the end of the data, this combinator","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111761,"byte_end":111815,"line_start":399,"line_end":399,"column_start":1,"column_end":55}},{"value":"/ will succeed","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111816,"byte_end":111832,"line_start":400,"line_end":400,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111833,"byte_end":111836,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111837,"byte_end":111844,"line_start":402,"line_end":402,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111845,"byte_end":111881,"line_start":403,"line_end":403,"column_start":1,"column_end":37}},{"value":"/ # use std::str;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111882,"byte_end":111901,"line_start":404,"line_end":404,"column_start":1,"column_end":20}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111902,"byte_end":111950,"line_start":405,"line_end":405,"column_start":1,"column_end":49}},{"value":"/ # use nom::combinator::eof;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111951,"byte_end":111982,"line_start":406,"line_end":406,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111983,"byte_end":111986,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":111987,"byte_end":112004,"line_start":408,"line_end":408,"column_start":1,"column_end":18}},{"value":"/ let parser = eof;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112005,"byte_end":112026,"line_start":409,"line_end":409,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112027,"byte_end":112099,"line_start":410,"line_end":410,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112100,"byte_end":112141,"line_start":411,"line_end":411,"column_start":1,"column_end":42}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112142,"byte_end":112149,"line_start":412,"line_end":412,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112150,"byte_end":112157,"line_start":413,"line_end":413,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":980},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112816,"byte_end":112824,"line_start":437,"line_end":437,"column_start":8,"column_end":16},"name":"complete","qualname":"::combinator::complete","value":"pub fn complete<I: Clone, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Transforms Incomplete into `Error`.","sig":null,"attributes":[{"value":"/ Transforms Incomplete into `Error`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112376,"byte_end":112415,"line_start":422,"line_end":422,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112416,"byte_end":112419,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112420,"byte_end":112431,"line_start":424,"line_end":424,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112432,"byte_end":112468,"line_start":425,"line_end":425,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112469,"byte_end":112516,"line_start":426,"line_end":426,"column_start":1,"column_end":48}},{"value":"/ use nom::bytes::streaming::take;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112517,"byte_end":112553,"line_start":427,"line_end":427,"column_start":1,"column_end":37}},{"value":"/ use nom::combinator::complete;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112554,"byte_end":112588,"line_start":428,"line_end":428,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112589,"byte_end":112606,"line_start":429,"line_end":429,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112607,"byte_end":112610,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ let mut parser = complete(take(5u8));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112611,"byte_end":112652,"line_start":431,"line_end":431,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112653,"byte_end":112656,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcdefg\"), Ok((\"fg\", \"abcde\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112657,"byte_end":112712,"line_start":433,"line_end":433,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abcd\"), Err(Err::Error((\"abcd\", ErrorKind::Complete))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112713,"byte_end":112792,"line_start":434,"line_end":434,"column_start":1,"column_end":80}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112793,"byte_end":112800,"line_start":435,"line_end":435,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":112801,"byte_end":112808,"line_start":436,"line_end":436,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":987},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":113159,"byte_end":113168,"line_start":451,"line_end":451,"column_start":8,"column_end":17},"name":"completec","qualname":"::combinator::completec","value":"pub fn completec<I: Clone, O, E: ParseError<I>, F>(I, F) -> IResult<I, O, E>\nwhere F: Fn(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":992},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":113854,"byte_end":113867,"line_start":474,"line_end":474,"column_start":8,"column_end":21},"name":"all_consuming","qualname":"::combinator::all_consuming","value":"pub fn all_consuming<I, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nI: InputLength, F: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Succeeds if all the input has been consumed by its child parser.","sig":null,"attributes":[{"value":"/ Succeeds if all the input has been consumed by its child parser.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":113303,"byte_end":113371,"line_start":458,"line_end":458,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":113372,"byte_end":113375,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":113376,"byte_end":113387,"line_start":460,"line_end":460,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":113388,"byte_end":113424,"line_start":461,"line_end":461,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":113425,"byte_end":113472,"line_start":462,"line_end":462,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::all_consuming;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":113473,"byte_end":113512,"line_start":463,"line_end":463,"column_start":1,"column_end":40}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":113513,"byte_end":113554,"line_start":464,"line_end":464,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":113555,"byte_end":113572,"line_start":465,"line_end":465,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":113573,"byte_end":113576,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ let mut parser = all_consuming(alpha1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":113577,"byte_end":113620,"line_start":467,"line_end":467,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":113621,"byte_end":113624,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd\"), Ok((\"\", \"abcd\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":113625,"byte_end":113674,"line_start":469,"line_end":469,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"abcd;\"),Err(Err::Error((\";\", ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":113675,"byte_end":113746,"line_start":470,"line_end":470,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(parser(\"123abcd;\"),Err(Err::Error((\"123abcd;\", ErrorKind::Alpha))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":113747,"byte_end":113830,"line_start":471,"line_end":471,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":113831,"byte_end":113838,"line_start":472,"line_end":472,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":113839,"byte_end":113846,"line_start":473,"line_end":473,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":999},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":114877,"byte_end":114883,"line_start":508,"line_end":508,"column_start":8,"column_end":14},"name":"verify","qualname":"::combinator::verify","value":"pub fn verify<I: Clone, O1, O2: ?Sized, E: ParseError<I>, F, G>(F, G)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: Fn(&O2) -> bool,\nO1: Borrow<O2>, O2","parent":null,"children":[],"decl_id":null,"docs":" Returns the result of the child parser if it satisfies a verification function.","sig":null,"attributes":[{"value":"/ Returns the result of the child parser if it satisfies a verification function.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":114196,"byte_end":114279,"line_start":489,"line_end":489,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":114280,"byte_end":114283,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ The verification function takes as argument a reference to the output of the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":114284,"byte_end":114364,"line_start":491,"line_end":491,"column_start":1,"column_end":81}},{"value":"/ parser.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":114365,"byte_end":114376,"line_start":492,"line_end":492,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":114377,"byte_end":114380,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":114381,"byte_end":114392,"line_start":494,"line_end":494,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":114393,"byte_end":114429,"line_start":495,"line_end":495,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":114430,"byte_end":114477,"line_start":496,"line_end":496,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::verify;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":114478,"byte_end":114510,"line_start":497,"line_end":497,"column_start":1,"column_end":33}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":114511,"byte_end":114552,"line_start":498,"line_end":498,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":114553,"byte_end":114570,"line_start":499,"line_end":499,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":114571,"byte_end":114574,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ let mut parser = verify(alpha1, |s: &str| s.len() == 4);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":114575,"byte_end":114635,"line_start":501,"line_end":501,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":114636,"byte_end":114639,"line_start":502,"line_end":502,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd\"), Ok((\"\", \"abcd\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":114640,"byte_end":114689,"line_start":503,"line_end":503,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"abcde\"), Err(Err::Error((\"abcde\", ErrorKind::Verify))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":114690,"byte_end":114769,"line_start":504,"line_end":504,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(\"123abcd;\"),Err(Err::Error((\"123abcd;\", ErrorKind::Alpha))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":114770,"byte_end":114853,"line_start":505,"line_end":505,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":114854,"byte_end":114861,"line_start":506,"line_end":506,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":114862,"byte_end":114869,"line_start":507,"line_end":507,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1008},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":115332,"byte_end":115339,"line_start":531,"line_end":531,"column_start":8,"column_end":15},"name":"verifyc","qualname":"::combinator::verifyc","value":"pub fn verifyc<I: Clone, O1, O2: ?Sized, E: ParseError<I>, F, G>(I, F, G)\n-> IResult<I, O1, E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(&O2) -> bool,\nO1: Borrow<O2>, O2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1015},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":116032,"byte_end":116037,"line_start":560,"line_end":560,"column_start":8,"column_end":13},"name":"value","qualname":"::combinator::value","value":"pub fn value<I, O1: Clone, O2, E: ParseError<I>, F>(O1, F) -> /*impl Trait*/\nwhere F: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Returns the provided value if the child parser succeeds.","sig":null,"attributes":[{"value":"/ Returns the provided value if the child parser succeeds.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":115572,"byte_end":115632,"line_start":545,"line_end":545,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":115633,"byte_end":115636,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":115637,"byte_end":115648,"line_start":547,"line_end":547,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":115649,"byte_end":115685,"line_start":548,"line_end":548,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":115686,"byte_end":115733,"line_start":549,"line_end":549,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::value;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":115734,"byte_end":115765,"line_start":550,"line_end":550,"column_start":1,"column_end":32}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":115766,"byte_end":115807,"line_start":551,"line_end":551,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":115808,"byte_end":115825,"line_start":552,"line_end":552,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":115826,"byte_end":115829,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ let mut parser = value(1234, alpha1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":115830,"byte_end":115871,"line_start":554,"line_end":554,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":115872,"byte_end":115875,"line_start":555,"line_end":555,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd\"), Ok((\"\", 1234)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":115876,"byte_end":115923,"line_start":556,"line_end":556,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"123abcd;\"), Err(Err::Error((\"123abcd;\", ErrorKind::Alpha))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":115924,"byte_end":116008,"line_start":557,"line_end":557,"column_start":1,"column_end":85}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":116009,"byte_end":116016,"line_start":558,"line_end":558,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":116017,"byte_end":116024,"line_start":559,"line_end":559,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1024},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":116271,"byte_end":116277,"line_start":571,"line_end":571,"column_start":8,"column_end":14},"name":"valuec","qualname":"::combinator::valuec","value":"pub fn valuec<I, O1: Clone, O2, E: ParseError<I>, F>(I, O1, F)\n-> IResult<I, O1, E> where F: Fn(I) -> IResult<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1030},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":116879,"byte_end":116882,"line_start":597,"line_end":597,"column_start":8,"column_end":11},"name":"not","qualname":"::combinator::not","value":"pub fn not<I: Clone, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Succeeds if the child parser returns an error.","sig":null,"attributes":[{"value":"/ Succeeds if the child parser returns an error.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":116449,"byte_end":116499,"line_start":582,"line_end":582,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":116500,"byte_end":116503,"line_start":583,"line_end":583,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":116504,"byte_end":116515,"line_start":584,"line_end":584,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":116516,"byte_end":116552,"line_start":585,"line_end":585,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":116553,"byte_end":116600,"line_start":586,"line_end":586,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::not;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":116601,"byte_end":116630,"line_start":587,"line_end":587,"column_start":1,"column_end":30}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":116631,"byte_end":116672,"line_start":588,"line_end":588,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":116673,"byte_end":116690,"line_start":589,"line_end":589,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":116691,"byte_end":116694,"line_start":590,"line_end":590,"column_start":1,"column_end":4}},{"value":"/ let mut parser = not(alpha1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":116695,"byte_end":116728,"line_start":591,"line_end":591,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":116729,"byte_end":116732,"line_start":592,"line_end":592,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"123\"), Ok((\"123\", ())));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":116733,"byte_end":116780,"line_start":593,"line_end":593,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"abcd\"), Err(Err::Error((\"abcd\", ErrorKind::Not))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":116781,"byte_end":116855,"line_start":594,"line_end":594,"column_start":1,"column_end":75}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":116856,"byte_end":116863,"line_start":595,"line_end":595,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":116864,"byte_end":116871,"line_start":596,"line_end":596,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1037},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":117250,"byte_end":117254,"line_start":612,"line_end":612,"column_start":8,"column_end":12},"name":"notc","qualname":"::combinator::notc","value":"pub fn notc<I: Clone, O, E: ParseError<I>, F>(I, F) -> IResult<I, (), E> where\nF: Fn(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1042},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":117963,"byte_end":117972,"line_start":635,"line_end":635,"column_start":8,"column_end":17},"name":"recognize","qualname":"::combinator::recognize","value":"pub fn recognize<I: Clone + Offset + Slice<RangeTo<usize>>, O,\n                 E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" If the child parser was successful, return the consumed input as produced value.","sig":null,"attributes":[{"value":"/ If the child parser was successful, return the consumed input as produced value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":117395,"byte_end":117479,"line_start":619,"line_end":619,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":117480,"byte_end":117483,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":117484,"byte_end":117495,"line_start":621,"line_end":621,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":117496,"byte_end":117532,"line_start":622,"line_end":622,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":117533,"byte_end":117580,"line_start":623,"line_end":623,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::recognize;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":117581,"byte_end":117616,"line_start":624,"line_end":624,"column_start":1,"column_end":36}},{"value":"/ use nom::character::complete::{char, alpha1};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":117617,"byte_end":117666,"line_start":625,"line_end":625,"column_start":1,"column_end":50}},{"value":"/ use nom::sequence::separated_pair;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":117667,"byte_end":117705,"line_start":626,"line_end":626,"column_start":1,"column_end":39}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":117706,"byte_end":117723,"line_start":627,"line_end":627,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":117724,"byte_end":117727,"line_start":628,"line_end":628,"column_start":1,"column_end":4}},{"value":"/ let mut parser = recognize(separated_pair(alpha1, char(','), alpha1));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":117728,"byte_end":117802,"line_start":629,"line_end":629,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":117803,"byte_end":117806,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd,efgh\"), Ok((\"\", \"abcd,efgh\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":117807,"byte_end":117866,"line_start":631,"line_end":631,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"abcd;\"),Err(Err::Error((\";\", ErrorKind::Char))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":117867,"byte_end":117939,"line_start":632,"line_end":632,"column_start":1,"column_end":73}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":117940,"byte_end":117947,"line_start":633,"line_end":633,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":117948,"byte_end":117955,"line_start":634,"line_end":634,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1049},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":118367,"byte_end":118377,"line_start":654,"line_end":654,"column_start":8,"column_end":18},"name":"recognizec","qualname":"::combinator::recognizec","value":"pub fn recognizec<I: Clone + Offset + Slice<RangeTo<usize>>, O,\n                  E: ParseError<I>, F>(I, F) -> IResult<I, I, E> where\nF: Fn(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1054},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":120095,"byte_end":120103,"line_start":702,"line_end":702,"column_start":8,"column_end":16},"name":"consumed","qualname":"::combinator::consumed","value":"pub fn consumed<I, O, F, E>(F) -> /*impl Trait*/ where I: Clone + Offset +\nSlice<RangeTo<usize>>, E: ParseError<I>, F: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" if the child parser was successful, return the consumed input with the output\n as a tuple. Functions similarly to [recognize](fn.recognize.html) except it\n returns the parser output as well.","sig":null,"attributes":[{"value":"/ if the child parser was successful, return the consumed input with the output","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":118563,"byte_end":118644,"line_start":664,"line_end":664,"column_start":1,"column_end":82}},{"value":"/ as a tuple. Functions similarly to [recognize](fn.recognize.html) except it","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":118645,"byte_end":118724,"line_start":665,"line_end":665,"column_start":1,"column_end":80}},{"value":"/ returns the parser output as well.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":118725,"byte_end":118763,"line_start":666,"line_end":666,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":118764,"byte_end":118767,"line_start":667,"line_end":667,"column_start":1,"column_end":4}},{"value":"/ This can be useful especially in cases where the output is not the same type","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":118768,"byte_end":118848,"line_start":668,"line_end":668,"column_start":1,"column_end":81}},{"value":"/ as the input, or the input is a user defined type.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":118849,"byte_end":118903,"line_start":669,"line_end":669,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":118904,"byte_end":118907,"line_start":670,"line_end":670,"column_start":1,"column_end":4}},{"value":"/ Returned tuple is of the format `(consumed input, produced output)`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":118908,"byte_end":118980,"line_start":671,"line_end":671,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":118981,"byte_end":118984,"line_start":672,"line_end":672,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":118985,"byte_end":118996,"line_start":673,"line_end":673,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":118997,"byte_end":119033,"line_start":674,"line_end":674,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119034,"byte_end":119081,"line_start":675,"line_end":675,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::{consumed, value, recognize, map};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119082,"byte_end":119141,"line_start":676,"line_end":676,"column_start":1,"column_end":60}},{"value":"/ use nom::character::complete::{char, alpha1};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119142,"byte_end":119191,"line_start":677,"line_end":677,"column_start":1,"column_end":50}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119192,"byte_end":119226,"line_start":678,"line_end":678,"column_start":1,"column_end":35}},{"value":"/ use nom::sequence::separated_pair;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119227,"byte_end":119265,"line_start":679,"line_end":679,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119266,"byte_end":119269,"line_start":680,"line_end":680,"column_start":1,"column_end":4}},{"value":"/ fn inner_parser(input: &str) -> IResult<&str, bool> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119270,"byte_end":119327,"line_start":681,"line_end":681,"column_start":1,"column_end":58}},{"value":"/     value(true, tag(\"1234\"))(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119328,"byte_end":119367,"line_start":682,"line_end":682,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119368,"byte_end":119373,"line_start":683,"line_end":683,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119374,"byte_end":119377,"line_start":684,"line_end":684,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119378,"byte_end":119395,"line_start":685,"line_end":685,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119396,"byte_end":119399,"line_start":686,"line_end":686,"column_start":1,"column_end":4}},{"value":"/ let mut consumed_parser = consumed(value(true, separated_pair(alpha1, char(','), alpha1)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119400,"byte_end":119495,"line_start":687,"line_end":687,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119496,"byte_end":119499,"line_start":688,"line_end":688,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(consumed_parser(\"abcd,efgh1\"), Ok((\"1\", (\"abcd,efgh\", true))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119500,"byte_end":119578,"line_start":689,"line_end":689,"column_start":1,"column_end":79}},{"value":"/ assert_eq!(consumed_parser(\"abcd;\"),Err(Err::Error((\";\", ErrorKind::Char))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119579,"byte_end":119660,"line_start":690,"line_end":690,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119661,"byte_end":119664,"line_start":691,"line_end":691,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119665,"byte_end":119668,"line_start":692,"line_end":692,"column_start":1,"column_end":4}},{"value":"/ // the first output (representing the consumed input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119669,"byte_end":119726,"line_start":693,"line_end":693,"column_start":1,"column_end":58}},{"value":"/ // should be the same as that of the `recognize` parser.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119727,"byte_end":119787,"line_start":694,"line_end":694,"column_start":1,"column_end":61}},{"value":"/ let mut recognize_parser = recognize(inner_parser);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119788,"byte_end":119843,"line_start":695,"line_end":695,"column_start":1,"column_end":56}},{"value":"/ let mut consumed_parser = map(consumed(inner_parser), |(consumed, output)| consumed);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119844,"byte_end":119933,"line_start":696,"line_end":696,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119934,"byte_end":119937,"line_start":697,"line_end":697,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(recognize_parser(\"1234\"), consumed_parser(\"1234\"));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":119938,"byte_end":120004,"line_start":698,"line_end":698,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(recognize_parser(\"abcd\"), consumed_parser(\"abcd\"));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":120005,"byte_end":120071,"line_start":699,"line_end":699,"column_start":1,"column_end":67}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":120072,"byte_end":120079,"line_start":700,"line_end":700,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":120080,"byte_end":120087,"line_start":701,"line_end":701,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1061},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":120580,"byte_end":120589,"line_start":722,"line_end":722,"column_start":8,"column_end":17},"name":"consumedc","qualname":"::combinator::consumedc","value":"pub fn consumedc<I, O, E: ParseError<I>, F>(I, F) -> IResult<I, (I, O), E>\nwhere I: Clone + Offset + Slice<RangeTo<usize>>, E: ParseError<E>, F: Fn(I) ->\nIResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1066},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121219,"byte_end":121222,"line_start":746,"line_end":746,"column_start":8,"column_end":11},"name":"cut","qualname":"::combinator::cut","value":"pub fn cut<I, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" transforms an error to failure","sig":null,"attributes":[{"value":"/ transforms an error to failure","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":120797,"byte_end":120831,"line_start":731,"line_end":731,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":120832,"byte_end":120835,"line_start":732,"line_end":732,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":120836,"byte_end":120847,"line_start":733,"line_end":733,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":120848,"byte_end":120884,"line_start":734,"line_end":734,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":120885,"byte_end":120932,"line_start":735,"line_end":735,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::cut;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":120933,"byte_end":120962,"line_start":736,"line_end":736,"column_start":1,"column_end":30}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":120963,"byte_end":121004,"line_start":737,"line_end":737,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121005,"byte_end":121022,"line_start":738,"line_end":738,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121023,"byte_end":121026,"line_start":739,"line_end":739,"column_start":1,"column_end":4}},{"value":"/ let mut parser = cut(alpha1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121027,"byte_end":121060,"line_start":740,"line_end":740,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121061,"byte_end":121064,"line_start":741,"line_end":741,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd;\"), Ok((\";\", \"abcd\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121065,"byte_end":121116,"line_start":742,"line_end":742,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"123;\"), Err(Err::Failure((\"123;\", ErrorKind::Alpha))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121117,"byte_end":121195,"line_start":743,"line_end":743,"column_start":1,"column_end":79}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121196,"byte_end":121203,"line_start":744,"line_end":744,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121204,"byte_end":121211,"line_start":745,"line_end":745,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1073},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121473,"byte_end":121477,"line_start":757,"line_end":757,"column_start":8,"column_end":12},"name":"cutc","qualname":"::combinator::cutc","value":"pub fn cutc<I, O, E: ParseError<I>, F>(I, F) -> IResult<I, O, E> where\nF: Fn(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1078},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":122313,"byte_end":122317,"line_start":787,"line_end":787,"column_start":8,"column_end":12},"name":"into","qualname":"::combinator::into","value":"pub fn into<I, O1, O2, E1, E2, F>(F) -> /*impl Trait*/ where O1: Into<O2>,\nE1: Into<E2>, E1: ParseError<I>, E2: ParseError<I>, F: Parser<I, O1, E1>","parent":null,"children":[],"decl_id":null,"docs":" automatically converts the child parser's result to another type","sig":null,"attributes":[{"value":"/ automatically converts the child parser's result to another type","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121610,"byte_end":121678,"line_start":764,"line_end":764,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121679,"byte_end":121682,"line_start":765,"line_end":765,"column_start":1,"column_end":4}},{"value":"/ it will be able to convert the output value and the error value","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121683,"byte_end":121750,"line_start":766,"line_end":766,"column_start":1,"column_end":68}},{"value":"/ as long as the `Into` implementations are available","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121751,"byte_end":121806,"line_start":767,"line_end":767,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121807,"byte_end":121810,"line_start":768,"line_end":768,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121811,"byte_end":121822,"line_start":769,"line_end":769,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121823,"byte_end":121859,"line_start":770,"line_end":770,"column_start":1,"column_end":37}},{"value":"/ # use nom::IResult;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121860,"byte_end":121883,"line_start":771,"line_end":771,"column_start":1,"column_end":24}},{"value":"/ use nom::combinator::into;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121884,"byte_end":121914,"line_start":772,"line_end":772,"column_start":1,"column_end":31}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121915,"byte_end":121956,"line_start":773,"line_end":773,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121957,"byte_end":121974,"line_start":774,"line_end":774,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121975,"byte_end":121978,"line_start":775,"line_end":775,"column_start":1,"column_end":4}},{"value":"/  fn parser1(i: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":121979,"byte_end":122028,"line_start":776,"line_end":776,"column_start":1,"column_end":50}},{"value":"/    alpha1(i)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":122029,"byte_end":122045,"line_start":777,"line_end":777,"column_start":1,"column_end":17}},{"value":"/  }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":122046,"byte_end":122052,"line_start":778,"line_end":778,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":122053,"byte_end":122056,"line_start":779,"line_end":779,"column_start":1,"column_end":4}},{"value":"/  let mut parser2 = into(parser1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":122057,"byte_end":122094,"line_start":780,"line_end":780,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":122095,"byte_end":122098,"line_start":781,"line_end":781,"column_start":1,"column_end":4}},{"value":"/ // the parser converts the &str output of the child parser into a Vec<u8>","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":122099,"byte_end":122176,"line_start":782,"line_end":782,"column_start":1,"column_end":78}},{"value":"/ let bytes: IResult<&str, Vec<u8>> = parser2(\"abcd\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":122177,"byte_end":122233,"line_start":783,"line_end":783,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(bytes, Ok((\"\", vec![97, 98, 99, 100])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":122234,"byte_end":122289,"line_start":784,"line_end":784,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":122290,"byte_end":122297,"line_start":785,"line_end":785,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":122298,"byte_end":122305,"line_start":786,"line_end":786,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1087},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":122806,"byte_end":122811,"line_start":805,"line_end":805,"column_start":8,"column_end":13},"name":"intoc","qualname":"::combinator::intoc","value":"pub fn intoc<I, O1, O2, E1, E2, F>(I, F) -> IResult<I, O2, E2> where\nO1: Into<O2>, E1: Into<E2>, E1: ParseError<I>, E2: ParseError<I>,\nF: Parser<I, O1, E1>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1094},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":123778,"byte_end":123786,"line_start":834,"line_end":834,"column_start":8,"column_end":16},"name":"iterator","qualname":"::combinator::iterator","value":"pub fn iterator<Input, Output, Error, F>(Input, F)\n-> ParserIterator<Input, Error, F> where F: Parser<Input, Output, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator from input data and a parser.","sig":null,"attributes":[{"value":"/ Creates an iterator from input data and a parser.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":123008,"byte_end":123061,"line_start":816,"line_end":816,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":123062,"byte_end":123065,"line_start":817,"line_end":817,"column_start":1,"column_end":4}},{"value":"/ Call the iterator's [ParserIterator::finish] method to get the remaining input if successful,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":123066,"byte_end":123163,"line_start":818,"line_end":818,"column_start":1,"column_end":98}},{"value":"/ or the error value if we encountered an error.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":123164,"byte_end":123214,"line_start":819,"line_end":819,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":123215,"byte_end":123218,"line_start":820,"line_end":820,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":123219,"byte_end":123230,"line_start":821,"line_end":821,"column_start":1,"column_end":12}},{"value":"/ use nom::{combinator::iterator, IResult, bytes::complete::tag, character::complete::alpha1, sequence::terminated};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":123231,"byte_end":123349,"line_start":822,"line_end":822,"column_start":1,"column_end":119}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":123350,"byte_end":123384,"line_start":823,"line_end":823,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":123385,"byte_end":123388,"line_start":824,"line_end":824,"column_start":1,"column_end":4}},{"value":"/ let data = \"abc|defg|hijkl|mnopqr|123\";","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":123389,"byte_end":123432,"line_start":825,"line_end":825,"column_start":1,"column_end":44}},{"value":"/ let mut it = iterator(data, terminated(alpha1, tag(\"|\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":123433,"byte_end":123495,"line_start":826,"line_end":826,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":123496,"byte_end":123499,"line_start":827,"line_end":827,"column_start":1,"column_end":4}},{"value":"/ let parsed = it.map(|v| (v, v.len())).collect::<HashMap<_,_>>();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":123500,"byte_end":123568,"line_start":828,"line_end":828,"column_start":1,"column_end":69}},{"value":"/ let res: IResult<_,_> = it.finish();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":123569,"byte_end":123609,"line_start":829,"line_end":829,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":123610,"byte_end":123613,"line_start":830,"line_end":830,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parsed, [(\"abc\", 3usize), (\"defg\", 4), (\"hijkl\", 5), (\"mnopqr\", 6)].iter().cloned().collect());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":123614,"byte_end":123724,"line_start":831,"line_end":831,"column_start":1,"column_end":111}},{"value":"/ assert_eq!(res, Ok((\"123\", ())));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":123725,"byte_end":123762,"line_start":832,"line_end":832,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":123763,"byte_end":123770,"line_start":833,"line_end":833,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1099},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":124094,"byte_end":124108,"line_start":847,"line_end":847,"column_start":12,"column_end":26},"name":"ParserIterator","qualname":"::combinator::ParserIterator","value":"ParserIterator {  }","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105}],"decl_id":null,"docs":" Main structure associated to the [iterator] function.\n","sig":null,"attributes":[{"value":"/ Main structure associated to the [iterator] function.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":124025,"byte_end":124082,"line_start":846,"line_end":846,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":124335,"byte_end":124341,"line_start":855,"line_end":855,"column_start":10,"column_end":16},"name":"finish","qualname":"<ParserIterator<I, E, F>>::finish","value":"pub fn finish(Self) -> IResult<I, (), E>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining input if parsing was successful, or the error if we encountered an error.\n","sig":null,"attributes":[{"value":"/ Returns the remaining input if parsing was successful, or the error if we encountered an error.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":124226,"byte_end":124325,"line_start":854,"line_end":854,"column_start":3,"column_end":102}}]},{"kind":"Function","id":{"krate":0,"index":1131},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":126306,"byte_end":126313,"line_start":929,"line_end":929,"column_start":8,"column_end":15},"name":"success","qualname":"::combinator::success","value":"pub fn success<I, O: Clone, E: ParseError<I>>(O) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" a parser which always succeeds with given value without consuming any input.","sig":null,"attributes":[{"value":"/ a parser which always succeeds with given value without consuming any input.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":125528,"byte_end":125608,"line_start":907,"line_end":907,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":125609,"byte_end":125612,"line_start":908,"line_end":908,"column_start":1,"column_end":4}},{"value":"/ It can be used for example as the last alternative in `alt` to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":125613,"byte_end":125679,"line_start":909,"line_end":909,"column_start":1,"column_end":67}},{"value":"/ specify the default case.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":125680,"byte_end":125709,"line_start":910,"line_end":910,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":125710,"byte_end":125713,"line_start":911,"line_end":911,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":125714,"byte_end":125725,"line_start":912,"line_end":912,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":125726,"byte_end":125762,"line_start":913,"line_end":913,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":125763,"byte_end":125810,"line_start":914,"line_end":914,"column_start":1,"column_end":48}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":125811,"byte_end":125836,"line_start":915,"line_end":915,"column_start":1,"column_end":26}},{"value":"/ use nom::combinator::{success, value};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":125837,"byte_end":125879,"line_start":916,"line_end":916,"column_start":1,"column_end":43}},{"value":"/ use nom::character::complete::char;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":125880,"byte_end":125919,"line_start":917,"line_end":917,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":125920,"byte_end":125937,"line_start":918,"line_end":918,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":125938,"byte_end":125941,"line_start":919,"line_end":919,"column_start":1,"column_end":4}},{"value":"/ let mut parser = success::<_,_,(_,ErrorKind)>(10);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":125942,"byte_end":125996,"line_start":920,"line_end":920,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(parser(\"xyz\"), Ok((\"xyz\", 10)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":125997,"byte_end":126044,"line_start":921,"line_end":921,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":126045,"byte_end":126048,"line_start":922,"line_end":922,"column_start":1,"column_end":4}},{"value":"/ let mut sign = alt((value(-1, char('-')), value(1, char('+')), success::<_,_,(_,ErrorKind)>(1)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":126049,"byte_end":126150,"line_start":923,"line_end":923,"column_start":1,"column_end":102}},{"value":"/ assert_eq!(sign(\"+10\"), Ok((\"10\", 1)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":126151,"byte_end":126194,"line_start":924,"line_end":924,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(sign(\"-10\"), Ok((\"10\", -1)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":126195,"byte_end":126239,"line_start":925,"line_end":925,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(sign(\"10\"), Ok((\"10\", 1)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":126240,"byte_end":126282,"line_start":926,"line_end":926,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":126283,"byte_end":126290,"line_start":927,"line_end":927,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":126291,"byte_end":126298,"line_start":928,"line_end":928,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1137},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"branch","qualname":"::branch","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1157},{"krate":0,"index":1164},{"krate":0,"index":1169},{"krate":0,"index":4653},{"krate":0,"index":4660},{"krate":0,"index":4668},{"krate":0,"index":4677},{"krate":0,"index":4687},{"krate":0,"index":4698},{"krate":0,"index":4710},{"krate":0,"index":4723},{"krate":0,"index":4737},{"krate":0,"index":4752},{"krate":0,"index":4768},{"krate":0,"index":4785},{"krate":0,"index":4803},{"krate":0,"index":4822},{"krate":0,"index":4842},{"krate":0,"index":4863},{"krate":0,"index":4885},{"krate":0,"index":4908},{"krate":0,"index":4932},{"krate":0,"index":4957},{"krate":0,"index":4983},{"krate":0,"index":4991},{"krate":0,"index":5001},{"krate":0,"index":5013},{"krate":0,"index":5027},{"krate":0,"index":5043},{"krate":0,"index":5061},{"krate":0,"index":5081},{"krate":0,"index":5103},{"krate":0,"index":5127},{"krate":0,"index":5153},{"krate":0,"index":5181},{"krate":0,"index":5211},{"krate":0,"index":5243},{"krate":0,"index":5277},{"krate":0,"index":5313},{"krate":0,"index":5351},{"krate":0,"index":5391},{"krate":0,"index":5433},{"krate":0,"index":5477}],"decl_id":null,"docs":" Choice combinators\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16574,"byte_end":16586,"line_start":492,"line_end":492,"column_start":1,"column_end":13}},{"value":"/ Choice combinators","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":169385,"byte_end":169407,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":1152},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":169661,"byte_end":169664,"line_start":13,"line_end":13,"column_start":11,"column_end":14},"name":"Alt","qualname":"::branch::Alt","value":"Alt<I, O, E>","parent":null,"children":[{"krate":0,"index":1156}],"decl_id":null,"docs":" Helper trait for the [alt()] combinator.","sig":null,"attributes":[{"value":"/ Helper trait for the [alt()] combinator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":169540,"byte_end":169584,"line_start":10,"line_end":10,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":169585,"byte_end":169588,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for tuples of up to 21 elements","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":169589,"byte_end":169650,"line_start":12,"line_end":12,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":169772,"byte_end":169778,"line_start":15,"line_end":15,"column_start":6,"column_end":12},"name":"choice","qualname":"::branch::Alt::choice","value":"pub fn choice(&mut Self, I) -> IResult<I, O, E>","parent":{"krate":0,"index":1152},"children":[],"decl_id":null,"docs":" Tests each parser in the tuple and returns the result of the first one that succeeds\n","sig":null,"attributes":[{"value":"/ Tests each parser in the tuple and returns the result of the first one that succeeds","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":169678,"byte_end":169766,"line_start":14,"line_end":14,"column_start":3,"column_end":91}}]},{"kind":"Function","id":{"krate":0,"index":1157},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170969,"byte_end":170972,"line_start":47,"line_end":47,"column_start":8,"column_end":11},"name":"alt","qualname":"::branch::alt","value":"pub fn alt<I: Clone, O, E: ParseError<I>, List: Alt<I, O, E>>(List)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Tests a list of parsers one by one until one succeeds.","sig":null,"attributes":[{"value":"/ Tests a list of parsers one by one until one succeeds.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":169824,"byte_end":169882,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":169883,"byte_end":169886,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ It takes as argument a tuple of parsers. There is a maximum of 21","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":169887,"byte_end":169956,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ parsers. If you need more, it is possible to nest them in other `alt` calls,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":169957,"byte_end":170037,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ like this: `alt(parser_a, alt(parser_b, parser_c))`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170038,"byte_end":170093,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170094,"byte_end":170097,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170098,"byte_end":170109,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170110,"byte_end":170146,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170147,"byte_end":170202,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ use nom::character::complete::{alpha1, digit1};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170203,"byte_end":170254,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170255,"byte_end":170280,"line_start":28,"line_end":28,"column_start":1,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170281,"byte_end":170298,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170299,"byte_end":170350,"line_start":30,"line_end":30,"column_start":1,"column_end":52}},{"value":"/   alt((alpha1, digit1))(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170351,"byte_end":170385,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170386,"byte_end":170392,"line_start":32,"line_end":32,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170393,"byte_end":170396,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // the first parser, alpha1, recognizes the input","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170397,"byte_end":170450,"line_start":34,"line_end":34,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"\", \"abc\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170451,"byte_end":170498,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170499,"byte_end":170502,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // the first parser returns an error, so alt tries the second one","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170503,"byte_end":170572,"line_start":37,"line_end":37,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(parser(\"123456\"), Ok((\"\", \"123456\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170573,"byte_end":170626,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170627,"byte_end":170630,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // both parsers failed, and with the default error type, alt will return the last error","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170631,"byte_end":170722,"line_start":40,"line_end":40,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\" \"), Err(Err::Error(error_position!(\" \", ErrorKind::Digit))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170723,"byte_end":170808,"line_start":41,"line_end":41,"column_start":1,"column_end":86}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170809,"byte_end":170816,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170817,"byte_end":170824,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170825,"byte_end":170828,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ With a custom error type, it is possible to have alt return the error of the parser","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170829,"byte_end":170916,"line_start":45,"line_end":45,"column_start":1,"column_end":88}},{"value":"/ that went the farthest in the input data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":170917,"byte_end":170961,"line_start":46,"line_end":46,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":1164},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171239,"byte_end":171250,"line_start":56,"line_end":56,"column_start":11,"column_end":22},"name":"Permutation","qualname":"::branch::Permutation","value":"Permutation<I, O, E>","parent":null,"children":[{"krate":0,"index":1168}],"decl_id":null,"docs":" Helper trait for the [permutation()] combinator.","sig":null,"attributes":[{"value":"/ Helper trait for the [permutation()] combinator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171110,"byte_end":171162,"line_start":53,"line_end":53,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171163,"byte_end":171166,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for tuples of up to 21 elements","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171167,"byte_end":171228,"line_start":55,"line_end":55,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171357,"byte_end":171368,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"name":"permutation","qualname":"::branch::Permutation::permutation","value":"pub fn permutation(&mut Self, I) -> IResult<I, O, E>","parent":{"krate":0,"index":1164},"children":[],"decl_id":null,"docs":" Tries to apply all parsers in the tuple in various orders until all of them succeed\n","sig":null,"attributes":[{"value":"/ Tries to apply all parsers in the tuple in various orders until all of them succeed","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171264,"byte_end":171351,"line_start":57,"line_end":57,"column_start":3,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":1169},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":173085,"byte_end":173096,"line_start":107,"line_end":107,"column_start":8,"column_end":19},"name":"permutation","qualname":"::branch::permutation","value":"pub fn permutation<I: Clone, O, E: ParseError<I>,\n                   List: Permutation<I, O, E>>(List) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Applies a list of parsers in any order.","sig":null,"attributes":[{"value":"/ Applies a list of parsers in any order.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171414,"byte_end":171457,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171458,"byte_end":171461,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Permutation will succeed if all of the child parsers succeeded.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171462,"byte_end":171529,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/ It takes as argument a tuple of parsers, and returns a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171530,"byte_end":171588,"line_start":64,"line_end":64,"column_start":1,"column_end":59}},{"value":"/ tuple of the parser results.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171589,"byte_end":171621,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171622,"byte_end":171625,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171626,"byte_end":171637,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171638,"byte_end":171674,"line_start":68,"line_end":68,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171675,"byte_end":171739,"line_start":69,"line_end":69,"column_start":1,"column_end":65}},{"value":"/ use nom::character::complete::{alpha1, digit1};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171740,"byte_end":171791,"line_start":70,"line_end":70,"column_start":1,"column_end":52}},{"value":"/ use nom::branch::permutation;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171792,"byte_end":171825,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171826,"byte_end":171843,"line_start":72,"line_end":72,"column_start":1,"column_end":18}},{"value":"/ fn parser(input: &str) -> IResult<&str, (&str, &str)> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171844,"byte_end":171903,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/   permutation((alpha1, digit1))(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171904,"byte_end":171946,"line_start":74,"line_end":74,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171947,"byte_end":171952,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171953,"byte_end":171956,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // permutation recognizes alphabetic characters then digit","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":171957,"byte_end":172019,"line_start":77,"line_end":77,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"\", (\"abc\", \"123\"))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172020,"byte_end":172079,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172080,"byte_end":172083,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ // but also in inverse order","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172084,"byte_end":172116,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(parser(\"123abc\"), Ok((\"\", (\"abc\", \"123\"))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172117,"byte_end":172176,"line_start":81,"line_end":81,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172177,"byte_end":172180,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // it will fail if one of the parsers failed","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172181,"byte_end":172229,"line_start":83,"line_end":83,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(parser(\"abc;\"), Err(Err::Error(Error::new(\";\", ErrorKind::Digit))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172230,"byte_end":172313,"line_start":84,"line_end":84,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172314,"byte_end":172321,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172322,"byte_end":172329,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172330,"byte_end":172333,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ The parsers are applied greedily: if there are multiple unapplied parsers","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172334,"byte_end":172411,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/ that could parse the next slice of input, the first one is used.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172412,"byte_end":172480,"line_start":89,"line_end":89,"column_start":1,"column_end":69}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172481,"byte_end":172492,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172493,"byte_end":172550,"line_start":91,"line_end":91,"column_start":1,"column_end":58}},{"value":"/ use nom::branch::permutation;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172551,"byte_end":172584,"line_start":92,"line_end":92,"column_start":1,"column_end":34}},{"value":"/ use nom::character::complete::{anychar, char};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172585,"byte_end":172635,"line_start":93,"line_end":93,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172636,"byte_end":172639,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ fn parser(input: &str) -> IResult<&str, (char, char)> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172640,"byte_end":172699,"line_start":95,"line_end":95,"column_start":1,"column_end":60}},{"value":"/   permutation((anychar, char('a')))(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172700,"byte_end":172746,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172747,"byte_end":172752,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172753,"byte_end":172756,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ // anychar parses 'b', then char('a') parses 'a'","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172757,"byte_end":172809,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(parser(\"ba\"), Ok((\"\", ('b', 'a'))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172810,"byte_end":172861,"line_start":100,"line_end":100,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172862,"byte_end":172865,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ // anychar parses 'a', then char('a') fails on 'b',","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172866,"byte_end":172921,"line_start":102,"line_end":102,"column_start":1,"column_end":56}},{"value":"/ // even though char('a') followed by anychar would succeed","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172922,"byte_end":172984,"line_start":103,"line_end":103,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(parser(\"ab\"), Err(Err::Error(Error::new(\"b\", ErrorKind::Char))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":172985,"byte_end":173065,"line_start":104,"line_end":104,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":173066,"byte_end":173073,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/branch/mod.rs","byte_start":173074,"byte_end":173077,"line_start":106,"line_end":106,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":1182},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sequence","qualname":"::sequence","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1207},{"krate":0,"index":1214},{"krate":0,"index":1223},{"krate":0,"index":1230},{"krate":0,"index":1240},{"krate":0,"index":1247},{"krate":0,"index":1259},{"krate":0,"index":1268},{"krate":0,"index":1280},{"krate":0,"index":1289},{"krate":0,"index":1294},{"krate":0,"index":5523},{"krate":0,"index":5531},{"krate":0,"index":5541},{"krate":0,"index":5553},{"krate":0,"index":5567},{"krate":0,"index":5583},{"krate":0,"index":5601},{"krate":0,"index":5621},{"krate":0,"index":5643},{"krate":0,"index":5667},{"krate":0,"index":5693},{"krate":0,"index":5721},{"krate":0,"index":5751},{"krate":0,"index":5783},{"krate":0,"index":5817},{"krate":0,"index":5853},{"krate":0,"index":5891},{"krate":0,"index":5931},{"krate":0,"index":5973},{"krate":0,"index":6017},{"krate":0,"index":1304}],"decl_id":null,"docs":" Combinators applying parsers in sequence\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16603,"byte_end":16615,"line_start":494,"line_end":494,"column_start":1,"column_end":13}},{"value":"/ Combinators applying parsers in sequence","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":207489,"byte_end":207533,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":1197},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":208324,"byte_end":208328,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"pair","qualname":"::sequence::pair","value":"pub fn pair<I, O1, O2, E: ParseError<I>, F, G>(F, G) -> /*impl Trait*/ where\nF: Parser<I, O1, E>, G: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets an object from the first parser,\n then gets another object from the second parser.","sig":null,"attributes":[{"value":"/ Gets an object from the first parser,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":207632,"byte_end":207673,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/ then gets another object from the second parser.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":207674,"byte_end":207726,"line_start":10,"line_end":10,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":207727,"byte_end":207730,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":207731,"byte_end":207746,"line_start":12,"line_end":12,"column_start":1,"column_end":16}},{"value":"/ * `first` The first parser to apply.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":207747,"byte_end":207787,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ * `second` The second parser to apply.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":207788,"byte_end":207830,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":207831,"byte_end":207842,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":207843,"byte_end":207890,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":207891,"byte_end":207919,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::pair;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":207920,"byte_end":207948,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":207949,"byte_end":207983,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":207984,"byte_end":207987,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let mut parser = pair(tag(\"abc\"), tag(\"efg\"));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":207988,"byte_end":208038,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":208039,"byte_end":208042,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcefg\"), Ok((\"\", (\"abc\", \"efg\"))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":208043,"byte_end":208102,"line_start":23,"line_end":23,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"abcefghij\"), Ok((\"hij\", (\"abc\", \"efg\"))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":208103,"byte_end":208168,"line_start":24,"line_end":24,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":208169,"byte_end":208235,"line_start":25,"line_end":25,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":208236,"byte_end":208308,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":208309,"byte_end":208316,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1207},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":208710,"byte_end":208715,"line_start":44,"line_end":44,"column_start":8,"column_end":13},"name":"pairc","qualname":"::sequence::pairc","value":"pub fn pairc<I, O1, O2, E: ParseError<I>, F, G>(I, F, G)\n-> IResult<I, (O1, O2), E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(I) ->\nIResult<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1214},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":209618,"byte_end":209626,"line_start":75,"line_end":75,"column_start":8,"column_end":16},"name":"preceded","qualname":"::sequence::preceded","value":"pub fn preceded<I, O1, O2, E: ParseError<I>, F, G>(F, G) -> /*impl Trait*/\nwhere F: Parser<I, O1, E>, G: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Matches an object from the first parser and discards it,\n then gets an object from the second parser.","sig":null,"attributes":[{"value":"/ Matches an object from the first parser and discards it,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":208924,"byte_end":208984,"line_start":56,"line_end":56,"column_start":1,"column_end":61}},{"value":"/ then gets an object from the second parser.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":208985,"byte_end":209032,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":209033,"byte_end":209036,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":209037,"byte_end":209052,"line_start":59,"line_end":59,"column_start":1,"column_end":16}},{"value":"/ * `first` The opening parser.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":209053,"byte_end":209086,"line_start":60,"line_end":60,"column_start":1,"column_end":34}},{"value":"/ * `second` The second parser to get object.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":209087,"byte_end":209134,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":209135,"byte_end":209146,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":209147,"byte_end":209194,"line_start":63,"line_end":63,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":209195,"byte_end":209223,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::preceded;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":209224,"byte_end":209256,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":209257,"byte_end":209291,"line_start":66,"line_end":66,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":209292,"byte_end":209295,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ let mut parser = preceded(tag(\"abc\"), tag(\"efg\"));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":209296,"byte_end":209350,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":209351,"byte_end":209354,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcefg\"), Ok((\"\", \"efg\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":209355,"byte_end":209405,"line_start":70,"line_end":70,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"abcefghij\"), Ok((\"hij\", \"efg\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":209406,"byte_end":209462,"line_start":71,"line_end":71,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":209463,"byte_end":209529,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":209530,"byte_end":209602,"line_start":73,"line_end":73,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":209603,"byte_end":209610,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1223},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":209972,"byte_end":209981,"line_start":91,"line_end":91,"column_start":8,"column_end":17},"name":"precededc","qualname":"::sequence::precededc","value":"pub fn precededc<I, O1, O2, E: ParseError<I>, F, G>(I, F, G)\n-> IResult<I, O2, E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(I) ->\nIResult<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1230},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":210898,"byte_end":210908,"line_start":122,"line_end":122,"column_start":8,"column_end":18},"name":"terminated","qualname":"::sequence::terminated","value":"pub fn terminated<I, O1, O2, E: ParseError<I>, F, G>(F, G) -> /*impl Trait*/\nwhere F: Parser<I, O1, E>, G: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets an object from the first parser,\n then matches an object from the second parser and discards it.","sig":null,"attributes":[{"value":"/ Gets an object from the first parser,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":210188,"byte_end":210229,"line_start":103,"line_end":103,"column_start":1,"column_end":42}},{"value":"/ then matches an object from the second parser and discards it.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":210230,"byte_end":210296,"line_start":104,"line_end":104,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":210297,"byte_end":210300,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":210301,"byte_end":210316,"line_start":106,"line_end":106,"column_start":1,"column_end":16}},{"value":"/ * `first` The first parser to apply.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":210317,"byte_end":210357,"line_start":107,"line_end":107,"column_start":1,"column_end":41}},{"value":"/ * `second` The second parser to match an object.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":210358,"byte_end":210410,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":210411,"byte_end":210422,"line_start":109,"line_end":109,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":210423,"byte_end":210470,"line_start":110,"line_end":110,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":210471,"byte_end":210499,"line_start":111,"line_end":111,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::terminated;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":210500,"byte_end":210534,"line_start":112,"line_end":112,"column_start":1,"column_end":35}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":210535,"byte_end":210569,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":210570,"byte_end":210573,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ let mut parser = terminated(tag(\"abc\"), tag(\"efg\"));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":210574,"byte_end":210630,"line_start":115,"line_end":115,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":210631,"byte_end":210634,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcefg\"), Ok((\"\", \"abc\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":210635,"byte_end":210685,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"abcefghij\"), Ok((\"hij\", \"abc\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":210686,"byte_end":210742,"line_start":118,"line_end":118,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":210743,"byte_end":210809,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":210810,"byte_end":210882,"line_start":120,"line_end":120,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":210883,"byte_end":210890,"line_start":121,"line_end":121,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1240},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":211277,"byte_end":211288,"line_start":138,"line_end":138,"column_start":8,"column_end":19},"name":"terminatedc","qualname":"::sequence::terminatedc","value":"pub fn terminatedc<I, O1, O2, E: ParseError<I>, F, G>(I, F, G)\n-> IResult<I, O1, E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(I) ->\nIResult<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1247},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":212328,"byte_end":212342,"line_start":171,"line_end":171,"column_start":8,"column_end":22},"name":"separated_pair","qualname":"::sequence::separated_pair","value":"pub fn separated_pair<I, O1, O2, O3, E: ParseError<I>, F, G, H>(F, G, H)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: Parser<I, O2, E>,\nH: Parser<I, O3, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets an object from the first parser,\n then matches an object from the sep_parser and discards it,\n then gets another object from the second parser.","sig":null,"attributes":[{"value":"/ Gets an object from the first parser,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":211497,"byte_end":211538,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ then matches an object from the sep_parser and discards it,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":211539,"byte_end":211602,"line_start":151,"line_end":151,"column_start":1,"column_end":64}},{"value":"/ then gets another object from the second parser.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":211603,"byte_end":211655,"line_start":152,"line_end":152,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":211656,"byte_end":211659,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":211660,"byte_end":211675,"line_start":154,"line_end":154,"column_start":1,"column_end":16}},{"value":"/ * `first` The first parser to apply.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":211676,"byte_end":211716,"line_start":155,"line_end":155,"column_start":1,"column_end":41}},{"value":"/ * `sep` The separator parser to apply.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":211717,"byte_end":211759,"line_start":156,"line_end":156,"column_start":1,"column_end":43}},{"value":"/ * `second` The second parser to apply.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":211760,"byte_end":211802,"line_start":157,"line_end":157,"column_start":1,"column_end":43}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":211803,"byte_end":211814,"line_start":158,"line_end":158,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":211815,"byte_end":211862,"line_start":159,"line_end":159,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":211863,"byte_end":211891,"line_start":160,"line_end":160,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::separated_pair;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":211892,"byte_end":211930,"line_start":161,"line_end":161,"column_start":1,"column_end":39}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":211931,"byte_end":211965,"line_start":162,"line_end":162,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":211966,"byte_end":211969,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let mut parser = separated_pair(tag(\"abc\"), tag(\"|\"), tag(\"efg\"));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":211970,"byte_end":212040,"line_start":164,"line_end":164,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":212041,"byte_end":212044,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc|efg\"), Ok((\"\", (\"abc\", \"efg\"))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":212045,"byte_end":212105,"line_start":166,"line_end":166,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(parser(\"abc|efghij\"), Ok((\"hij\", (\"abc\", \"efg\"))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":212106,"byte_end":212172,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":212173,"byte_end":212239,"line_start":168,"line_end":168,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":212240,"byte_end":212312,"line_start":169,"line_end":169,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":212313,"byte_end":212320,"line_start":170,"line_end":170,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1259},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":212808,"byte_end":212823,"line_start":190,"line_end":190,"column_start":8,"column_end":23},"name":"separated_pairc","qualname":"::sequence::separated_pairc","value":"pub fn separated_pairc<I, O1, O2, O3, E: ParseError<I>, F, G, H>(I, F, G, H)\n-> IResult<I, (O1, O3), E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(I) ->\nIResult<I, O2, E>, H: Fn(I) -> IResult<I, O3, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1268},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213883,"byte_end":213892,"line_start":225,"line_end":225,"column_start":8,"column_end":17},"name":"delimited","qualname":"::sequence::delimited","value":"pub fn delimited<I, O1, O2, O3, E: ParseError<I>, F, G, H>(F, G, H)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: Parser<I, O2, E>,\nH: Parser<I, O3, E>","parent":null,"children":[],"decl_id":null,"docs":" Matches an object from the first parser,\n then gets an object from the sep_parser,\n then matches another object from the second parser.","sig":null,"attributes":[{"value":"/ Matches an object from the first parser,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213097,"byte_end":213141,"line_start":204,"line_end":204,"column_start":1,"column_end":45}},{"value":"/ then gets an object from the sep_parser,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213142,"byte_end":213186,"line_start":205,"line_end":205,"column_start":1,"column_end":45}},{"value":"/ then matches another object from the second parser.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213187,"byte_end":213242,"line_start":206,"line_end":206,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213243,"byte_end":213246,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213247,"byte_end":213262,"line_start":208,"line_end":208,"column_start":1,"column_end":16}},{"value":"/ * `first` The first parser to apply.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213263,"byte_end":213303,"line_start":209,"line_end":209,"column_start":1,"column_end":41}},{"value":"/ * `sep` The separator parser to apply.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213304,"byte_end":213346,"line_start":210,"line_end":210,"column_start":1,"column_end":43}},{"value":"/ * `second` The second parser to apply.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213347,"byte_end":213389,"line_start":211,"line_end":211,"column_start":1,"column_end":43}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213390,"byte_end":213401,"line_start":212,"line_end":212,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213402,"byte_end":213449,"line_start":213,"line_end":213,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213450,"byte_end":213478,"line_start":214,"line_end":214,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::delimited;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213479,"byte_end":213512,"line_start":215,"line_end":215,"column_start":1,"column_end":34}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213513,"byte_end":213547,"line_start":216,"line_end":216,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213548,"byte_end":213551,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ let mut parser = delimited(tag(\"abc\"), tag(\"|\"), tag(\"efg\"));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213552,"byte_end":213617,"line_start":218,"line_end":218,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213618,"byte_end":213621,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc|efg\"), Ok((\"\", \"|\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213622,"byte_end":213671,"line_start":220,"line_end":220,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"abc|efghij\"), Ok((\"hij\", \"|\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213672,"byte_end":213727,"line_start":221,"line_end":221,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213728,"byte_end":213794,"line_start":222,"line_end":222,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213795,"byte_end":213867,"line_start":223,"line_end":223,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":213868,"byte_end":213875,"line_start":224,"line_end":224,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1280},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":214345,"byte_end":214355,"line_start":244,"line_end":244,"column_start":8,"column_end":18},"name":"delimitedc","qualname":"::sequence::delimitedc","value":"pub fn delimitedc<I, O1, O2, O3, E: ParseError<I>, F, G, H>(I, F, G, H)\n-> IResult<I, O2, E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(I) ->\nIResult<I, O2, E>, H: Fn(I) -> IResult<I, O3, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1289},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":214749,"byte_end":214754,"line_start":261,"line_end":261,"column_start":11,"column_end":16},"name":"Tuple","qualname":"::sequence::Tuple","value":"Tuple<I, O, E>","parent":null,"children":[{"krate":0,"index":1293}],"decl_id":null,"docs":" Helper trait for the tuple combinator.","sig":null,"attributes":[{"value":"/ Helper trait for the tuple combinator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":214618,"byte_end":214660,"line_start":258,"line_end":258,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":214661,"byte_end":214664,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for tuples of parsers of up to 21 elements.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":214665,"byte_end":214738,"line_start":260,"line_end":260,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":214841,"byte_end":214846,"line_start":263,"line_end":263,"column_start":6,"column_end":11},"name":"parse","qualname":"::sequence::Tuple::parse","value":"pub fn parse(&mut Self, I) -> IResult<I, O, E>","parent":{"krate":0,"index":1289},"children":[],"decl_id":null,"docs":" Parses the input and returns a tuple of results of each parser.\n","sig":null,"attributes":[{"value":"/ Parses the input and returns a tuple of results of each parser.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":214768,"byte_end":214835,"line_start":262,"line_end":262,"column_start":3,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":1304},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":217331,"byte_end":217336,"line_start":335,"line_end":335,"column_start":8,"column_end":13},"name":"tuple","qualname":"::sequence::tuple","value":"pub fn tuple<I, O, E: ParseError<I>, List: Tuple<I, O, E>>(List)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"Applies a tuple of parsers one by one and returns their results as a tuple.","sig":null,"attributes":[{"value":"/Applies a tuple of parsers one by one and returns their results as a tuple.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":216890,"byte_end":216968,"line_start":324,"line_end":324,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":216969,"byte_end":216972,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":216973,"byte_end":216984,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":216985,"byte_end":217024,"line_start":327,"line_end":327,"column_start":1,"column_end":40}},{"value":"/ use nom::sequence::tuple;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":217025,"byte_end":217054,"line_start":328,"line_end":328,"column_start":1,"column_end":30}},{"value":"/ use nom::character::complete::{alpha1, digit1};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":217055,"byte_end":217106,"line_start":329,"line_end":329,"column_start":1,"column_end":52}},{"value":"/ let mut parser = tuple((alpha1, digit1, alpha1));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":217107,"byte_end":217160,"line_start":330,"line_end":330,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":217161,"byte_end":217164,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc123def\"), Ok((\"\", (\"abc\", \"123\", \"def\"))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":217165,"byte_end":217234,"line_start":332,"line_end":332,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(parser(\"123def\"), Err(Err::Error((\"123def\", ErrorKind::Alpha))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":217235,"byte_end":217315,"line_start":333,"line_end":333,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/sequence/mod.rs","byte_start":217316,"byte_end":217323,"line_start":334,"line_end":334,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1311},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"multi","qualname":"::multi","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","parent":null,"children":[{"krate":0,"index":1312},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1348},{"krate":0,"index":1353},{"krate":0,"index":1360},{"krate":0,"index":1365},{"krate":0,"index":1374},{"krate":0,"index":1381},{"krate":0,"index":1390},{"krate":0,"index":1397},{"krate":0,"index":1406},{"krate":0,"index":1413},{"krate":0,"index":1420},{"krate":0,"index":1425},{"krate":0,"index":1432},{"krate":0,"index":1437},{"krate":0,"index":1444},{"krate":0,"index":1449},{"krate":0,"index":1456},{"krate":0,"index":1464},{"krate":0,"index":1473},{"krate":0,"index":1480},{"krate":0,"index":1489},{"krate":0,"index":1496},{"krate":0,"index":1505},{"krate":0,"index":1512},{"krate":0,"index":1519},{"krate":0,"index":1528},{"krate":0,"index":1535}],"decl_id":null,"docs":" Combinators applying their child parser multiple times\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16634,"byte_end":16646,"line_start":496,"line_end":496,"column_start":1,"column_end":13}},{"value":"/ Combinators applying their child parser multiple times","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":244977,"byte_end":245035,"line_start":1,"line_end":1,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":1341},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":246188,"byte_end":246193,"line_start":40,"line_end":40,"column_start":8,"column_end":13},"name":"many0","qualname":"::multi::many0","value":"pub fn many0<I, O, E, F>(F) -> /*impl Trait*/ where I: Clone + PartialEq,\nF: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Repeats the embedded parser until it fails\n and returns the results in a `Vec`.","sig":null,"attributes":[{"value":"/ Repeats the embedded parser until it fails","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245316,"byte_end":245362,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ and returns the results in a `Vec`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245363,"byte_end":245402,"line_start":15,"line_end":15,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245403,"byte_end":245406,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245407,"byte_end":245422,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245423,"byte_end":245453,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245454,"byte_end":245457,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ *Note*: if the parser passed to `many0` accepts empty inputs","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245458,"byte_end":245522,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ (like `alpha0` or `digit0`), `many0` will return an error,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245523,"byte_end":245585,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ to prevent going into an infinite loop","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245586,"byte_end":245628,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245629,"byte_end":245632,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245633,"byte_end":245644,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245645,"byte_end":245701,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::many0;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245702,"byte_end":245728,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245729,"byte_end":245763,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245764,"byte_end":245767,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245768,"byte_end":245820,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"/   many0(tag(\"abc\"))(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245821,"byte_end":245847,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245848,"byte_end":245853,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245854,"byte_end":245857,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245858,"byte_end":245921,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245922,"byte_end":245981,"line_start":34,"line_end":34,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":245982,"byte_end":246039,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":246040,"byte_end":246085,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":246086,"byte_end":246093,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":246094,"byte_end":246119,"line_start":38,"line_end":38,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1348},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":246928,"byte_end":246934,"line_start":68,"line_end":68,"column_start":8,"column_end":14},"name":"many0c","qualname":"::multi::many0c","value":"pub fn many0c<I, O, E, F>(I, F) -> IResult<I, Vec<O>, E> where I: Clone +\nPartialEq, F: Fn(I) -> IResult<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":246834,"byte_end":246859,"line_start":66,"line_end":66,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1353},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":248109,"byte_end":248114,"line_start":105,"line_end":105,"column_start":8,"column_end":13},"name":"many1","qualname":"::multi::many1","value":"pub fn many1<I, O, E, F>(F) -> /*impl Trait*/ where I: Clone + PartialEq,\nF: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Runs the embedded parser until it fails and\n returns the results in a `Vec`. Fails if\n the embedded parser does not produce at least\n one result.","sig":null,"attributes":[{"value":"/ Runs the embedded parser until it fails and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247093,"byte_end":247140,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/ returns the results in a `Vec`. Fails if","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247141,"byte_end":247185,"line_start":78,"line_end":78,"column_start":1,"column_end":45}},{"value":"/ the embedded parser does not produce at least","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247186,"byte_end":247235,"line_start":79,"line_end":79,"column_start":1,"column_end":50}},{"value":"/ one result.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247236,"byte_end":247251,"line_start":80,"line_end":80,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247252,"byte_end":247255,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247256,"byte_end":247271,"line_start":82,"line_end":82,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247272,"byte_end":247302,"line_start":83,"line_end":83,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247303,"byte_end":247306,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ *Note*: If the parser passed to `many1` accepts empty inputs","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247307,"byte_end":247371,"line_start":85,"line_end":85,"column_start":1,"column_end":65}},{"value":"/ (like `alpha0` or `digit0`), `many1` will return an error,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247372,"byte_end":247434,"line_start":86,"line_end":86,"column_start":1,"column_end":63}},{"value":"/ to prevent going into an infinite loop.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247435,"byte_end":247478,"line_start":87,"line_end":87,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247479,"byte_end":247482,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247483,"byte_end":247494,"line_start":89,"line_end":89,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247495,"byte_end":247560,"line_start":90,"line_end":90,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::many1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247561,"byte_end":247587,"line_start":91,"line_end":91,"column_start":1,"column_end":27}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247588,"byte_end":247622,"line_start":92,"line_end":92,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247623,"byte_end":247626,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247627,"byte_end":247679,"line_start":94,"line_end":94,"column_start":1,"column_end":53}},{"value":"/   many1(tag(\"abc\"))(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247680,"byte_end":247706,"line_start":95,"line_end":95,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247707,"byte_end":247712,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247713,"byte_end":247716,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247717,"byte_end":247780,"line_start":98,"line_end":98,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247781,"byte_end":247840,"line_start":99,"line_end":99,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247841,"byte_end":247929,"line_start":100,"line_end":100,"column_start":1,"column_end":89}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":247930,"byte_end":248006,"line_start":101,"line_end":101,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":248007,"byte_end":248014,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":248015,"byte_end":248040,"line_start":103,"line_end":103,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1360},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":249068,"byte_end":249074,"line_start":141,"line_end":141,"column_start":8,"column_end":14},"name":"many1c","qualname":"::multi::many1c","value":"pub fn many1c<I, O, E, F>(I, F) -> IResult<I, Vec<O>, E> where I: Clone +\nCopy + PartialEq, F: Fn(I) -> IResult<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":248974,"byte_end":248999,"line_start":139,"line_end":139,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1365},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":250174,"byte_end":250183,"line_start":170,"line_end":170,"column_start":8,"column_end":17},"name":"many_till","qualname":"::multi::many_till","value":"pub fn many_till<I, O, P, E, F, G>(F, G) -> /*impl Trait*/ where I: Clone +\nPartialEq, F: Parser<I, O, E>, G: Parser<I, P, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Applies the parser `f` until the parser `g` produces\n a result. Returns a pair consisting of the results of\n `f` in a `Vec` and the result of `g`.\n ```rust\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::many_till;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Applies the parser `f` until the parser `g` produces","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":249240,"byte_end":249296,"line_start":150,"line_end":150,"column_start":1,"column_end":57}},{"value":"/ a result. Returns a pair consisting of the results of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":249297,"byte_end":249354,"line_start":151,"line_end":151,"column_start":1,"column_end":58}},{"value":"/ `f` in a `Vec` and the result of `g`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":249355,"byte_end":249396,"line_start":152,"line_end":152,"column_start":1,"column_end":42}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":249397,"byte_end":249408,"line_start":153,"line_end":153,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":249409,"byte_end":249474,"line_start":154,"line_end":154,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::many_till;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":249475,"byte_end":249505,"line_start":155,"line_end":155,"column_start":1,"column_end":31}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":249506,"byte_end":249540,"line_start":156,"line_end":156,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":249541,"byte_end":249544,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, (Vec<&str>, &str)> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":249545,"byte_end":249605,"line_start":158,"line_end":158,"column_start":1,"column_end":61}},{"value":"/   many_till(tag(\"abc\"), tag(\"end\"))(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":249606,"byte_end":249648,"line_start":159,"line_end":159,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":249649,"byte_end":249655,"line_start":160,"line_end":160,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":249656,"byte_end":249659,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabcend\"), Ok((\"\", (vec![\"abc\", \"abc\"], \"end\"))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":249660,"byte_end":249735,"line_start":162,"line_end":162,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(\"abc123end\"), Err(Err::Error(Error::new(\"123end\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":249736,"byte_end":249827,"line_start":163,"line_end":163,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\"123123end\"), Err(Err::Error(Error::new(\"123123end\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":249828,"byte_end":249922,"line_start":164,"line_end":164,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":249923,"byte_end":249999,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(\"abcendefg\"), Ok((\"efg\", (vec![\"abc\"], \"end\"))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":250000,"byte_end":250071,"line_start":166,"line_end":166,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":250072,"byte_end":250079,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":250080,"byte_end":250105,"line_start":168,"line_end":168,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1374},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":251291,"byte_end":251301,"line_start":210,"line_end":210,"column_start":8,"column_end":18},"name":"many_tillc","qualname":"::multi::many_tillc","value":"pub fn many_tillc<I, O, P, E, F, G>(I, F, G) -> IResult<I, (Vec<O>, P), E>\nwhere I: Clone + PartialEq, F: Fn(I) -> IResult<I, O, E>, G: Fn(I) ->\nIResult<I, P, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":251197,"byte_end":251222,"line_start":208,"line_end":208,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1381},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":252364,"byte_end":252379,"line_start":243,"line_end":243,"column_start":8,"column_end":23},"name":"separated_list0","qualname":"::multi::separated_list0","value":"pub fn separated_list0<I, O, O2, E, F, G>(G, F) -> /*impl Trait*/ where\nI: Clone + PartialEq, F: Parser<I, O, E>, G: Parser<I, O2, E>,\nE: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Alternates between two parsers to produce\n a list of elements.\n # Arguments\n * `sep` Parses the separator between list elements.\n * `f` Parses the elements of the list.","sig":null,"attributes":[{"value":"/ Alternates between two parsers to produce","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":251508,"byte_end":251553,"line_start":220,"line_end":220,"column_start":1,"column_end":46}},{"value":"/ a list of elements.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":251554,"byte_end":251577,"line_start":221,"line_end":221,"column_start":1,"column_end":24}},{"value":"/ # Arguments","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":251578,"byte_end":251593,"line_start":222,"line_end":222,"column_start":1,"column_end":16}},{"value":"/ * `sep` Parses the separator between list elements.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":251594,"byte_end":251649,"line_start":223,"line_end":223,"column_start":1,"column_end":56}},{"value":"/ * `f` Parses the elements of the list.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":251650,"byte_end":251692,"line_start":224,"line_end":224,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":251693,"byte_end":251696,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":251697,"byte_end":251708,"line_start":226,"line_end":226,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":251709,"byte_end":251765,"line_start":227,"line_end":227,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::separated_list0;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":251766,"byte_end":251802,"line_start":228,"line_end":228,"column_start":1,"column_end":37}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":251803,"byte_end":251837,"line_start":229,"line_end":229,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":251838,"byte_end":251841,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":251842,"byte_end":251894,"line_start":231,"line_end":231,"column_start":1,"column_end":53}},{"value":"/   separated_list0(tag(\"|\"), tag(\"abc\"))(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":251895,"byte_end":251941,"line_start":232,"line_end":232,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":251942,"byte_end":251947,"line_start":233,"line_end":233,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":251948,"byte_end":251951,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc|abc|abc\"), Ok((\"\", vec![\"abc\", \"abc\", \"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":251952,"byte_end":252027,"line_start":235,"line_end":235,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(\"abc123abc\"), Ok((\"123abc\", vec![\"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":252028,"byte_end":252093,"line_start":236,"line_end":236,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(parser(\"abc|def\"), Ok((\"|def\", vec![\"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":252094,"byte_end":252155,"line_start":237,"line_end":237,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":252156,"byte_end":252201,"line_start":238,"line_end":238,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"def|abc\"), Ok((\"def|abc\", vec![])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":252202,"byte_end":252261,"line_start":239,"line_end":239,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":252262,"byte_end":252269,"line_start":240,"line_end":240,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":252270,"byte_end":252295,"line_start":241,"line_end":241,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1390},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":253522,"byte_end":253538,"line_start":292,"line_end":292,"column_start":8,"column_end":24},"name":"separated_list0c","qualname":"::multi::separated_list0c","value":"pub fn separated_list0c<I, O, O2, E, F, G>(I, G, F) -> IResult<I, Vec<O>, E>\nwhere I: Clone + PartialEq, F: Fn(I) -> IResult<I, O, E>, G: Fn(I) ->\nIResult<I, O2, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":253428,"byte_end":253453,"line_start":290,"line_end":290,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1397},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":254783,"byte_end":254798,"line_start":326,"line_end":326,"column_start":8,"column_end":23},"name":"separated_list1","qualname":"::multi::separated_list1","value":"pub fn separated_list1<I, O, O2, E, F, G>(G, F) -> /*impl Trait*/ where\nI: Clone + PartialEq, F: Parser<I, O, E>, G: Parser<I, O2, E>,\nE: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Alternates between two parsers to produce\n a list of elements. Fails if the element\n parser does not produce at least one element.\n # Arguments\n * `sep` Parses the separator between list elements.\n * `f` Parses the elements of the list.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::separated_list1;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Alternates between two parsers to produce","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":253752,"byte_end":253797,"line_start":302,"line_end":302,"column_start":1,"column_end":46}},{"value":"/ a list of elements. Fails if the element","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":253798,"byte_end":253842,"line_start":303,"line_end":303,"column_start":1,"column_end":45}},{"value":"/ parser does not produce at least one element.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":253843,"byte_end":253892,"line_start":304,"line_end":304,"column_start":1,"column_end":50}},{"value":"/ # Arguments","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":253893,"byte_end":253908,"line_start":305,"line_end":305,"column_start":1,"column_end":16}},{"value":"/ * `sep` Parses the separator between list elements.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":253909,"byte_end":253964,"line_start":306,"line_end":306,"column_start":1,"column_end":56}},{"value":"/ * `f` Parses the elements of the list.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":253965,"byte_end":254007,"line_start":307,"line_end":307,"column_start":1,"column_end":43}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":254008,"byte_end":254019,"line_start":308,"line_end":308,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":254020,"byte_end":254056,"line_start":309,"line_end":309,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":254057,"byte_end":254122,"line_start":310,"line_end":310,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::separated_list1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":254123,"byte_end":254159,"line_start":311,"line_end":311,"column_start":1,"column_end":37}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":254160,"byte_end":254194,"line_start":312,"line_end":312,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":254195,"byte_end":254198,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":254199,"byte_end":254251,"line_start":314,"line_end":314,"column_start":1,"column_end":53}},{"value":"/   separated_list1(tag(\"|\"), tag(\"abc\"))(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":254252,"byte_end":254298,"line_start":315,"line_end":315,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":254299,"byte_end":254304,"line_start":316,"line_end":316,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":254305,"byte_end":254308,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc|abc|abc\"), Ok((\"\", vec![\"abc\", \"abc\", \"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":254309,"byte_end":254384,"line_start":318,"line_end":318,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(\"abc123abc\"), Ok((\"123abc\", vec![\"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":254385,"byte_end":254450,"line_start":319,"line_end":319,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(parser(\"abc|def\"), Ok((\"|def\", vec![\"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":254451,"byte_end":254512,"line_start":320,"line_end":320,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":254513,"byte_end":254589,"line_start":321,"line_end":321,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(\"def|abc\"), Err(Err::Error(Error::new(\"def|abc\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":254590,"byte_end":254680,"line_start":322,"line_end":322,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":254681,"byte_end":254688,"line_start":323,"line_end":323,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":254689,"byte_end":254714,"line_start":324,"line_end":324,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1406},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":255923,"byte_end":255939,"line_start":375,"line_end":375,"column_start":8,"column_end":24},"name":"separated_list1c","qualname":"::multi::separated_list1c","value":"pub fn separated_list1c<I, O, O2, E, F, G>(I, G, F) -> IResult<I, Vec<O>, E>\nwhere I: Clone + PartialEq, F: Fn(I) -> IResult<I, O, E>, G: Fn(I) ->\nIResult<I, O2, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":255829,"byte_end":255854,"line_start":373,"line_end":373,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1413},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":257132,"byte_end":257140,"line_start":410,"line_end":410,"column_start":8,"column_end":16},"name":"many_m_n","qualname":"::multi::many_m_n","value":"pub fn many_m_n<I, O, E, F>(usize, usize, F) -> /*impl Trait*/ where\nI: Clone + PartialEq, F: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Repeats the embedded parser `n` times or until it fails\n and returns the results in a `Vec`. Fails if the\n embedded parser does not succeed at least `m` times.\n # Arguments\n * `m` The minimum number of iterations.\n * `n` The maximum number of iterations.\n * `f` The parser to apply.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::multi::many_m_n;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Repeats the embedded parser `n` times or until it fails","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256153,"byte_end":256212,"line_start":385,"line_end":385,"column_start":1,"column_end":60}},{"value":"/ and returns the results in a `Vec`. Fails if the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256213,"byte_end":256265,"line_start":386,"line_end":386,"column_start":1,"column_end":53}},{"value":"/ embedded parser does not succeed at least `m` times.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256266,"byte_end":256322,"line_start":387,"line_end":387,"column_start":1,"column_end":57}},{"value":"/ # Arguments","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256323,"byte_end":256338,"line_start":388,"line_end":388,"column_start":1,"column_end":16}},{"value":"/ * `m` The minimum number of iterations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256339,"byte_end":256382,"line_start":389,"line_end":389,"column_start":1,"column_end":44}},{"value":"/ * `n` The maximum number of iterations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256383,"byte_end":256426,"line_start":390,"line_end":390,"column_start":1,"column_end":44}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256427,"byte_end":256457,"line_start":391,"line_end":391,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256458,"byte_end":256469,"line_start":392,"line_end":392,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256470,"byte_end":256506,"line_start":393,"line_end":393,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256507,"byte_end":256563,"line_start":394,"line_end":394,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::many_m_n;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256564,"byte_end":256593,"line_start":395,"line_end":395,"column_start":1,"column_end":30}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256594,"byte_end":256628,"line_start":396,"line_end":396,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256629,"byte_end":256632,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256633,"byte_end":256685,"line_start":398,"line_end":398,"column_start":1,"column_end":53}},{"value":"/   many_m_n(0, 2, tag(\"abc\"))(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256686,"byte_end":256721,"line_start":399,"line_end":399,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256722,"byte_end":256727,"line_start":400,"line_end":400,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256728,"byte_end":256731,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256732,"byte_end":256795,"line_start":402,"line_end":402,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256796,"byte_end":256855,"line_start":403,"line_end":403,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256856,"byte_end":256913,"line_start":404,"line_end":404,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256914,"byte_end":256959,"line_start":405,"line_end":405,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":256960,"byte_end":257029,"line_start":406,"line_end":406,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":257030,"byte_end":257037,"line_start":407,"line_end":407,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":257038,"byte_end":257063,"line_start":408,"line_end":408,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1420},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":258343,"byte_end":258352,"line_start":460,"line_end":460,"column_start":8,"column_end":17},"name":"many_m_nc","qualname":"::multi::many_m_nc","value":"pub fn many_m_nc<I, O, E, F>(I, usize, usize, F) -> IResult<I, Vec<O>, E>\nwhere I: Clone + PartialEq, F: Fn(I) -> IResult<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":258310,"byte_end":258335,"line_start":459,"line_end":459,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1425},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":259155,"byte_end":259166,"line_start":488,"line_end":488,"column_start":8,"column_end":19},"name":"many0_count","qualname":"::multi::many0_count","value":"pub fn many0_count<I, O, E, F>(F) -> /*impl Trait*/ where I: Clone +\nPartialEq, F: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Repeats the embedded parser until it fails\n and returns the number of successful iterations.\n # Arguments\n * `f` The parser to apply.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::multi::many0_count;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Repeats the embedded parser until it fails","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":258532,"byte_end":258578,"line_start":469,"line_end":469,"column_start":1,"column_end":47}},{"value":"/ and returns the number of successful iterations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":258579,"byte_end":258631,"line_start":470,"line_end":470,"column_start":1,"column_end":53}},{"value":"/ # Arguments","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":258632,"byte_end":258647,"line_start":471,"line_end":471,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":258648,"byte_end":258678,"line_start":472,"line_end":472,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":258679,"byte_end":258690,"line_start":473,"line_end":473,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":258691,"byte_end":258727,"line_start":474,"line_end":474,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":258728,"byte_end":258784,"line_start":475,"line_end":475,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::many0_count;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":258785,"byte_end":258817,"line_start":476,"line_end":476,"column_start":1,"column_end":33}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":258818,"byte_end":258852,"line_start":477,"line_end":477,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":258853,"byte_end":258856,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, usize> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":258857,"byte_end":258905,"line_start":479,"line_end":479,"column_start":1,"column_end":49}},{"value":"/   many0_count(tag(\"abc\"))(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":258906,"byte_end":258938,"line_start":480,"line_end":480,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":258939,"byte_end":258944,"line_start":481,"line_end":481,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":258945,"byte_end":258948,"line_start":482,"line_end":482,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", 2)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":258949,"byte_end":258995,"line_start":483,"line_end":483,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", 1)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":258996,"byte_end":259045,"line_start":484,"line_end":484,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", 0)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":259046,"byte_end":259098,"line_start":485,"line_end":485,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", 0)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":259099,"byte_end":259139,"line_start":486,"line_end":486,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":259140,"byte_end":259147,"line_start":487,"line_end":487,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1432},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":259850,"byte_end":259862,"line_start":520,"line_end":520,"column_start":8,"column_end":20},"name":"many0_countc","qualname":"::multi::many0_countc","value":"pub fn many0_countc<I, O, E, F>(I, F) -> IResult<I, usize, E> where I: Clone +\nPartialEq, F: Fn(I) -> IResult<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1437},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260805,"byte_end":260816,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"many1_count","qualname":"::multi::many1_count","value":"pub fn many1_count<I, O, E, F>(F) -> /*impl Trait*/ where I: Clone +\nPartialEq, F: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Repeats the embedded parser until it fails\n and returns the number of successful iterations.\n Fails if the embedded parser does not succeed\n at least once.\n # Arguments\n * `f` The parser to apply.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::many1_count;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Repeats the embedded parser until it fails","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260018,"byte_end":260064,"line_start":529,"line_end":529,"column_start":1,"column_end":47}},{"value":"/ and returns the number of successful iterations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260065,"byte_end":260117,"line_start":530,"line_end":530,"column_start":1,"column_end":53}},{"value":"/ Fails if the embedded parser does not succeed","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260118,"byte_end":260167,"line_start":531,"line_end":531,"column_start":1,"column_end":50}},{"value":"/ at least once.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260168,"byte_end":260186,"line_start":532,"line_end":532,"column_start":1,"column_end":19}},{"value":"/ # Arguments","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260187,"byte_end":260202,"line_start":533,"line_end":533,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260203,"byte_end":260233,"line_start":534,"line_end":534,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260234,"byte_end":260245,"line_start":535,"line_end":535,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260246,"byte_end":260282,"line_start":536,"line_end":536,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260283,"byte_end":260348,"line_start":537,"line_end":537,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::many1_count;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260349,"byte_end":260381,"line_start":538,"line_end":538,"column_start":1,"column_end":33}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260382,"byte_end":260416,"line_start":539,"line_end":539,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260417,"byte_end":260420,"line_start":540,"line_end":540,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, usize> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260421,"byte_end":260469,"line_start":541,"line_end":541,"column_start":1,"column_end":49}},{"value":"/   many1_count(tag(\"abc\"))(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260470,"byte_end":260502,"line_start":542,"line_end":542,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260503,"byte_end":260508,"line_start":543,"line_end":543,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260509,"byte_end":260512,"line_start":544,"line_end":544,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", 2)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260513,"byte_end":260559,"line_start":545,"line_end":545,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", 1)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260560,"byte_end":260609,"line_start":546,"line_end":546,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Many1Count))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260610,"byte_end":260705,"line_start":547,"line_end":547,"column_start":1,"column_end":96}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Many1Count))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260706,"byte_end":260789,"line_start":548,"line_end":548,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":260790,"byte_end":260797,"line_start":549,"line_end":549,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1444},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":261688,"byte_end":261700,"line_start":586,"line_end":586,"column_start":8,"column_end":20},"name":"many1_countc","qualname":"::multi::many1_countc","value":"pub fn many1_countc<I, O, E, F>(I, F) -> IResult<I, usize, E> where I: Clone +\nPartialEq, F: Fn(I) -> IResult<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1449},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":262804,"byte_end":262809,"line_start":618,"line_end":618,"column_start":8,"column_end":13},"name":"count","qualname":"::multi::count","value":"pub fn count<I, O, E, F>(F, usize) -> /*impl Trait*/ where I: Clone +\nPartialEq, F: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Runs the embedded parser a specified number\n of times. Returns the results in a `Vec`.\n # Arguments\n * `f` The parser to apply.\n * `count` How often to apply the parser.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::count;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Runs the embedded parser a specified number","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":261856,"byte_end":261903,"line_start":595,"line_end":595,"column_start":1,"column_end":48}},{"value":"/ of times. Returns the results in a `Vec`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":261904,"byte_end":261949,"line_start":596,"line_end":596,"column_start":1,"column_end":46}},{"value":"/ # Arguments","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":261950,"byte_end":261965,"line_start":597,"line_end":597,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":261966,"byte_end":261996,"line_start":598,"line_end":598,"column_start":1,"column_end":31}},{"value":"/ * `count` How often to apply the parser.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":261997,"byte_end":262041,"line_start":599,"line_end":599,"column_start":1,"column_end":45}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":262042,"byte_end":262053,"line_start":600,"line_end":600,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":262054,"byte_end":262090,"line_start":601,"line_end":601,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":262091,"byte_end":262156,"line_start":602,"line_end":602,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::count;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":262157,"byte_end":262183,"line_start":603,"line_end":603,"column_start":1,"column_end":27}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":262184,"byte_end":262218,"line_start":604,"line_end":604,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":262219,"byte_end":262222,"line_start":605,"line_end":605,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":262223,"byte_end":262275,"line_start":606,"line_end":606,"column_start":1,"column_end":53}},{"value":"/   count(tag(\"abc\"), 2)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":262276,"byte_end":262305,"line_start":607,"line_end":607,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":262306,"byte_end":262311,"line_start":608,"line_end":608,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":262312,"byte_end":262315,"line_start":609,"line_end":609,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":262316,"byte_end":262379,"line_start":610,"line_end":610,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Err(Err::Error(Error::new(\"123\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":262380,"byte_end":262465,"line_start":611,"line_end":611,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":262466,"byte_end":262554,"line_start":612,"line_end":612,"column_start":1,"column_end":89}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":262555,"byte_end":262631,"line_start":613,"line_end":613,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":262632,"byte_end":262701,"line_start":614,"line_end":614,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":262702,"byte_end":262709,"line_start":615,"line_end":615,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":262710,"byte_end":262735,"line_start":616,"line_end":616,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1456},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":264427,"byte_end":264431,"line_start":671,"line_end":671,"column_start":8,"column_end":12},"name":"fill","qualname":"::multi::fill","value":"pub fn fill<'a, I, O, E, F>(F, &'a mut [O]) -> /*impl Trait*/ where I: Clone +\nPartialEq, F: Fn(I) -> IResult<I, O, E> + 'a, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Runs the embedded parser repeatedly, filling the given slice with results. This parser fails if\n the input runs out before the given slice is full.\n # Arguments\n * `f` The parser to apply.\n * `buf` The slice to fill\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::fill;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Runs the embedded parser repeatedly, filling the given slice with results. This parser fails if","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":263452,"byte_end":263551,"line_start":648,"line_end":648,"column_start":1,"column_end":100}},{"value":"/ the input runs out before the given slice is full.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":263552,"byte_end":263606,"line_start":649,"line_end":649,"column_start":1,"column_end":55}},{"value":"/ # Arguments","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":263607,"byte_end":263622,"line_start":650,"line_end":650,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":263623,"byte_end":263653,"line_start":651,"line_end":651,"column_start":1,"column_end":31}},{"value":"/ * `buf` The slice to fill","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":263654,"byte_end":263683,"line_start":652,"line_end":652,"column_start":1,"column_end":30}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":263684,"byte_end":263695,"line_start":653,"line_end":653,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":263696,"byte_end":263732,"line_start":654,"line_end":654,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":263733,"byte_end":263798,"line_start":655,"line_end":655,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::fill;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":263799,"byte_end":263824,"line_start":656,"line_end":656,"column_start":1,"column_end":26}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":263825,"byte_end":263859,"line_start":657,"line_end":657,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":263860,"byte_end":263863,"line_start":658,"line_end":658,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, [&str; 2]> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":263864,"byte_end":263916,"line_start":659,"line_end":659,"column_start":1,"column_end":53}},{"value":"/   let mut buf = [\"\", \"\"];","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":263917,"byte_end":263946,"line_start":660,"line_end":660,"column_start":1,"column_end":30}},{"value":"/   let (rest, ()) = fill(tag(\"abc\"), &mut buf)(s)?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":263947,"byte_end":264001,"line_start":661,"line_end":661,"column_start":1,"column_end":55}},{"value":"/   Ok((rest, buf))","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":264002,"byte_end":264023,"line_start":662,"line_end":662,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":264024,"byte_end":264029,"line_start":663,"line_end":663,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":264030,"byte_end":264033,"line_start":664,"line_end":664,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", [\"abc\", \"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":264034,"byte_end":264093,"line_start":665,"line_end":665,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"abc123\"), Err(Err::Error(Error::new(\"123\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":264094,"byte_end":264179,"line_start":666,"line_end":666,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":264180,"byte_end":264268,"line_start":667,"line_end":667,"column_start":1,"column_end":89}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":264269,"byte_end":264345,"line_start":668,"line_end":668,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", [\"abc\", \"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":264346,"byte_end":264411,"line_start":669,"line_end":669,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":264412,"byte_end":264419,"line_start":670,"line_end":670,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1464},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265945,"byte_end":265955,"line_start":729,"line_end":729,"column_start":8,"column_end":18},"name":"fold_many0","qualname":"::multi::fold_many0","value":"pub fn fold_many0<I, O, E, F, G, R>(F, R, G) -> /*impl Trait*/ where\nI: Clone + PartialEq, F: Parser<I, O, E>, G: FnMut(R, O) -> R,\nE: ParseError<I>, R: Clone","parent":null,"children":[],"decl_id":null,"docs":" Applies a parser until it fails and accumulates\n the results using a given function and initial value.\n # Arguments\n * `f` The parser to apply.\n * `init` The initial value.\n * `g` The function that combines a result of `f` with\n       the current accumulator.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::multi::fold_many0;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Applies a parser until it fails and accumulates","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265027,"byte_end":265078,"line_start":700,"line_end":700,"column_start":1,"column_end":52}},{"value":"/ the results using a given function and initial value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265079,"byte_end":265136,"line_start":701,"line_end":701,"column_start":1,"column_end":58}},{"value":"/ # Arguments","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265137,"byte_end":265152,"line_start":702,"line_end":702,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265153,"byte_end":265183,"line_start":703,"line_end":703,"column_start":1,"column_end":31}},{"value":"/ * `init` The initial value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265184,"byte_end":265215,"line_start":704,"line_end":704,"column_start":1,"column_end":32}},{"value":"/ * `g` The function that combines a result of `f` with","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265216,"byte_end":265273,"line_start":705,"line_end":705,"column_start":1,"column_end":58}},{"value":"/       the current accumulator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265274,"byte_end":265308,"line_start":706,"line_end":706,"column_start":1,"column_end":35}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265309,"byte_end":265320,"line_start":707,"line_end":707,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265321,"byte_end":265357,"line_start":708,"line_end":708,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265358,"byte_end":265414,"line_start":709,"line_end":709,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::fold_many0;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265415,"byte_end":265446,"line_start":710,"line_end":710,"column_start":1,"column_end":32}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265447,"byte_end":265481,"line_start":711,"line_end":711,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265482,"byte_end":265485,"line_start":712,"line_end":712,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265486,"byte_end":265538,"line_start":713,"line_end":713,"column_start":1,"column_end":53}},{"value":"/   fold_many0(","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265539,"byte_end":265556,"line_start":714,"line_end":714,"column_start":1,"column_end":18}},{"value":"/     tag(\"abc\"),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265557,"byte_end":265576,"line_start":715,"line_end":715,"column_start":1,"column_end":20}},{"value":"/     Vec::new(),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265577,"byte_end":265596,"line_start":716,"line_end":716,"column_start":1,"column_end":20}},{"value":"/     |mut acc: Vec<_>, item| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265597,"byte_end":265630,"line_start":717,"line_end":717,"column_start":1,"column_end":34}},{"value":"/       acc.push(item);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265631,"byte_end":265656,"line_start":718,"line_end":718,"column_start":1,"column_end":26}},{"value":"/       acc","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265657,"byte_end":265670,"line_start":719,"line_end":719,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265671,"byte_end":265680,"line_start":720,"line_end":720,"column_start":1,"column_end":10}},{"value":"/   )(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265681,"byte_end":265691,"line_start":721,"line_end":721,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265692,"byte_end":265697,"line_start":722,"line_end":722,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265698,"byte_end":265701,"line_start":723,"line_end":723,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265702,"byte_end":265765,"line_start":724,"line_end":724,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265766,"byte_end":265825,"line_start":725,"line_end":725,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265826,"byte_end":265883,"line_start":726,"line_end":726,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265884,"byte_end":265929,"line_start":727,"line_end":727,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":265930,"byte_end":265937,"line_start":728,"line_end":728,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1473},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":266744,"byte_end":266755,"line_start":769,"line_end":769,"column_start":8,"column_end":19},"name":"fold_many0c","qualname":"::multi::fold_many0c","value":"pub fn fold_many0c<I, O, E, F, G, R>(I, F, R, G) -> IResult<I, R, E> where\nI: Clone + PartialEq, F: Fn(I) -> IResult<I, O, E>, G: FnMut(R, O) -> R,\nE: ParseError<I>, R: Clone","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1480},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":268033,"byte_end":268043,"line_start":811,"line_end":811,"column_start":8,"column_end":18},"name":"fold_many1","qualname":"::multi::fold_many1","value":"pub fn fold_many1<I, O, E, F, G, R>(F, R, G) -> /*impl Trait*/ where\nI: Clone + PartialEq, F: Parser<I, O, E>, G: FnMut(R, O) -> R,\nE: ParseError<I>, R: Clone","parent":null,"children":[],"decl_id":null,"docs":" Applies a parser until it fails and accumulates\n the results using a given function and initial value.\n Fails if the embedded parser does not succeed at least\n once.\n # Arguments\n * `f` The parser to apply.\n * `init` The initial value.\n * `g` The function that combines a result of `f` with\n       the current accumulator.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::fold_many1;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Applies a parser until it fails and accumulates","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":266971,"byte_end":267022,"line_start":780,"line_end":780,"column_start":1,"column_end":52}},{"value":"/ the results using a given function and initial value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267023,"byte_end":267080,"line_start":781,"line_end":781,"column_start":1,"column_end":58}},{"value":"/ Fails if the embedded parser does not succeed at least","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267081,"byte_end":267139,"line_start":782,"line_end":782,"column_start":1,"column_end":59}},{"value":"/ once.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267140,"byte_end":267149,"line_start":783,"line_end":783,"column_start":1,"column_end":10}},{"value":"/ # Arguments","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267150,"byte_end":267165,"line_start":784,"line_end":784,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267166,"byte_end":267196,"line_start":785,"line_end":785,"column_start":1,"column_end":31}},{"value":"/ * `init` The initial value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267197,"byte_end":267228,"line_start":786,"line_end":786,"column_start":1,"column_end":32}},{"value":"/ * `g` The function that combines a result of `f` with","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267229,"byte_end":267286,"line_start":787,"line_end":787,"column_start":1,"column_end":58}},{"value":"/       the current accumulator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267287,"byte_end":267321,"line_start":788,"line_end":788,"column_start":1,"column_end":35}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267322,"byte_end":267333,"line_start":789,"line_end":789,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267334,"byte_end":267370,"line_start":790,"line_end":790,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267371,"byte_end":267436,"line_start":791,"line_end":791,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::fold_many1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267437,"byte_end":267468,"line_start":792,"line_end":792,"column_start":1,"column_end":32}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267469,"byte_end":267503,"line_start":793,"line_end":793,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267504,"byte_end":267507,"line_start":794,"line_end":794,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267508,"byte_end":267560,"line_start":795,"line_end":795,"column_start":1,"column_end":53}},{"value":"/   fold_many1(","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267561,"byte_end":267578,"line_start":796,"line_end":796,"column_start":1,"column_end":18}},{"value":"/     tag(\"abc\"),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267579,"byte_end":267598,"line_start":797,"line_end":797,"column_start":1,"column_end":20}},{"value":"/     Vec::new(),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267599,"byte_end":267618,"line_start":798,"line_end":798,"column_start":1,"column_end":20}},{"value":"/     |mut acc: Vec<_>, item| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267619,"byte_end":267652,"line_start":799,"line_end":799,"column_start":1,"column_end":34}},{"value":"/       acc.push(item);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267653,"byte_end":267678,"line_start":800,"line_end":800,"column_start":1,"column_end":26}},{"value":"/       acc","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267679,"byte_end":267692,"line_start":801,"line_end":801,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267693,"byte_end":267702,"line_start":802,"line_end":802,"column_start":1,"column_end":10}},{"value":"/   )(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267703,"byte_end":267713,"line_start":803,"line_end":803,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267714,"byte_end":267719,"line_start":804,"line_end":804,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267720,"byte_end":267723,"line_start":805,"line_end":805,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267724,"byte_end":267787,"line_start":806,"line_end":806,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267788,"byte_end":267847,"line_start":807,"line_end":807,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Many1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267848,"byte_end":267938,"line_start":808,"line_end":808,"column_start":1,"column_end":91}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Many1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":267939,"byte_end":268017,"line_start":809,"line_end":809,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":268018,"byte_end":268025,"line_start":810,"line_end":810,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1489},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":269051,"byte_end":269062,"line_start":858,"line_end":858,"column_start":8,"column_end":19},"name":"fold_many1c","qualname":"::multi::fold_many1c","value":"pub fn fold_many1c<I, O, E, F, G, R>(I, F, R, G) -> IResult<I, R, E> where\nI: Clone + PartialEq, F: Fn(I) -> IResult<I, O, E>, G: FnMut(R, O) -> R,\nE: ParseError<I>, R: Clone","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1496},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":270469,"byte_end":270482,"line_start":905,"line_end":905,"column_start":8,"column_end":21},"name":"fold_many_m_n","qualname":"::multi::fold_many_m_n","value":"pub fn fold_many_m_n<I, O, E, F, G, R>(usize, usize, F, R, G)\n-> /*impl Trait*/ where I: Clone + PartialEq, F: Parser<I, O, E>, G: Fn(R, O)\n-> R, E: ParseError<I>, R: Clone","parent":null,"children":[],"decl_id":null,"docs":" Applies a parser `n` times or until it fails and accumulates\n the results using a given function and initial value.\n Fails if the embedded parser does not succeed at least `m`\n times.\n # Arguments\n * `m` The minimum number of iterations.\n * `n` The maximum number of iterations.\n * `f` The parser to apply.\n * `init` The initial value.\n * `g` The function that combines a result of `f` with\n       the current accumulator.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::multi::fold_many_m_n;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Applies a parser `n` times or until it fails and accumulates","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":269278,"byte_end":269342,"line_start":869,"line_end":869,"column_start":1,"column_end":65}},{"value":"/ the results using a given function and initial value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":269343,"byte_end":269400,"line_start":870,"line_end":870,"column_start":1,"column_end":58}},{"value":"/ Fails if the embedded parser does not succeed at least `m`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":269401,"byte_end":269463,"line_start":871,"line_end":871,"column_start":1,"column_end":63}},{"value":"/ times.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":269464,"byte_end":269474,"line_start":872,"line_end":872,"column_start":1,"column_end":11}},{"value":"/ # Arguments","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":269475,"byte_end":269490,"line_start":873,"line_end":873,"column_start":1,"column_end":16}},{"value":"/ * `m` The minimum number of iterations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":269491,"byte_end":269534,"line_start":874,"line_end":874,"column_start":1,"column_end":44}},{"value":"/ * `n` The maximum number of iterations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":269535,"byte_end":269578,"line_start":875,"line_end":875,"column_start":1,"column_end":44}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":269579,"byte_end":269609,"line_start":876,"line_end":876,"column_start":1,"column_end":31}},{"value":"/ * `init` The initial value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":269610,"byte_end":269641,"line_start":877,"line_end":877,"column_start":1,"column_end":32}},{"value":"/ * `g` The function that combines a result of `f` with","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":269642,"byte_end":269699,"line_start":878,"line_end":878,"column_start":1,"column_end":58}},{"value":"/       the current accumulator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":269700,"byte_end":269734,"line_start":879,"line_end":879,"column_start":1,"column_end":35}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":269735,"byte_end":269746,"line_start":880,"line_end":880,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":269747,"byte_end":269783,"line_start":881,"line_end":881,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":269784,"byte_end":269840,"line_start":882,"line_end":882,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::fold_many_m_n;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":269841,"byte_end":269875,"line_start":883,"line_end":883,"column_start":1,"column_end":35}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":269876,"byte_end":269910,"line_start":884,"line_end":884,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":269911,"byte_end":269914,"line_start":885,"line_end":885,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":269915,"byte_end":269967,"line_start":886,"line_end":886,"column_start":1,"column_end":53}},{"value":"/   fold_many_m_n(","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":269968,"byte_end":269988,"line_start":887,"line_end":887,"column_start":1,"column_end":21}},{"value":"/     0,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":269989,"byte_end":269999,"line_start":888,"line_end":888,"column_start":1,"column_end":11}},{"value":"/     2,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":270000,"byte_end":270010,"line_start":889,"line_end":889,"column_start":1,"column_end":11}},{"value":"/     tag(\"abc\"),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":270011,"byte_end":270030,"line_start":890,"line_end":890,"column_start":1,"column_end":20}},{"value":"/     Vec::new(),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":270031,"byte_end":270050,"line_start":891,"line_end":891,"column_start":1,"column_end":20}},{"value":"/     |mut acc: Vec<_>, item| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":270051,"byte_end":270084,"line_start":892,"line_end":892,"column_start":1,"column_end":34}},{"value":"/       acc.push(item);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":270085,"byte_end":270110,"line_start":893,"line_end":893,"column_start":1,"column_end":26}},{"value":"/       acc","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":270111,"byte_end":270124,"line_start":894,"line_end":894,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":270125,"byte_end":270134,"line_start":895,"line_end":895,"column_start":1,"column_end":10}},{"value":"/   )(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":270135,"byte_end":270145,"line_start":896,"line_end":896,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":270146,"byte_end":270151,"line_start":897,"line_end":897,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":270152,"byte_end":270155,"line_start":898,"line_end":898,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":270156,"byte_end":270219,"line_start":899,"line_end":899,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":270220,"byte_end":270279,"line_start":900,"line_end":900,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":270280,"byte_end":270337,"line_start":901,"line_end":901,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":270338,"byte_end":270383,"line_start":902,"line_end":902,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":270384,"byte_end":270453,"line_start":903,"line_end":903,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":270454,"byte_end":270461,"line_start":904,"line_end":904,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1505},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":271494,"byte_end":271508,"line_start":951,"line_end":951,"column_start":8,"column_end":22},"name":"fold_many_m_nc","qualname":"::multi::fold_many_m_nc","value":"pub fn fold_many_m_nc<I, O, E, F, G, R>(I, usize, usize, F, R, G)\n-> IResult<I, R, E> where I: Clone + PartialEq, F: Fn(I) -> IResult<I, O, E>,\nG: Fn(R, O) -> R, E: ParseError<I>, R: Clone","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1512},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":272453,"byte_end":272464,"line_start":989,"line_end":989,"column_start":8,"column_end":19},"name":"length_data","qualname":"::multi::length_data","value":"pub fn length_data<I, N, E, F>(F) -> /*impl Trait*/ where I: InputLength +\nInputTake, N: ToUsize, F: Parser<I, N, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Gets a number from the parser and returns a\n subslice of the input of that size.\n If the parser returns `Incomplete`,\n `length_data` will return an error.\n # Arguments\n * `f` The parser to apply.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::number::complete::be_u16;\n use nom::multi::length_data;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Gets a number from the parser and returns a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":271765,"byte_end":271812,"line_start":969,"line_end":969,"column_start":1,"column_end":48}},{"value":"/ subslice of the input of that size.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":271813,"byte_end":271852,"line_start":970,"line_end":970,"column_start":1,"column_end":40}},{"value":"/ If the parser returns `Incomplete`,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":271853,"byte_end":271892,"line_start":971,"line_end":971,"column_start":1,"column_end":40}},{"value":"/ `length_data` will return an error.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":271893,"byte_end":271932,"line_start":972,"line_end":972,"column_start":1,"column_end":40}},{"value":"/ # Arguments","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":271933,"byte_end":271948,"line_start":973,"line_end":973,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":271949,"byte_end":271979,"line_start":974,"line_end":974,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":271980,"byte_end":271991,"line_start":975,"line_end":975,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":271992,"byte_end":272028,"line_start":976,"line_end":976,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":272029,"byte_end":272085,"line_start":977,"line_end":977,"column_start":1,"column_end":57}},{"value":"/ use nom::number::complete::be_u16;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":272086,"byte_end":272124,"line_start":978,"line_end":978,"column_start":1,"column_end":39}},{"value":"/ use nom::multi::length_data;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":272125,"byte_end":272157,"line_start":979,"line_end":979,"column_start":1,"column_end":33}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":272158,"byte_end":272192,"line_start":980,"line_end":980,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":272193,"byte_end":272196,"line_start":981,"line_end":981,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":272197,"byte_end":272247,"line_start":982,"line_end":982,"column_start":1,"column_end":51}},{"value":"/   length_data(be_u16)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":272248,"byte_end":272276,"line_start":983,"line_end":983,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":272277,"byte_end":272282,"line_start":984,"line_end":984,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":272283,"byte_end":272286,"line_start":985,"line_end":985,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03abcefg\"), Ok((&b\"efg\"[..], &b\"abc\"[..])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":272287,"byte_end":272361,"line_start":986,"line_end":986,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03a\"), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":272362,"byte_end":272437,"line_start":987,"line_end":987,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":272438,"byte_end":272445,"line_start":988,"line_end":988,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1519},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":273802,"byte_end":273814,"line_start":1034,"line_end":1034,"column_start":8,"column_end":20},"name":"length_value","qualname":"::multi::length_value","value":"pub fn length_value<I, O, N, E, F, G>(F, G) -> /*impl Trait*/ where I: Clone +\nInputLength + InputTake, N: ToUsize, F: Parser<I, N, E>, G: Parser<I, O, E>,\nE: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Gets a number from the first parser,\n takes a subslice of the input of that size,\n then applies the second parser on that subslice.\n If the second parser returns `Incomplete`,\n `length_value` will return an error.\n # Arguments\n * `f` The parser to apply.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::number::complete::be_u16;\n use nom::multi::length_value;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Gets a number from the first parser,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":272928,"byte_end":272968,"line_start":1012,"line_end":1012,"column_start":1,"column_end":41}},{"value":"/ takes a subslice of the input of that size,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":272969,"byte_end":273016,"line_start":1013,"line_end":1013,"column_start":1,"column_end":48}},{"value":"/ then applies the second parser on that subslice.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":273017,"byte_end":273069,"line_start":1014,"line_end":1014,"column_start":1,"column_end":53}},{"value":"/ If the second parser returns `Incomplete`,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":273070,"byte_end":273116,"line_start":1015,"line_end":1015,"column_start":1,"column_end":47}},{"value":"/ `length_value` will return an error.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":273117,"byte_end":273157,"line_start":1016,"line_end":1016,"column_start":1,"column_end":41}},{"value":"/ # Arguments","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":273158,"byte_end":273173,"line_start":1017,"line_end":1017,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":273174,"byte_end":273204,"line_start":1018,"line_end":1018,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":273205,"byte_end":273216,"line_start":1019,"line_end":1019,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":273217,"byte_end":273253,"line_start":1020,"line_end":1020,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":273254,"byte_end":273319,"line_start":1021,"line_end":1021,"column_start":1,"column_end":66}},{"value":"/ use nom::number::complete::be_u16;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":273320,"byte_end":273358,"line_start":1022,"line_end":1022,"column_start":1,"column_end":39}},{"value":"/ use nom::multi::length_value;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":273359,"byte_end":273392,"line_start":1023,"line_end":1023,"column_start":1,"column_end":34}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":273393,"byte_end":273427,"line_start":1024,"line_end":1024,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":273428,"byte_end":273431,"line_start":1025,"line_end":1025,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":273432,"byte_end":273482,"line_start":1026,"line_end":1026,"column_start":1,"column_end":51}},{"value":"/   length_value(be_u16, tag(\"abc\"))(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":273483,"byte_end":273524,"line_start":1027,"line_end":1027,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":273525,"byte_end":273530,"line_start":1028,"line_end":1028,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":273531,"byte_end":273534,"line_start":1029,"line_end":1029,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03abcefg\"), Ok((&b\"efg\"[..], &b\"abc\"[..])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":273535,"byte_end":273609,"line_start":1030,"line_end":1030,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03123123\"), Err(Err::Error(Error::new(&b\"123\"[..], ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":273610,"byte_end":273710,"line_start":1031,"line_end":1031,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03a\"), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":273711,"byte_end":273786,"line_start":1032,"line_end":1032,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":273787,"byte_end":273794,"line_start":1033,"line_end":1033,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1528},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":274559,"byte_end":274572,"line_start":1064,"line_end":1064,"column_start":8,"column_end":21},"name":"length_valuec","qualname":"::multi::length_valuec","value":"pub fn length_valuec<I, O, N, E, F, G>(I, F, G) -> IResult<I, O, E> where\nI: Clone + InputLength + InputTake, N: ToUsize, F: Fn(I) -> IResult<I, N, E>,\nG: Fn(I) -> IResult<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1535},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":275675,"byte_end":275687,"line_start":1099,"line_end":1099,"column_start":8,"column_end":20},"name":"length_count","qualname":"::multi::length_count","value":"pub fn length_count<I, O, N, E, F, G>(F, G) -> /*impl Trait*/ where I: Clone,\nN: ToUsize, F: Parser<I, N, E>, G: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Gets a number from the first parser,\n then applies the second parser that many times.\n Arguments\n * `f` The parser to apply to obtain the count.\n * `g` The parser to apply repeatedly.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::number::complete::u8;\n use nom::multi::length_count;\n use nom::bytes::complete::tag;\n use nom::combinator::map;","sig":null,"attributes":[{"value":"/ Gets a number from the first parser,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":274800,"byte_end":274840,"line_start":1075,"line_end":1075,"column_start":1,"column_end":41}},{"value":"/ then applies the second parser that many times.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":274841,"byte_end":274892,"line_start":1076,"line_end":1076,"column_start":1,"column_end":52}},{"value":"/ Arguments","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":274893,"byte_end":274906,"line_start":1077,"line_end":1077,"column_start":1,"column_end":14}},{"value":"/ * `f` The parser to apply to obtain the count.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":274907,"byte_end":274957,"line_start":1078,"line_end":1078,"column_start":1,"column_end":51}},{"value":"/ * `g` The parser to apply repeatedly.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":274958,"byte_end":274999,"line_start":1079,"line_end":1079,"column_start":1,"column_end":42}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":275000,"byte_end":275011,"line_start":1080,"line_end":1080,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":275012,"byte_end":275048,"line_start":1081,"line_end":1081,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":275049,"byte_end":275114,"line_start":1082,"line_end":1082,"column_start":1,"column_end":66}},{"value":"/ use nom::number::complete::u8;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":275115,"byte_end":275149,"line_start":1083,"line_end":1083,"column_start":1,"column_end":35}},{"value":"/ use nom::multi::length_count;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":275150,"byte_end":275183,"line_start":1084,"line_end":1084,"column_start":1,"column_end":34}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":275184,"byte_end":275218,"line_start":1085,"line_end":1085,"column_start":1,"column_end":35}},{"value":"/ use nom::combinator::map;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":275219,"byte_end":275248,"line_start":1086,"line_end":1086,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":275249,"byte_end":275252,"line_start":1087,"line_end":1087,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &[u8]) -> IResult<&[u8], Vec<&[u8]>> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":275253,"byte_end":275308,"line_start":1088,"line_end":1088,"column_start":1,"column_end":56}},{"value":"/   length_count(map(u8, |i| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":275309,"byte_end":275341,"line_start":1089,"line_end":1089,"column_start":1,"column_end":33}},{"value":"/      println!(\"got number: {}\", i);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":275342,"byte_end":275381,"line_start":1090,"line_end":1090,"column_start":1,"column_end":40}},{"value":"/      i","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":275382,"byte_end":275392,"line_start":1091,"line_end":1091,"column_start":1,"column_end":11}},{"value":"/   }), tag(\"abc\"))(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":275393,"byte_end":275417,"line_start":1092,"line_end":1092,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":275418,"byte_end":275423,"line_start":1093,"line_end":1093,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":275424,"byte_end":275427,"line_start":1094,"line_end":1094,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x02abcabcabc\"[..]), Ok(((&b\"abc\"[..], vec![&b\"abc\"[..], &b\"abc\"[..]]))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":275428,"byte_end":275527,"line_start":1095,"line_end":1095,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(parser(b\"\\x03123123123\"), Err(Err::Error(Error::new(&b\"123123123\"[..], ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":275528,"byte_end":275633,"line_start":1096,"line_end":1096,"column_start":1,"column_end":106}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":275634,"byte_end":275641,"line_start":1097,"line_end":1097,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/multi/mod.rs","byte_start":275642,"byte_end":275667,"line_start":1098,"line_end":1098,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":1544},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bytes","qualname":"::bytes","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/mod.rs","parent":null,"children":[{"krate":0,"index":1545},{"krate":0,"index":1561},{"krate":0,"index":1693}],"decl_id":null,"docs":" Parsers recognizing bytes streams\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16663,"byte_end":16675,"line_start":499,"line_end":499,"column_start":1,"column_end":13}},{"value":"/ Parsers recognizing bytes streams","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/mod.rs","byte_start":310199,"byte_end":310236,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":1561},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"complete","qualname":"::bytes::complete","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","parent":null,"children":[{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1587},{"krate":0,"index":1593},{"krate":0,"index":1600},{"krate":0,"index":1607},{"krate":0,"index":1614},{"krate":0,"index":1621},{"krate":0,"index":1628},{"krate":0,"index":1635},{"krate":0,"index":1642},{"krate":0,"index":1648},{"krate":0,"index":1654},{"krate":0,"index":1665},{"krate":0,"index":1672},{"krate":0,"index":1684}],"decl_id":null,"docs":" Parsers recognizing bytes streams, complete input version\n","sig":null,"attributes":[{"value":"/ Parsers recognizing bytes streams, complete input version","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":340590,"byte_end":340651,"line_start":1,"line_end":1,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":1581},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":341755,"byte_end":341758,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"tag","qualname":"::bytes::complete::tag","value":"pub fn tag<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTake + Compare<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a pattern","sig":null,"attributes":[{"value":"/ Recognizes a pattern","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":340985,"byte_end":341009,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":341010,"byte_end":341013,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The input data will be compared to the tag combinator's argument and will return the part of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":341014,"byte_end":341110,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ the input that matches the argument","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":341111,"byte_end":341150,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":341151,"byte_end":341154,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ It will return `Err(Err::Error((_, ErrorKind::Tag)))` if the input doesn't match the pattern","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":341155,"byte_end":341251,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":341252,"byte_end":341265,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":341266,"byte_end":341277,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":341278,"byte_end":341314,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":341315,"byte_end":341380,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":341381,"byte_end":341415,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":341416,"byte_end":341419,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":341420,"byte_end":341467,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/   tag(\"Hello\")(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":341468,"byte_end":341489,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":341490,"byte_end":341495,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":341496,"byte_end":341499,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":341500,"byte_end":341567,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":341568,"byte_end":341662,"line_start":30,"line_end":30,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":341663,"byte_end":341739,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":341740,"byte_end":341747,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1587},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":343221,"byte_end":343232,"line_start":76,"line_end":76,"column_start":8,"column_end":19},"name":"tag_no_case","qualname":"::bytes::complete::tag_no_case","value":"pub fn tag_no_case<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + Compare<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a case insensitive pattern.","sig":null,"attributes":[{"value":"/ Recognizes a case insensitive pattern.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":342256,"byte_end":342298,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":342299,"byte_end":342302,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The input data will be compared to the tag combinator's argument and will return the part of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":342303,"byte_end":342399,"line_start":56,"line_end":56,"column_start":1,"column_end":97}},{"value":"/ the input that matches the argument with no regard to case.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":342400,"byte_end":342463,"line_start":57,"line_end":57,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":342464,"byte_end":342467,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ It will return `Err(Err::Error((_, ErrorKind::Tag)))` if the input doesn't match the pattern.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":342468,"byte_end":342565,"line_start":59,"line_end":59,"column_start":1,"column_end":98}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":342566,"byte_end":342579,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":342580,"byte_end":342591,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":342592,"byte_end":342628,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":342629,"byte_end":342694,"line_start":63,"line_end":63,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::tag_no_case;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":342695,"byte_end":342737,"line_start":64,"line_end":64,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":342738,"byte_end":342741,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":342742,"byte_end":342789,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/   tag_no_case(\"hello\")(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":342790,"byte_end":342819,"line_start":67,"line_end":67,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":342820,"byte_end":342825,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":342826,"byte_end":342829,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":342830,"byte_end":342897,"line_start":70,"line_end":70,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"hello, World!\"), Ok((\", World!\", \"hello\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":342898,"byte_end":342965,"line_start":71,"line_end":71,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"HeLlO, World!\"), Ok((\", World!\", \"HeLlO\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":342966,"byte_end":343033,"line_start":72,"line_end":72,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":343034,"byte_end":343128,"line_start":73,"line_end":73,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":343129,"byte_end":343205,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":343206,"byte_end":343213,"line_start":75,"line_end":75,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1593},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":344590,"byte_end":344596,"line_start":120,"line_end":120,"column_start":8,"column_end":14},"name":"is_not","qualname":"::bytes::complete::is_not","value":"pub fn is_not<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTakeAtPosition, T: FindToken<<Input as InputTakeAtPosition>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Parse till certain characters are met.","sig":null,"attributes":[{"value":"/ Parse till certain characters are met.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":343741,"byte_end":343783,"line_start":98,"line_end":98,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":343784,"byte_end":343787,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till one of the characters of the combinator's argument are met.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":343788,"byte_end":343897,"line_start":100,"line_end":100,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":343898,"byte_end":343901,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the matched character.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":343902,"byte_end":343947,"line_start":102,"line_end":102,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":343948,"byte_end":343951,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ It will return a `Err::Error((\"\", ErrorKind::IsNot))` if the pattern wasn't met.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":343952,"byte_end":344036,"line_start":104,"line_end":104,"column_start":1,"column_end":85}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":344037,"byte_end":344050,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":344051,"byte_end":344062,"line_start":106,"line_end":106,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":344063,"byte_end":344099,"line_start":107,"line_end":107,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":344100,"byte_end":344165,"line_start":108,"line_end":108,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::is_not;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":344166,"byte_end":344203,"line_start":109,"line_end":109,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":344204,"byte_end":344207,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ fn not_space(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":344208,"byte_end":344258,"line_start":111,"line_end":111,"column_start":1,"column_end":51}},{"value":"/   is_not(\" \\t\\r\\n\")(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":344259,"byte_end":344285,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":344286,"byte_end":344291,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":344292,"byte_end":344295,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(not_space(\"Hello, World!\"), Ok((\" World!\", \"Hello,\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":344296,"byte_end":344366,"line_start":115,"line_end":115,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(not_space(\"Sometimes\\t\"), Ok((\"\\t\", \"Sometimes\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":344367,"byte_end":344433,"line_start":116,"line_end":116,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(not_space(\"Nospace\"), Ok((\"\", \"Nospace\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":344434,"byte_end":344492,"line_start":117,"line_end":117,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(not_space(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::IsNot))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":344493,"byte_end":344574,"line_start":118,"line_end":118,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":344575,"byte_end":344582,"line_start":119,"line_end":119,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1600},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":345802,"byte_end":345806,"line_start":155,"line_end":155,"column_start":8,"column_end":12},"name":"is_a","qualname":"::bytes::complete::is_a","value":"pub fn is_a<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTakeAtPosition, T: FindToken<<Input as InputTakeAtPosition>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest slice of the matches the pattern.","sig":null,"attributes":[{"value":"/ Returns the longest slice of the matches the pattern.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":344916,"byte_end":344973,"line_start":133,"line_end":133,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":344974,"byte_end":344977,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice consisting of the characters in provided in the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":344978,"byte_end":345070,"line_start":135,"line_end":135,"column_start":1,"column_end":93}},{"value":"/ combinator's argument.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":345071,"byte_end":345097,"line_start":136,"line_end":136,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":345098,"byte_end":345101,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ It will return a `Err(Err::Error((_, ErrorKind::IsA)))` if the pattern wasn't met.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":345102,"byte_end":345188,"line_start":138,"line_end":138,"column_start":1,"column_end":87}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":345189,"byte_end":345202,"line_start":139,"line_end":139,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":345203,"byte_end":345214,"line_start":140,"line_end":140,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":345215,"byte_end":345251,"line_start":141,"line_end":141,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":345252,"byte_end":345317,"line_start":142,"line_end":142,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::is_a;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":345318,"byte_end":345353,"line_start":143,"line_end":143,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":345354,"byte_end":345357,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ fn hex(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":345358,"byte_end":345402,"line_start":145,"line_end":145,"column_start":1,"column_end":45}},{"value":"/   is_a(\"1234567890ABCDEF\")(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":345403,"byte_end":345436,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":345437,"byte_end":345442,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":345443,"byte_end":345446,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(hex(\"123 and voila\"), Ok((\" and voila\", \"123\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":345447,"byte_end":345511,"line_start":149,"line_end":149,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(hex(\"DEADBEEF and others\"), Ok((\" and others\", \"DEADBEEF\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":345512,"byte_end":345588,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(hex(\"BADBABEsomething\"), Ok((\"something\", \"BADBABE\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":345589,"byte_end":345659,"line_start":151,"line_end":151,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(hex(\"D15EA5E\"), Ok((\"\", \"D15EA5E\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":345660,"byte_end":345712,"line_start":152,"line_end":152,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(hex(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::IsA))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":345713,"byte_end":345786,"line_start":153,"line_end":153,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":345787,"byte_end":345794,"line_start":154,"line_end":154,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1607},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":346907,"byte_end":346917,"line_start":188,"line_end":188,"column_start":8,"column_end":18},"name":"take_while","qualname":"::bytes::complete::take_while","value":"pub fn take_while<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest input slice (if any) that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest input slice (if any) that matches the predicate.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":346125,"byte_end":346197,"line_start":168,"line_end":168,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":346198,"byte_end":346201,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":346202,"byte_end":346297,"line_start":170,"line_end":170,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":346298,"byte_end":346339,"line_start":171,"line_end":171,"column_start":1,"column_end":42}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":346340,"byte_end":346353,"line_start":172,"line_end":172,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":346354,"byte_end":346365,"line_start":173,"line_end":173,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":346366,"byte_end":346402,"line_start":174,"line_end":174,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":346403,"byte_end":346459,"line_start":175,"line_end":175,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::complete::take_while;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":346460,"byte_end":346501,"line_start":176,"line_end":176,"column_start":1,"column_end":42}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":346502,"byte_end":346540,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":346541,"byte_end":346544,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ fn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":346545,"byte_end":346594,"line_start":179,"line_end":179,"column_start":1,"column_end":50}},{"value":"/   take_while(is_alphabetic)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":346595,"byte_end":346629,"line_start":180,"line_end":180,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":346630,"byte_end":346635,"line_start":181,"line_end":181,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":346636,"byte_end":346639,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":346640,"byte_end":346709,"line_start":183,"line_end":183,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha(b\"12345\"), Ok((&b\"12345\"[..], &b\"\"[..])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":346710,"byte_end":346773,"line_start":184,"line_end":184,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(alpha(b\"latin\"), Ok((&b\"\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":346774,"byte_end":346837,"line_start":185,"line_end":185,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(alpha(b\"\"), Ok((&b\"\"[..], &b\"\"[..])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":346838,"byte_end":346891,"line_start":186,"line_end":186,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":346892,"byte_end":346899,"line_start":187,"line_end":187,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1614},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":348053,"byte_end":348064,"line_start":219,"line_end":219,"column_start":8,"column_end":19},"name":"take_while1","qualname":"::bytes::complete::take_while1","value":"pub fn take_while1<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (at least 1) input slice that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest (at least 1) input slice that matches the predicate.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":347175,"byte_end":347251,"line_start":198,"line_end":198,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":347252,"byte_end":347255,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":347256,"byte_end":347351,"line_start":200,"line_end":200,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":347352,"byte_end":347393,"line_start":201,"line_end":201,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":347394,"byte_end":347397,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ It will return an `Err(Err::Error((_, ErrorKind::TakeWhile1)))` if the pattern wasn't met.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":347398,"byte_end":347492,"line_start":203,"line_end":203,"column_start":1,"column_end":95}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":347493,"byte_end":347506,"line_start":204,"line_end":204,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":347507,"byte_end":347518,"line_start":205,"line_end":205,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":347519,"byte_end":347555,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":347556,"byte_end":347621,"line_start":207,"line_end":207,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_while1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":347622,"byte_end":347664,"line_start":208,"line_end":208,"column_start":1,"column_end":43}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":347665,"byte_end":347703,"line_start":209,"line_end":209,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":347704,"byte_end":347707,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ fn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":347708,"byte_end":347757,"line_start":211,"line_end":211,"column_start":1,"column_end":50}},{"value":"/   take_while1(is_alphabetic)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":347758,"byte_end":347793,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":347794,"byte_end":347799,"line_start":213,"line_end":213,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":347800,"byte_end":347803,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":347804,"byte_end":347873,"line_start":215,"line_end":215,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha(b\"latin\"), Ok((&b\"\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":347874,"byte_end":347937,"line_start":216,"line_end":216,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhile1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":347938,"byte_end":348037,"line_start":217,"line_end":217,"column_start":1,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":348038,"byte_end":348045,"line_start":218,"line_end":218,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1621},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":349511,"byte_end":349525,"line_start":256,"line_end":256,"column_start":8,"column_end":22},"name":"take_while_m_n","qualname":"::bytes::complete::take_while_m_n","value":"pub fn take_while_m_n<F, Input, Error: ParseError<Input>>(usize, usize, F)\n-> /*impl Trait*/ where Input: InputTake + InputIter + InputLength +\nSlice<RangeFrom<usize>>, F: Fn(<Input as InputIter>::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (m <= len <= n) input slice  that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest (m <= len <= n) input slice  that matches the predicate.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":348382,"byte_end":348462,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":348463,"byte_end":348466,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":348467,"byte_end":348562,"line_start":234,"line_end":234,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":348563,"byte_end":348604,"line_start":235,"line_end":235,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":348605,"byte_end":348608,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ It will return an `Err::Error((_, ErrorKind::TakeWhileMN))` if the pattern wasn't met or is out","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":348609,"byte_end":348708,"line_start":237,"line_end":237,"column_start":1,"column_end":100}},{"value":"/ of range (m <= len <= n).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":348709,"byte_end":348738,"line_start":238,"line_end":238,"column_start":1,"column_end":30}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":348739,"byte_end":348752,"line_start":239,"line_end":239,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":348753,"byte_end":348764,"line_start":240,"line_end":240,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":348765,"byte_end":348801,"line_start":241,"line_end":241,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":348802,"byte_end":348867,"line_start":242,"line_end":242,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_while_m_n;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":348868,"byte_end":348913,"line_start":243,"line_end":243,"column_start":1,"column_end":46}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":348914,"byte_end":348952,"line_start":244,"line_end":244,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":348953,"byte_end":348956,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ fn short_alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":348957,"byte_end":349012,"line_start":246,"line_end":246,"column_start":1,"column_end":56}},{"value":"/   take_while_m_n(3, 6, is_alphabetic)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":349013,"byte_end":349057,"line_start":247,"line_end":247,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":349058,"byte_end":349063,"line_start":248,"line_end":248,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":349064,"byte_end":349067,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(short_alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":349068,"byte_end":349143,"line_start":250,"line_end":250,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(short_alpha(b\"lengthy\"), Ok((&b\"y\"[..], &b\"length\"[..])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":349144,"byte_end":349217,"line_start":251,"line_end":251,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(short_alpha(b\"latin\"), Ok((&b\"\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":349218,"byte_end":349287,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(short_alpha(b\"ed\"), Err(Err::Error(Error::new(&b\"ed\"[..], ErrorKind::TakeWhileMN))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":349288,"byte_end":349388,"line_start":253,"line_end":253,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(short_alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhileMN))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":349389,"byte_end":349495,"line_start":254,"line_end":254,"column_start":1,"column_end":107}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":349496,"byte_end":349503,"line_start":255,"line_end":255,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1628},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":352053,"byte_end":352062,"line_start":338,"line_end":338,"column_start":8,"column_end":17},"name":"take_till","qualname":"::bytes::complete::take_till","value":"pub fn take_till<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest input slice (if any) till a predicate is met.","sig":null,"attributes":[{"value":"/ Returns the longest input slice (if any) till a predicate is met.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":351324,"byte_end":351393,"line_start":319,"line_end":319,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":351394,"byte_end":351397,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till the given predicate *(a function that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":351398,"byte_end":351485,"line_start":321,"line_end":321,"column_start":1,"column_end":88}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":351486,"byte_end":351527,"line_start":322,"line_end":322,"column_start":1,"column_end":42}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":351528,"byte_end":351541,"line_start":323,"line_end":323,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":351542,"byte_end":351553,"line_start":324,"line_end":324,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":351554,"byte_end":351590,"line_start":325,"line_end":325,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":351591,"byte_end":351647,"line_start":326,"line_end":326,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::complete::take_till;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":351648,"byte_end":351688,"line_start":327,"line_end":327,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":351689,"byte_end":351692,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ fn till_colon(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":351693,"byte_end":351744,"line_start":329,"line_end":329,"column_start":1,"column_end":52}},{"value":"/   take_till(|c| c == ':')(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":351745,"byte_end":351777,"line_start":330,"line_end":330,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":351778,"byte_end":351783,"line_start":331,"line_end":331,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":351784,"byte_end":351787,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":351788,"byte_end":351851,"line_start":333,"line_end":333,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(till_colon(\":empty matched\"), Ok((\":empty matched\", \"\"))); //allowed","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":351852,"byte_end":351935,"line_start":334,"line_end":334,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(till_colon(\"12345\"), Ok((\"\", \"12345\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":351936,"byte_end":351991,"line_start":335,"line_end":335,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(till_colon(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":351992,"byte_end":352037,"line_start":336,"line_end":336,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":352038,"byte_end":352045,"line_start":337,"line_end":337,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1635},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":353271,"byte_end":353281,"line_start":370,"line_end":370,"column_start":8,"column_end":18},"name":"take_till1","qualname":"::bytes::complete::take_till1","value":"pub fn take_till1<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (at least 1) input slice till a predicate is met.","sig":null,"attributes":[{"value":"/ Returns the longest (at least 1) input slice till a predicate is met.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":352319,"byte_end":352392,"line_start":348,"line_end":348,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":352393,"byte_end":352396,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till the given predicate *(a function that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":352397,"byte_end":352484,"line_start":350,"line_end":350,"column_start":1,"column_end":88}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":352485,"byte_end":352526,"line_start":351,"line_end":351,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":352527,"byte_end":352530,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ It will return `Err(Err::Error((_, ErrorKind::TakeTill1)))` if the input is empty or the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":352531,"byte_end":352623,"line_start":353,"line_end":353,"column_start":1,"column_end":93}},{"value":"/ predicate matches the first input.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":352624,"byte_end":352662,"line_start":354,"line_end":354,"column_start":1,"column_end":39}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":352663,"byte_end":352676,"line_start":355,"line_end":355,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":352677,"byte_end":352688,"line_start":356,"line_end":356,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":352689,"byte_end":352725,"line_start":357,"line_end":357,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":352726,"byte_end":352791,"line_start":358,"line_end":358,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_till1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":352792,"byte_end":352833,"line_start":359,"line_end":359,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":352834,"byte_end":352837,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ fn till_colon(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":352838,"byte_end":352889,"line_start":361,"line_end":361,"column_start":1,"column_end":52}},{"value":"/   take_till1(|c| c == ':')(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":352890,"byte_end":352923,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":352924,"byte_end":352929,"line_start":363,"line_end":363,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":352930,"byte_end":352933,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":352934,"byte_end":352997,"line_start":365,"line_end":365,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(till_colon(\":empty matched\"), Err(Err::Error(Error::new(\":empty matched\", ErrorKind::TakeTill1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":352998,"byte_end":353112,"line_start":366,"line_end":366,"column_start":1,"column_end":115}},{"value":"/ assert_eq!(till_colon(\"12345\"), Ok((\"\", \"12345\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":353113,"byte_end":353168,"line_start":367,"line_end":367,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(till_colon(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::TakeTill1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":353169,"byte_end":353255,"line_start":368,"line_end":368,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":353256,"byte_end":353263,"line_start":369,"line_end":369,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1642},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":354314,"byte_end":354318,"line_start":401,"line_end":401,"column_start":8,"column_end":12},"name":"take","qualname":"::bytes::complete::take","value":"pub fn take<C, Input, Error: ParseError<Input>>(C) -> /*impl Trait*/ where\nInput: InputIter + InputTake, C: ToUsize","parent":null,"children":[],"decl_id":null,"docs":" Returns an input slice containing the first N input elements (Input[..N]).","sig":null,"attributes":[{"value":"/ Returns an input slice containing the first N input elements (Input[..N]).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":353597,"byte_end":353675,"line_start":383,"line_end":383,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":353676,"byte_end":353679,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ It will return `Err(Err::Error((_, ErrorKind::Eof)))` if the input is shorter than the argument.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":353680,"byte_end":353780,"line_start":385,"line_end":385,"column_start":1,"column_end":101}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":353781,"byte_end":353794,"line_start":386,"line_end":386,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":353795,"byte_end":353806,"line_start":387,"line_end":387,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":353807,"byte_end":353843,"line_start":388,"line_end":388,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":353844,"byte_end":353909,"line_start":389,"line_end":389,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":353910,"byte_end":353945,"line_start":390,"line_end":390,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":353946,"byte_end":353949,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ fn take6(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":353950,"byte_end":353996,"line_start":392,"line_end":392,"column_start":1,"column_end":47}},{"value":"/   take(6usize)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":353997,"byte_end":354018,"line_start":393,"line_end":393,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":354019,"byte_end":354024,"line_start":394,"line_end":394,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":354025,"byte_end":354028,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(take6(\"1234567\"), Ok((\"7\", \"123456\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":354029,"byte_end":354083,"line_start":396,"line_end":396,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(take6(\"things\"), Ok((\"\", \"things\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":354084,"byte_end":354136,"line_start":397,"line_end":397,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(take6(\"short\"), Err(Err::Error(Error::new(\"short\", ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":354137,"byte_end":354222,"line_start":398,"line_end":398,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(take6(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":354223,"byte_end":354298,"line_start":399,"line_end":399,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":354299,"byte_end":354306,"line_start":400,"line_end":400,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1648},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":355486,"byte_end":355496,"line_start":434,"line_end":434,"column_start":8,"column_end":18},"name":"take_until","qualname":"::bytes::complete::take_until","value":"pub fn take_until<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + FindSubstring<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Returns the input slice up to the first occurrence of the pattern.","sig":null,"attributes":[{"value":"/ Returns the input slice up to the first occurrence of the pattern.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":354674,"byte_end":354744,"line_start":415,"line_end":415,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":354745,"byte_end":354748,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the pattern. It will return `Err(Err::Error((_, ErrorKind::TakeUntil)))`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":354749,"byte_end":354844,"line_start":417,"line_end":417,"column_start":1,"column_end":96}},{"value":"/ if the pattern wasn't met.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":354845,"byte_end":354875,"line_start":418,"line_end":418,"column_start":1,"column_end":31}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":354876,"byte_end":354889,"line_start":419,"line_end":419,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":354890,"byte_end":354901,"line_start":420,"line_end":420,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":354902,"byte_end":354938,"line_start":421,"line_end":421,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":354939,"byte_end":355004,"line_start":422,"line_end":422,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_until;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":355005,"byte_end":355046,"line_start":423,"line_end":423,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":355047,"byte_end":355050,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ fn until_eof(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":355051,"byte_end":355101,"line_start":425,"line_end":425,"column_start":1,"column_end":51}},{"value":"/   take_until(\"eof\")(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":355102,"byte_end":355128,"line_start":426,"line_end":426,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":355129,"byte_end":355134,"line_start":427,"line_end":427,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":355135,"byte_end":355138,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(until_eof(\"hello, worldeof\"), Ok((\"eof\", \"hello, world\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":355139,"byte_end":355213,"line_start":429,"line_end":429,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(until_eof(\"hello, world\"), Err(Err::Error(Error::new(\"hello, world\", ErrorKind::TakeUntil))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":355214,"byte_end":355323,"line_start":430,"line_end":430,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(until_eof(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::TakeUntil))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":355324,"byte_end":355409,"line_start":431,"line_end":431,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(until_eof(\"1eof2eof\"), Ok((\"eof2eof\", \"1\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":355410,"byte_end":355470,"line_start":432,"line_end":432,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":355471,"byte_end":355478,"line_start":433,"line_end":433,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1654},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":356689,"byte_end":356696,"line_start":472,"line_end":472,"column_start":8,"column_end":15},"name":"escaped","qualname":"::bytes::complete::escaped","value":"pub fn escaped<'a, Input: 'a, Error, F, G, O1, O2>(F, char, G)\n-> /*impl Trait*/ where Input: Clone + crate::traits::Offset + InputLength +\nInputTake + InputTakeAtPosition + Slice<RangeFrom<usize>> + InputIter,\n<Input as InputIter>::Item: crate::traits::AsChar,\nF: Parser<Input, O1, Error>, G: Parser<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Matches a byte string with escaped characters.","sig":null,"attributes":[{"value":"/ Matches a byte string with escaped characters.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":355926,"byte_end":355976,"line_start":451,"line_end":451,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":355977,"byte_end":355980,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ * The first argument matches the normal characters (it must not accept the control character)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":355981,"byte_end":356078,"line_start":453,"line_end":453,"column_start":1,"column_end":98}},{"value":"/ * The second argument is the control character (like `\\` in most languages)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":356079,"byte_end":356158,"line_start":454,"line_end":454,"column_start":1,"column_end":80}},{"value":"/ * The third argument matches the escaped characters","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":356159,"byte_end":356214,"line_start":455,"line_end":455,"column_start":1,"column_end":56}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":356215,"byte_end":356228,"line_start":456,"line_end":456,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":356229,"byte_end":356236,"line_start":457,"line_end":457,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":356237,"byte_end":356273,"line_start":458,"line_end":458,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":356274,"byte_end":356330,"line_start":459,"line_end":459,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::digit1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":356331,"byte_end":356374,"line_start":460,"line_end":460,"column_start":1,"column_end":44}},{"value":"/ use nom::bytes::complete::escaped;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":356375,"byte_end":356413,"line_start":461,"line_end":461,"column_start":1,"column_end":39}},{"value":"/ use nom::character::complete::one_of;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":356414,"byte_end":356455,"line_start":462,"line_end":462,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":356456,"byte_end":356459,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ fn esc(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":356460,"byte_end":356504,"line_start":464,"line_end":464,"column_start":1,"column_end":45}},{"value":"/   escaped(digit1, '\\\\', one_of(r#\"\"n\\\"#))(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":356505,"byte_end":356553,"line_start":465,"line_end":465,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":356554,"byte_end":356559,"line_start":466,"line_end":466,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":356560,"byte_end":356563,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(esc(\"123;\"), Ok((\";\", \"123\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":356564,"byte_end":356610,"line_start":468,"line_end":468,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(esc(r#\"12\\\"34;\"#), Ok((\";\", r#\"12\\\"34\"#)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":356611,"byte_end":356669,"line_start":469,"line_end":469,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":356670,"byte_end":356677,"line_start":470,"line_end":470,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":356678,"byte_end":356681,"line_start":471,"line_end":471,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1665},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":358743,"byte_end":358751,"line_start":547,"line_end":547,"column_start":8,"column_end":16},"name":"escapedc","qualname":"::bytes::complete::escapedc","value":"pub fn escapedc<Input, Error, F, G, O1, O2>(Input, F, char, G)\n-> IResult<Input, Input, Error> where Input: Clone + crate::traits::Offset +\nInputLength + InputTake + InputTakeAtPosition + Slice<RangeFrom<usize>> +\nInputIter, <Input as InputIter>::Item: crate::traits::AsChar, F: Fn(Input) ->\nIResult<Input, O1, Error>, G: Fn(Input) -> IResult<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1672},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":360400,"byte_end":360417,"line_start":602,"line_end":602,"column_start":8,"column_end":25},"name":"escaped_transform","qualname":"::bytes::complete::escaped_transform","value":"pub fn escaped_transform<Input, Error, F, G, O1, O2, ExtendItem,\n                         Output>(F, char, G) -> /*impl Trait*/ where\nInput: Clone + crate::traits::Offset + InputLength + InputTake +\nInputTakeAtPosition + Slice<RangeFrom<usize>> + InputIter,\nInput: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\nO1: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\nO2: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\n<Input as InputIter>::Item: crate::traits::AsChar,\nF: Parser<Input, O1, Error>, G: Parser<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Matches a byte string with escaped characters.","sig":null,"attributes":[{"value":"/ Matches a byte string with escaped characters.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":359256,"byte_end":359306,"line_start":569,"line_end":569,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":359307,"byte_end":359310,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ * The first argument matches the normal characters (it must not match the control character)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":359311,"byte_end":359407,"line_start":571,"line_end":571,"column_start":1,"column_end":97}},{"value":"/ * The second argument is the control character (like `\\` in most languages)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":359408,"byte_end":359487,"line_start":572,"line_end":572,"column_start":1,"column_end":80}},{"value":"/ * The third argument matches the escaped characters and transforms them","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":359488,"byte_end":359563,"line_start":573,"line_end":573,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":359564,"byte_end":359567,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ As an example, the chain `abc\\tdef` could be `abc    def` (it also consumes the control character)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":359568,"byte_end":359670,"line_start":575,"line_end":575,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":359671,"byte_end":359674,"line_start":576,"line_end":576,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":359675,"byte_end":359682,"line_start":577,"line_end":577,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":359683,"byte_end":359719,"line_start":578,"line_end":578,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":359720,"byte_end":359776,"line_start":579,"line_end":579,"column_start":1,"column_end":57}},{"value":"/ # use std::str::from_utf8;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":359777,"byte_end":359807,"line_start":580,"line_end":580,"column_start":1,"column_end":31}},{"value":"/ use nom::bytes::complete::{escaped_transform, tag};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":359808,"byte_end":359863,"line_start":581,"line_end":581,"column_start":1,"column_end":56}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":359864,"byte_end":359905,"line_start":582,"line_end":582,"column_start":1,"column_end":42}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":359906,"byte_end":359931,"line_start":583,"line_end":583,"column_start":1,"column_end":26}},{"value":"/ use nom::combinator::value;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":359932,"byte_end":359963,"line_start":584,"line_end":584,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":359964,"byte_end":359967,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ fn parser(input: &str) -> IResult<&str, String> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":359968,"byte_end":360021,"line_start":586,"line_end":586,"column_start":1,"column_end":54}},{"value":"/   escaped_transform(","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":360022,"byte_end":360046,"line_start":587,"line_end":587,"column_start":1,"column_end":25}},{"value":"/     alpha1,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":360047,"byte_end":360062,"line_start":588,"line_end":588,"column_start":1,"column_end":16}},{"value":"/     '\\\\',","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":360063,"byte_end":360076,"line_start":589,"line_end":589,"column_start":1,"column_end":14}},{"value":"/     alt((","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":360077,"byte_end":360090,"line_start":590,"line_end":590,"column_start":1,"column_end":14}},{"value":"/       value(\"\\\\\", tag(\"\\\\\")),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":360091,"byte_end":360124,"line_start":591,"line_end":591,"column_start":1,"column_end":34}},{"value":"/       value(\"\\\"\", tag(\"\\\"\")),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":360125,"byte_end":360158,"line_start":592,"line_end":592,"column_start":1,"column_end":34}},{"value":"/       value(\"n\", tag(\"\\n\")),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":360159,"byte_end":360191,"line_start":593,"line_end":593,"column_start":1,"column_end":33}},{"value":"/     ))","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":360192,"byte_end":360202,"line_start":594,"line_end":594,"column_start":1,"column_end":11}},{"value":"/   )(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":360203,"byte_end":360217,"line_start":595,"line_end":595,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":360218,"byte_end":360223,"line_start":596,"line_end":596,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":360224,"byte_end":360227,"line_start":597,"line_end":597,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"ab\\\\\\\"cd\"), Ok((\"\", String::from(\"ab\\\"cd\"))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":360228,"byte_end":360297,"line_start":598,"line_end":598,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":360298,"byte_end":360305,"line_start":599,"line_end":599,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":360306,"byte_end":360331,"line_start":600,"line_end":600,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1684},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":362987,"byte_end":363005,"line_start":686,"line_end":686,"column_start":8,"column_end":26},"name":"escaped_transformc","qualname":"::bytes::complete::escaped_transformc","value":"pub fn escaped_transformc<Input, Error, F, G, O1, O2, ExtendItem,\n                          Output>(Input, F, char, G)\n-> IResult<Input, Output, Error> where Input: Clone + crate::traits::Offset +\nInputLength + InputTake + InputTakeAtPosition + Slice<RangeFrom<usize>> +\nInputIter, Input: crate::traits::ExtendInto<Item = ExtendItem, Extender =\nExtendItem>, O1: crate::traits::ExtendInto<Item = ExtendItem, Extender =\nExtendItem>, O2: crate::traits::ExtendInto<Item = ExtendItem, Extender =\nExtendItem>, <Input as InputIter>::Item: crate::traits::AsChar, F: Fn(Input)\n-> IResult<Input, O1, Error>, G: Fn(Input) -> IResult<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/complete.rs","byte_start":362893,"byte_end":362918,"line_start":684,"line_end":684,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":1693},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streaming","qualname":"::bytes::streaming","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","parent":null,"children":[{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1720},{"krate":0,"index":1726},{"krate":0,"index":1733},{"krate":0,"index":1740},{"krate":0,"index":1747},{"krate":0,"index":1754},{"krate":0,"index":1761},{"krate":0,"index":1768},{"krate":0,"index":1775},{"krate":0,"index":1781},{"krate":0,"index":1787},{"krate":0,"index":1797},{"krate":0,"index":1804},{"krate":0,"index":1816}],"decl_id":null,"docs":" Parsers recognizing bytes streams, streaming version\n","sig":null,"attributes":[{"value":"/ Parsers recognizing bytes streams, streaming version","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":364243,"byte_end":364299,"line_start":1,"line_end":1,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1714},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":365382,"byte_end":365385,"line_start":32,"line_end":32,"column_start":8,"column_end":11},"name":"tag","qualname":"::bytes::streaming::tag","value":"pub fn tag<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTake + InputLength + Compare<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a pattern.","sig":null,"attributes":[{"value":"/ Recognizes a pattern.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":364641,"byte_end":364666,"line_start":13,"line_end":13,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":364667,"byte_end":364670,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The input data will be compared to the tag combinator's argument and will return the part of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":364671,"byte_end":364767,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ the input that matches the argument.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":364768,"byte_end":364808,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":364809,"byte_end":364822,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":364823,"byte_end":364834,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":364835,"byte_end":364871,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":364872,"byte_end":364937,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::tag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":364938,"byte_end":364973,"line_start":21,"line_end":21,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":364974,"byte_end":364977,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":364978,"byte_end":365025,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/   tag(\"Hello\")(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":365026,"byte_end":365047,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":365048,"byte_end":365053,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":365054,"byte_end":365057,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":365058,"byte_end":365125,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":365126,"byte_end":365220,"line_start":28,"line_end":28,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"S\"), Err(Err::Error(Error::new(\"S\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":365221,"byte_end":365299,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ assert_eq!(parser(\"H\"), Err(Err::Incomplete(Needed::new(4))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":365300,"byte_end":365366,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":365367,"byte_end":365374,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1720},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":366865,"byte_end":366876,"line_start":75,"line_end":75,"column_start":8,"column_end":19},"name":"tag_no_case","qualname":"::bytes::streaming::tag_no_case","value":"pub fn tag_no_case<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + InputLength + Compare<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a case insensitive pattern.","sig":null,"attributes":[{"value":"/ Recognizes a case insensitive pattern.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":366012,"byte_end":366054,"line_start":55,"line_end":55,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":366055,"byte_end":366058,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The input data will be compared to the tag combinator's argument and will return the part of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":366059,"byte_end":366155,"line_start":57,"line_end":57,"column_start":1,"column_end":97}},{"value":"/ the input that matches the argument with no regard to case.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":366156,"byte_end":366219,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":366220,"byte_end":366233,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":366234,"byte_end":366245,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":366246,"byte_end":366282,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":366283,"byte_end":366348,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::tag_no_case;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":366349,"byte_end":366392,"line_start":63,"line_end":63,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":366393,"byte_end":366396,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":366397,"byte_end":366444,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/   tag_no_case(\"hello\")(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":366445,"byte_end":366474,"line_start":66,"line_end":66,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":366475,"byte_end":366480,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":366481,"byte_end":366484,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":366485,"byte_end":366552,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"hello, World!\"), Ok((\", World!\", \"hello\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":366553,"byte_end":366620,"line_start":70,"line_end":70,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"HeLlO, World!\"), Ok((\", World!\", \"HeLlO\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":366621,"byte_end":366688,"line_start":71,"line_end":71,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":366689,"byte_end":366783,"line_start":72,"line_end":72,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Incomplete(Needed::new(5))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":366784,"byte_end":366849,"line_start":73,"line_end":73,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":366850,"byte_end":366857,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1726},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":368355,"byte_end":368361,"line_start":120,"line_end":120,"column_start":8,"column_end":14},"name":"is_not","qualname":"::bytes::streaming::is_not","value":"pub fn is_not<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTakeAtPosition, T: FindToken<<Input as InputTakeAtPosition>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Parse till certain characters are met.","sig":null,"attributes":[{"value":"/ Parse till certain characters are met.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":367513,"byte_end":367555,"line_start":98,"line_end":98,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":367556,"byte_end":367559,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till one of the characters of the combinator's argument are met.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":367560,"byte_end":367669,"line_start":100,"line_end":100,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":367670,"byte_end":367673,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the matched character.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":367674,"byte_end":367719,"line_start":102,"line_end":102,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":367720,"byte_end":367723,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ It will return a `Err::Incomplete(Needed::new(1))` if the pattern wasn't met.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":367724,"byte_end":367805,"line_start":104,"line_end":104,"column_start":1,"column_end":82}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":367806,"byte_end":367819,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":367820,"byte_end":367831,"line_start":106,"line_end":106,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":367832,"byte_end":367868,"line_start":107,"line_end":107,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":367869,"byte_end":367925,"line_start":108,"line_end":108,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::is_not;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":367926,"byte_end":367964,"line_start":109,"line_end":109,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":367965,"byte_end":367968,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ fn not_space(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":367969,"byte_end":368019,"line_start":111,"line_end":111,"column_start":1,"column_end":51}},{"value":"/   is_not(\" \\t\\r\\n\")(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":368020,"byte_end":368046,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":368047,"byte_end":368052,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":368053,"byte_end":368056,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(not_space(\"Hello, World!\"), Ok((\" World!\", \"Hello,\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":368057,"byte_end":368127,"line_start":115,"line_end":115,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(not_space(\"Sometimes\\t\"), Ok((\"\\t\", \"Sometimes\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":368128,"byte_end":368194,"line_start":116,"line_end":116,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(not_space(\"Nospace\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":368195,"byte_end":368270,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(not_space(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":368271,"byte_end":368339,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":368340,"byte_end":368347,"line_start":119,"line_end":119,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1733},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":369644,"byte_end":369648,"line_start":157,"line_end":157,"column_start":8,"column_end":12},"name":"is_a","qualname":"::bytes::streaming::is_a","value":"pub fn is_a<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTakeAtPosition, T: FindToken<<Input as InputTakeAtPosition>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest slice of the matches the pattern.","sig":null,"attributes":[{"value":"/ Returns the longest slice of the matches the pattern.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":368672,"byte_end":368729,"line_start":133,"line_end":133,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":368730,"byte_end":368733,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice consisting of the characters in provided in the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":368734,"byte_end":368826,"line_start":135,"line_end":135,"column_start":1,"column_end":93}},{"value":"/ combinator's argument.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":368827,"byte_end":368853,"line_start":136,"line_end":136,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":368854,"byte_end":368857,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ # Streaming specific","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":368858,"byte_end":368882,"line_start":138,"line_end":138,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the pattern wasn't met","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":368883,"byte_end":368980,"line_start":139,"line_end":139,"column_start":1,"column_end":98}},{"value":"/ or if the pattern reaches the end of the input.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":368981,"byte_end":369032,"line_start":140,"line_end":140,"column_start":1,"column_end":52}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":369033,"byte_end":369046,"line_start":141,"line_end":141,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":369047,"byte_end":369058,"line_start":142,"line_end":142,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":369059,"byte_end":369095,"line_start":143,"line_end":143,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":369096,"byte_end":369152,"line_start":144,"line_end":144,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::is_a;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":369153,"byte_end":369189,"line_start":145,"line_end":145,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":369190,"byte_end":369193,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ fn hex(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":369194,"byte_end":369238,"line_start":147,"line_end":147,"column_start":1,"column_end":45}},{"value":"/   is_a(\"1234567890ABCDEF\")(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":369239,"byte_end":369272,"line_start":148,"line_end":148,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":369273,"byte_end":369278,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":369279,"byte_end":369282,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(hex(\"123 and voila\"), Ok((\" and voila\", \"123\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":369283,"byte_end":369347,"line_start":151,"line_end":151,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(hex(\"DEADBEEF and others\"), Ok((\" and others\", \"DEADBEEF\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":369348,"byte_end":369424,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(hex(\"BADBABEsomething\"), Ok((\"something\", \"BADBABE\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":369425,"byte_end":369495,"line_start":153,"line_end":153,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(hex(\"D15EA5E\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":369496,"byte_end":369565,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(hex(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":369566,"byte_end":369628,"line_start":155,"line_end":155,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":369629,"byte_end":369636,"line_start":156,"line_end":156,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1740},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370906,"byte_end":370916,"line_start":193,"line_end":193,"column_start":8,"column_end":18},"name":"take_while","qualname":"::bytes::streaming::take_while","value":"pub fn take_while<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest input slice (if any) that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest input slice (if any) that matches the predicate.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":369958,"byte_end":370030,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370031,"byte_end":370034,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370035,"byte_end":370130,"line_start":172,"line_end":172,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370131,"byte_end":370172,"line_start":173,"line_end":173,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370173,"byte_end":370176,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370177,"byte_end":370201,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the pattern reaches the end of the input.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370202,"byte_end":370318,"line_start":176,"line_end":176,"column_start":1,"column_end":117}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370319,"byte_end":370332,"line_start":177,"line_end":177,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370333,"byte_end":370344,"line_start":178,"line_end":178,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370345,"byte_end":370381,"line_start":179,"line_end":179,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370382,"byte_end":370438,"line_start":180,"line_end":180,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::take_while;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370439,"byte_end":370481,"line_start":181,"line_end":181,"column_start":1,"column_end":43}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370482,"byte_end":370520,"line_start":182,"line_end":182,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370521,"byte_end":370524,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ fn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370525,"byte_end":370574,"line_start":184,"line_end":184,"column_start":1,"column_end":50}},{"value":"/   take_while(is_alphabetic)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370575,"byte_end":370609,"line_start":185,"line_end":185,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370610,"byte_end":370615,"line_start":186,"line_end":186,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370616,"byte_end":370619,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370620,"byte_end":370689,"line_start":188,"line_end":188,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha(b\"12345\"), Ok((&b\"12345\"[..], &b\"\"[..])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370690,"byte_end":370753,"line_start":189,"line_end":189,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(alpha(b\"latin\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370754,"byte_end":370824,"line_start":190,"line_end":190,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(alpha(b\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370825,"byte_end":370890,"line_start":191,"line_end":191,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":370891,"byte_end":370898,"line_start":192,"line_end":192,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1747},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":372204,"byte_end":372215,"line_start":228,"line_end":228,"column_start":8,"column_end":19},"name":"take_while1","qualname":"::bytes::streaming::take_while1","value":"pub fn take_while1<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (at least 1) input slice that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest (at least 1) input slice that matches the predicate.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371165,"byte_end":371241,"line_start":203,"line_end":203,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371242,"byte_end":371245,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371246,"byte_end":371341,"line_start":205,"line_end":205,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371342,"byte_end":371383,"line_start":206,"line_end":206,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371384,"byte_end":371387,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ It will return an `Err(Err::Error((_, ErrorKind::TakeWhile1)))` if the pattern wasn't met.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371388,"byte_end":371482,"line_start":208,"line_end":208,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371483,"byte_end":371486,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371487,"byte_end":371511,"line_start":210,"line_end":210,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` or if the pattern reaches the end of the input.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371512,"byte_end":371631,"line_start":211,"line_end":211,"column_start":1,"column_end":120}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371632,"byte_end":371635,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371636,"byte_end":371649,"line_start":213,"line_end":213,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371650,"byte_end":371661,"line_start":214,"line_end":214,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371662,"byte_end":371698,"line_start":215,"line_end":215,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371699,"byte_end":371764,"line_start":216,"line_end":216,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::take_while1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371765,"byte_end":371808,"line_start":217,"line_end":217,"column_start":1,"column_end":44}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371809,"byte_end":371847,"line_start":218,"line_end":218,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371848,"byte_end":371851,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ fn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371852,"byte_end":371901,"line_start":220,"line_end":220,"column_start":1,"column_end":50}},{"value":"/   take_while1(is_alphabetic)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371902,"byte_end":371937,"line_start":221,"line_end":221,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371938,"byte_end":371943,"line_start":222,"line_end":222,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371944,"byte_end":371947,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":371948,"byte_end":372017,"line_start":224,"line_end":224,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha(b\"latin\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":372018,"byte_end":372088,"line_start":225,"line_end":225,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhile1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":372089,"byte_end":372188,"line_start":226,"line_end":226,"column_start":1,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":372189,"byte_end":372196,"line_start":227,"line_end":227,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1754},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":373758,"byte_end":373772,"line_start":267,"line_end":267,"column_start":8,"column_end":22},"name":"take_while_m_n","qualname":"::bytes::streaming::take_while_m_n","value":"pub fn take_while_m_n<F, Input, Error: ParseError<Input>>(usize, usize, F)\n-> /*impl Trait*/ where Input: InputTake + InputIter + InputLength,\nF: Fn(<Input as InputIter>::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (m <= len <= n) input slice  that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest (m <= len <= n) input slice  that matches the predicate.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":372524,"byte_end":372604,"line_start":241,"line_end":241,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":372605,"byte_end":372608,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":372609,"byte_end":372704,"line_start":243,"line_end":243,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":372705,"byte_end":372746,"line_start":244,"line_end":244,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":372747,"byte_end":372750,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ It will return an `Err::Error((_, ErrorKind::TakeWhileMN))` if the pattern wasn't met.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":372751,"byte_end":372841,"line_start":246,"line_end":246,"column_start":1,"column_end":91}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":372842,"byte_end":372866,"line_start":247,"line_end":247,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))`  if the pattern reaches the end of the input or is too short.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":372867,"byte_end":373000,"line_start":248,"line_end":248,"column_start":1,"column_end":134}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":373001,"byte_end":373004,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":373005,"byte_end":373018,"line_start":250,"line_end":250,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":373019,"byte_end":373030,"line_start":251,"line_end":251,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":373031,"byte_end":373067,"line_start":252,"line_end":252,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":373068,"byte_end":373133,"line_start":253,"line_end":253,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::take_while_m_n;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":373134,"byte_end":373180,"line_start":254,"line_end":254,"column_start":1,"column_end":47}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":373181,"byte_end":373219,"line_start":255,"line_end":255,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":373220,"byte_end":373223,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ fn short_alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":373224,"byte_end":373279,"line_start":257,"line_end":257,"column_start":1,"column_end":56}},{"value":"/   take_while_m_n(3, 6, is_alphabetic)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":373280,"byte_end":373324,"line_start":258,"line_end":258,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":373325,"byte_end":373330,"line_start":259,"line_end":259,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":373331,"byte_end":373334,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(short_alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":373335,"byte_end":373410,"line_start":261,"line_end":261,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(short_alpha(b\"lengthy\"), Ok((&b\"y\"[..], &b\"length\"[..])));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":373411,"byte_end":373484,"line_start":262,"line_end":262,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(short_alpha(b\"latin\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":373485,"byte_end":373561,"line_start":263,"line_end":263,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(short_alpha(b\"ed\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":373562,"byte_end":373635,"line_start":264,"line_end":264,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(short_alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhileMN))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":373636,"byte_end":373742,"line_start":265,"line_end":265,"column_start":1,"column_end":107}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":373743,"byte_end":373750,"line_start":266,"line_end":266,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1761},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":376370,"byte_end":376379,"line_start":351,"line_end":351,"column_start":8,"column_end":17},"name":"take_till","qualname":"::bytes::streaming::take_till","value":"pub fn take_till<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest input slice (if any) till a predicate is met.","sig":null,"attributes":[{"value":"/ Returns the longest input slice (if any) till a predicate is met.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":375423,"byte_end":375492,"line_start":327,"line_end":327,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":375493,"byte_end":375496,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till the given predicate *(a function that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":375497,"byte_end":375584,"line_start":329,"line_end":329,"column_start":1,"column_end":88}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":375585,"byte_end":375626,"line_start":330,"line_end":330,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":375627,"byte_end":375630,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":375631,"byte_end":375655,"line_start":332,"line_end":332,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the match reaches the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":375656,"byte_end":375752,"line_start":333,"line_end":333,"column_start":1,"column_end":97}},{"value":"/ end of input or if there was not match.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":375753,"byte_end":375796,"line_start":334,"line_end":334,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":375797,"byte_end":375800,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":375801,"byte_end":375814,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":375815,"byte_end":375826,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":375827,"byte_end":375863,"line_start":338,"line_end":338,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":375864,"byte_end":375920,"line_start":339,"line_end":339,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::take_till;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":375921,"byte_end":375962,"line_start":340,"line_end":340,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":375963,"byte_end":375966,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ fn till_colon(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":375967,"byte_end":376018,"line_start":342,"line_end":342,"column_start":1,"column_end":52}},{"value":"/   take_till(|c| c == ':')(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":376019,"byte_end":376051,"line_start":343,"line_end":343,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":376052,"byte_end":376057,"line_start":344,"line_end":344,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":376058,"byte_end":376061,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":376062,"byte_end":376125,"line_start":346,"line_end":346,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(till_colon(\":empty matched\"), Ok((\":empty matched\", \"\"))); //allowed","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":376126,"byte_end":376209,"line_start":347,"line_end":347,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(till_colon(\"12345\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":376210,"byte_end":376284,"line_start":348,"line_end":348,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(till_colon(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":376285,"byte_end":376354,"line_start":349,"line_end":349,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":376355,"byte_end":376362,"line_start":350,"line_end":350,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1768},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":377616,"byte_end":377626,"line_start":384,"line_end":384,"column_start":8,"column_end":18},"name":"take_till1","qualname":"::bytes::streaming::take_till1","value":"pub fn take_till1<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (at least 1) input slice till a predicate is met.","sig":null,"attributes":[{"value":"/ Returns the longest (at least 1) input slice till a predicate is met.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":376627,"byte_end":376700,"line_start":361,"line_end":361,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":376701,"byte_end":376704,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till the given predicate *(a function that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":376705,"byte_end":376792,"line_start":363,"line_end":363,"column_start":1,"column_end":88}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":376793,"byte_end":376834,"line_start":364,"line_end":364,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":376835,"byte_end":376838,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":376839,"byte_end":376863,"line_start":366,"line_end":366,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the match reaches the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":376864,"byte_end":376960,"line_start":367,"line_end":367,"column_start":1,"column_end":97}},{"value":"/ end of input or if there was not match.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":376961,"byte_end":377004,"line_start":368,"line_end":368,"column_start":1,"column_end":44}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":377005,"byte_end":377018,"line_start":369,"line_end":369,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":377019,"byte_end":377030,"line_start":370,"line_end":370,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":377031,"byte_end":377067,"line_start":371,"line_end":371,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":377068,"byte_end":377133,"line_start":372,"line_end":372,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::take_till1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":377134,"byte_end":377176,"line_start":373,"line_end":373,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":377177,"byte_end":377180,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ fn till_colon(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":377181,"byte_end":377232,"line_start":375,"line_end":375,"column_start":1,"column_end":52}},{"value":"/   take_till1(|c| c == ':')(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":377233,"byte_end":377266,"line_start":376,"line_end":376,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":377267,"byte_end":377272,"line_start":377,"line_end":377,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":377273,"byte_end":377276,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":377277,"byte_end":377340,"line_start":379,"line_end":379,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(till_colon(\":empty matched\"), Err(Err::Error(Error::new(\":empty matched\", ErrorKind::TakeTill1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":377341,"byte_end":377455,"line_start":380,"line_end":380,"column_start":1,"column_end":115}},{"value":"/ assert_eq!(till_colon(\"12345\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":377456,"byte_end":377530,"line_start":381,"line_end":381,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(till_colon(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":377531,"byte_end":377600,"line_start":382,"line_end":382,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":377601,"byte_end":377608,"line_start":383,"line_end":383,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1775},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378917,"byte_end":378921,"line_start":421,"line_end":421,"column_start":8,"column_end":12},"name":"take","qualname":"::bytes::streaming::take","value":"pub fn take<C, Input, Error: ParseError<Input>>(C) -> /*impl Trait*/ where\nInput: InputIter + InputTake + InputLength, C: ToUsize","parent":null,"children":[],"decl_id":null,"docs":" Returns an input slice containing the first N input elements (Input[..N]).","sig":null,"attributes":[{"value":"/ Returns an input slice containing the first N input elements (Input[..N]).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":377933,"byte_end":378011,"line_start":397,"line_end":397,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378012,"byte_end":378015,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378016,"byte_end":378040,"line_start":399,"line_end":399,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* if the input has less than N elements, `take` will","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378041,"byte_end":378115,"line_start":400,"line_end":400,"column_start":1,"column_end":75}},{"value":"/ return a `Err::Incomplete(Needed::new(M))` where M is the number of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378116,"byte_end":378187,"line_start":401,"line_end":401,"column_start":1,"column_end":72}},{"value":"/ additional bytes the parser would need to succeed.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378188,"byte_end":378242,"line_start":402,"line_end":402,"column_start":1,"column_end":55}},{"value":"/ It is well defined for `&[u8]` as the number of elements is the byte size,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378243,"byte_end":378321,"line_start":403,"line_end":403,"column_start":1,"column_end":79}},{"value":"/ but for types like `&str`, we cannot know how many bytes correspond for","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378322,"byte_end":378397,"line_start":404,"line_end":404,"column_start":1,"column_end":76}},{"value":"/ the next few chars, so the result will be `Err::Incomplete(Needed::Unknown)`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378398,"byte_end":378478,"line_start":405,"line_end":405,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378479,"byte_end":378482,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378483,"byte_end":378496,"line_start":407,"line_end":407,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378497,"byte_end":378508,"line_start":408,"line_end":408,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378509,"byte_end":378545,"line_start":409,"line_end":409,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378546,"byte_end":378602,"line_start":410,"line_end":410,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::take;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378603,"byte_end":378639,"line_start":411,"line_end":411,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378640,"byte_end":378643,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ fn take6(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378644,"byte_end":378690,"line_start":413,"line_end":413,"column_start":1,"column_end":47}},{"value":"/   take(6usize)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378691,"byte_end":378712,"line_start":414,"line_end":414,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378713,"byte_end":378718,"line_start":415,"line_end":415,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378719,"byte_end":378722,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(take6(\"1234567\"), Ok((\"7\", \"123456\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378723,"byte_end":378777,"line_start":417,"line_end":417,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(take6(\"things\"), Ok((\"\", \"things\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378778,"byte_end":378830,"line_start":418,"line_end":418,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(take6(\"short\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378831,"byte_end":378901,"line_start":419,"line_end":419,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":378902,"byte_end":378909,"line_start":420,"line_end":420,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1781},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":380124,"byte_end":380134,"line_start":457,"line_end":457,"column_start":8,"column_end":18},"name":"take_until","qualname":"::bytes::streaming::take_until","value":"pub fn take_until<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + InputLength + FindSubstring<T>, T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Returns the input slice up to the first occurrence of the pattern.","sig":null,"attributes":[{"value":"/ Returns the input slice up to the first occurrence of the pattern.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":379250,"byte_end":379320,"line_start":435,"line_end":435,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":379321,"byte_end":379324,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the pattern.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":379325,"byte_end":379360,"line_start":437,"line_end":437,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":379361,"byte_end":379364,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":379365,"byte_end":379389,"line_start":439,"line_end":439,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(N))` if the input doesn't","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":379390,"byte_end":379482,"line_start":440,"line_end":440,"column_start":1,"column_end":93}},{"value":"/ contain the pattern or if the input is smaller than the pattern.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":379483,"byte_end":379551,"line_start":441,"line_end":441,"column_start":1,"column_end":69}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":379552,"byte_end":379565,"line_start":442,"line_end":442,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":379566,"byte_end":379577,"line_start":443,"line_end":443,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":379578,"byte_end":379614,"line_start":444,"line_end":444,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":379615,"byte_end":379671,"line_start":445,"line_end":445,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::take_until;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":379672,"byte_end":379714,"line_start":446,"line_end":446,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":379715,"byte_end":379718,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ fn until_eof(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":379719,"byte_end":379769,"line_start":448,"line_end":448,"column_start":1,"column_end":51}},{"value":"/   take_until(\"eof\")(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":379770,"byte_end":379796,"line_start":449,"line_end":449,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":379797,"byte_end":379802,"line_start":450,"line_end":450,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":379803,"byte_end":379806,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(until_eof(\"hello, worldeof\"), Ok((\"eof\", \"hello, world\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":379807,"byte_end":379881,"line_start":452,"line_end":452,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(until_eof(\"hello, world\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":379882,"byte_end":379963,"line_start":453,"line_end":453,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(until_eof(\"hello, worldeo\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":379964,"byte_end":380047,"line_start":454,"line_end":454,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(until_eof(\"1eof2eof\"), Ok((\"eof2eof\", \"1\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":380048,"byte_end":380108,"line_start":455,"line_end":455,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":380109,"byte_end":380116,"line_start":456,"line_end":456,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1787},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":381300,"byte_end":381307,"line_start":496,"line_end":496,"column_start":8,"column_end":15},"name":"escaped","qualname":"::bytes::streaming::escaped","value":"pub fn escaped<Input, Error, F, G, O1, O2>(F, char, G) -> /*impl Trait*/ where\nInput: Clone + crate::traits::Offset + InputLength + InputTake +\nInputTakeAtPosition + Slice<RangeFrom<usize>> + InputIter,\n<Input as InputIter>::Item: crate::traits::AsChar,\nF: Parser<Input, O1, Error>, G: Parser<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Matches a byte string with escaped characters.","sig":null,"attributes":[{"value":"/ Matches a byte string with escaped characters.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":380538,"byte_end":380588,"line_start":475,"line_end":475,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":380589,"byte_end":380592,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ * The first argument matches the normal characters (it must not accept the control character)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":380593,"byte_end":380690,"line_start":477,"line_end":477,"column_start":1,"column_end":98}},{"value":"/ * The second argument is the control character (like `\\` in most languages)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":380691,"byte_end":380770,"line_start":478,"line_end":478,"column_start":1,"column_end":80}},{"value":"/ * The third argument matches the escaped characters","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":380771,"byte_end":380826,"line_start":479,"line_end":479,"column_start":1,"column_end":56}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":380827,"byte_end":380840,"line_start":480,"line_end":480,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":380841,"byte_end":380848,"line_start":481,"line_end":481,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":380849,"byte_end":380885,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":380886,"byte_end":380942,"line_start":483,"line_end":483,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::digit1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":380943,"byte_end":380986,"line_start":484,"line_end":484,"column_start":1,"column_end":44}},{"value":"/ use nom::bytes::streaming::escaped;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":380987,"byte_end":381026,"line_start":485,"line_end":485,"column_start":1,"column_end":40}},{"value":"/ use nom::character::streaming::one_of;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":381027,"byte_end":381069,"line_start":486,"line_end":486,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":381070,"byte_end":381073,"line_start":487,"line_end":487,"column_start":1,"column_end":4}},{"value":"/ fn esc(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":381074,"byte_end":381118,"line_start":488,"line_end":488,"column_start":1,"column_end":45}},{"value":"/   escaped(digit1, '\\\\', one_of(\"\\\"n\\\\\"))(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":381119,"byte_end":381166,"line_start":489,"line_end":489,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":381167,"byte_end":381172,"line_start":490,"line_end":490,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":381173,"byte_end":381176,"line_start":491,"line_end":491,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(esc(\"123;\"), Ok((\";\", \"123\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":381177,"byte_end":381223,"line_start":492,"line_end":492,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(esc(\"12\\\\\\\"34;\"), Ok((\";\", \"12\\\\\\\"34\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":381224,"byte_end":381280,"line_start":493,"line_end":493,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":381281,"byte_end":381288,"line_start":494,"line_end":494,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":381289,"byte_end":381292,"line_start":495,"line_end":495,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1797},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":383063,"byte_end":383071,"line_start":562,"line_end":562,"column_start":8,"column_end":16},"name":"escapedc","qualname":"::bytes::streaming::escapedc","value":"pub fn escapedc<Input, Error, F, G, O1, O2>(Input, F, char, G)\n-> IResult<Input, Input, Error> where Input: Clone + crate::traits::Offset +\nInputLength + InputTake + InputTakeAtPosition + Slice<RangeFrom<usize>> +\nInputIter, <Input as InputIter>::Item: crate::traits::AsChar, F: Fn(Input) ->\nIResult<Input, O1, Error>, G: Fn(Input) -> IResult<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1804},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384726,"byte_end":384743,"line_start":617,"line_end":617,"column_start":8,"column_end":25},"name":"escaped_transform","qualname":"::bytes::streaming::escaped_transform","value":"pub fn escaped_transform<Input, Error, F, G, O1, O2, ExtendItem,\n                         Output>(F, char, G) -> /*impl Trait*/ where\nInput: Clone + crate::traits::Offset + InputLength + InputTake +\nInputTakeAtPosition + Slice<RangeFrom<usize>> + InputIter,\nInput: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\nO1: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\nO2: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\n<Input as InputIter>::Item: crate::traits::AsChar,\nF: Parser<Input, O1, Error>, G: Parser<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Matches a byte string with escaped characters.","sig":null,"attributes":[{"value":"/ Matches a byte string with escaped characters.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":383576,"byte_end":383626,"line_start":584,"line_end":584,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":383627,"byte_end":383630,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ * The first argument matches the normal characters (it must not match the control character)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":383631,"byte_end":383727,"line_start":586,"line_end":586,"column_start":1,"column_end":97}},{"value":"/ * The second argument is the control character (like `\\` in most languages)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":383728,"byte_end":383807,"line_start":587,"line_end":587,"column_start":1,"column_end":80}},{"value":"/ * The third argument matches the escaped characters and transforms them","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":383808,"byte_end":383883,"line_start":588,"line_end":588,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":383884,"byte_end":383887,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ As an example, the chain `abc\\tdef` could be `abc    def` (it also consumes the control character)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":383888,"byte_end":383990,"line_start":590,"line_end":590,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":383991,"byte_end":383994,"line_start":591,"line_end":591,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":383995,"byte_end":384002,"line_start":592,"line_end":592,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384003,"byte_end":384039,"line_start":593,"line_end":593,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384040,"byte_end":384096,"line_start":594,"line_end":594,"column_start":1,"column_end":57}},{"value":"/ # use std::str::from_utf8;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384097,"byte_end":384127,"line_start":595,"line_end":595,"column_start":1,"column_end":31}},{"value":"/ use nom::bytes::streaming::{escaped_transform, tag};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384128,"byte_end":384184,"line_start":596,"line_end":596,"column_start":1,"column_end":57}},{"value":"/ use nom::character::streaming::alpha1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384185,"byte_end":384227,"line_start":597,"line_end":597,"column_start":1,"column_end":43}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384228,"byte_end":384253,"line_start":598,"line_end":598,"column_start":1,"column_end":26}},{"value":"/ use nom::combinator::value;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384254,"byte_end":384285,"line_start":599,"line_end":599,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384286,"byte_end":384289,"line_start":600,"line_end":600,"column_start":1,"column_end":4}},{"value":"/ fn parser(input: &str) -> IResult<&str, String> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384290,"byte_end":384343,"line_start":601,"line_end":601,"column_start":1,"column_end":54}},{"value":"/   escaped_transform(","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384344,"byte_end":384368,"line_start":602,"line_end":602,"column_start":1,"column_end":25}},{"value":"/     alpha1,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384369,"byte_end":384384,"line_start":603,"line_end":603,"column_start":1,"column_end":16}},{"value":"/     '\\\\',","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384385,"byte_end":384398,"line_start":604,"line_end":604,"column_start":1,"column_end":14}},{"value":"/     alt((","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384399,"byte_end":384412,"line_start":605,"line_end":605,"column_start":1,"column_end":14}},{"value":"/       value(\"\\\\\", tag(\"\\\\\")),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384413,"byte_end":384446,"line_start":606,"line_end":606,"column_start":1,"column_end":34}},{"value":"/       value(\"\\\"\", tag(\"\\\"\")),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384447,"byte_end":384480,"line_start":607,"line_end":607,"column_start":1,"column_end":34}},{"value":"/       value(\"n\", tag(\"\\n\")),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384481,"byte_end":384513,"line_start":608,"line_end":608,"column_start":1,"column_end":33}},{"value":"/     ))","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384514,"byte_end":384524,"line_start":609,"line_end":609,"column_start":1,"column_end":11}},{"value":"/   )(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384525,"byte_end":384539,"line_start":610,"line_end":610,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384540,"byte_end":384545,"line_start":611,"line_end":611,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384546,"byte_end":384549,"line_start":612,"line_end":612,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"ab\\\\\\\"cd\\\"\"), Ok((\"\\\"\", String::from(\"ab\\\"cd\"))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384550,"byte_end":384623,"line_start":613,"line_end":613,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384624,"byte_end":384631,"line_start":614,"line_end":614,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":384632,"byte_end":384657,"line_start":615,"line_end":615,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1816},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":387039,"byte_end":387057,"line_start":692,"line_end":692,"column_start":8,"column_end":26},"name":"escaped_transformc","qualname":"::bytes::streaming::escaped_transformc","value":"pub fn escaped_transformc<Input, Error, F, G, O1, O2, ExtendItem,\n                          Output>(Input, F, char, G)\n-> IResult<Input, Output, Error> where Input: Clone + crate::traits::Offset +\nInputLength + InputTake + InputTakeAtPosition + Slice<RangeFrom<usize>> +\nInputIter, Input: crate::traits::ExtendInto<Item = ExtendItem, Extender =\nExtendItem>, O1: crate::traits::ExtendInto<Item = ExtendItem, Extender =\nExtendItem>, O2: crate::traits::ExtendInto<Item = ExtendItem, Extender =\nExtendItem>, <Input as InputIter>::Item: crate::traits::AsChar, F: Fn(Input)\n-> IResult<Input, O1, Error>, G: Fn(Input) -> IResult<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/streaming.rs","byte_start":386945,"byte_end":386970,"line_start":690,"line_end":690,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":1825},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bits","qualname":"::bits","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","parent":null,"children":[{"krate":0,"index":1826},{"krate":0,"index":1831},{"krate":0,"index":1864},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1918},{"krate":0,"index":1924},{"krate":0,"index":1932}],"decl_id":null,"docs":" Bit level parsers","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16691,"byte_end":16703,"line_start":501,"line_end":501,"column_start":1,"column_end":13}},{"value":"/ Bit level parsers","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":387809,"byte_end":387830,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":387831,"byte_end":387834,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":1831},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/complete.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"complete","qualname":"::bits::complete","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/complete.rs","parent":null,"children":[{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1856}],"decl_id":null,"docs":" Bit level parsers","sig":null,"attributes":[{"value":"/ Bit level parsers","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/complete.rs","byte_start":399832,"byte_end":399853,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/complete.rs","byte_start":399854,"byte_end":399857,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1849},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/complete.rs","byte_start":400116,"byte_end":400120,"line_start":10,"line_end":10,"column_start":8,"column_end":12},"name":"take","qualname":"::bits::complete::take","value":"pub fn take<I, O, C, E: ParseError<(I, usize)>>(C) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength, C: ToUsize,\nO: From<u8> + AddAssign + Shl<usize, Output = O> + Shr<usize, Output = O>","parent":null,"children":[],"decl_id":null,"docs":" Generates a parser taking `count` bits\n","sig":null,"attributes":[{"value":"/ Generates a parser taking `count` bits","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/complete.rs","byte_start":400066,"byte_end":400108,"line_start":9,"line_end":9,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1856},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/complete.rs","byte_start":401672,"byte_end":401675,"line_start":62,"line_end":62,"column_start":8,"column_end":11},"name":"tag","qualname":"::bits::complete::tag","value":"pub fn tag<I, O, C, E: ParseError<(I, usize)>>(O, C) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength + Clone,\nC: ToUsize, O: From<u8> + AddAssign + Shl<usize, Output = O> + Shr<usize,\nOutput = O> + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Generates a parser taking `count` bits and comparing them to `pattern`\n","sig":null,"attributes":[{"value":"/ Generates a parser taking `count` bits and comparing them to `pattern`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/complete.rs","byte_start":401590,"byte_end":401664,"line_start":61,"line_end":61,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":1864},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/streaming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streaming","qualname":"::bits::streaming","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/streaming.rs","parent":null,"children":[{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1890}],"decl_id":null,"docs":" Bit level parsers","sig":null,"attributes":[{"value":"/ Bit level parsers","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/streaming.rs","byte_start":402259,"byte_end":402280,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/streaming.rs","byte_start":402281,"byte_end":402284,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1883},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/streaming.rs","byte_start":402551,"byte_end":402555,"line_start":10,"line_end":10,"column_start":8,"column_end":12},"name":"take","qualname":"::bits::streaming::take","value":"pub fn take<I, O, C, E: ParseError<(I, usize)>>(C) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength, C: ToUsize,\nO: From<u8> + AddAssign + Shl<usize, Output = O> + Shr<usize, Output = O>","parent":null,"children":[],"decl_id":null,"docs":" Generates a parser taking `count` bits\n","sig":null,"attributes":[{"value":"/ Generates a parser taking `count` bits","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/streaming.rs","byte_start":402501,"byte_end":402543,"line_start":9,"line_end":9,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1890},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/streaming.rs","byte_start":404053,"byte_end":404056,"line_start":59,"line_end":59,"column_start":8,"column_end":11},"name":"tag","qualname":"::bits::streaming::tag","value":"pub fn tag<I, O, C, E: ParseError<(I, usize)>>(O, C) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength + Clone,\nC: ToUsize, O: From<u8> + AddAssign + Shl<usize, Output = O> + Shr<usize,\nOutput = O> + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Generates a parser taking `count` bits and comparing them to `pattern`\n","sig":null,"attributes":[{"value":"/ Generates a parser taking `count` bits and comparing them to `pattern`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/streaming.rs","byte_start":403971,"byte_end":404045,"line_start":58,"line_end":58,"column_start":1,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":1909},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388735,"byte_end":388739,"line_start":37,"line_end":37,"column_start":8,"column_end":12},"name":"bits","qualname":"::bits::bits","value":"pub fn bits<I, O, E1: ParseError<(I, usize)> + ErrorConvert<E2>,\n            E2: ParseError<I>, P>(P) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>>, P: FnMut((I, usize)) -> IResult<(I, usize), O, E1>","parent":null,"children":[],"decl_id":null,"docs":" Converts a byte-level input to a bit-level input, for consumption by a parser that uses bits.","sig":null,"attributes":[{"value":"/ Converts a byte-level input to a bit-level input, for consumption by a parser that uses bits.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388068,"byte_end":388165,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388166,"byte_end":388169,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Afterwards, the input is converted back to a byte-level parser, with any remaining bits thrown","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388170,"byte_end":388268,"line_start":17,"line_end":17,"column_start":1,"column_end":99}},{"value":"/ away.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388269,"byte_end":388278,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388279,"byte_end":388282,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388283,"byte_end":388296,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/ ```ignore","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388297,"byte_end":388310,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388311,"byte_end":388347,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/ # use nom::IResult;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388348,"byte_end":388371,"line_start":23,"line_end":23,"column_start":1,"column_end":24}},{"value":"/ use nom::bits::bits;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388372,"byte_end":388396,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/ use nom::bits::complete::take;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388397,"byte_end":388431,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/ use nom::error::Error;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388432,"byte_end":388458,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388459,"byte_end":388462,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn take_4_bits(input: &[u8]) -> IResult<&[u8], u64> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388463,"byte_end":388520,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/   bits(take::<_, _, _, Error<_>>(4usize))(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388521,"byte_end":388573,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388574,"byte_end":388579,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388580,"byte_end":388583,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let input = vec![0xAB, 0xCD, 0xEF, 0x12];","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388584,"byte_end":388629,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/ let sl    = &input[..];","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388630,"byte_end":388657,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388658,"byte_end":388661,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(take_4_bits( sl ), Ok( (&sl[1..], 0xA) ));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388662,"byte_end":388719,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":388720,"byte_end":388727,"line_start":36,"line_end":36,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1918},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":389392,"byte_end":389397,"line_start":56,"line_end":56,"column_start":8,"column_end":13},"name":"bitsc","qualname":"::bits::bitsc","value":"pub fn bitsc<I, O, E1: ParseError<(I, usize)> + ErrorConvert<E2>,\n             E2: ParseError<I>, P>(I, P) -> IResult<I, O, E2> where\nI: Slice<RangeFrom<usize>>, P: FnMut((I, usize)) -> IResult<(I, usize), O, E1>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1924},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":390467,"byte_end":390472,"line_start":92,"line_end":92,"column_start":8,"column_end":13},"name":"bytes","qualname":"::bits::bytes","value":"pub fn bytes<I, O, E1: ParseError<I> + ErrorConvert<E2>,\n             E2: ParseError<(I, usize)>, P>(P) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + Clone, P: FnMut(I) -> IResult<I, O, E1>","parent":null,"children":[],"decl_id":null,"docs":" Counterpart to `bits`, `bytes` transforms its bit stream input into a byte slice for the underlying\n parser, allowing byte-slice parsers to work on bit streams.","sig":null,"attributes":[{"value":"/ Counterpart to `bits`, `bytes` transforms its bit stream input into a byte slice for the underlying","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":389639,"byte_end":389742,"line_start":67,"line_end":67,"column_start":1,"column_end":104}},{"value":"/ parser, allowing byte-slice parsers to work on bit streams.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":389743,"byte_end":389806,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":389807,"byte_end":389810,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ A partial byte remaining in the input will be ignored and the given parser will start parsing","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":389811,"byte_end":389908,"line_start":70,"line_end":70,"column_start":1,"column_end":98}},{"value":"/ at the next full byte.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":389909,"byte_end":389935,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":389936,"byte_end":389939,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":389940,"byte_end":389953,"line_start":73,"line_end":73,"column_start":1,"column_end":14}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":389954,"byte_end":389990,"line_start":74,"line_end":74,"column_start":1,"column_end":37}},{"value":"/ # use nom::IResult;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":389991,"byte_end":390014,"line_start":75,"line_end":75,"column_start":1,"column_end":24}},{"value":"/ # use nom::combinator::rest;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":390015,"byte_end":390047,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/ # use nom::sequence::tuple;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":390048,"byte_end":390079,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/ use nom::bits::{bits, bytes, streaming::take_bits};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":390080,"byte_end":390135,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":390136,"byte_end":390139,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ fn parse(input: &[u8]) -> IResult<&[u8], (u8, u8, &[u8])> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":390140,"byte_end":390203,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/   bits(tuple((","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":390204,"byte_end":390222,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/     take_bits(4usize),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":390223,"byte_end":390249,"line_start":82,"line_end":82,"column_start":1,"column_end":27}},{"value":"/     take_bits(8usize),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":390250,"byte_end":390276,"line_start":83,"line_end":83,"column_start":1,"column_end":27}},{"value":"/     bytes(rest)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":390277,"byte_end":390296,"line_start":84,"line_end":84,"column_start":1,"column_end":20}},{"value":"/   )))(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":390297,"byte_end":390313,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":390314,"byte_end":390319,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":390320,"byte_end":390323,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ let input = &[0xde, 0xad, 0xbe, 0xaf];","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":390324,"byte_end":390366,"line_start":88,"line_end":88,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":390367,"byte_end":390370,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parse( input ), Ok(( &[][..], (0xd, 0xea, &[0xbe, 0xaf][..]) )));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":390371,"byte_end":390451,"line_start":90,"line_end":90,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":390452,"byte_end":390459,"line_start":91,"line_end":91,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1932},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":391438,"byte_end":391444,"line_start":120,"line_end":120,"column_start":8,"column_end":14},"name":"bytesc","qualname":"::bits::bytesc","value":"pub fn bytesc<I, O, E1: ParseError<I> + ErrorConvert<E2>,\n              E2: ParseError<(I, usize)>, P>((I, usize), P)\n-> IResult<(I, usize), O, E2> where I: Slice<RangeFrom<usize>> + Clone,\nP: FnMut(I) -> IResult<I, O, E1>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1938},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"character","qualname":"::character","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","parent":null,"children":[{"krate":0,"index":1939},{"krate":0,"index":1943},{"krate":0,"index":2065},{"krate":0,"index":2188},{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194}],"decl_id":null,"docs":" Character specific parsers and combinators","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16719,"byte_end":16731,"line_start":504,"line_end":504,"column_start":1,"column_end":13}},{"value":"/ Character specific parsers and combinators","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":404640,"byte_end":404686,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":404687,"byte_end":404690,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Functions recognizing specific characters","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":404691,"byte_end":404736,"line_start":3,"line_end":3,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":1943},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"complete","qualname":"::character::complete","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","parent":null,"children":[{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1969},{"krate":0,"index":1976},{"krate":0,"index":1983},{"krate":0,"index":1990},{"krate":0,"index":1993},{"krate":0,"index":1997},{"krate":0,"index":2000},{"krate":0,"index":2003},{"krate":0,"index":2006},{"krate":0,"index":2009},{"krate":0,"index":2013},{"krate":0,"index":2017},{"krate":0,"index":2021},{"krate":0,"index":2025},{"krate":0,"index":2029},{"krate":0,"index":2033},{"krate":0,"index":2037},{"krate":0,"index":2041},{"krate":0,"index":2045},{"krate":0,"index":2049},{"krate":0,"index":2053},{"krate":0,"index":2057},{"krate":0,"index":2061}],"decl_id":null,"docs":" Character specific parsers and combinators, complete input version.","sig":null,"attributes":[{"value":"/ Character specific parsers and combinators, complete input version.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":410191,"byte_end":410262,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":410263,"byte_end":410266,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Functions recognizing specific characters.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":410267,"byte_end":410313,"line_start":3,"line_end":3,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1963},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":411227,"byte_end":411231,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"char","qualname":"::character::complete::char","value":"pub fn char<I, Error: ParseError<I>>(char) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one character.","sig":null,"attributes":[{"value":"/ Recognizes one character.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":410604,"byte_end":410633,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":410634,"byte_end":410637,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":410638,"byte_end":410716,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":410717,"byte_end":410730,"line_start":15,"line_end":15,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":410731,"byte_end":410734,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":410735,"byte_end":410742,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{ErrorKind, Error}, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":410743,"byte_end":410800,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/ # use nom::character::complete::char;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":410801,"byte_end":410842,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ fn parser(i: &str) -> IResult<&str, char> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":410843,"byte_end":410890,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/     char('a')(i)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":410891,"byte_end":410911,"line_start":21,"line_end":21,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":410912,"byte_end":410917,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":410918,"byte_end":410965,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\" abc\"), Err(Err::Error(Error::new(\" abc\", ErrorKind::Char))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":410966,"byte_end":411051,"line_start":24,"line_end":24,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"bc\"), Err(Err::Error(Error::new(\"bc\", ErrorKind::Char))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":411052,"byte_end":411133,"line_start":25,"line_end":25,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Char))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":411134,"byte_end":411211,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":411212,"byte_end":411219,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1969},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":412234,"byte_end":412241,"line_start":57,"line_end":57,"column_start":8,"column_end":15},"name":"satisfy","qualname":"::character::complete::satisfy","value":"pub fn satisfy<F, I, Error: ParseError<I>>(F) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar,\nF: Fn(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one character and checks that it satisfies a predicate","sig":null,"attributes":[{"value":"/ Recognizes one character and checks that it satisfies a predicate","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":411616,"byte_end":411685,"line_start":42,"line_end":42,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":411686,"byte_end":411689,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":411690,"byte_end":411768,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":411769,"byte_end":411782,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":411783,"byte_end":411786,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":411787,"byte_end":411794,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{ErrorKind, Error}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":411795,"byte_end":411860,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::satisfy;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":411861,"byte_end":411905,"line_start":49,"line_end":49,"column_start":1,"column_end":45}},{"value":"/ fn parser(i: &str) -> IResult<&str, char> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":411906,"byte_end":411953,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/     satisfy(|c| c == 'a' || c == 'b')(i)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":411954,"byte_end":411998,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":411999,"byte_end":412004,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":412005,"byte_end":412052,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"cd\"), Err(Err::Error(Error::new(\"cd\", ErrorKind::Satisfy))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":412053,"byte_end":412137,"line_start":54,"line_end":54,"column_start":1,"column_end":85}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Satisfy))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":412138,"byte_end":412218,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":412219,"byte_end":412226,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1976},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":413219,"byte_end":413225,"line_start":85,"line_end":85,"column_start":8,"column_end":14},"name":"one_of","qualname":"::character::complete::one_of","value":"pub fn one_of<I, T, Error: ParseError<I>>(T) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar + Copy,\nT: FindToken<<I as InputIter>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one of the provided characters.","sig":null,"attributes":[{"value":"/ Recognizes one of the provided characters.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":412680,"byte_end":412726,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":412727,"byte_end":412730,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":412731,"byte_end":412809,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":412810,"byte_end":412823,"line_start":76,"line_end":76,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":412824,"byte_end":412827,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":412828,"byte_end":412835,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":412836,"byte_end":412875,"line_start":79,"line_end":79,"column_start":1,"column_end":40}},{"value":"/ # use nom::character::complete::one_of;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":412876,"byte_end":412919,"line_start":80,"line_end":80,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(one_of::<_, _, (&str, ErrorKind)>(\"abc\")(\"b\"), Ok((\"\", 'b')));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":412920,"byte_end":412997,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(one_of::<_, _, (&str, ErrorKind)>(\"a\")(\"bc\"), Err(Err::Error((\"bc\", ErrorKind::OneOf))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":412998,"byte_end":413102,"line_start":82,"line_end":82,"column_start":1,"column_end":105}},{"value":"/ assert_eq!(one_of::<_, _, (&str, ErrorKind)>(\"a\")(\"\"), Err(Err::Error((\"\", ErrorKind::OneOf))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":413103,"byte_end":413203,"line_start":83,"line_end":83,"column_start":1,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":413204,"byte_end":413211,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1983},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":414221,"byte_end":414228,"line_start":109,"line_end":109,"column_start":8,"column_end":15},"name":"none_of","qualname":"::character::complete::none_of","value":"pub fn none_of<I, T, Error: ParseError<I>>(T) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar + Copy,\nT: FindToken<<I as InputIter>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a character that is not in the provided characters.","sig":null,"attributes":[{"value":"/ Recognizes a character that is not in the provided characters.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":413657,"byte_end":413723,"line_start":97,"line_end":97,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":413724,"byte_end":413727,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":413728,"byte_end":413806,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":413807,"byte_end":413820,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":413821,"byte_end":413824,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":413825,"byte_end":413832,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":413833,"byte_end":413872,"line_start":103,"line_end":103,"column_start":1,"column_end":40}},{"value":"/ # use nom::character::complete::none_of;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":413873,"byte_end":413917,"line_start":104,"line_end":104,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(none_of::<_, _, (&str, ErrorKind)>(\"abc\")(\"z\"), Ok((\"\", 'z')));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":413918,"byte_end":413996,"line_start":105,"line_end":105,"column_start":1,"column_end":79}},{"value":"/ assert_eq!(none_of::<_, _, (&str, ErrorKind)>(\"ab\")(\"a\"), Err(Err::Error((\"a\", ErrorKind::NoneOf))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":413997,"byte_end":414102,"line_start":106,"line_end":106,"column_start":1,"column_end":106}},{"value":"/ assert_eq!(none_of::<_, _, (&str, ErrorKind)>(\"a\")(\"\"), Err(Err::Error((\"\", ErrorKind::NoneOf))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":414103,"byte_end":414205,"line_start":107,"line_end":107,"column_start":1,"column_end":103}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":414206,"byte_end":414213,"line_start":108,"line_end":108,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1990},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":415224,"byte_end":415228,"line_start":137,"line_end":137,"column_start":8,"column_end":12},"name":"crlf","qualname":"::character::complete::crlf","value":"pub fn crlf<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>>, T: InputIter,\nT: Compare<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes the string \"\\r\\n\".","sig":null,"attributes":[{"value":"/ Recognizes the string \"\\r\\n\".","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":414662,"byte_end":414695,"line_start":121,"line_end":121,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":414696,"byte_end":414699,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":414700,"byte_end":414778,"line_start":123,"line_end":123,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":414779,"byte_end":414792,"line_start":124,"line_end":124,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":414793,"byte_end":414796,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":414797,"byte_end":414804,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":414805,"byte_end":414862,"line_start":127,"line_end":127,"column_start":1,"column_end":58}},{"value":"/ # use nom::character::complete::crlf;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":414863,"byte_end":414904,"line_start":128,"line_end":128,"column_start":1,"column_end":42}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":414905,"byte_end":414956,"line_start":129,"line_end":129,"column_start":1,"column_end":52}},{"value":"/     crlf(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":414957,"byte_end":414976,"line_start":130,"line_end":130,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":414977,"byte_end":414982,"line_start":131,"line_end":131,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":414983,"byte_end":414986,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":414987,"byte_end":415038,"line_start":133,"line_end":133,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"ab\\r\\nc\"), Err(Err::Error(Error::new(\"ab\\r\\nc\", ErrorKind::CrLf))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":415039,"byte_end":415130,"line_start":134,"line_end":134,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::CrLf))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":415131,"byte_end":415208,"line_start":135,"line_end":135,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":415209,"byte_end":415216,"line_start":136,"line_end":136,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1993},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":416207,"byte_end":416222,"line_start":170,"line_end":170,"column_start":8,"column_end":23},"name":"not_line_ending","qualname":"::character::complete::not_line_ending","value":"pub fn not_line_ending<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter + InputLength, T: Compare<&'static str>,\n<T as InputIter>::Item: AsChar, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a string of any char except '\\r' or '\\n'.","sig":null,"attributes":[{"value":"/ Recognizes a string of any char except '\\r' or '\\n'.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":415677,"byte_end":415733,"line_start":154,"line_end":154,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":415734,"byte_end":415737,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":415738,"byte_end":415816,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":415817,"byte_end":415830,"line_start":157,"line_end":157,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":415831,"byte_end":415834,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":415835,"byte_end":415842,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":415843,"byte_end":415899,"line_start":160,"line_end":160,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::not_line_ending;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":415900,"byte_end":415952,"line_start":161,"line_end":161,"column_start":1,"column_end":53}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":415953,"byte_end":416004,"line_start":162,"line_end":162,"column_start":1,"column_end":52}},{"value":"/     not_line_ending(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":416005,"byte_end":416035,"line_start":163,"line_end":163,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":416036,"byte_end":416041,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":416042,"byte_end":416045,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"ab\\r\\nc\"), Ok((\"\\r\\nc\", \"ab\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":416046,"byte_end":416101,"line_start":166,"line_end":166,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"\", \"abc\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":416102,"byte_end":416149,"line_start":167,"line_end":167,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":416150,"byte_end":416191,"line_start":168,"line_end":168,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":416192,"byte_end":416199,"line_start":169,"line_end":169,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1997},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":417858,"byte_end":417869,"line_start":220,"line_end":220,"column_start":8,"column_end":19},"name":"line_ending","qualname":"::character::complete::line_ending","value":"pub fn line_ending<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter + InputLength, T: Compare<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an end of line (both '\\n' and '\\r\\n').","sig":null,"attributes":[{"value":"/ Recognizes an end of line (both '\\n' and '\\r\\n').","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":417254,"byte_end":417307,"line_start":204,"line_end":204,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":417308,"byte_end":417311,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":417312,"byte_end":417390,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":417391,"byte_end":417404,"line_start":207,"line_end":207,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":417405,"byte_end":417408,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":417409,"byte_end":417416,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":417417,"byte_end":417482,"line_start":210,"line_end":210,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::line_ending;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":417483,"byte_end":417531,"line_start":211,"line_end":211,"column_start":1,"column_end":49}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":417532,"byte_end":417583,"line_start":212,"line_end":212,"column_start":1,"column_end":52}},{"value":"/     line_ending(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":417584,"byte_end":417610,"line_start":213,"line_end":213,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":417611,"byte_end":417616,"line_start":214,"line_end":214,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":417617,"byte_end":417620,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":417621,"byte_end":417672,"line_start":216,"line_end":216,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"ab\\r\\nc\"), Err(Err::Error(Error::new(\"ab\\r\\nc\", ErrorKind::CrLf))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":417673,"byte_end":417764,"line_start":217,"line_end":217,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::CrLf))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":417765,"byte_end":417842,"line_start":218,"line_end":218,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":417843,"byte_end":417850,"line_start":219,"line_end":219,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2000},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":419102,"byte_end":419109,"line_start":255,"line_end":255,"column_start":8,"column_end":15},"name":"newline","qualname":"::character::complete::newline","value":"pub fn newline<I, Error: ParseError<I>>(I) -> IResult<I, char, Error> where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches a newline character '\\n'.","sig":null,"attributes":[{"value":"/ Matches a newline character '\\n'.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":418530,"byte_end":418567,"line_start":239,"line_end":239,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":418568,"byte_end":418571,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":418572,"byte_end":418650,"line_start":241,"line_end":241,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":418651,"byte_end":418664,"line_start":242,"line_end":242,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":418665,"byte_end":418668,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":418669,"byte_end":418676,"line_start":244,"line_end":244,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":418677,"byte_end":418742,"line_start":245,"line_end":245,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::newline;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":418743,"byte_end":418787,"line_start":246,"line_end":246,"column_start":1,"column_end":45}},{"value":"/ fn parser(input: &str) -> IResult<&str, char> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":418788,"byte_end":418839,"line_start":247,"line_end":247,"column_start":1,"column_end":52}},{"value":"/     newline(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":418840,"byte_end":418862,"line_start":248,"line_end":248,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":418863,"byte_end":418868,"line_start":249,"line_end":249,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":418869,"byte_end":418872,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"\\nc\"), Ok((\"c\", '\\n')));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":418873,"byte_end":418920,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"\\r\\nc\"), Err(Err::Error(Error::new(\"\\r\\nc\", ErrorKind::Char))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":418921,"byte_end":419008,"line_start":252,"line_end":252,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Char))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":419009,"byte_end":419086,"line_start":253,"line_end":253,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":419087,"byte_end":419094,"line_start":254,"line_end":254,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2003},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":419839,"byte_end":419842,"line_start":279,"line_end":279,"column_start":8,"column_end":11},"name":"tab","qualname":"::character::complete::tab","value":"pub fn tab<I, Error: ParseError<I>>(I) -> IResult<I, char, Error> where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches a tab character '\\t'.","sig":null,"attributes":[{"value":"/ Matches a tab character '\\t'.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":419279,"byte_end":419312,"line_start":263,"line_end":263,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":419313,"byte_end":419316,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":419317,"byte_end":419395,"line_start":265,"line_end":265,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":419396,"byte_end":419409,"line_start":266,"line_end":266,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":419410,"byte_end":419413,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":419414,"byte_end":419421,"line_start":268,"line_end":268,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":419422,"byte_end":419487,"line_start":269,"line_end":269,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::tab;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":419488,"byte_end":419528,"line_start":270,"line_end":270,"column_start":1,"column_end":41}},{"value":"/ fn parser(input: &str) -> IResult<&str, char> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":419529,"byte_end":419580,"line_start":271,"line_end":271,"column_start":1,"column_end":52}},{"value":"/     tab(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":419581,"byte_end":419599,"line_start":272,"line_end":272,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":419600,"byte_end":419605,"line_start":273,"line_end":273,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":419606,"byte_end":419609,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"\\tc\"), Ok((\"c\", '\\t')));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":419610,"byte_end":419657,"line_start":275,"line_end":275,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"\\r\\nc\"), Err(Err::Error(Error::new(\"\\r\\nc\", ErrorKind::Char))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":419658,"byte_end":419745,"line_start":276,"line_end":276,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Char))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":419746,"byte_end":419823,"line_start":277,"line_end":277,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":419824,"byte_end":419831,"line_start":278,"line_end":278,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2006},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":420570,"byte_end":420577,"line_start":302,"line_end":302,"column_start":8,"column_end":15},"name":"anychar","qualname":"::character::complete::anychar","value":"pub fn anychar<T, E: ParseError<T>>(T) -> IResult<T, char, E> where\nT: InputIter + InputLength + Slice<RangeFrom<usize>>,\n<T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches one byte as a character. Note that the input type will\n accept a `str`, but not a `&[u8]`, unlike many other nom parsers.","sig":null,"attributes":[{"value":"/ Matches one byte as a character. Note that the input type will","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":420012,"byte_end":420078,"line_start":287,"line_end":287,"column_start":1,"column_end":67}},{"value":"/ accept a `str`, but not a `&[u8]`, unlike many other nom parsers.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":420079,"byte_end":420148,"line_start":288,"line_end":288,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":420149,"byte_end":420152,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":420153,"byte_end":420231,"line_start":290,"line_end":290,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":420232,"byte_end":420245,"line_start":291,"line_end":291,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":420246,"byte_end":420249,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":420250,"byte_end":420257,"line_start":293,"line_end":293,"column_start":1,"column_end":8}},{"value":"/ # use nom::{character::complete::anychar, Err, error::{Error, ErrorKind}, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":420258,"byte_end":420345,"line_start":294,"line_end":294,"column_start":1,"column_end":88}},{"value":"/ fn parser(input: &str) -> IResult<&str, char> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":420346,"byte_end":420397,"line_start":295,"line_end":295,"column_start":1,"column_end":52}},{"value":"/     anychar(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":420398,"byte_end":420420,"line_start":296,"line_end":296,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":420421,"byte_end":420426,"line_start":297,"line_end":297,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":420427,"byte_end":420430,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\",'a')));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":420431,"byte_end":420477,"line_start":299,"line_end":299,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":420478,"byte_end":420554,"line_start":300,"line_end":300,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":420555,"byte_end":420562,"line_start":301,"line_end":301,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2009},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421618,"byte_end":421624,"line_start":334,"line_end":334,"column_start":8,"column_end":14},"name":"alpha0","qualname":"::character::complete::alpha0","value":"pub fn alpha0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421041,"byte_end":421130,"line_start":317,"line_end":317,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421131,"byte_end":421134,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421135,"byte_end":421226,"line_start":319,"line_end":319,"column_start":1,"column_end":92}},{"value":"/ alphabetic character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421227,"byte_end":421253,"line_start":320,"line_end":320,"column_start":1,"column_end":27}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421254,"byte_end":421267,"line_start":321,"line_end":321,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421268,"byte_end":421271,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421272,"byte_end":421279,"line_start":323,"line_end":323,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421280,"byte_end":421336,"line_start":324,"line_end":324,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::alpha0;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421337,"byte_end":421380,"line_start":325,"line_end":325,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421381,"byte_end":421432,"line_start":326,"line_end":326,"column_start":1,"column_end":52}},{"value":"/     alpha0(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421433,"byte_end":421454,"line_start":327,"line_end":327,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421455,"byte_end":421460,"line_start":328,"line_end":328,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421461,"byte_end":421464,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"ab1c\"), Ok((\"1c\", \"ab\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421465,"byte_end":421514,"line_start":330,"line_end":330,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"1c\"), Ok((\"1c\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421515,"byte_end":421560,"line_start":331,"line_end":331,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421561,"byte_end":421602,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421603,"byte_end":421610,"line_start":333,"line_end":333,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2013},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422523,"byte_end":422529,"line_start":359,"line_end":359,"column_start":8,"column_end":14},"name":"alpha1","qualname":"::character::complete::alpha1","value":"pub fn alpha1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421817,"byte_end":421905,"line_start":342,"line_end":342,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421906,"byte_end":421909,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421910,"byte_end":421988,"line_start":344,"line_end":344,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found  (a non alphabetic character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":421989,"byte_end":422075,"line_start":345,"line_end":345,"column_start":1,"column_end":87}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422076,"byte_end":422089,"line_start":346,"line_end":346,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422090,"byte_end":422093,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422094,"byte_end":422101,"line_start":348,"line_end":348,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422102,"byte_end":422167,"line_start":349,"line_end":349,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::alpha1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422168,"byte_end":422211,"line_start":350,"line_end":350,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422212,"byte_end":422263,"line_start":351,"line_end":351,"column_start":1,"column_end":52}},{"value":"/     alpha1(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422264,"byte_end":422285,"line_start":352,"line_end":352,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422286,"byte_end":422291,"line_start":353,"line_end":353,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422292,"byte_end":422295,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"aB1c\"), Ok((\"1c\", \"aB\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422296,"byte_end":422345,"line_start":355,"line_end":355,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"1c\"), Err(Err::Error(Error::new(\"1c\", ErrorKind::Alpha))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422346,"byte_end":422428,"line_start":356,"line_end":356,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Alpha))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422429,"byte_end":422507,"line_start":357,"line_end":357,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422508,"byte_end":422515,"line_start":358,"line_end":358,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2017},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423377,"byte_end":423383,"line_start":385,"line_end":385,"column_start":8,"column_end":14},"name":"digit0","qualname":"::character::complete::digit0","value":"pub fn digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII numerical characters: 0-9","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII numerical characters: 0-9","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422741,"byte_end":422800,"line_start":367,"line_end":367,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422801,"byte_end":422804,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422805,"byte_end":422883,"line_start":369,"line_end":369,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non digit character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422884,"byte_end":422964,"line_start":370,"line_end":370,"column_start":1,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422965,"byte_end":422978,"line_start":371,"line_end":371,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422979,"byte_end":422982,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422983,"byte_end":422990,"line_start":373,"line_end":373,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":422991,"byte_end":423047,"line_start":374,"line_end":374,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::digit0;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423048,"byte_end":423091,"line_start":375,"line_end":375,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423092,"byte_end":423143,"line_start":376,"line_end":376,"column_start":1,"column_end":52}},{"value":"/     digit0(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423144,"byte_end":423165,"line_start":377,"line_end":377,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423166,"byte_end":423171,"line_start":378,"line_end":378,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423172,"byte_end":423175,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21c\"), Ok((\"c\", \"21\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423176,"byte_end":423223,"line_start":380,"line_end":380,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"21\"), Ok((\"\", \"21\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423224,"byte_end":423269,"line_start":381,"line_end":381,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"a21c\"), Ok((\"a21c\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423270,"byte_end":423319,"line_start":382,"line_end":382,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423320,"byte_end":423361,"line_start":383,"line_end":383,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423362,"byte_end":423369,"line_start":384,"line_end":384,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2021},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424248,"byte_end":424254,"line_start":410,"line_end":410,"column_start":8,"column_end":14},"name":"digit1","qualname":"::character::complete::digit1","value":"pub fn digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII numerical characters: 0-9","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII numerical characters: 0-9","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423580,"byte_end":423638,"line_start":393,"line_end":393,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423639,"byte_end":423642,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423643,"byte_end":423721,"line_start":395,"line_end":395,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non digit character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423722,"byte_end":423802,"line_start":396,"line_end":396,"column_start":1,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423803,"byte_end":423816,"line_start":397,"line_end":397,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423817,"byte_end":423820,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423821,"byte_end":423828,"line_start":399,"line_end":399,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423829,"byte_end":423894,"line_start":400,"line_end":400,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::digit1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423895,"byte_end":423938,"line_start":401,"line_end":401,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423939,"byte_end":423990,"line_start":402,"line_end":402,"column_start":1,"column_end":52}},{"value":"/     digit1(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":423991,"byte_end":424012,"line_start":403,"line_end":403,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424013,"byte_end":424018,"line_start":404,"line_end":404,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424019,"byte_end":424022,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21c\"), Ok((\"c\", \"21\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424023,"byte_end":424070,"line_start":406,"line_end":406,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"c1\"), Err(Err::Error(Error::new(\"c1\", ErrorKind::Digit))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424071,"byte_end":424153,"line_start":407,"line_end":407,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Digit))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424154,"byte_end":424232,"line_start":408,"line_end":408,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424233,"byte_end":424240,"line_start":409,"line_end":409,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2025},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":425054,"byte_end":425064,"line_start":434,"line_end":434,"column_start":8,"column_end":18},"name":"hex_digit0","qualname":"::character::complete::hex_digit0","value":"pub fn hex_digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424470,"byte_end":424551,"line_start":418,"line_end":418,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424552,"byte_end":424555,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non hexadecimal digit character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424556,"byte_end":424677,"line_start":420,"line_end":420,"column_start":1,"column_end":122}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424678,"byte_end":424691,"line_start":421,"line_end":421,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424692,"byte_end":424695,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424696,"byte_end":424703,"line_start":423,"line_end":423,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424704,"byte_end":424760,"line_start":424,"line_end":424,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::hex_digit0;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424761,"byte_end":424808,"line_start":425,"line_end":425,"column_start":1,"column_end":48}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424809,"byte_end":424860,"line_start":426,"line_end":426,"column_start":1,"column_end":52}},{"value":"/     hex_digit0(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424861,"byte_end":424886,"line_start":427,"line_end":427,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424887,"byte_end":424892,"line_start":428,"line_end":428,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424893,"byte_end":424896,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ\"), Ok((\"Z\", \"21c\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424897,"byte_end":424946,"line_start":430,"line_end":430,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424947,"byte_end":424996,"line_start":431,"line_end":431,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":424997,"byte_end":425038,"line_start":432,"line_end":432,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":425039,"byte_end":425046,"line_start":433,"line_end":433,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2029},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":425978,"byte_end":425988,"line_start":458,"line_end":458,"column_start":8,"column_end":18},"name":"hex_digit1","qualname":"::character::complete::hex_digit1","value":"pub fn hex_digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":425260,"byte_end":425340,"line_start":441,"line_end":441,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":425341,"byte_end":425344,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":425345,"byte_end":425423,"line_start":443,"line_end":443,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non hexadecimal digit character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":425424,"byte_end":425516,"line_start":444,"line_end":444,"column_start":1,"column_end":93}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":425517,"byte_end":425530,"line_start":445,"line_end":445,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":425531,"byte_end":425534,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":425535,"byte_end":425542,"line_start":447,"line_end":447,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":425543,"byte_end":425608,"line_start":448,"line_end":448,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::hex_digit1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":425609,"byte_end":425656,"line_start":449,"line_end":449,"column_start":1,"column_end":48}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":425657,"byte_end":425708,"line_start":450,"line_end":450,"column_start":1,"column_end":52}},{"value":"/     hex_digit1(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":425709,"byte_end":425734,"line_start":451,"line_end":451,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":425735,"byte_end":425740,"line_start":452,"line_end":452,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":425741,"byte_end":425744,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ\"), Ok((\"Z\", \"21c\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":425745,"byte_end":425794,"line_start":454,"line_end":454,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::HexDigit))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":425795,"byte_end":425880,"line_start":455,"line_end":455,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::HexDigit))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":425881,"byte_end":425962,"line_start":456,"line_end":456,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":425963,"byte_end":425970,"line_start":457,"line_end":457,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2033},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":426757,"byte_end":426767,"line_start":483,"line_end":483,"column_start":8,"column_end":18},"name":"oct_digit0","qualname":"::character::complete::oct_digit0","value":"pub fn oct_digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more octal characters: 0-7","sig":null,"attributes":[{"value":"/ Recognizes zero or more octal characters: 0-7","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":426207,"byte_end":426256,"line_start":466,"line_end":466,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":426257,"byte_end":426260,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non octal","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":426261,"byte_end":426358,"line_start":468,"line_end":468,"column_start":1,"column_end":98}},{"value":"/ digit character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":426359,"byte_end":426380,"line_start":469,"line_end":469,"column_start":1,"column_end":22}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":426381,"byte_end":426394,"line_start":470,"line_end":470,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":426395,"byte_end":426398,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":426399,"byte_end":426406,"line_start":472,"line_end":472,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":426407,"byte_end":426463,"line_start":473,"line_end":473,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::oct_digit0;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":426464,"byte_end":426511,"line_start":474,"line_end":474,"column_start":1,"column_end":48}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":426512,"byte_end":426563,"line_start":475,"line_end":475,"column_start":1,"column_end":52}},{"value":"/     oct_digit0(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":426564,"byte_end":426589,"line_start":476,"line_end":476,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":426590,"byte_end":426595,"line_start":477,"line_end":477,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":426596,"byte_end":426599,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ\"), Ok((\"cZ\", \"21\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":426600,"byte_end":426649,"line_start":479,"line_end":479,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":426650,"byte_end":426699,"line_start":480,"line_end":480,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":426700,"byte_end":426741,"line_start":481,"line_end":481,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":426742,"byte_end":426749,"line_start":482,"line_end":482,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2037},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":427644,"byte_end":427654,"line_start":508,"line_end":508,"column_start":8,"column_end":18},"name":"oct_digit1","qualname":"::character::complete::oct_digit1","value":"pub fn oct_digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more octal characters: 0-7","sig":null,"attributes":[{"value":"/ Recognizes one or more octal characters: 0-7","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":426964,"byte_end":427012,"line_start":491,"line_end":491,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":427013,"byte_end":427016,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":427017,"byte_end":427095,"line_start":493,"line_end":493,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non octal digit character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":427096,"byte_end":427182,"line_start":494,"line_end":494,"column_start":1,"column_end":87}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":427183,"byte_end":427196,"line_start":495,"line_end":495,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":427197,"byte_end":427200,"line_start":496,"line_end":496,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":427201,"byte_end":427208,"line_start":497,"line_end":497,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":427209,"byte_end":427274,"line_start":498,"line_end":498,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::oct_digit1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":427275,"byte_end":427322,"line_start":499,"line_end":499,"column_start":1,"column_end":48}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":427323,"byte_end":427374,"line_start":500,"line_end":500,"column_start":1,"column_end":52}},{"value":"/     oct_digit1(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":427375,"byte_end":427400,"line_start":501,"line_end":501,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":427401,"byte_end":427406,"line_start":502,"line_end":502,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":427407,"byte_end":427410,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ\"), Ok((\"cZ\", \"21\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":427411,"byte_end":427460,"line_start":504,"line_end":504,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::OctDigit))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":427461,"byte_end":427546,"line_start":505,"line_end":505,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::OctDigit))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":427547,"byte_end":427628,"line_start":506,"line_end":506,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":427629,"byte_end":427636,"line_start":507,"line_end":507,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2041},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428473,"byte_end":428486,"line_start":533,"line_end":533,"column_start":8,"column_end":21},"name":"alphanumeric0","qualname":"::character::complete::alphanumeric0","value":"pub fn alphanumeric0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":427873,"byte_end":427957,"line_start":516,"line_end":516,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":427958,"byte_end":427961,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":427962,"byte_end":428053,"line_start":518,"line_end":518,"column_start":1,"column_end":92}},{"value":"/ alphanumerical character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428054,"byte_end":428084,"line_start":519,"line_end":519,"column_start":1,"column_end":31}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428085,"byte_end":428098,"line_start":520,"line_end":520,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428099,"byte_end":428102,"line_start":521,"line_end":521,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428103,"byte_end":428110,"line_start":522,"line_end":522,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428111,"byte_end":428167,"line_start":523,"line_end":523,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::alphanumeric0;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428168,"byte_end":428218,"line_start":524,"line_end":524,"column_start":1,"column_end":51}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428219,"byte_end":428270,"line_start":525,"line_end":525,"column_start":1,"column_end":52}},{"value":"/     alphanumeric0(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428271,"byte_end":428299,"line_start":526,"line_end":526,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428300,"byte_end":428305,"line_start":527,"line_end":527,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428306,"byte_end":428309,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428310,"byte_end":428363,"line_start":529,"line_end":529,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"&Z21c\"), Ok((\"&Z21c\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428364,"byte_end":428415,"line_start":530,"line_end":530,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428416,"byte_end":428457,"line_start":531,"line_end":531,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428458,"byte_end":428465,"line_start":532,"line_end":532,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2045},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":429420,"byte_end":429433,"line_start":558,"line_end":558,"column_start":8,"column_end":21},"name":"alphanumeric1","qualname":"::character::complete::alphanumeric1","value":"pub fn alphanumeric1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428682,"byte_end":428765,"line_start":541,"line_end":541,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428766,"byte_end":428769,"line_start":542,"line_end":542,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428770,"byte_end":428848,"line_start":543,"line_end":543,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non alphanumerical character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428849,"byte_end":428938,"line_start":544,"line_end":544,"column_start":1,"column_end":90}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428939,"byte_end":428952,"line_start":545,"line_end":545,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428953,"byte_end":428956,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428957,"byte_end":428964,"line_start":547,"line_end":547,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":428965,"byte_end":429030,"line_start":548,"line_end":548,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::alphanumeric1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":429031,"byte_end":429081,"line_start":549,"line_end":549,"column_start":1,"column_end":51}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":429082,"byte_end":429133,"line_start":550,"line_end":550,"column_start":1,"column_end":52}},{"value":"/     alphanumeric1(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":429134,"byte_end":429162,"line_start":551,"line_end":551,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":429163,"byte_end":429168,"line_start":552,"line_end":552,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":429169,"byte_end":429172,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":429173,"byte_end":429226,"line_start":554,"line_end":554,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"&H2\"), Err(Err::Error(Error::new(\"&H2\", ErrorKind::AlphaNumeric))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":429227,"byte_end":429318,"line_start":555,"line_end":555,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::AlphaNumeric))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":429319,"byte_end":429404,"line_start":556,"line_end":556,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":429405,"byte_end":429412,"line_start":557,"line_end":557,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2049},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430190,"byte_end":430196,"line_start":583,"line_end":583,"column_start":8,"column_end":14},"name":"space0","qualname":"::character::complete::space0","value":"pub fn space0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more spaces and tabs.","sig":null,"attributes":[{"value":"/ Recognizes zero or more spaces and tabs.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":429655,"byte_end":429699,"line_start":566,"line_end":566,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":429700,"byte_end":429703,"line_start":567,"line_end":567,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non space","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":429704,"byte_end":429801,"line_start":568,"line_end":568,"column_start":1,"column_end":98}},{"value":"/ character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":429802,"byte_end":429817,"line_start":569,"line_end":569,"column_start":1,"column_end":16}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":429818,"byte_end":429831,"line_start":570,"line_end":570,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":429832,"byte_end":429835,"line_start":571,"line_end":571,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":429836,"byte_end":429843,"line_start":572,"line_end":572,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":429844,"byte_end":429900,"line_start":573,"line_end":573,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::space0;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":429901,"byte_end":429944,"line_start":574,"line_end":574,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":429945,"byte_end":429996,"line_start":575,"line_end":575,"column_start":1,"column_end":52}},{"value":"/     space0(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":429997,"byte_end":430018,"line_start":576,"line_end":576,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430019,"byte_end":430024,"line_start":577,"line_end":577,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430025,"byte_end":430028,"line_start":578,"line_end":578,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\" \\t21c\"), Ok((\"21c\", \" \\t\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430029,"byte_end":430082,"line_start":579,"line_end":579,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430083,"byte_end":430132,"line_start":580,"line_end":580,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430133,"byte_end":430174,"line_start":581,"line_end":581,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430175,"byte_end":430182,"line_start":582,"line_end":582,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2053},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":431102,"byte_end":431108,"line_start":611,"line_end":611,"column_start":8,"column_end":14},"name":"space1","qualname":"::character::complete::space1","value":"pub fn space1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces and tabs.","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces and tabs.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430443,"byte_end":430486,"line_start":594,"line_end":594,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430487,"byte_end":430490,"line_start":595,"line_end":595,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430491,"byte_end":430569,"line_start":596,"line_end":596,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non space character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430570,"byte_end":430650,"line_start":597,"line_end":597,"column_start":1,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430651,"byte_end":430664,"line_start":598,"line_end":598,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430665,"byte_end":430668,"line_start":599,"line_end":599,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430669,"byte_end":430676,"line_start":600,"line_end":600,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430677,"byte_end":430742,"line_start":601,"line_end":601,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::space1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430743,"byte_end":430786,"line_start":602,"line_end":602,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430787,"byte_end":430838,"line_start":603,"line_end":603,"column_start":1,"column_end":52}},{"value":"/     space1(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430839,"byte_end":430860,"line_start":604,"line_end":604,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430861,"byte_end":430866,"line_start":605,"line_end":605,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430867,"byte_end":430870,"line_start":606,"line_end":606,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\" \\t21c\"), Ok((\"21c\", \" \\t\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430871,"byte_end":430924,"line_start":607,"line_end":607,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::Space))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":430925,"byte_end":431007,"line_start":608,"line_end":608,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Space))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":431008,"byte_end":431086,"line_start":609,"line_end":609,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":431087,"byte_end":431094,"line_start":610,"line_end":610,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2057},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":431976,"byte_end":431987,"line_start":642,"line_end":642,"column_start":8,"column_end":19},"name":"multispace0","qualname":"::character::complete::multispace0","value":"pub fn multispace0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more spaces, tabs, carriage returns and line feeds.","sig":null,"attributes":[{"value":"/ Recognizes zero or more spaces, tabs, carriage returns and line feeds.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":431393,"byte_end":431467,"line_start":625,"line_end":625,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":431468,"byte_end":431471,"line_start":626,"line_end":626,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: will return the whole input if no terminating token is found (a non space","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":431472,"byte_end":431569,"line_start":627,"line_end":627,"column_start":1,"column_end":98}},{"value":"/ character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":431570,"byte_end":431585,"line_start":628,"line_end":628,"column_start":1,"column_end":16}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":431586,"byte_end":431599,"line_start":629,"line_end":629,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":431600,"byte_end":431603,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":431604,"byte_end":431611,"line_start":631,"line_end":631,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":431612,"byte_end":431668,"line_start":632,"line_end":632,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::multispace0;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":431669,"byte_end":431717,"line_start":633,"line_end":633,"column_start":1,"column_end":49}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":431718,"byte_end":431769,"line_start":634,"line_end":634,"column_start":1,"column_end":52}},{"value":"/     multispace0(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":431770,"byte_end":431796,"line_start":635,"line_end":635,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":431797,"byte_end":431802,"line_start":636,"line_end":636,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":431803,"byte_end":431806,"line_start":637,"line_end":637,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":431807,"byte_end":431868,"line_start":638,"line_end":638,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":431869,"byte_end":431918,"line_start":639,"line_end":639,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":431919,"byte_end":431960,"line_start":640,"line_end":640,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":431961,"byte_end":431968,"line_start":641,"line_end":641,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2061},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":432977,"byte_end":432988,"line_start":670,"line_end":670,"column_start":8,"column_end":19},"name":"multispace1","qualname":"::character::complete::multispace1","value":"pub fn multispace1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces, tabs, carriage returns and line feeds.","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces, tabs, carriage returns and line feeds.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":432260,"byte_end":432333,"line_start":653,"line_end":653,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":432334,"byte_end":432337,"line_start":654,"line_end":654,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: will return an error if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":432338,"byte_end":432416,"line_start":655,"line_end":655,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non space character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":432417,"byte_end":432497,"line_start":656,"line_end":656,"column_start":1,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":432498,"byte_end":432511,"line_start":657,"line_end":657,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":432512,"byte_end":432515,"line_start":658,"line_end":658,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":432516,"byte_end":432523,"line_start":659,"line_end":659,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":432524,"byte_end":432589,"line_start":660,"line_end":660,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::multispace1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":432590,"byte_end":432638,"line_start":661,"line_end":661,"column_start":1,"column_end":49}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":432639,"byte_end":432690,"line_start":662,"line_end":662,"column_start":1,"column_end":52}},{"value":"/     multispace1(input)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":432691,"byte_end":432717,"line_start":663,"line_end":663,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":432718,"byte_end":432723,"line_start":664,"line_end":664,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":432724,"byte_end":432727,"line_start":665,"line_end":665,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":432728,"byte_end":432789,"line_start":666,"line_end":666,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::MultiSpace))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":432790,"byte_end":432877,"line_start":667,"line_end":667,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::MultiSpace))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":432878,"byte_end":432961,"line_start":668,"line_end":668,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/complete.rs","byte_start":432962,"byte_end":432969,"line_start":669,"line_end":669,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":2065},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streaming","qualname":"::character::streaming","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","parent":null,"children":[{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2092},{"krate":0,"index":2099},{"krate":0,"index":2106},{"krate":0,"index":2113},{"krate":0,"index":2116},{"krate":0,"index":2120},{"krate":0,"index":2123},{"krate":0,"index":2126},{"krate":0,"index":2129},{"krate":0,"index":2132},{"krate":0,"index":2136},{"krate":0,"index":2140},{"krate":0,"index":2144},{"krate":0,"index":2148},{"krate":0,"index":2152},{"krate":0,"index":2156},{"krate":0,"index":2160},{"krate":0,"index":2164},{"krate":0,"index":2168},{"krate":0,"index":2172},{"krate":0,"index":2176},{"krate":0,"index":2180},{"krate":0,"index":2184}],"decl_id":null,"docs":" Character specific parsers and combinators, streaming version","sig":null,"attributes":[{"value":"/ Character specific parsers and combinators, streaming version","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":444771,"byte_end":444836,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":444837,"byte_end":444840,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Functions recognizing specific characters","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":444841,"byte_end":444886,"line_start":3,"line_end":3,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":2086},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":445743,"byte_end":445747,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"char","qualname":"::character::streaming::char","value":"pub fn char<I, Error: ParseError<I>>(char) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter + InputLength,\n<I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one character.","sig":null,"attributes":[{"value":"/ Recognizes one character.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":445186,"byte_end":445215,"line_start":13,"line_end":13,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":445216,"byte_end":445219,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":445220,"byte_end":445321,"line_start":15,"line_end":15,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":445322,"byte_end":445335,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":445336,"byte_end":445339,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":445340,"byte_end":445347,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{ErrorKind, Error}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":445348,"byte_end":445413,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::streaming::char;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":445414,"byte_end":445456,"line_start":20,"line_end":20,"column_start":1,"column_end":43}},{"value":"/ fn parser(i: &str) -> IResult<&str, char> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":445457,"byte_end":445504,"line_start":21,"line_end":21,"column_start":1,"column_end":48}},{"value":"/     char('a')(i)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":445505,"byte_end":445525,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":445526,"byte_end":445531,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":445532,"byte_end":445579,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"bc\"), Err(Err::Error(Error::new(\"bc\", ErrorKind::Char))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":445580,"byte_end":445661,"line_start":25,"line_end":25,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":445662,"byte_end":445727,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":445728,"byte_end":445735,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2092},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":446861,"byte_end":446868,"line_start":58,"line_end":58,"column_start":8,"column_end":15},"name":"satisfy","qualname":"::character::streaming::satisfy","value":"pub fn satisfy<F, I, Error: ParseError<I>>(F) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar,\nF: Fn(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one character and checks that it satisfies a predicate","sig":null,"attributes":[{"value":"/ Recognizes one character and checks that it satisfies a predicate","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":446233,"byte_end":446302,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":446303,"byte_end":446306,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":446307,"byte_end":446408,"line_start":45,"line_end":45,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":446409,"byte_end":446422,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":446423,"byte_end":446426,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":446427,"byte_end":446434,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{ErrorKind, Error}, Needed, IResult};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":446435,"byte_end":446500,"line_start":49,"line_end":49,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::streaming::satisfy;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":446501,"byte_end":446546,"line_start":50,"line_end":50,"column_start":1,"column_end":46}},{"value":"/ fn parser(i: &str) -> IResult<&str, char> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":446547,"byte_end":446594,"line_start":51,"line_end":51,"column_start":1,"column_end":48}},{"value":"/     satisfy(|c| c == 'a' || c == 'b')(i)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":446595,"byte_end":446639,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":446640,"byte_end":446645,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":446646,"byte_end":446693,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"cd\"), Err(Err::Error(Error::new(\"cd\", ErrorKind::Satisfy))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":446694,"byte_end":446778,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":446779,"byte_end":446845,"line_start":56,"line_end":56,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":446846,"byte_end":446853,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2099},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":447932,"byte_end":447938,"line_start":87,"line_end":87,"column_start":8,"column_end":14},"name":"one_of","qualname":"::character::streaming::one_of","value":"pub fn one_of<I, T, Error: ParseError<I>>(T) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar + Copy,\nT: FindToken<<I as InputIter>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one of the provided characters.","sig":null,"attributes":[{"value":"/ Recognizes one of the provided characters.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":447373,"byte_end":447419,"line_start":75,"line_end":75,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":447420,"byte_end":447423,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":447424,"byte_end":447525,"line_start":77,"line_end":77,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":447526,"byte_end":447539,"line_start":78,"line_end":78,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":447540,"byte_end":447543,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":447544,"byte_end":447551,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":447552,"byte_end":447599,"line_start":81,"line_end":81,"column_start":1,"column_end":48}},{"value":"/ # use nom::character::streaming::one_of;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":447600,"byte_end":447644,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(one_of::<_, _, (_, ErrorKind)>(\"abc\")(\"b\"), Ok((\"\", 'b')));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":447645,"byte_end":447719,"line_start":83,"line_end":83,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(one_of::<_, _, (_, ErrorKind)>(\"a\")(\"bc\"), Err(Err::Error((\"bc\", ErrorKind::OneOf))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":447720,"byte_end":447821,"line_start":84,"line_end":84,"column_start":1,"column_end":102}},{"value":"/ assert_eq!(one_of::<_, _, (_, ErrorKind)>(\"a\")(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":447822,"byte_end":447916,"line_start":85,"line_end":85,"column_start":1,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":447917,"byte_end":447924,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2106},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":449018,"byte_end":449025,"line_start":112,"line_end":112,"column_start":8,"column_end":15},"name":"none_of","qualname":"::character::streaming::none_of","value":"pub fn none_of<I, T, Error: ParseError<I>>(T) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar + Copy,\nT: FindToken<<I as InputIter>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a character that is not in the provided characters.","sig":null,"attributes":[{"value":"/ Recognizes a character that is not in the provided characters.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":448435,"byte_end":448501,"line_start":100,"line_end":100,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":448502,"byte_end":448505,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":448506,"byte_end":448607,"line_start":102,"line_end":102,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":448608,"byte_end":448621,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":448622,"byte_end":448625,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":448626,"byte_end":448633,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":448634,"byte_end":448681,"line_start":106,"line_end":106,"column_start":1,"column_end":48}},{"value":"/ # use nom::character::streaming::none_of;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":448682,"byte_end":448727,"line_start":107,"line_end":107,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(none_of::<_, _, (_, ErrorKind)>(\"abc\")(\"z\"), Ok((\"\", 'z')));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":448728,"byte_end":448803,"line_start":108,"line_end":108,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(none_of::<_, _, (_, ErrorKind)>(\"ab\")(\"a\"), Err(Err::Error((\"a\", ErrorKind::NoneOf))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":448804,"byte_end":448906,"line_start":109,"line_end":109,"column_start":1,"column_end":103}},{"value":"/ assert_eq!(none_of::<_, _, (_, ErrorKind)>(\"a\")(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":448907,"byte_end":449002,"line_start":110,"line_end":110,"column_start":1,"column_end":96}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":449003,"byte_end":449010,"line_start":111,"line_end":111,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2113},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":450062,"byte_end":450066,"line_start":137,"line_end":137,"column_start":8,"column_end":12},"name":"crlf","qualname":"::character::streaming::crlf","value":"pub fn crlf<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter, T: Compare<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes the string \"\\r\\n\".","sig":null,"attributes":[{"value":"/ Recognizes the string \"\\r\\n\".","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":449524,"byte_end":449557,"line_start":125,"line_end":125,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":449558,"byte_end":449561,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":449562,"byte_end":449663,"line_start":127,"line_end":127,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":449664,"byte_end":449677,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":449678,"byte_end":449681,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":449682,"byte_end":449689,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":449690,"byte_end":449746,"line_start":131,"line_end":131,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::crlf;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":449747,"byte_end":449789,"line_start":132,"line_end":132,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(crlf::<_, (_, ErrorKind)>(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":449790,"byte_end":449860,"line_start":133,"line_end":133,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(crlf::<_, (_, ErrorKind)>(\"ab\\r\\nc\"), Err(Err::Error((\"ab\\r\\nc\", ErrorKind::CrLf))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":449861,"byte_end":449961,"line_start":134,"line_end":134,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(crlf::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":449962,"byte_end":450046,"line_start":135,"line_end":135,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":450047,"byte_end":450054,"line_start":136,"line_end":136,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2116},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":451190,"byte_end":451205,"line_start":166,"line_end":166,"column_start":8,"column_end":23},"name":"not_line_ending","qualname":"::character::streaming::not_line_ending","value":"pub fn not_line_ending<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter + InputLength, T: Compare<&'static str>,\n<T as InputIter>::Item: AsChar, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a string of any char except '\\r' or '\\n'.","sig":null,"attributes":[{"value":"/ Recognizes a string of any char except '\\r' or '\\n'.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":450592,"byte_end":450648,"line_start":154,"line_end":154,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":450649,"byte_end":450652,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":450653,"byte_end":450754,"line_start":156,"line_end":156,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":450755,"byte_end":450768,"line_start":157,"line_end":157,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":450769,"byte_end":450772,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":450773,"byte_end":450780,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":450781,"byte_end":450837,"line_start":160,"line_end":160,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::not_line_ending;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":450838,"byte_end":450891,"line_start":161,"line_end":161,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"ab\\r\\nc\"), Ok((\"\\r\\nc\", \"ab\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":450892,"byte_end":450977,"line_start":162,"line_end":162,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"abc\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":450978,"byte_end":451077,"line_start":163,"line_end":163,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":451078,"byte_end":451174,"line_start":164,"line_end":164,"column_start":1,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":451175,"byte_end":451182,"line_start":165,"line_end":165,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2120},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":452912,"byte_end":452923,"line_start":213,"line_end":213,"column_start":8,"column_end":19},"name":"line_ending","qualname":"::character::streaming::line_ending","value":"pub fn line_ending<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter + InputLength, T: Compare<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an end of line (both '\\n' and '\\r\\n').","sig":null,"attributes":[{"value":"/ Recognizes an end of line (both '\\n' and '\\r\\n').","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":452326,"byte_end":452379,"line_start":201,"line_end":201,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":452380,"byte_end":452383,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":452384,"byte_end":452485,"line_start":203,"line_end":203,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":452486,"byte_end":452499,"line_start":204,"line_end":204,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":452500,"byte_end":452503,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":452504,"byte_end":452511,"line_start":206,"line_end":206,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":452512,"byte_end":452568,"line_start":207,"line_end":207,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::line_ending;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":452569,"byte_end":452618,"line_start":208,"line_end":208,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(line_ending::<_, (_, ErrorKind)>(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":452619,"byte_end":452696,"line_start":209,"line_end":209,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(line_ending::<_, (_, ErrorKind)>(\"ab\\r\\nc\"), Err(Err::Error((\"ab\\r\\nc\", ErrorKind::CrLf))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":452697,"byte_end":452804,"line_start":210,"line_end":210,"column_start":1,"column_end":108}},{"value":"/ assert_eq!(line_ending::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":452805,"byte_end":452896,"line_start":211,"line_end":211,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":452897,"byte_end":452904,"line_start":212,"line_end":212,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2123},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":454202,"byte_end":454209,"line_start":245,"line_end":245,"column_start":8,"column_end":15},"name":"newline","qualname":"::character::streaming::newline","value":"pub fn newline<I, Error: ParseError<I>>(I) -> IResult<I, char, Error> where\nI: Slice<RangeFrom<usize>> + InputIter + InputLength,\n<I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches a newline character '\\\\n'.","sig":null,"attributes":[{"value":"/ Matches a newline character '\\\\n'.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":453655,"byte_end":453693,"line_start":233,"line_end":233,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":453694,"byte_end":453697,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":453698,"byte_end":453799,"line_start":235,"line_end":235,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":453800,"byte_end":453813,"line_start":236,"line_end":236,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":453814,"byte_end":453817,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":453818,"byte_end":453825,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":453826,"byte_end":453882,"line_start":239,"line_end":239,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::newline;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":453883,"byte_end":453928,"line_start":240,"line_end":240,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(newline::<_, (_, ErrorKind)>(\"\\nc\"), Ok((\"c\", '\\n')));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":453929,"byte_end":453998,"line_start":241,"line_end":241,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(newline::<_, (_, ErrorKind)>(\"\\r\\nc\"), Err(Err::Error((\"\\r\\nc\", ErrorKind::Char))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":453999,"byte_end":454098,"line_start":242,"line_end":242,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(newline::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":454099,"byte_end":454186,"line_start":243,"line_end":243,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":454187,"byte_end":454194,"line_start":244,"line_end":244,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2126},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":454919,"byte_end":454922,"line_start":265,"line_end":265,"column_start":8,"column_end":11},"name":"tab","qualname":"::character::streaming::tab","value":"pub fn tab<I, Error: ParseError<I>>(I) -> IResult<I, char, Error> where\nI: Slice<RangeFrom<usize>> + InputIter + InputLength,\n<I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches a tab character '\\t'.","sig":null,"attributes":[{"value":"/ Matches a tab character '\\t'.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":454393,"byte_end":454426,"line_start":253,"line_end":253,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":454427,"byte_end":454430,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":454431,"byte_end":454532,"line_start":255,"line_end":255,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":454533,"byte_end":454546,"line_start":256,"line_end":256,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":454547,"byte_end":454550,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":454551,"byte_end":454558,"line_start":258,"line_end":258,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":454559,"byte_end":454615,"line_start":259,"line_end":259,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::tab;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":454616,"byte_end":454657,"line_start":260,"line_end":260,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(tab::<_, (_, ErrorKind)>(\"\\tc\"), Ok((\"c\", '\\t')));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":454658,"byte_end":454723,"line_start":261,"line_end":261,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(tab::<_, (_, ErrorKind)>(\"\\r\\nc\"), Err(Err::Error((\"\\r\\nc\", ErrorKind::Char))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":454724,"byte_end":454819,"line_start":262,"line_end":262,"column_start":1,"column_end":96}},{"value":"/ assert_eq!(tab::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":454820,"byte_end":454903,"line_start":263,"line_end":263,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":454904,"byte_end":454911,"line_start":264,"line_end":264,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2129},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":455635,"byte_end":455642,"line_start":284,"line_end":284,"column_start":8,"column_end":15},"name":"anychar","qualname":"::character::streaming::anychar","value":"pub fn anychar<T, E: ParseError<T>>(T) -> IResult<T, char, E> where\nT: InputIter + InputLength + Slice<RangeFrom<usize>>,\n<T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches one byte as a character. Note that the input type will\n accept a `str`, but not a `&[u8]`, unlike many other nom parsers.","sig":null,"attributes":[{"value":"/ Matches one byte as a character. Note that the input type will","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":455106,"byte_end":455172,"line_start":273,"line_end":273,"column_start":1,"column_end":67}},{"value":"/ accept a `str`, but not a `&[u8]`, unlike many other nom parsers.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":455173,"byte_end":455242,"line_start":274,"line_end":274,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":455243,"byte_end":455246,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":455247,"byte_end":455348,"line_start":276,"line_end":276,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":455349,"byte_end":455362,"line_start":277,"line_end":277,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":455363,"byte_end":455366,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":455367,"byte_end":455374,"line_start":279,"line_end":279,"column_start":1,"column_end":8}},{"value":"/ # use nom::{character::streaming::anychar, Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":455375,"byte_end":455462,"line_start":280,"line_end":280,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(anychar::<_, (_, ErrorKind)>(\"abc\"), Ok((\"bc\",'a')));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":455463,"byte_end":455531,"line_start":281,"line_end":281,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(anychar::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":455532,"byte_end":455619,"line_start":282,"line_end":282,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":455620,"byte_end":455627,"line_start":283,"line_end":283,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2132},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":456718,"byte_end":456724,"line_start":312,"line_end":312,"column_start":8,"column_end":14},"name":"alpha0","qualname":"::character::streaming::alpha0","value":"pub fn alpha0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":456084,"byte_end":456173,"line_start":299,"line_end":299,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":456174,"byte_end":456177,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":456178,"byte_end":456279,"line_start":301,"line_end":301,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non alphabetic character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":456280,"byte_end":456349,"line_start":302,"line_end":302,"column_start":1,"column_end":70}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":456350,"byte_end":456363,"line_start":303,"line_end":303,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":456364,"byte_end":456367,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":456368,"byte_end":456375,"line_start":305,"line_end":305,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":456376,"byte_end":456432,"line_start":306,"line_end":306,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::alpha0;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":456433,"byte_end":456477,"line_start":307,"line_end":307,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(alpha0::<_, (_, ErrorKind)>(\"ab1c\"), Ok((\"1c\", \"ab\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":456478,"byte_end":456548,"line_start":308,"line_end":308,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(alpha0::<_, (_, ErrorKind)>(\"1c\"), Ok((\"1c\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":456549,"byte_end":456615,"line_start":309,"line_end":309,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(alpha0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":456616,"byte_end":456702,"line_start":310,"line_end":310,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":456703,"byte_end":456710,"line_start":311,"line_end":311,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2136},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":457568,"byte_end":457574,"line_start":333,"line_end":333,"column_start":8,"column_end":14},"name":"alpha1","qualname":"::character::streaming::alpha1","value":"pub fn alpha1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":456908,"byte_end":456996,"line_start":320,"line_end":320,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":456997,"byte_end":457000,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":457001,"byte_end":457102,"line_start":322,"line_end":322,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non alphabetic character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":457103,"byte_end":457172,"line_start":323,"line_end":323,"column_start":1,"column_end":70}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":457173,"byte_end":457186,"line_start":324,"line_end":324,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":457187,"byte_end":457190,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":457191,"byte_end":457198,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":457199,"byte_end":457255,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::alpha1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":457256,"byte_end":457300,"line_start":328,"line_end":328,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(alpha1::<_, (_, ErrorKind)>(\"aB1c\"), Ok((\"1c\", \"aB\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":457301,"byte_end":457371,"line_start":329,"line_end":329,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(alpha1::<_, (_, ErrorKind)>(\"1c\"), Err(Err::Error((\"1c\", ErrorKind::Alpha))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":457372,"byte_end":457465,"line_start":330,"line_end":330,"column_start":1,"column_end":94}},{"value":"/ assert_eq!(alpha1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":457466,"byte_end":457552,"line_start":331,"line_end":331,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":457553,"byte_end":457560,"line_start":332,"line_end":332,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2140},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":458378,"byte_end":458384,"line_start":354,"line_end":354,"column_start":8,"column_end":14},"name":"digit0","qualname":"::character::streaming::digit0","value":"pub fn digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII numerical characters: 0-9","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII numerical characters: 0-9","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":457777,"byte_end":457836,"line_start":341,"line_end":341,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":457837,"byte_end":457840,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":457841,"byte_end":457942,"line_start":343,"line_end":343,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non digit character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":457943,"byte_end":458007,"line_start":344,"line_end":344,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":458008,"byte_end":458021,"line_start":345,"line_end":345,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":458022,"byte_end":458025,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":458026,"byte_end":458033,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":458034,"byte_end":458090,"line_start":348,"line_end":348,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::digit0;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":458091,"byte_end":458135,"line_start":349,"line_end":349,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(digit0::<_, (_, ErrorKind)>(\"21c\"), Ok((\"c\", \"21\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":458136,"byte_end":458204,"line_start":350,"line_end":350,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(digit0::<_, (_, ErrorKind)>(\"a21c\"), Ok((\"a21c\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":458205,"byte_end":458275,"line_start":351,"line_end":351,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(digit0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":458276,"byte_end":458362,"line_start":352,"line_end":352,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":458363,"byte_end":458370,"line_start":353,"line_end":353,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2144},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":459195,"byte_end":459201,"line_start":375,"line_end":375,"column_start":8,"column_end":14},"name":"digit1","qualname":"::character::streaming::digit1","value":"pub fn digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII numerical characters: 0-9","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII numerical characters: 0-9","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":458572,"byte_end":458630,"line_start":362,"line_end":362,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":458631,"byte_end":458634,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":458635,"byte_end":458736,"line_start":364,"line_end":364,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non digit character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":458737,"byte_end":458801,"line_start":365,"line_end":365,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":458802,"byte_end":458815,"line_start":366,"line_end":366,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":458816,"byte_end":458819,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":458820,"byte_end":458827,"line_start":368,"line_end":368,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":458828,"byte_end":458884,"line_start":369,"line_end":369,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::digit1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":458885,"byte_end":458929,"line_start":370,"line_end":370,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(digit1::<_, (_, ErrorKind)>(\"21c\"), Ok((\"c\", \"21\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":458930,"byte_end":458998,"line_start":371,"line_end":371,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(digit1::<_, (_, ErrorKind)>(\"c1\"), Err(Err::Error((\"c1\", ErrorKind::Digit))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":458999,"byte_end":459092,"line_start":372,"line_end":372,"column_start":1,"column_end":94}},{"value":"/ assert_eq!(digit1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":459093,"byte_end":459179,"line_start":373,"line_end":373,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":459180,"byte_end":459187,"line_start":374,"line_end":374,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2148},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":460061,"byte_end":460071,"line_start":396,"line_end":396,"column_start":8,"column_end":18},"name":"hex_digit0","qualname":"::character::streaming::hex_digit0","value":"pub fn hex_digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":459408,"byte_end":459489,"line_start":383,"line_end":383,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":459490,"byte_end":459493,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":459494,"byte_end":459595,"line_start":385,"line_end":385,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non hexadecimal digit character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":459596,"byte_end":459672,"line_start":386,"line_end":386,"column_start":1,"column_end":77}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":459673,"byte_end":459686,"line_start":387,"line_end":387,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":459687,"byte_end":459690,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":459691,"byte_end":459698,"line_start":389,"line_end":389,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":459699,"byte_end":459755,"line_start":390,"line_end":390,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::hex_digit0;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":459756,"byte_end":459804,"line_start":391,"line_end":391,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(hex_digit0::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"Z\", \"21c\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":459805,"byte_end":459879,"line_start":392,"line_end":392,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(hex_digit0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":459880,"byte_end":459954,"line_start":393,"line_end":393,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(hex_digit0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":459955,"byte_end":460045,"line_start":394,"line_end":394,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":460046,"byte_end":460053,"line_start":395,"line_end":395,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2152},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":460937,"byte_end":460947,"line_start":417,"line_end":417,"column_start":8,"column_end":18},"name":"hex_digit1","qualname":"::character::streaming::hex_digit1","value":"pub fn hex_digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":460259,"byte_end":460339,"line_start":404,"line_end":404,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":460340,"byte_end":460343,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":460344,"byte_end":460445,"line_start":406,"line_end":406,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non hexadecimal digit character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":460446,"byte_end":460522,"line_start":407,"line_end":407,"column_start":1,"column_end":77}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":460523,"byte_end":460536,"line_start":408,"line_end":408,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":460537,"byte_end":460540,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":460541,"byte_end":460548,"line_start":410,"line_end":410,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":460549,"byte_end":460605,"line_start":411,"line_end":411,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::hex_digit1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":460606,"byte_end":460654,"line_start":412,"line_end":412,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(hex_digit1::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"Z\", \"21c\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":460655,"byte_end":460729,"line_start":413,"line_end":413,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(hex_digit1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::HexDigit))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":460730,"byte_end":460830,"line_start":414,"line_end":414,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(hex_digit1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":460831,"byte_end":460921,"line_start":415,"line_end":415,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":460922,"byte_end":460929,"line_start":416,"line_end":416,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2156},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":461772,"byte_end":461782,"line_start":438,"line_end":438,"column_start":8,"column_end":18},"name":"oct_digit0","qualname":"::character::streaming::oct_digit0","value":"pub fn oct_digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more octal characters: 0-7","sig":null,"attributes":[{"value":"/ Recognizes zero or more octal characters: 0-7","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":461157,"byte_end":461206,"line_start":425,"line_end":425,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":461207,"byte_end":461210,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":461211,"byte_end":461312,"line_start":427,"line_end":427,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non octal digit character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":461313,"byte_end":461383,"line_start":428,"line_end":428,"column_start":1,"column_end":71}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":461384,"byte_end":461397,"line_start":429,"line_end":429,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":461398,"byte_end":461401,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":461402,"byte_end":461409,"line_start":431,"line_end":431,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":461410,"byte_end":461466,"line_start":432,"line_end":432,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::oct_digit0;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":461467,"byte_end":461515,"line_start":433,"line_end":433,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(oct_digit0::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"cZ\", \"21\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":461516,"byte_end":461590,"line_start":434,"line_end":434,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(oct_digit0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":461591,"byte_end":461665,"line_start":435,"line_end":435,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(oct_digit0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":461666,"byte_end":461756,"line_start":436,"line_end":436,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":461757,"byte_end":461764,"line_start":437,"line_end":437,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2160},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":462610,"byte_end":462620,"line_start":459,"line_end":459,"column_start":8,"column_end":18},"name":"oct_digit1","qualname":"::character::streaming::oct_digit1","value":"pub fn oct_digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more octal characters: 0-7","sig":null,"attributes":[{"value":"/ Recognizes one or more octal characters: 0-7","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":461970,"byte_end":462018,"line_start":446,"line_end":446,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":462019,"byte_end":462022,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":462023,"byte_end":462124,"line_start":448,"line_end":448,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non octal digit character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":462125,"byte_end":462195,"line_start":449,"line_end":449,"column_start":1,"column_end":71}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":462196,"byte_end":462209,"line_start":450,"line_end":450,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":462210,"byte_end":462213,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":462214,"byte_end":462221,"line_start":452,"line_end":452,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":462222,"byte_end":462278,"line_start":453,"line_end":453,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::oct_digit1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":462279,"byte_end":462327,"line_start":454,"line_end":454,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(oct_digit1::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"cZ\", \"21\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":462328,"byte_end":462402,"line_start":455,"line_end":455,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(oct_digit1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::OctDigit))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":462403,"byte_end":462503,"line_start":456,"line_end":456,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(oct_digit1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":462504,"byte_end":462594,"line_start":457,"line_end":457,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":462595,"byte_end":462602,"line_start":458,"line_end":458,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2164},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":463501,"byte_end":463514,"line_start":480,"line_end":480,"column_start":8,"column_end":21},"name":"alphanumeric0","qualname":"::character::streaming::alphanumeric0","value":"pub fn alphanumeric0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":462830,"byte_end":462914,"line_start":467,"line_end":467,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":462915,"byte_end":462918,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":462919,"byte_end":463020,"line_start":469,"line_end":469,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non alphanumerical character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":463021,"byte_end":463094,"line_start":470,"line_end":470,"column_start":1,"column_end":74}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":463095,"byte_end":463108,"line_start":471,"line_end":471,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":463109,"byte_end":463112,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":463113,"byte_end":463120,"line_start":473,"line_end":473,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":463121,"byte_end":463177,"line_start":474,"line_end":474,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::alphanumeric0;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":463178,"byte_end":463229,"line_start":475,"line_end":475,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(alphanumeric0::<_, (_, ErrorKind)>(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":463230,"byte_end":463311,"line_start":476,"line_end":476,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(alphanumeric0::<_, (_, ErrorKind)>(\"&Z21c\"), Ok((\"&Z21c\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":463312,"byte_end":463391,"line_start":477,"line_end":477,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(alphanumeric0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":463392,"byte_end":463485,"line_start":478,"line_end":478,"column_start":1,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":463486,"byte_end":463493,"line_start":479,"line_end":479,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2168},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":464401,"byte_end":464414,"line_start":501,"line_end":501,"column_start":8,"column_end":21},"name":"alphanumeric1","qualname":"::character::streaming::alphanumeric1","value":"pub fn alphanumeric1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":463701,"byte_end":463784,"line_start":488,"line_end":488,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":463785,"byte_end":463788,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":463789,"byte_end":463890,"line_start":490,"line_end":490,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non alphanumerical character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":463891,"byte_end":463964,"line_start":491,"line_end":491,"column_start":1,"column_end":74}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":463965,"byte_end":463978,"line_start":492,"line_end":492,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":463979,"byte_end":463982,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":463983,"byte_end":463990,"line_start":494,"line_end":494,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":463991,"byte_end":464047,"line_start":495,"line_end":495,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::alphanumeric1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":464048,"byte_end":464099,"line_start":496,"line_end":496,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(alphanumeric1::<_, (_, ErrorKind)>(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":464100,"byte_end":464181,"line_start":497,"line_end":497,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(alphanumeric1::<_, (_, ErrorKind)>(\"&H2\"), Err(Err::Error((\"&H2\", ErrorKind::AlphaNumeric))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":464182,"byte_end":464291,"line_start":498,"line_end":498,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(alphanumeric1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":464292,"byte_end":464385,"line_start":499,"line_end":499,"column_start":1,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":464386,"byte_end":464393,"line_start":500,"line_end":500,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2172},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":465219,"byte_end":465225,"line_start":522,"line_end":522,"column_start":8,"column_end":14},"name":"space0","qualname":"::character::streaming::space0","value":"pub fn space0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more spaces and tabs.","sig":null,"attributes":[{"value":"/ Recognizes zero or more spaces and tabs.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":464627,"byte_end":464671,"line_start":509,"line_end":509,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":464672,"byte_end":464675,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":464676,"byte_end":464777,"line_start":511,"line_end":511,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non space character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":464778,"byte_end":464842,"line_start":512,"line_end":512,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":464843,"byte_end":464856,"line_start":513,"line_end":513,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":464857,"byte_end":464860,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":464861,"byte_end":464868,"line_start":515,"line_end":515,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":464869,"byte_end":464925,"line_start":516,"line_end":516,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::space0;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":464926,"byte_end":464970,"line_start":517,"line_end":517,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(space0::<_, (_, ErrorKind)>(\" \\t21c\"), Ok((\"21c\", \" \\t\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":464971,"byte_end":465045,"line_start":518,"line_end":518,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(space0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":465046,"byte_end":465116,"line_start":519,"line_end":519,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(space0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":465117,"byte_end":465203,"line_start":520,"line_end":520,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":465204,"byte_end":465211,"line_start":521,"line_end":521,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2176},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":466076,"byte_end":466082,"line_start":545,"line_end":545,"column_start":8,"column_end":14},"name":"space1","qualname":"::character::streaming::space1","value":"pub fn space1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces and tabs.","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces and tabs.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":465462,"byte_end":465505,"line_start":532,"line_end":532,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":465506,"byte_end":465509,"line_start":533,"line_end":533,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":465510,"byte_end":465611,"line_start":534,"line_end":534,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non space character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":465612,"byte_end":465676,"line_start":535,"line_end":535,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":465677,"byte_end":465690,"line_start":536,"line_end":536,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":465691,"byte_end":465694,"line_start":537,"line_end":537,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":465695,"byte_end":465702,"line_start":538,"line_end":538,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":465703,"byte_end":465759,"line_start":539,"line_end":539,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::space1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":465760,"byte_end":465804,"line_start":540,"line_end":540,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(space1::<_, (_, ErrorKind)>(\" \\t21c\"), Ok((\"21c\", \" \\t\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":465805,"byte_end":465879,"line_start":541,"line_end":541,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(space1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::Space))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":465880,"byte_end":465973,"line_start":542,"line_end":542,"column_start":1,"column_end":94}},{"value":"/ assert_eq!(space1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":465974,"byte_end":466060,"line_start":543,"line_end":543,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":466061,"byte_end":466068,"line_start":544,"line_end":544,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2180},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":467008,"byte_end":467019,"line_start":572,"line_end":572,"column_start":8,"column_end":19},"name":"multispace0","qualname":"::character::streaming::multispace0","value":"pub fn multispace0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more spaces, tabs, carriage returns and line feeds.","sig":null,"attributes":[{"value":"/ Recognizes zero or more spaces, tabs, carriage returns and line feeds.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":466358,"byte_end":466432,"line_start":559,"line_end":559,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":466433,"byte_end":466436,"line_start":560,"line_end":560,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":466437,"byte_end":466538,"line_start":561,"line_end":561,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non space character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":466539,"byte_end":466603,"line_start":562,"line_end":562,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":466604,"byte_end":466617,"line_start":563,"line_end":563,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":466618,"byte_end":466621,"line_start":564,"line_end":564,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":466622,"byte_end":466629,"line_start":565,"line_end":565,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":466630,"byte_end":466686,"line_start":566,"line_end":566,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::multispace0;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":466687,"byte_end":466736,"line_start":567,"line_end":567,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(multispace0::<_, (_, ErrorKind)>(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":466737,"byte_end":466824,"line_start":568,"line_end":568,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(multispace0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":466825,"byte_end":466900,"line_start":569,"line_end":569,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(multispace0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":466901,"byte_end":466992,"line_start":570,"line_end":570,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":466993,"byte_end":467000,"line_start":571,"line_end":571,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2184},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":467960,"byte_end":467971,"line_start":596,"line_end":596,"column_start":8,"column_end":19},"name":"multispace1","qualname":"::character::streaming::multispace1","value":"pub fn multispace1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces, tabs, carriage returns and line feeds.","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces, tabs, carriage returns and line feeds.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":467283,"byte_end":467356,"line_start":583,"line_end":583,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":467357,"byte_end":467360,"line_start":584,"line_end":584,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":467361,"byte_end":467462,"line_start":585,"line_end":585,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non space character).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":467463,"byte_end":467527,"line_start":586,"line_end":586,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":467528,"byte_end":467541,"line_start":587,"line_end":587,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":467542,"byte_end":467545,"line_start":588,"line_end":588,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":467546,"byte_end":467553,"line_start":589,"line_end":589,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":467554,"byte_end":467610,"line_start":590,"line_end":590,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::multispace1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":467611,"byte_end":467660,"line_start":591,"line_end":591,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(multispace1::<_, (_, ErrorKind)>(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":467661,"byte_end":467748,"line_start":592,"line_end":592,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(multispace1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::MultiSpace))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":467749,"byte_end":467852,"line_start":593,"line_end":593,"column_start":1,"column_end":104}},{"value":"/ assert_eq!(multispace1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":467853,"byte_end":467944,"line_start":594,"line_end":594,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/streaming.rs","byte_start":467945,"byte_end":467952,"line_start":595,"line_end":595,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2188},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405033,"byte_end":405046,"line_start":21,"line_end":21,"column_start":8,"column_end":21},"name":"is_alphabetic","qualname":"::character::is_alphabetic","value":"pub fn is_alphabetic(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII alphabetic: A-Z, a-z","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII alphabetic: A-Z, a-z","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":404802,"byte_end":404849,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":404850,"byte_end":404853,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":404854,"byte_end":404867,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":404868,"byte_end":404871,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":404872,"byte_end":404879,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_alphabetic;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":404880,"byte_end":404920,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(is_alphabetic(b'9'), false);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":404921,"byte_end":404964,"line_start":17,"line_end":17,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(is_alphabetic(b'a'), true);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":404965,"byte_end":405007,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405008,"byte_end":405015,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405016,"byte_end":405025,"line_start":20,"line_end":20,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2189},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405338,"byte_end":405346,"line_start":35,"line_end":35,"column_start":8,"column_end":16},"name":"is_digit","qualname":"::character::is_digit","value":"pub fn is_digit(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII digit: 0-9","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII digit: 0-9","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405132,"byte_end":405169,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405170,"byte_end":405173,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405174,"byte_end":405187,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405188,"byte_end":405191,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405192,"byte_end":405199,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_digit;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405200,"byte_end":405235,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(is_digit(b'a'), false);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405236,"byte_end":405274,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(is_digit(b'9'), true);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405275,"byte_end":405312,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405313,"byte_end":405320,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405321,"byte_end":405330,"line_start":34,"line_end":34,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2190},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405714,"byte_end":405726,"line_start":51,"line_end":51,"column_start":8,"column_end":20},"name":"is_hex_digit","qualname":"::character::is_hex_digit","value":"pub fn is_hex_digit(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII hex digit: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII hex digit: 0-9, A-F, a-f","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405398,"byte_end":405449,"line_start":39,"line_end":39,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405450,"byte_end":405453,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405454,"byte_end":405467,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405468,"byte_end":405471,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405472,"byte_end":405479,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_hex_digit;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405480,"byte_end":405519,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(is_hex_digit(b'a'), true);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405520,"byte_end":405561,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(is_hex_digit(b'9'), true);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405562,"byte_end":405603,"line_start":46,"line_end":46,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(is_hex_digit(b'A'), true);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405604,"byte_end":405645,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(is_hex_digit(b'x'), false);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405646,"byte_end":405688,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405689,"byte_end":405696,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405697,"byte_end":405706,"line_start":50,"line_end":50,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2191},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406111,"byte_end":406123,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"is_oct_digit","qualname":"::character::is_oct_digit","value":"pub fn is_oct_digit(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII octal digit: 0-7","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII octal digit: 0-7","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405844,"byte_end":405887,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405888,"byte_end":405891,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405892,"byte_end":405905,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405906,"byte_end":405909,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405910,"byte_end":405917,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_oct_digit;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405918,"byte_end":405957,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(is_oct_digit(b'a'), false);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":405958,"byte_end":406000,"line_start":61,"line_end":61,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(is_oct_digit(b'9'), false);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406001,"byte_end":406043,"line_start":62,"line_end":62,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(is_oct_digit(b'6'), true);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406044,"byte_end":406085,"line_start":63,"line_end":63,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406086,"byte_end":406093,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406094,"byte_end":406103,"line_start":65,"line_end":65,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2192},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406509,"byte_end":406524,"line_start":82,"line_end":82,"column_start":8,"column_end":23},"name":"is_alphanumeric","qualname":"::character::is_alphanumeric","value":"pub fn is_alphanumeric(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406175,"byte_end":406229,"line_start":70,"line_end":70,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406230,"byte_end":406233,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406234,"byte_end":406247,"line_start":72,"line_end":72,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406248,"byte_end":406251,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406252,"byte_end":406259,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_alphanumeric;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406260,"byte_end":406302,"line_start":75,"line_end":75,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(is_alphanumeric(b'-'), false);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406303,"byte_end":406348,"line_start":76,"line_end":76,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(is_alphanumeric(b'a'), true);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406349,"byte_end":406393,"line_start":77,"line_end":77,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(is_alphanumeric(b'9'), true);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406394,"byte_end":406438,"line_start":78,"line_end":78,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(is_alphanumeric(b'A'), true);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406439,"byte_end":406483,"line_start":79,"line_end":79,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406484,"byte_end":406491,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406492,"byte_end":406501,"line_start":81,"line_end":81,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2193},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406873,"byte_end":406881,"line_start":98,"line_end":98,"column_start":8,"column_end":16},"name":"is_space","qualname":"::character::is_space","value":"pub fn is_space(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII space or tab","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII space or tab","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406585,"byte_end":406624,"line_start":86,"line_end":86,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406625,"byte_end":406628,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406629,"byte_end":406642,"line_start":88,"line_end":88,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406643,"byte_end":406646,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406647,"byte_end":406654,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_space;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406655,"byte_end":406690,"line_start":91,"line_end":91,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(is_space(b'\\n'), false);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406691,"byte_end":406730,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(is_space(b'\\r'), false);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406731,"byte_end":406770,"line_start":93,"line_end":93,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(is_space(b' '), true);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406771,"byte_end":406808,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(is_space(b'\\t'), true);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406809,"byte_end":406847,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406848,"byte_end":406855,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406856,"byte_end":406865,"line_start":97,"line_end":97,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2194},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":407232,"byte_end":407242,"line_start":114,"line_end":114,"column_start":8,"column_end":18},"name":"is_newline","qualname":"::character::is_newline","value":"pub fn is_newline(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII newline: \\n","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII newline: \\n","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406934,"byte_end":406972,"line_start":102,"line_end":102,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406973,"byte_end":406976,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406977,"byte_end":406990,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406991,"byte_end":406994,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":406995,"byte_end":407002,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_newline;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":407003,"byte_end":407040,"line_start":107,"line_end":107,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(is_newline(b'\\n'), true);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":407041,"byte_end":407081,"line_start":108,"line_end":108,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(is_newline(b'\\r'), false);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":407082,"byte_end":407123,"line_start":109,"line_end":109,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(is_newline(b' '), false);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":407124,"byte_end":407164,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(is_newline(b'\\t'), false);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":407165,"byte_end":407206,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":407207,"byte_end":407214,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":407215,"byte_end":407224,"line_start":113,"line_end":113,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":2196},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"number","qualname":"::number","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/mod.rs","parent":null,"children":[{"krate":0,"index":2197},{"krate":0,"index":2206},{"krate":0,"index":2371},{"krate":0,"index":6125},{"krate":0,"index":6141},{"krate":0,"index":6138},{"krate":0,"index":6139},{"krate":0,"index":6135},{"krate":0,"index":6136},{"krate":0,"index":6133},{"krate":0,"index":6132}],"decl_id":null,"docs":" Parsers recognizing numbers\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16881,"byte_end":16893,"line_start":514,"line_end":514,"column_start":1,"column_end":13}},{"value":"/ Parsers recognizing numbers","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/mod.rs","byte_start":493404,"byte_end":493435,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":2206},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"complete","qualname":"::number::complete","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","parent":null,"children":[{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2238},{"krate":0,"index":2241},{"krate":0,"index":2244},{"krate":0,"index":2247},{"krate":0,"index":2250},{"krate":0,"index":2253},{"krate":0,"index":2256},{"krate":0,"index":2259},{"krate":0,"index":2262},{"krate":0,"index":2265},{"krate":0,"index":2268},{"krate":0,"index":2271},{"krate":0,"index":2274},{"krate":0,"index":2277},{"krate":0,"index":2280},{"krate":0,"index":2283},{"krate":0,"index":2286},{"krate":0,"index":2289},{"krate":0,"index":2292},{"krate":0,"index":2295},{"krate":0,"index":2298},{"krate":0,"index":2301},{"krate":0,"index":2304},{"krate":0,"index":2307},{"krate":0,"index":2310},{"krate":0,"index":2313},{"krate":0,"index":2316},{"krate":0,"index":2319},{"krate":0,"index":2322},{"krate":0,"index":2325},{"krate":0,"index":2328},{"krate":0,"index":2331},{"krate":0,"index":2334},{"krate":0,"index":2337},{"krate":0,"index":2340},{"krate":0,"index":2343},{"krate":0,"index":2346},{"krate":0,"index":2349},{"krate":0,"index":2352},{"krate":0,"index":2355},{"krate":0,"index":2358},{"krate":0,"index":2361},{"krate":0,"index":6089},{"krate":0,"index":2365},{"krate":0,"index":2368}],"decl_id":null,"docs":" Parsers recognizing numbers, complete input version\n","sig":null,"attributes":[{"value":"/ Parsers recognizing numbers, complete input version","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":503592,"byte_end":503647,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":2235},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":504550,"byte_end":504555,"line_start":30,"line_end":30,"column_start":8,"column_end":13},"name":"be_u8","qualname":"::number::complete::be_u8","value":"pub fn be_u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":504064,"byte_end":504106,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":504107,"byte_end":504110,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":504111,"byte_end":504186,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":504187,"byte_end":504198,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":504199,"byte_end":504246,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":504247,"byte_end":504275,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u8;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":504276,"byte_end":504313,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":504314,"byte_end":504317,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":504318,"byte_end":504340,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/   be_u8(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":504341,"byte_end":504355,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":504356,"byte_end":504362,"line_start":24,"line_end":24,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":504363,"byte_end":504366,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":504367,"byte_end":504446,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":504447,"byte_end":504524,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":504525,"byte_end":504532,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":504533,"byte_end":504542,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2238},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":505408,"byte_end":505414,"line_start":60,"line_end":60,"column_start":8,"column_end":14},"name":"be_u16","qualname":"::number::complete::be_u16","value":"pub fn be_u16<I, E: ParseError<I>>(I) -> IResult<I, u16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 2 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":504903,"byte_end":504956,"line_start":44,"line_end":44,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":504957,"byte_end":504960,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":504961,"byte_end":505036,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":505037,"byte_end":505048,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":505049,"byte_end":505096,"line_start":48,"line_end":48,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":505097,"byte_end":505125,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u16;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":505126,"byte_end":505164,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":505165,"byte_end":505168,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":505169,"byte_end":505191,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/   be_u16(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":505192,"byte_end":505207,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":505208,"byte_end":505214,"line_start":54,"line_end":54,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":505215,"byte_end":505218,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":505219,"byte_end":505296,"line_start":56,"line_end":56,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":505297,"byte_end":505382,"line_start":57,"line_end":57,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":505383,"byte_end":505390,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":505391,"byte_end":505400,"line_start":59,"line_end":59,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2241},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":506340,"byte_end":506346,"line_start":93,"line_end":93,"column_start":8,"column_end":14},"name":"be_u24","qualname":"::number::complete::be_u24","value":"pub fn be_u24<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 3 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 3 byte integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":505830,"byte_end":505882,"line_start":77,"line_end":77,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":505883,"byte_end":505886,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":505887,"byte_end":505962,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":505963,"byte_end":505974,"line_start":80,"line_end":80,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":505975,"byte_end":506022,"line_start":81,"line_end":81,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":506023,"byte_end":506051,"line_start":82,"line_end":82,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u24;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":506052,"byte_end":506090,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":506091,"byte_end":506094,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":506095,"byte_end":506117,"line_start":85,"line_end":85,"column_start":1,"column_end":23}},{"value":"/   be_u24(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":506118,"byte_end":506133,"line_start":86,"line_end":86,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":506134,"byte_end":506140,"line_start":87,"line_end":87,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":506141,"byte_end":506144,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":506145,"byte_end":506228,"line_start":89,"line_end":89,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":506229,"byte_end":506314,"line_start":90,"line_end":90,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":506315,"byte_end":506322,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":506323,"byte_end":506332,"line_start":92,"line_end":92,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2244},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":507279,"byte_end":507285,"line_start":126,"line_end":126,"column_start":8,"column_end":14},"name":"be_u32","qualname":"::number::complete::be_u32","value":"pub fn be_u32<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 4 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":506762,"byte_end":506815,"line_start":110,"line_end":110,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":506816,"byte_end":506819,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":506820,"byte_end":506895,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":506896,"byte_end":506907,"line_start":113,"line_end":113,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":506908,"byte_end":506955,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":506956,"byte_end":506984,"line_start":115,"line_end":115,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u32;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":506985,"byte_end":507023,"line_start":116,"line_end":116,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":507024,"byte_end":507027,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":507028,"byte_end":507050,"line_start":118,"line_end":118,"column_start":1,"column_end":23}},{"value":"/   be_u32(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":507051,"byte_end":507066,"line_start":119,"line_end":119,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":507067,"byte_end":507073,"line_start":120,"line_end":120,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":507074,"byte_end":507077,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":507078,"byte_end":507167,"line_start":122,"line_end":122,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":507168,"byte_end":507253,"line_start":123,"line_end":123,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":507254,"byte_end":507261,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":507262,"byte_end":507271,"line_start":125,"line_end":125,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2247},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":508242,"byte_end":508248,"line_start":159,"line_end":159,"column_start":8,"column_end":14},"name":"be_u64","qualname":"::number::complete::be_u64","value":"pub fn be_u64<I, E: ParseError<I>>(I) -> IResult<I, u64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 8 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":507701,"byte_end":507754,"line_start":143,"line_end":143,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":507755,"byte_end":507758,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":507759,"byte_end":507834,"line_start":145,"line_end":145,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":507835,"byte_end":507846,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":507847,"byte_end":507894,"line_start":147,"line_end":147,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":507895,"byte_end":507923,"line_start":148,"line_end":148,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u64;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":507924,"byte_end":507962,"line_start":149,"line_end":149,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":507963,"byte_end":507966,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":507967,"byte_end":507989,"line_start":151,"line_end":151,"column_start":1,"column_end":23}},{"value":"/   be_u64(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":507990,"byte_end":508005,"line_start":152,"line_end":152,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":508006,"byte_end":508012,"line_start":153,"line_end":153,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":508013,"byte_end":508016,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":508017,"byte_end":508130,"line_start":155,"line_end":155,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":508131,"byte_end":508216,"line_start":156,"line_end":156,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":508217,"byte_end":508224,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":508225,"byte_end":508234,"line_start":158,"line_end":158,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2250},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":509276,"byte_end":509283,"line_start":193,"line_end":193,"column_start":8,"column_end":15},"name":"be_u128","qualname":"::number::complete::be_u128","value":"pub fn be_u128<I, E: ParseError<I>>(I) -> IResult<I, u128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 16 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":508664,"byte_end":508718,"line_start":176,"line_end":176,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":508719,"byte_end":508722,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":508723,"byte_end":508798,"line_start":178,"line_end":178,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":508799,"byte_end":508810,"line_start":179,"line_end":179,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":508811,"byte_end":508858,"line_start":180,"line_end":180,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":508859,"byte_end":508887,"line_start":181,"line_end":181,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u128;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":508888,"byte_end":508927,"line_start":182,"line_end":182,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":508928,"byte_end":508931,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":508932,"byte_end":508954,"line_start":184,"line_end":184,"column_start":1,"column_end":23}},{"value":"/   be_u128(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":508955,"byte_end":508971,"line_start":185,"line_end":185,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":508972,"byte_end":508978,"line_start":186,"line_end":186,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":508979,"byte_end":508982,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":508983,"byte_end":509144,"line_start":188,"line_end":188,"column_start":1,"column_end":162}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":509145,"byte_end":509230,"line_start":189,"line_end":189,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":509231,"byte_end":509238,"line_start":190,"line_end":190,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":509239,"byte_end":509248,"line_start":191,"line_end":191,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":509249,"byte_end":509268,"line_start":192,"line_end":192,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2253},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510186,"byte_end":510191,"line_start":226,"line_end":226,"column_start":8,"column_end":13},"name":"be_i8","qualname":"::number::complete::be_i8","value":"pub fn be_i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":509703,"byte_end":509742,"line_start":210,"line_end":210,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":509743,"byte_end":509746,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":509747,"byte_end":509822,"line_start":212,"line_end":212,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":509823,"byte_end":509834,"line_start":213,"line_end":213,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":509835,"byte_end":509882,"line_start":214,"line_end":214,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":509883,"byte_end":509911,"line_start":215,"line_end":215,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i8;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":509912,"byte_end":509949,"line_start":216,"line_end":216,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":509950,"byte_end":509953,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":509954,"byte_end":509976,"line_start":218,"line_end":218,"column_start":1,"column_end":23}},{"value":"/   be_i8(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":509977,"byte_end":509991,"line_start":219,"line_end":219,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":509992,"byte_end":509998,"line_start":220,"line_end":220,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":509999,"byte_end":510002,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510003,"byte_end":510082,"line_start":222,"line_end":222,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510083,"byte_end":510160,"line_start":223,"line_end":223,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510161,"byte_end":510168,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510169,"byte_end":510178,"line_start":225,"line_end":225,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2256},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510859,"byte_end":510865,"line_start":249,"line_end":249,"column_start":8,"column_end":14},"name":"be_i16","qualname":"::number::complete::be_i16","value":"pub fn be_i16<I, E: ParseError<I>>(I) -> IResult<I, i16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 2 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510356,"byte_end":510407,"line_start":233,"line_end":233,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510408,"byte_end":510411,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510412,"byte_end":510487,"line_start":235,"line_end":235,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510488,"byte_end":510499,"line_start":236,"line_end":236,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510500,"byte_end":510547,"line_start":237,"line_end":237,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510548,"byte_end":510576,"line_start":238,"line_end":238,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i16;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510577,"byte_end":510615,"line_start":239,"line_end":239,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510616,"byte_end":510619,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510620,"byte_end":510642,"line_start":241,"line_end":241,"column_start":1,"column_end":23}},{"value":"/   be_i16(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510643,"byte_end":510658,"line_start":242,"line_end":242,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510659,"byte_end":510665,"line_start":243,"line_end":243,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510666,"byte_end":510669,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510670,"byte_end":510747,"line_start":245,"line_end":245,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510748,"byte_end":510833,"line_start":246,"line_end":246,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510834,"byte_end":510841,"line_start":247,"line_end":247,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":510842,"byte_end":510851,"line_start":248,"line_end":248,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2259},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":511542,"byte_end":511548,"line_start":272,"line_end":272,"column_start":8,"column_end":14},"name":"be_i24","qualname":"::number::complete::be_i24","value":"pub fn be_i24<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 3 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":511033,"byte_end":511084,"line_start":256,"line_end":256,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":511085,"byte_end":511088,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":511089,"byte_end":511164,"line_start":258,"line_end":258,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":511165,"byte_end":511176,"line_start":259,"line_end":259,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":511177,"byte_end":511224,"line_start":260,"line_end":260,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":511225,"byte_end":511253,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i24;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":511254,"byte_end":511292,"line_start":262,"line_end":262,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":511293,"byte_end":511296,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":511297,"byte_end":511319,"line_start":264,"line_end":264,"column_start":1,"column_end":23}},{"value":"/   be_i24(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":511320,"byte_end":511335,"line_start":265,"line_end":265,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":511336,"byte_end":511342,"line_start":266,"line_end":266,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":511343,"byte_end":511346,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":511347,"byte_end":511430,"line_start":268,"line_end":268,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":511431,"byte_end":511516,"line_start":269,"line_end":269,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":511517,"byte_end":511524,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":511525,"byte_end":511534,"line_start":271,"line_end":271,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2262},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512381,"byte_end":512387,"line_start":300,"line_end":300,"column_start":8,"column_end":14},"name":"be_i32","qualname":"::number::complete::be_i32","value":"pub fn be_i32<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 4 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":511866,"byte_end":511917,"line_start":284,"line_end":284,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":511918,"byte_end":511921,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Teturns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":511922,"byte_end":511997,"line_start":286,"line_end":286,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":511998,"byte_end":512009,"line_start":287,"line_end":287,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512010,"byte_end":512057,"line_start":288,"line_end":288,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512058,"byte_end":512086,"line_start":289,"line_end":289,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i32;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512087,"byte_end":512125,"line_start":290,"line_end":290,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512126,"byte_end":512129,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512130,"byte_end":512152,"line_start":292,"line_end":292,"column_start":1,"column_end":23}},{"value":"/   be_i32(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512153,"byte_end":512168,"line_start":293,"line_end":293,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512169,"byte_end":512175,"line_start":294,"line_end":294,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512176,"byte_end":512179,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512180,"byte_end":512269,"line_start":296,"line_end":296,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512270,"byte_end":512355,"line_start":297,"line_end":297,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512356,"byte_end":512363,"line_start":298,"line_end":298,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512364,"byte_end":512373,"line_start":299,"line_end":299,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2265},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":513094,"byte_end":513100,"line_start":323,"line_end":323,"column_start":8,"column_end":14},"name":"be_i64","qualname":"::number::complete::be_i64","value":"pub fn be_i64<I, E: ParseError<I>>(I) -> IResult<I, i64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 8 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512555,"byte_end":512606,"line_start":307,"line_end":307,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512607,"byte_end":512610,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512611,"byte_end":512686,"line_start":309,"line_end":309,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512687,"byte_end":512698,"line_start":310,"line_end":310,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512699,"byte_end":512746,"line_start":311,"line_end":311,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512747,"byte_end":512775,"line_start":312,"line_end":312,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i64;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512776,"byte_end":512814,"line_start":313,"line_end":313,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512815,"byte_end":512818,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512819,"byte_end":512841,"line_start":315,"line_end":315,"column_start":1,"column_end":23}},{"value":"/   be_i64(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512842,"byte_end":512857,"line_start":316,"line_end":316,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512858,"byte_end":512864,"line_start":317,"line_end":317,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512865,"byte_end":512868,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512869,"byte_end":512982,"line_start":319,"line_end":319,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":512983,"byte_end":513068,"line_start":320,"line_end":320,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":513069,"byte_end":513076,"line_start":321,"line_end":321,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":513077,"byte_end":513086,"line_start":322,"line_end":322,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2268},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":513878,"byte_end":513885,"line_start":347,"line_end":347,"column_start":8,"column_end":15},"name":"be_i128","qualname":"::number::complete::be_i128","value":"pub fn be_i128<I, E: ParseError<I>>(I) -> IResult<I, i128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 16 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":513268,"byte_end":513320,"line_start":330,"line_end":330,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":513321,"byte_end":513324,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":513325,"byte_end":513400,"line_start":332,"line_end":332,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":513401,"byte_end":513412,"line_start":333,"line_end":333,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":513413,"byte_end":513460,"line_start":334,"line_end":334,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":513461,"byte_end":513489,"line_start":335,"line_end":335,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i128;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":513490,"byte_end":513529,"line_start":336,"line_end":336,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":513530,"byte_end":513533,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":513534,"byte_end":513556,"line_start":338,"line_end":338,"column_start":1,"column_end":23}},{"value":"/   be_i128(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":513557,"byte_end":513573,"line_start":339,"line_end":339,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":513574,"byte_end":513580,"line_start":340,"line_end":340,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":513581,"byte_end":513584,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":513585,"byte_end":513746,"line_start":342,"line_end":342,"column_start":1,"column_end":162}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":513747,"byte_end":513832,"line_start":343,"line_end":343,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":513833,"byte_end":513840,"line_start":344,"line_end":344,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":513841,"byte_end":513850,"line_start":345,"line_end":345,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":513851,"byte_end":513870,"line_start":346,"line_end":346,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2271},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":514542,"byte_end":514547,"line_start":370,"line_end":370,"column_start":8,"column_end":13},"name":"le_u8","qualname":"::number::complete::le_u8","value":"pub fn le_u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":514056,"byte_end":514098,"line_start":354,"line_end":354,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":514099,"byte_end":514102,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":514103,"byte_end":514178,"line_start":356,"line_end":356,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":514179,"byte_end":514190,"line_start":357,"line_end":357,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":514191,"byte_end":514238,"line_start":358,"line_end":358,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":514239,"byte_end":514267,"line_start":359,"line_end":359,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u8;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":514268,"byte_end":514305,"line_start":360,"line_end":360,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":514306,"byte_end":514309,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":514310,"byte_end":514332,"line_start":362,"line_end":362,"column_start":1,"column_end":23}},{"value":"/   le_u8(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":514333,"byte_end":514347,"line_start":363,"line_end":363,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":514348,"byte_end":514354,"line_start":364,"line_end":364,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":514355,"byte_end":514358,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":514359,"byte_end":514438,"line_start":366,"line_end":366,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":514439,"byte_end":514516,"line_start":367,"line_end":367,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":514517,"byte_end":514524,"line_start":368,"line_end":368,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":514525,"byte_end":514534,"line_start":369,"line_end":369,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2274},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":515403,"byte_end":515409,"line_start":400,"line_end":400,"column_start":8,"column_end":14},"name":"le_u16","qualname":"::number::complete::le_u16","value":"pub fn le_u16<I, E: ParseError<I>>(I) -> IResult<I, u16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 2 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":514895,"byte_end":514951,"line_start":384,"line_end":384,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":514952,"byte_end":514955,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":514956,"byte_end":515031,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":515032,"byte_end":515043,"line_start":387,"line_end":387,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":515044,"byte_end":515091,"line_start":388,"line_end":388,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":515092,"byte_end":515120,"line_start":389,"line_end":389,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u16;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":515121,"byte_end":515159,"line_start":390,"line_end":390,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":515160,"byte_end":515163,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":515164,"byte_end":515186,"line_start":392,"line_end":392,"column_start":1,"column_end":23}},{"value":"/   le_u16(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":515187,"byte_end":515202,"line_start":393,"line_end":393,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":515203,"byte_end":515209,"line_start":394,"line_end":394,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":515210,"byte_end":515213,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":515214,"byte_end":515291,"line_start":396,"line_end":396,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":515292,"byte_end":515377,"line_start":397,"line_end":397,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":515378,"byte_end":515385,"line_start":398,"line_end":398,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":515386,"byte_end":515395,"line_start":399,"line_end":399,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2277},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":516351,"byte_end":516357,"line_start":433,"line_end":433,"column_start":8,"column_end":14},"name":"le_u24","qualname":"::number::complete::le_u24","value":"pub fn le_u24<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 3 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 3 byte integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":515838,"byte_end":515893,"line_start":417,"line_end":417,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":515894,"byte_end":515897,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":515898,"byte_end":515973,"line_start":419,"line_end":419,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":515974,"byte_end":515985,"line_start":420,"line_end":420,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":515986,"byte_end":516033,"line_start":421,"line_end":421,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":516034,"byte_end":516062,"line_start":422,"line_end":422,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u24;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":516063,"byte_end":516101,"line_start":423,"line_end":423,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":516102,"byte_end":516105,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":516106,"byte_end":516128,"line_start":425,"line_end":425,"column_start":1,"column_end":23}},{"value":"/   le_u24(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":516129,"byte_end":516144,"line_start":426,"line_end":426,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":516145,"byte_end":516151,"line_start":427,"line_end":427,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":516152,"byte_end":516155,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":516156,"byte_end":516239,"line_start":429,"line_end":429,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":516240,"byte_end":516325,"line_start":430,"line_end":430,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":516326,"byte_end":516333,"line_start":431,"line_end":431,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":516334,"byte_end":516343,"line_start":432,"line_end":432,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2280},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":517306,"byte_end":517312,"line_start":466,"line_end":466,"column_start":8,"column_end":14},"name":"le_u32","qualname":"::number::complete::le_u32","value":"pub fn le_u32<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 4 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":516786,"byte_end":516842,"line_start":450,"line_end":450,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":516843,"byte_end":516846,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":516847,"byte_end":516922,"line_start":452,"line_end":452,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":516923,"byte_end":516934,"line_start":453,"line_end":453,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":516935,"byte_end":516982,"line_start":454,"line_end":454,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":516983,"byte_end":517011,"line_start":455,"line_end":455,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u32;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":517012,"byte_end":517050,"line_start":456,"line_end":456,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":517051,"byte_end":517054,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":517055,"byte_end":517077,"line_start":458,"line_end":458,"column_start":1,"column_end":23}},{"value":"/   le_u32(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":517078,"byte_end":517093,"line_start":459,"line_end":459,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":517094,"byte_end":517100,"line_start":460,"line_end":460,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":517101,"byte_end":517104,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":517105,"byte_end":517194,"line_start":462,"line_end":462,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":517195,"byte_end":517280,"line_start":463,"line_end":463,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":517281,"byte_end":517288,"line_start":464,"line_end":464,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":517289,"byte_end":517298,"line_start":465,"line_end":465,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2283},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":518285,"byte_end":518291,"line_start":499,"line_end":499,"column_start":8,"column_end":14},"name":"le_u64","qualname":"::number::complete::le_u64","value":"pub fn le_u64<I, E: ParseError<I>>(I) -> IResult<I, u64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 8 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":517741,"byte_end":517797,"line_start":483,"line_end":483,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":517798,"byte_end":517801,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":517802,"byte_end":517877,"line_start":485,"line_end":485,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":517878,"byte_end":517889,"line_start":486,"line_end":486,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":517890,"byte_end":517937,"line_start":487,"line_end":487,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":517938,"byte_end":517966,"line_start":488,"line_end":488,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u64;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":517967,"byte_end":518005,"line_start":489,"line_end":489,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":518006,"byte_end":518009,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":518010,"byte_end":518032,"line_start":491,"line_end":491,"column_start":1,"column_end":23}},{"value":"/   le_u64(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":518033,"byte_end":518048,"line_start":492,"line_end":492,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":518049,"byte_end":518055,"line_start":493,"line_end":493,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":518056,"byte_end":518059,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":518060,"byte_end":518173,"line_start":495,"line_end":495,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":518174,"byte_end":518259,"line_start":496,"line_end":496,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":518260,"byte_end":518267,"line_start":497,"line_end":497,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":518268,"byte_end":518277,"line_start":498,"line_end":498,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2286},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":519335,"byte_end":519342,"line_start":533,"line_end":533,"column_start":8,"column_end":15},"name":"le_u128","qualname":"::number::complete::le_u128","value":"pub fn le_u128<I, E: ParseError<I>>(I) -> IResult<I, u128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 16 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":518720,"byte_end":518777,"line_start":516,"line_end":516,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":518778,"byte_end":518781,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":518782,"byte_end":518857,"line_start":518,"line_end":518,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":518858,"byte_end":518869,"line_start":519,"line_end":519,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":518870,"byte_end":518917,"line_start":520,"line_end":520,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":518918,"byte_end":518946,"line_start":521,"line_end":521,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u128;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":518947,"byte_end":518986,"line_start":522,"line_end":522,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":518987,"byte_end":518990,"line_start":523,"line_end":523,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":518991,"byte_end":519013,"line_start":524,"line_end":524,"column_start":1,"column_end":23}},{"value":"/   le_u128(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":519014,"byte_end":519030,"line_start":525,"line_end":525,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":519031,"byte_end":519037,"line_start":526,"line_end":526,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":519038,"byte_end":519041,"line_start":527,"line_end":527,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":519042,"byte_end":519203,"line_start":528,"line_end":528,"column_start":1,"column_end":162}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":519204,"byte_end":519289,"line_start":529,"line_end":529,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":519290,"byte_end":519297,"line_start":530,"line_end":530,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":519298,"byte_end":519307,"line_start":531,"line_end":531,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":519308,"byte_end":519327,"line_start":532,"line_end":532,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2289},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520258,"byte_end":520263,"line_start":566,"line_end":566,"column_start":8,"column_end":13},"name":"le_i8","qualname":"::number::complete::le_i8","value":"pub fn le_i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":519775,"byte_end":519814,"line_start":550,"line_end":550,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":519815,"byte_end":519818,"line_start":551,"line_end":551,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":519819,"byte_end":519894,"line_start":552,"line_end":552,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":519895,"byte_end":519906,"line_start":553,"line_end":553,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":519907,"byte_end":519954,"line_start":554,"line_end":554,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":519955,"byte_end":519983,"line_start":555,"line_end":555,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i8;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":519984,"byte_end":520021,"line_start":556,"line_end":556,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520022,"byte_end":520025,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520026,"byte_end":520048,"line_start":558,"line_end":558,"column_start":1,"column_end":23}},{"value":"/   le_i8(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520049,"byte_end":520063,"line_start":559,"line_end":559,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520064,"byte_end":520070,"line_start":560,"line_end":560,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520071,"byte_end":520074,"line_start":561,"line_end":561,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520075,"byte_end":520154,"line_start":562,"line_end":562,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520155,"byte_end":520232,"line_start":563,"line_end":563,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520233,"byte_end":520240,"line_start":564,"line_end":564,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520241,"byte_end":520250,"line_start":565,"line_end":565,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2292},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520934,"byte_end":520940,"line_start":589,"line_end":589,"column_start":8,"column_end":14},"name":"le_i16","qualname":"::number::complete::le_i16","value":"pub fn le_i16<I, E: ParseError<I>>(I) -> IResult<I, i16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 2 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520428,"byte_end":520482,"line_start":573,"line_end":573,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520483,"byte_end":520486,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520487,"byte_end":520562,"line_start":575,"line_end":575,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520563,"byte_end":520574,"line_start":576,"line_end":576,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520575,"byte_end":520622,"line_start":577,"line_end":577,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520623,"byte_end":520651,"line_start":578,"line_end":578,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i16;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520652,"byte_end":520690,"line_start":579,"line_end":579,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520691,"byte_end":520694,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520695,"byte_end":520717,"line_start":581,"line_end":581,"column_start":1,"column_end":23}},{"value":"/   le_i16(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520718,"byte_end":520733,"line_start":582,"line_end":582,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520734,"byte_end":520740,"line_start":583,"line_end":583,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520741,"byte_end":520744,"line_start":584,"line_end":584,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520745,"byte_end":520822,"line_start":585,"line_end":585,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520823,"byte_end":520908,"line_start":586,"line_end":586,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520909,"byte_end":520916,"line_start":587,"line_end":587,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":520917,"byte_end":520926,"line_start":588,"line_end":588,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2295},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":521620,"byte_end":521626,"line_start":612,"line_end":612,"column_start":8,"column_end":14},"name":"le_i24","qualname":"::number::complete::le_i24","value":"pub fn le_i24<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 3 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":521108,"byte_end":521162,"line_start":596,"line_end":596,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":521163,"byte_end":521166,"line_start":597,"line_end":597,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":521167,"byte_end":521242,"line_start":598,"line_end":598,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":521243,"byte_end":521254,"line_start":599,"line_end":599,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":521255,"byte_end":521302,"line_start":600,"line_end":600,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":521303,"byte_end":521331,"line_start":601,"line_end":601,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i24;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":521332,"byte_end":521370,"line_start":602,"line_end":602,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":521371,"byte_end":521374,"line_start":603,"line_end":603,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":521375,"byte_end":521397,"line_start":604,"line_end":604,"column_start":1,"column_end":23}},{"value":"/   le_i24(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":521398,"byte_end":521413,"line_start":605,"line_end":605,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":521414,"byte_end":521420,"line_start":606,"line_end":606,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":521421,"byte_end":521424,"line_start":607,"line_end":607,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":521425,"byte_end":521508,"line_start":608,"line_end":608,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":521509,"byte_end":521594,"line_start":609,"line_end":609,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":521595,"byte_end":521602,"line_start":610,"line_end":610,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":521603,"byte_end":521612,"line_start":611,"line_end":611,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2298},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522462,"byte_end":522468,"line_start":640,"line_end":640,"column_start":8,"column_end":14},"name":"le_i32","qualname":"::number::complete::le_i32","value":"pub fn le_i32<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 4 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":521944,"byte_end":521998,"line_start":624,"line_end":624,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":521999,"byte_end":522002,"line_start":625,"line_end":625,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522003,"byte_end":522078,"line_start":626,"line_end":626,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522079,"byte_end":522090,"line_start":627,"line_end":627,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522091,"byte_end":522138,"line_start":628,"line_end":628,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522139,"byte_end":522167,"line_start":629,"line_end":629,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i32;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522168,"byte_end":522206,"line_start":630,"line_end":630,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522207,"byte_end":522210,"line_start":631,"line_end":631,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522211,"byte_end":522233,"line_start":632,"line_end":632,"column_start":1,"column_end":23}},{"value":"/   le_i32(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522234,"byte_end":522249,"line_start":633,"line_end":633,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522250,"byte_end":522256,"line_start":634,"line_end":634,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522257,"byte_end":522260,"line_start":635,"line_end":635,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522261,"byte_end":522350,"line_start":636,"line_end":636,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522351,"byte_end":522436,"line_start":637,"line_end":637,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522437,"byte_end":522444,"line_start":638,"line_end":638,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522445,"byte_end":522454,"line_start":639,"line_end":639,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2301},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523178,"byte_end":523184,"line_start":663,"line_end":663,"column_start":8,"column_end":14},"name":"le_i64","qualname":"::number::complete::le_i64","value":"pub fn le_i64<I, E: ParseError<I>>(I) -> IResult<I, i64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 8 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522636,"byte_end":522690,"line_start":647,"line_end":647,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522691,"byte_end":522694,"line_start":648,"line_end":648,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522695,"byte_end":522770,"line_start":649,"line_end":649,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522771,"byte_end":522782,"line_start":650,"line_end":650,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522783,"byte_end":522830,"line_start":651,"line_end":651,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522831,"byte_end":522859,"line_start":652,"line_end":652,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i64;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522860,"byte_end":522898,"line_start":653,"line_end":653,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522899,"byte_end":522902,"line_start":654,"line_end":654,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522903,"byte_end":522925,"line_start":655,"line_end":655,"column_start":1,"column_end":23}},{"value":"/   le_i64(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522926,"byte_end":522941,"line_start":656,"line_end":656,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522942,"byte_end":522948,"line_start":657,"line_end":657,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522949,"byte_end":522952,"line_start":658,"line_end":658,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":522953,"byte_end":523066,"line_start":659,"line_end":659,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523067,"byte_end":523152,"line_start":660,"line_end":660,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523153,"byte_end":523160,"line_start":661,"line_end":661,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523161,"byte_end":523170,"line_start":662,"line_end":662,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2304},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523965,"byte_end":523972,"line_start":687,"line_end":687,"column_start":8,"column_end":15},"name":"le_i128","qualname":"::number::complete::le_i128","value":"pub fn le_i128<I, E: ParseError<I>>(I) -> IResult<I, i128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 16 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523352,"byte_end":523407,"line_start":670,"line_end":670,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523408,"byte_end":523411,"line_start":671,"line_end":671,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523412,"byte_end":523487,"line_start":672,"line_end":672,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523488,"byte_end":523499,"line_start":673,"line_end":673,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523500,"byte_end":523547,"line_start":674,"line_end":674,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523548,"byte_end":523576,"line_start":675,"line_end":675,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i128;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523577,"byte_end":523616,"line_start":676,"line_end":676,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523617,"byte_end":523620,"line_start":677,"line_end":677,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523621,"byte_end":523643,"line_start":678,"line_end":678,"column_start":1,"column_end":23}},{"value":"/   le_i128(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523644,"byte_end":523660,"line_start":679,"line_end":679,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523661,"byte_end":523667,"line_start":680,"line_end":680,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523668,"byte_end":523671,"line_start":681,"line_end":681,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523672,"byte_end":523833,"line_start":682,"line_end":682,"column_start":1,"column_end":162}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523834,"byte_end":523919,"line_start":683,"line_end":683,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523920,"byte_end":523927,"line_start":684,"line_end":684,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523928,"byte_end":523937,"line_start":685,"line_end":685,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":523938,"byte_end":523957,"line_start":686,"line_end":686,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2307},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":524680,"byte_end":524682,"line_start":711,"line_end":711,"column_start":8,"column_end":10},"name":"u8","qualname":"::number::complete::u8","value":"pub fn u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":524143,"byte_end":524184,"line_start":694,"line_end":694,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":524185,"byte_end":524188,"line_start":695,"line_end":695,"column_start":1,"column_end":4}},{"value":"/ Note that endianness does not apply to 1 byte numbers.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":524189,"byte_end":524247,"line_start":696,"line_end":696,"column_start":1,"column_end":59}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":524248,"byte_end":524322,"line_start":697,"line_end":697,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":524323,"byte_end":524334,"line_start":698,"line_end":698,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":524335,"byte_end":524382,"line_start":699,"line_end":699,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":524383,"byte_end":524411,"line_start":700,"line_end":700,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u8;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":524412,"byte_end":524446,"line_start":701,"line_end":701,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":524447,"byte_end":524450,"line_start":702,"line_end":702,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":524451,"byte_end":524473,"line_start":703,"line_end":703,"column_start":1,"column_end":23}},{"value":"/   u8(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":524474,"byte_end":524485,"line_start":704,"line_end":704,"column_start":1,"column_end":12}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":524486,"byte_end":524492,"line_start":705,"line_end":705,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":524493,"byte_end":524496,"line_start":706,"line_end":706,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":524497,"byte_end":524576,"line_start":707,"line_end":707,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":524577,"byte_end":524654,"line_start":708,"line_end":708,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":524655,"byte_end":524662,"line_start":709,"line_end":709,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":524663,"byte_end":524672,"line_start":710,"line_end":710,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2310},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525957,"byte_end":525960,"line_start":751,"line_end":751,"column_start":8,"column_end":11},"name":"u16","qualname":"::number::complete::u16","value":"pub fn u16<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u16, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 2 bytes integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 2 bytes integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525030,"byte_end":525072,"line_start":725,"line_end":725,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525073,"byte_end":525076,"line_start":726,"line_end":726,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian u16 integer,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525077,"byte_end":525156,"line_start":727,"line_end":727,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian u16 integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525157,"byte_end":525234,"line_start":728,"line_end":728,"column_start":1,"column_end":78}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525235,"byte_end":525309,"line_start":729,"line_end":729,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525310,"byte_end":525313,"line_start":730,"line_end":730,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525314,"byte_end":525325,"line_start":731,"line_end":731,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525326,"byte_end":525373,"line_start":732,"line_end":732,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525374,"byte_end":525402,"line_start":733,"line_end":733,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u16;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525403,"byte_end":525438,"line_start":734,"line_end":734,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525439,"byte_end":525442,"line_start":735,"line_end":735,"column_start":1,"column_end":4}},{"value":"/ let be_u16 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525443,"byte_end":525465,"line_start":736,"line_end":736,"column_start":1,"column_end":23}},{"value":"/   u16(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525466,"byte_end":525508,"line_start":737,"line_end":737,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525509,"byte_end":525515,"line_start":738,"line_end":738,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525516,"byte_end":525519,"line_start":739,"line_end":739,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525520,"byte_end":525597,"line_start":740,"line_end":740,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(be_u16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525598,"byte_end":525683,"line_start":741,"line_end":741,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525684,"byte_end":525687,"line_start":742,"line_end":742,"column_start":1,"column_end":4}},{"value":"/ let le_u16 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525688,"byte_end":525710,"line_start":743,"line_end":743,"column_start":1,"column_end":23}},{"value":"/   u16(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525711,"byte_end":525756,"line_start":744,"line_end":744,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525757,"byte_end":525763,"line_start":745,"line_end":745,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525764,"byte_end":525767,"line_start":746,"line_end":746,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525768,"byte_end":525845,"line_start":747,"line_end":747,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(le_u16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525846,"byte_end":525931,"line_start":748,"line_end":748,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525932,"byte_end":525939,"line_start":749,"line_end":749,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":525940,"byte_end":525949,"line_start":750,"line_end":750,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2313},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":527345,"byte_end":527348,"line_start":790,"line_end":790,"column_start":8,"column_end":11},"name":"u24","qualname":"::number::complete::u24","value":"pub fn u24<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 3 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 3 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":526411,"byte_end":526452,"line_start":765,"line_end":765,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":526453,"byte_end":526456,"line_start":766,"line_end":766,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian u24 integer,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":526457,"byte_end":526536,"line_start":767,"line_end":767,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian u24 integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":526537,"byte_end":526614,"line_start":768,"line_end":768,"column_start":1,"column_end":78}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":526615,"byte_end":526689,"line_start":769,"line_end":769,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":526690,"byte_end":526701,"line_start":770,"line_end":770,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":526702,"byte_end":526749,"line_start":771,"line_end":771,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":526750,"byte_end":526778,"line_start":772,"line_end":772,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u24;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":526779,"byte_end":526814,"line_start":773,"line_end":773,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":526815,"byte_end":526818,"line_start":774,"line_end":774,"column_start":1,"column_end":4}},{"value":"/ let be_u24 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":526819,"byte_end":526841,"line_start":775,"line_end":775,"column_start":1,"column_end":23}},{"value":"/   u24(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":526842,"byte_end":526884,"line_start":776,"line_end":776,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":526885,"byte_end":526891,"line_start":777,"line_end":777,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":526892,"byte_end":526895,"line_start":778,"line_end":778,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":526896,"byte_end":526979,"line_start":779,"line_end":779,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(be_u24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":526980,"byte_end":527065,"line_start":780,"line_end":780,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":527066,"byte_end":527069,"line_start":781,"line_end":781,"column_start":1,"column_end":4}},{"value":"/ let le_u24 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":527070,"byte_end":527092,"line_start":782,"line_end":782,"column_start":1,"column_end":23}},{"value":"/   u24(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":527093,"byte_end":527138,"line_start":783,"line_end":783,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":527139,"byte_end":527145,"line_start":784,"line_end":784,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":527146,"byte_end":527149,"line_start":785,"line_end":785,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":527150,"byte_end":527233,"line_start":786,"line_end":786,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(le_u24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":527234,"byte_end":527319,"line_start":787,"line_end":787,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":527320,"byte_end":527327,"line_start":788,"line_end":788,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":527328,"byte_end":527337,"line_start":789,"line_end":789,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2316},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528745,"byte_end":528748,"line_start":829,"line_end":829,"column_start":8,"column_end":11},"name":"u32","qualname":"::number::complete::u32","value":"pub fn u32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 4 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 4 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":527799,"byte_end":527840,"line_start":804,"line_end":804,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":527841,"byte_end":527844,"line_start":805,"line_end":805,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian u32 integer,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":527845,"byte_end":527924,"line_start":806,"line_end":806,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian u32 integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":527925,"byte_end":528002,"line_start":807,"line_end":807,"column_start":1,"column_end":78}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528003,"byte_end":528077,"line_start":808,"line_end":808,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528078,"byte_end":528089,"line_start":809,"line_end":809,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528090,"byte_end":528137,"line_start":810,"line_end":810,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528138,"byte_end":528166,"line_start":811,"line_end":811,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u32;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528167,"byte_end":528202,"line_start":812,"line_end":812,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528203,"byte_end":528206,"line_start":813,"line_end":813,"column_start":1,"column_end":4}},{"value":"/ let be_u32 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528207,"byte_end":528229,"line_start":814,"line_end":814,"column_start":1,"column_end":23}},{"value":"/   u32(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528230,"byte_end":528272,"line_start":815,"line_end":815,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528273,"byte_end":528279,"line_start":816,"line_end":816,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528280,"byte_end":528283,"line_start":817,"line_end":817,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528284,"byte_end":528373,"line_start":818,"line_end":818,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(be_u32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528374,"byte_end":528459,"line_start":819,"line_end":819,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528460,"byte_end":528463,"line_start":820,"line_end":820,"column_start":1,"column_end":4}},{"value":"/ let le_u32 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528464,"byte_end":528486,"line_start":821,"line_end":821,"column_start":1,"column_end":23}},{"value":"/   u32(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528487,"byte_end":528532,"line_start":822,"line_end":822,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528533,"byte_end":528539,"line_start":823,"line_end":823,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528540,"byte_end":528543,"line_start":824,"line_end":824,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528544,"byte_end":528633,"line_start":825,"line_end":825,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(le_u32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528634,"byte_end":528719,"line_start":826,"line_end":826,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528720,"byte_end":528727,"line_start":827,"line_end":827,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":528728,"byte_end":528737,"line_start":828,"line_end":828,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2319},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":530193,"byte_end":530196,"line_start":868,"line_end":868,"column_start":8,"column_end":11},"name":"u64","qualname":"::number::complete::u64","value":"pub fn u64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 8 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 8 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529199,"byte_end":529240,"line_start":843,"line_end":843,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529241,"byte_end":529244,"line_start":844,"line_end":844,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian u64 integer,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529245,"byte_end":529324,"line_start":845,"line_end":845,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian u64 integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529325,"byte_end":529402,"line_start":846,"line_end":846,"column_start":1,"column_end":78}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529403,"byte_end":529477,"line_start":847,"line_end":847,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529478,"byte_end":529489,"line_start":848,"line_end":848,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529490,"byte_end":529537,"line_start":849,"line_end":849,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529538,"byte_end":529566,"line_start":850,"line_end":850,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u64;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529567,"byte_end":529602,"line_start":851,"line_end":851,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529603,"byte_end":529606,"line_start":852,"line_end":852,"column_start":1,"column_end":4}},{"value":"/ let be_u64 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529607,"byte_end":529629,"line_start":853,"line_end":853,"column_start":1,"column_end":23}},{"value":"/   u64(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529630,"byte_end":529672,"line_start":854,"line_end":854,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529673,"byte_end":529679,"line_start":855,"line_end":855,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529680,"byte_end":529683,"line_start":856,"line_end":856,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529684,"byte_end":529797,"line_start":857,"line_end":857,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(be_u64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529798,"byte_end":529883,"line_start":858,"line_end":858,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529884,"byte_end":529887,"line_start":859,"line_end":859,"column_start":1,"column_end":4}},{"value":"/ let le_u64 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529888,"byte_end":529910,"line_start":860,"line_end":860,"column_start":1,"column_end":23}},{"value":"/   u64(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529911,"byte_end":529956,"line_start":861,"line_end":861,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529957,"byte_end":529963,"line_start":862,"line_end":862,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529964,"byte_end":529967,"line_start":863,"line_end":863,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":529968,"byte_end":530081,"line_start":864,"line_end":864,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(le_u64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":530082,"byte_end":530167,"line_start":865,"line_end":865,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":530168,"byte_end":530175,"line_start":866,"line_end":866,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":530176,"byte_end":530185,"line_start":867,"line_end":867,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2322},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":531769,"byte_end":531773,"line_start":908,"line_end":908,"column_start":8,"column_end":12},"name":"u128","qualname":"::number::complete::u128","value":"pub fn u128<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u128, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 16 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 16 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":530647,"byte_end":530689,"line_start":882,"line_end":882,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":530690,"byte_end":530693,"line_start":883,"line_end":883,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian u128 integer,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":530694,"byte_end":530774,"line_start":884,"line_end":884,"column_start":1,"column_end":81}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian u128 integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":530775,"byte_end":530853,"line_start":885,"line_end":885,"column_start":1,"column_end":79}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":530854,"byte_end":530928,"line_start":886,"line_end":886,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":530929,"byte_end":530940,"line_start":887,"line_end":887,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":530941,"byte_end":530988,"line_start":888,"line_end":888,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":530989,"byte_end":531017,"line_start":889,"line_end":889,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u128;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":531018,"byte_end":531054,"line_start":890,"line_end":890,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":531055,"byte_end":531058,"line_start":891,"line_end":891,"column_start":1,"column_end":4}},{"value":"/ let be_u128 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":531059,"byte_end":531082,"line_start":892,"line_end":892,"column_start":1,"column_end":24}},{"value":"/   u128(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":531083,"byte_end":531126,"line_start":893,"line_end":893,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":531127,"byte_end":531133,"line_start":894,"line_end":894,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":531134,"byte_end":531137,"line_start":895,"line_end":895,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":531138,"byte_end":531300,"line_start":896,"line_end":896,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(be_u128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":531301,"byte_end":531387,"line_start":897,"line_end":897,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":531388,"byte_end":531391,"line_start":898,"line_end":898,"column_start":1,"column_end":4}},{"value":"/ let le_u128 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":531392,"byte_end":531415,"line_start":899,"line_end":899,"column_start":1,"column_end":24}},{"value":"/   u128(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":531416,"byte_end":531462,"line_start":900,"line_end":900,"column_start":1,"column_end":47}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":531463,"byte_end":531469,"line_start":901,"line_end":901,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":531470,"byte_end":531473,"line_start":902,"line_end":902,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":531474,"byte_end":531636,"line_start":903,"line_end":903,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(le_u128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":531637,"byte_end":531723,"line_start":904,"line_end":904,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":531724,"byte_end":531731,"line_start":905,"line_end":905,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":531732,"byte_end":531741,"line_start":906,"line_end":906,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":531742,"byte_end":531761,"line_start":907,"line_end":907,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2325},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":532763,"byte_end":532765,"line_start":939,"line_end":939,"column_start":8,"column_end":10},"name":"i8","qualname":"::number::complete::i8","value":"pub fn i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":532229,"byte_end":532267,"line_start":922,"line_end":922,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":532268,"byte_end":532271,"line_start":923,"line_end":923,"column_start":1,"column_end":4}},{"value":"/ Note that endianness does not apply to 1 byte numbers.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":532272,"byte_end":532330,"line_start":924,"line_end":924,"column_start":1,"column_end":59}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":532331,"byte_end":532405,"line_start":925,"line_end":925,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":532406,"byte_end":532417,"line_start":926,"line_end":926,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":532418,"byte_end":532465,"line_start":927,"line_end":927,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":532466,"byte_end":532494,"line_start":928,"line_end":928,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i8;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":532495,"byte_end":532529,"line_start":929,"line_end":929,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":532530,"byte_end":532533,"line_start":930,"line_end":930,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":532534,"byte_end":532556,"line_start":931,"line_end":931,"column_start":1,"column_end":23}},{"value":"/   i8(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":532557,"byte_end":532568,"line_start":932,"line_end":932,"column_start":1,"column_end":12}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":532569,"byte_end":532575,"line_start":933,"line_end":933,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":532576,"byte_end":532579,"line_start":934,"line_end":934,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":532580,"byte_end":532659,"line_start":935,"line_end":935,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":532660,"byte_end":532737,"line_start":936,"line_end":936,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":532738,"byte_end":532745,"line_start":937,"line_end":937,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":532746,"byte_end":532755,"line_start":938,"line_end":938,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2328},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533838,"byte_end":533841,"line_start":971,"line_end":971,"column_start":8,"column_end":11},"name":"i16","qualname":"::number::complete::i16","value":"pub fn i16<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i16, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 2 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 2 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":532919,"byte_end":532957,"line_start":946,"line_end":946,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":532958,"byte_end":532961,"line_start":947,"line_end":947,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian i16 integer,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":532962,"byte_end":533041,"line_start":948,"line_end":948,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian i16 integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533042,"byte_end":533119,"line_start":949,"line_end":949,"column_start":1,"column_end":78}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533120,"byte_end":533194,"line_start":950,"line_end":950,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533195,"byte_end":533206,"line_start":951,"line_end":951,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533207,"byte_end":533254,"line_start":952,"line_end":952,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533255,"byte_end":533283,"line_start":953,"line_end":953,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i16;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533284,"byte_end":533319,"line_start":954,"line_end":954,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533320,"byte_end":533323,"line_start":955,"line_end":955,"column_start":1,"column_end":4}},{"value":"/ let be_i16 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533324,"byte_end":533346,"line_start":956,"line_end":956,"column_start":1,"column_end":23}},{"value":"/   i16(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533347,"byte_end":533389,"line_start":957,"line_end":957,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533390,"byte_end":533396,"line_start":958,"line_end":958,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533397,"byte_end":533400,"line_start":959,"line_end":959,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533401,"byte_end":533478,"line_start":960,"line_end":960,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(be_i16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533479,"byte_end":533564,"line_start":961,"line_end":961,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533565,"byte_end":533568,"line_start":962,"line_end":962,"column_start":1,"column_end":4}},{"value":"/ let le_i16 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533569,"byte_end":533591,"line_start":963,"line_end":963,"column_start":1,"column_end":23}},{"value":"/   i16(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533592,"byte_end":533637,"line_start":964,"line_end":964,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533638,"byte_end":533644,"line_start":965,"line_end":965,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533645,"byte_end":533648,"line_start":966,"line_end":966,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533649,"byte_end":533726,"line_start":967,"line_end":967,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(le_i16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533727,"byte_end":533812,"line_start":968,"line_end":968,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533813,"byte_end":533820,"line_start":969,"line_end":969,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":533821,"byte_end":533830,"line_start":970,"line_end":970,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2331},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":535223,"byte_end":535226,"line_start":1010,"line_end":1010,"column_start":8,"column_end":11},"name":"i24","qualname":"::number::complete::i24","value":"pub fn i24<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 3 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 3 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":534292,"byte_end":534330,"line_start":985,"line_end":985,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":534331,"byte_end":534334,"line_start":986,"line_end":986,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian i24 integer,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":534335,"byte_end":534414,"line_start":987,"line_end":987,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian i24 integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":534415,"byte_end":534492,"line_start":988,"line_end":988,"column_start":1,"column_end":78}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":534493,"byte_end":534567,"line_start":989,"line_end":989,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":534568,"byte_end":534579,"line_start":990,"line_end":990,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":534580,"byte_end":534627,"line_start":991,"line_end":991,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":534628,"byte_end":534656,"line_start":992,"line_end":992,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i24;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":534657,"byte_end":534692,"line_start":993,"line_end":993,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":534693,"byte_end":534696,"line_start":994,"line_end":994,"column_start":1,"column_end":4}},{"value":"/ let be_i24 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":534697,"byte_end":534719,"line_start":995,"line_end":995,"column_start":1,"column_end":23}},{"value":"/   i24(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":534720,"byte_end":534762,"line_start":996,"line_end":996,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":534763,"byte_end":534769,"line_start":997,"line_end":997,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":534770,"byte_end":534773,"line_start":998,"line_end":998,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":534774,"byte_end":534857,"line_start":999,"line_end":999,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(be_i24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":534858,"byte_end":534943,"line_start":1000,"line_end":1000,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":534944,"byte_end":534947,"line_start":1001,"line_end":1001,"column_start":1,"column_end":4}},{"value":"/ let le_i24 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":534948,"byte_end":534970,"line_start":1002,"line_end":1002,"column_start":1,"column_end":23}},{"value":"/   i24(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":534971,"byte_end":535016,"line_start":1003,"line_end":1003,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":535017,"byte_end":535023,"line_start":1004,"line_end":1004,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":535024,"byte_end":535027,"line_start":1005,"line_end":1005,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":535028,"byte_end":535111,"line_start":1006,"line_end":1006,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(le_i24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":535112,"byte_end":535197,"line_start":1007,"line_end":1007,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":535198,"byte_end":535205,"line_start":1008,"line_end":1008,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":535206,"byte_end":535215,"line_start":1009,"line_end":1009,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2334},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":536620,"byte_end":536623,"line_start":1049,"line_end":1049,"column_start":8,"column_end":11},"name":"i32","qualname":"::number::complete::i32","value":"pub fn i32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 4 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 4 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":535677,"byte_end":535715,"line_start":1024,"line_end":1024,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":535716,"byte_end":535719,"line_start":1025,"line_end":1025,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian i32 integer,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":535720,"byte_end":535799,"line_start":1026,"line_end":1026,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian i32 integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":535800,"byte_end":535877,"line_start":1027,"line_end":1027,"column_start":1,"column_end":78}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":535878,"byte_end":535952,"line_start":1028,"line_end":1028,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":535953,"byte_end":535964,"line_start":1029,"line_end":1029,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":535965,"byte_end":536012,"line_start":1030,"line_end":1030,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":536013,"byte_end":536041,"line_start":1031,"line_end":1031,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i32;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":536042,"byte_end":536077,"line_start":1032,"line_end":1032,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":536078,"byte_end":536081,"line_start":1033,"line_end":1033,"column_start":1,"column_end":4}},{"value":"/ let be_i32 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":536082,"byte_end":536104,"line_start":1034,"line_end":1034,"column_start":1,"column_end":23}},{"value":"/   i32(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":536105,"byte_end":536147,"line_start":1035,"line_end":1035,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":536148,"byte_end":536154,"line_start":1036,"line_end":1036,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":536155,"byte_end":536158,"line_start":1037,"line_end":1037,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":536159,"byte_end":536248,"line_start":1038,"line_end":1038,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(be_i32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":536249,"byte_end":536334,"line_start":1039,"line_end":1039,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":536335,"byte_end":536338,"line_start":1040,"line_end":1040,"column_start":1,"column_end":4}},{"value":"/ let le_i32 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":536339,"byte_end":536361,"line_start":1041,"line_end":1041,"column_start":1,"column_end":23}},{"value":"/   i32(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":536362,"byte_end":536407,"line_start":1042,"line_end":1042,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":536408,"byte_end":536414,"line_start":1043,"line_end":1043,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":536415,"byte_end":536418,"line_start":1044,"line_end":1044,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":536419,"byte_end":536508,"line_start":1045,"line_end":1045,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(le_i32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":536509,"byte_end":536594,"line_start":1046,"line_end":1046,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":536595,"byte_end":536602,"line_start":1047,"line_end":1047,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":536603,"byte_end":536612,"line_start":1048,"line_end":1048,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2337},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":538065,"byte_end":538068,"line_start":1088,"line_end":1088,"column_start":8,"column_end":11},"name":"i64","qualname":"::number::complete::i64","value":"pub fn i64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 8 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 8 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537074,"byte_end":537112,"line_start":1063,"line_end":1063,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537113,"byte_end":537116,"line_start":1064,"line_end":1064,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian i64 integer,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537117,"byte_end":537196,"line_start":1065,"line_end":1065,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian i64 integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537197,"byte_end":537274,"line_start":1066,"line_end":1066,"column_start":1,"column_end":78}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537275,"byte_end":537349,"line_start":1067,"line_end":1067,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537350,"byte_end":537361,"line_start":1068,"line_end":1068,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537362,"byte_end":537409,"line_start":1069,"line_end":1069,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537410,"byte_end":537438,"line_start":1070,"line_end":1070,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i64;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537439,"byte_end":537474,"line_start":1071,"line_end":1071,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537475,"byte_end":537478,"line_start":1072,"line_end":1072,"column_start":1,"column_end":4}},{"value":"/ let be_i64 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537479,"byte_end":537501,"line_start":1073,"line_end":1073,"column_start":1,"column_end":23}},{"value":"/   i64(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537502,"byte_end":537544,"line_start":1074,"line_end":1074,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537545,"byte_end":537551,"line_start":1075,"line_end":1075,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537552,"byte_end":537555,"line_start":1076,"line_end":1076,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537556,"byte_end":537669,"line_start":1077,"line_end":1077,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(be_i64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537670,"byte_end":537755,"line_start":1078,"line_end":1078,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537756,"byte_end":537759,"line_start":1079,"line_end":1079,"column_start":1,"column_end":4}},{"value":"/ let le_i64 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537760,"byte_end":537782,"line_start":1080,"line_end":1080,"column_start":1,"column_end":23}},{"value":"/   i64(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537783,"byte_end":537828,"line_start":1081,"line_end":1081,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537829,"byte_end":537835,"line_start":1082,"line_end":1082,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537836,"byte_end":537839,"line_start":1083,"line_end":1083,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537840,"byte_end":537953,"line_start":1084,"line_end":1084,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(le_i64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":537954,"byte_end":538039,"line_start":1085,"line_end":1085,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":538040,"byte_end":538047,"line_start":1086,"line_end":1086,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":538048,"byte_end":538057,"line_start":1087,"line_end":1087,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2340},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":539638,"byte_end":539642,"line_start":1128,"line_end":1128,"column_start":8,"column_end":12},"name":"i128","qualname":"::number::complete::i128","value":"pub fn i128<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i128, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 16 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 16 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":538519,"byte_end":538558,"line_start":1102,"line_end":1102,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":538559,"byte_end":538562,"line_start":1103,"line_end":1103,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian i128 integer,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":538563,"byte_end":538643,"line_start":1104,"line_end":1104,"column_start":1,"column_end":81}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian i128 integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":538644,"byte_end":538722,"line_start":1105,"line_end":1105,"column_start":1,"column_end":79}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":538723,"byte_end":538797,"line_start":1106,"line_end":1106,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":538798,"byte_end":538809,"line_start":1107,"line_end":1107,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":538810,"byte_end":538857,"line_start":1108,"line_end":1108,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":538858,"byte_end":538886,"line_start":1109,"line_end":1109,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i128;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":538887,"byte_end":538923,"line_start":1110,"line_end":1110,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":538924,"byte_end":538927,"line_start":1111,"line_end":1111,"column_start":1,"column_end":4}},{"value":"/ let be_i128 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":538928,"byte_end":538951,"line_start":1112,"line_end":1112,"column_start":1,"column_end":24}},{"value":"/   i128(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":538952,"byte_end":538995,"line_start":1113,"line_end":1113,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":538996,"byte_end":539002,"line_start":1114,"line_end":1114,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":539003,"byte_end":539006,"line_start":1115,"line_end":1115,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":539007,"byte_end":539169,"line_start":1116,"line_end":1116,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(be_i128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":539170,"byte_end":539256,"line_start":1117,"line_end":1117,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":539257,"byte_end":539260,"line_start":1118,"line_end":1118,"column_start":1,"column_end":4}},{"value":"/ let le_i128 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":539261,"byte_end":539284,"line_start":1119,"line_end":1119,"column_start":1,"column_end":24}},{"value":"/   i128(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":539285,"byte_end":539331,"line_start":1120,"line_end":1120,"column_start":1,"column_end":47}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":539332,"byte_end":539338,"line_start":1121,"line_end":1121,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":539339,"byte_end":539342,"line_start":1122,"line_end":1122,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":539343,"byte_end":539505,"line_start":1123,"line_end":1123,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(le_i128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":539506,"byte_end":539592,"line_start":1124,"line_end":1124,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":539593,"byte_end":539600,"line_start":1125,"line_end":1125,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":539601,"byte_end":539610,"line_start":1126,"line_end":1126,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":539611,"byte_end":539630,"line_start":1127,"line_end":1127,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2343},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540606,"byte_end":540612,"line_start":1158,"line_end":1158,"column_start":8,"column_end":14},"name":"be_f32","qualname":"::number::complete::be_f32","value":"pub fn be_f32<I, E: ParseError<I>>(I) -> IResult<I, f32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian 4 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a big endian 4 bytes floating point number.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540098,"byte_end":540156,"line_start":1142,"line_end":1142,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540157,"byte_end":540160,"line_start":1143,"line_end":1143,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540161,"byte_end":540236,"line_start":1144,"line_end":1144,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540237,"byte_end":540248,"line_start":1145,"line_end":1145,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540249,"byte_end":540296,"line_start":1146,"line_end":1146,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540297,"byte_end":540325,"line_start":1147,"line_end":1147,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_f32;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540326,"byte_end":540364,"line_start":1148,"line_end":1148,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540365,"byte_end":540368,"line_start":1149,"line_end":1149,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540369,"byte_end":540391,"line_start":1150,"line_end":1150,"column_start":1,"column_end":23}},{"value":"/   be_f32(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540392,"byte_end":540407,"line_start":1151,"line_end":1151,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540408,"byte_end":540414,"line_start":1152,"line_end":1152,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540415,"byte_end":540418,"line_start":1153,"line_end":1153,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x41, 0x48, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540419,"byte_end":540495,"line_start":1154,"line_end":1154,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540496,"byte_end":540580,"line_start":1155,"line_end":1155,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540581,"byte_end":540588,"line_start":1156,"line_end":1156,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540589,"byte_end":540598,"line_start":1157,"line_end":1157,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2346},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541372,"byte_end":541378,"line_start":1184,"line_end":1184,"column_start":8,"column_end":14},"name":"be_f64","qualname":"::number::complete::be_f64","value":"pub fn be_f64<I, E: ParseError<I>>(I) -> IResult<I, f64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian 8 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a big endian 8 bytes floating point number.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540840,"byte_end":540898,"line_start":1168,"line_end":1168,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540899,"byte_end":540902,"line_start":1169,"line_end":1169,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540903,"byte_end":540978,"line_start":1170,"line_end":1170,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540979,"byte_end":540990,"line_start":1171,"line_end":1171,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":540991,"byte_end":541038,"line_start":1172,"line_end":1172,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541039,"byte_end":541067,"line_start":1173,"line_end":1173,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_f64;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541068,"byte_end":541106,"line_start":1174,"line_end":1174,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541107,"byte_end":541110,"line_start":1175,"line_end":1175,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541111,"byte_end":541133,"line_start":1176,"line_end":1176,"column_start":1,"column_end":23}},{"value":"/   be_f64(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541134,"byte_end":541149,"line_start":1177,"line_end":1177,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541150,"byte_end":541156,"line_start":1178,"line_end":1178,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541157,"byte_end":541160,"line_start":1179,"line_end":1179,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541161,"byte_end":541261,"line_start":1180,"line_end":1180,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541262,"byte_end":541346,"line_start":1181,"line_end":1181,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541347,"byte_end":541354,"line_start":1182,"line_end":1182,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541355,"byte_end":541364,"line_start":1183,"line_end":1183,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2349},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":542117,"byte_end":542123,"line_start":1210,"line_end":1210,"column_start":8,"column_end":14},"name":"le_f32","qualname":"::number::complete::le_f32","value":"pub fn le_f32<I, E: ParseError<I>>(I) -> IResult<I, f32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian 4 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a little endian 4 bytes floating point number.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541606,"byte_end":541667,"line_start":1194,"line_end":1194,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541668,"byte_end":541671,"line_start":1195,"line_end":1195,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541672,"byte_end":541747,"line_start":1196,"line_end":1196,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541748,"byte_end":541759,"line_start":1197,"line_end":1197,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541760,"byte_end":541807,"line_start":1198,"line_end":1198,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541808,"byte_end":541836,"line_start":1199,"line_end":1199,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_f32;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541837,"byte_end":541875,"line_start":1200,"line_end":1200,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541876,"byte_end":541879,"line_start":1201,"line_end":1201,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541880,"byte_end":541902,"line_start":1202,"line_end":1202,"column_start":1,"column_end":23}},{"value":"/   le_f32(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541903,"byte_end":541918,"line_start":1203,"line_end":1203,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541919,"byte_end":541925,"line_start":1204,"line_end":1204,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541926,"byte_end":541929,"line_start":1205,"line_end":1205,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":541930,"byte_end":542006,"line_start":1206,"line_end":1206,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":542007,"byte_end":542091,"line_start":1207,"line_end":1207,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":542092,"byte_end":542099,"line_start":1208,"line_end":1208,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":542100,"byte_end":542109,"line_start":1209,"line_end":1209,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2352},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":542886,"byte_end":542892,"line_start":1236,"line_end":1236,"column_start":8,"column_end":14},"name":"le_f64","qualname":"::number::complete::le_f64","value":"pub fn le_f64<I, E: ParseError<I>>(I) -> IResult<I, f64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian 8 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a little endian 8 bytes floating point number.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":542351,"byte_end":542412,"line_start":1220,"line_end":1220,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":542413,"byte_end":542416,"line_start":1221,"line_end":1221,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":542417,"byte_end":542492,"line_start":1222,"line_end":1222,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":542493,"byte_end":542504,"line_start":1223,"line_end":1223,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":542505,"byte_end":542552,"line_start":1224,"line_end":1224,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":542553,"byte_end":542581,"line_start":1225,"line_end":1225,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_f64;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":542582,"byte_end":542620,"line_start":1226,"line_end":1226,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":542621,"byte_end":542624,"line_start":1227,"line_end":1227,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":542625,"byte_end":542647,"line_start":1228,"line_end":1228,"column_start":1,"column_end":23}},{"value":"/   le_f64(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":542648,"byte_end":542663,"line_start":1229,"line_end":1229,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":542664,"byte_end":542670,"line_start":1230,"line_end":1230,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":542671,"byte_end":542674,"line_start":1231,"line_end":1231,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x40][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":542675,"byte_end":542775,"line_start":1232,"line_end":1232,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":542776,"byte_end":542860,"line_start":1233,"line_end":1233,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":542861,"byte_end":542868,"line_start":1234,"line_end":1234,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":542869,"byte_end":542878,"line_start":1235,"line_end":1235,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2355},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":544038,"byte_end":544041,"line_start":1271,"line_end":1271,"column_start":8,"column_end":11},"name":"f32","qualname":"::number::complete::f32","value":"pub fn f32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, f32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a 4 byte floating point number","sig":null,"attributes":[{"value":"/ Recognizes a 4 byte floating point number","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543120,"byte_end":543165,"line_start":1246,"line_end":1246,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543166,"byte_end":543169,"line_start":1247,"line_end":1247,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian f32 float,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543170,"byte_end":543247,"line_start":1248,"line_end":1248,"column_start":1,"column_end":78}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian f32 float.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543248,"byte_end":543323,"line_start":1249,"line_end":1249,"column_start":1,"column_end":76}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543324,"byte_end":543398,"line_start":1250,"line_end":1250,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543399,"byte_end":543410,"line_start":1251,"line_end":1251,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543411,"byte_end":543458,"line_start":1252,"line_end":1252,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543459,"byte_end":543487,"line_start":1253,"line_end":1253,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::f32;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543488,"byte_end":543523,"line_start":1254,"line_end":1254,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543524,"byte_end":543527,"line_start":1255,"line_end":1255,"column_start":1,"column_end":4}},{"value":"/ let be_f32 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543528,"byte_end":543550,"line_start":1256,"line_end":1256,"column_start":1,"column_end":23}},{"value":"/   f32(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543551,"byte_end":543593,"line_start":1257,"line_end":1257,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543594,"byte_end":543600,"line_start":1258,"line_end":1258,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543601,"byte_end":543604,"line_start":1259,"line_end":1259,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_f32(&[0x41, 0x48, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543605,"byte_end":543681,"line_start":1260,"line_end":1260,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(be_f32(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543682,"byte_end":543766,"line_start":1261,"line_end":1261,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543767,"byte_end":543770,"line_start":1262,"line_end":1262,"column_start":1,"column_end":4}},{"value":"/ let le_f32 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543771,"byte_end":543793,"line_start":1263,"line_end":1263,"column_start":1,"column_end":23}},{"value":"/   f32(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543794,"byte_end":543839,"line_start":1264,"line_end":1264,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543840,"byte_end":543846,"line_start":1265,"line_end":1265,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543847,"byte_end":543850,"line_start":1266,"line_end":1266,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_f32(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543851,"byte_end":543927,"line_start":1267,"line_end":1267,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(le_f32(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":543928,"byte_end":544012,"line_start":1268,"line_end":1268,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":544013,"byte_end":544020,"line_start":1269,"line_end":1269,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":544021,"byte_end":544030,"line_start":1270,"line_end":1270,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2358},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":545459,"byte_end":545462,"line_start":1310,"line_end":1310,"column_start":8,"column_end":11},"name":"f64","qualname":"::number::complete::f64","value":"pub fn f64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, f64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an 8 byte floating point number","sig":null,"attributes":[{"value":"/ Recognizes an 8 byte floating point number","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":544492,"byte_end":544538,"line_start":1285,"line_end":1285,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":544539,"byte_end":544542,"line_start":1286,"line_end":1286,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian f64 float,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":544543,"byte_end":544620,"line_start":1287,"line_end":1287,"column_start":1,"column_end":78}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian f64 float.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":544621,"byte_end":544696,"line_start":1288,"line_end":1288,"column_start":1,"column_end":76}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":544697,"byte_end":544771,"line_start":1289,"line_end":1289,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":544772,"byte_end":544783,"line_start":1290,"line_end":1290,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":544784,"byte_end":544831,"line_start":1291,"line_end":1291,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":544832,"byte_end":544860,"line_start":1292,"line_end":1292,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::f64;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":544861,"byte_end":544896,"line_start":1293,"line_end":1293,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":544897,"byte_end":544900,"line_start":1294,"line_end":1294,"column_start":1,"column_end":4}},{"value":"/ let be_f64 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":544901,"byte_end":544923,"line_start":1295,"line_end":1295,"column_start":1,"column_end":23}},{"value":"/   f64(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":544924,"byte_end":544966,"line_start":1296,"line_end":1296,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":544967,"byte_end":544973,"line_start":1297,"line_end":1297,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":544974,"byte_end":544977,"line_start":1298,"line_end":1298,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_f64(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":544978,"byte_end":545078,"line_start":1299,"line_end":1299,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(be_f64(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":545079,"byte_end":545163,"line_start":1300,"line_end":1300,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":545164,"byte_end":545167,"line_start":1301,"line_end":1301,"column_start":1,"column_end":4}},{"value":"/ let le_f64 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":545168,"byte_end":545190,"line_start":1302,"line_end":1302,"column_start":1,"column_end":23}},{"value":"/   f64(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":545191,"byte_end":545236,"line_start":1303,"line_end":1303,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":545237,"byte_end":545243,"line_start":1304,"line_end":1304,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":545244,"byte_end":545247,"line_start":1305,"line_end":1305,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_f64(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x40][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":545248,"byte_end":545348,"line_start":1306,"line_end":1306,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(le_f64(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":545349,"byte_end":545433,"line_start":1307,"line_end":1307,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":545434,"byte_end":545441,"line_start":1308,"line_end":1308,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":545442,"byte_end":545451,"line_start":1309,"line_end":1309,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2361},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":546459,"byte_end":546466,"line_start":1341,"line_end":1341,"column_start":8,"column_end":15},"name":"hex_u32","qualname":"::number::complete::hex_u32","value":"pub fn hex_u32<'a, E: ParseError<&'a [u8]>>(&'a [u8])\n-> IResult<&'a [u8], u32, E>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a hex-encoded integer.","sig":null,"attributes":[{"value":"/ Recognizes a hex-encoded integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":545913,"byte_end":545950,"line_start":1324,"line_end":1324,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":545951,"byte_end":545954,"line_start":1325,"line_end":1325,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will parse until the end of input if it has less than 8 bytes.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":545955,"byte_end":546041,"line_start":1326,"line_end":1326,"column_start":1,"column_end":87}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":546042,"byte_end":546053,"line_start":1327,"line_end":1327,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":546054,"byte_end":546101,"line_start":1328,"line_end":1328,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":546102,"byte_end":546130,"line_start":1329,"line_end":1329,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::hex_u32;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":546131,"byte_end":546170,"line_start":1330,"line_end":1330,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":546171,"byte_end":546174,"line_start":1331,"line_end":1331,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":546175,"byte_end":546197,"line_start":1332,"line_end":1332,"column_start":1,"column_end":23}},{"value":"/   hex_u32(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":546198,"byte_end":546214,"line_start":1333,"line_end":1333,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":546215,"byte_end":546221,"line_start":1334,"line_end":1334,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":546222,"byte_end":546225,"line_start":1335,"line_end":1335,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"01AE\"[..]), Ok((&b\"\"[..], 0x01AE)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":546226,"byte_end":546287,"line_start":1336,"line_end":1336,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Ok((&b\"\"[..], 0x0ABC)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":546288,"byte_end":546348,"line_start":1337,"line_end":1337,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(parser(&b\"ggg\"[..]), Err(Err::Error((&b\"ggg\"[..], ErrorKind::IsA))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":546349,"byte_end":546433,"line_start":1338,"line_end":1338,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":546434,"byte_end":546441,"line_start":1339,"line_end":1339,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":546442,"byte_end":546451,"line_start":1340,"line_end":1340,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":6089},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":547641,"byte_end":547656,"line_start":1383,"line_end":1383,"column_start":8,"column_end":23},"name":"recognize_float","qualname":"::number::complete::recognize_float","value":"pub fn recognize_float<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter, <T as InputIter>::Item: AsChar, T: InputTakeAtPosition,\n<T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a byte string and returns the corresponding slice.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in a byte string and returns the corresponding slice.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":546989,"byte_end":547079,"line_start":1363,"line_end":1363,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":547080,"byte_end":547083,"line_start":1364,"line_end":1364,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Can parse until the end of input.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":547084,"byte_end":547141,"line_start":1365,"line_end":1365,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":547142,"byte_end":547145,"line_start":1366,"line_end":1366,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":547146,"byte_end":547157,"line_start":1367,"line_end":1367,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":547158,"byte_end":547205,"line_start":1368,"line_end":1368,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":547206,"byte_end":547234,"line_start":1369,"line_end":1369,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::recognize_float;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":547235,"byte_end":547282,"line_start":1370,"line_end":1370,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":547283,"byte_end":547286,"line_start":1371,"line_end":1371,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":547287,"byte_end":547309,"line_start":1372,"line_end":1372,"column_start":1,"column_end":23}},{"value":"/   recognize_float(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":547310,"byte_end":547334,"line_start":1373,"line_end":1373,"column_start":1,"column_end":25}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":547335,"byte_end":547341,"line_start":1374,"line_end":1374,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":547342,"byte_end":547345,"line_start":1375,"line_end":1375,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1\"), Ok((\"\", \"11e-1\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":547346,"byte_end":547397,"line_start":1376,"line_end":1376,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"123E-02\"), Ok((\"\", \"123E-02\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":547398,"byte_end":547453,"line_start":1377,"line_end":1377,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", \"123\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":547454,"byte_end":547509,"line_start":1378,"line_end":1378,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Char))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":547510,"byte_end":547583,"line_start":1379,"line_end":1379,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":547584,"byte_end":547591,"line_start":1380,"line_end":1380,"column_start":1,"column_end":8}},{"value":"allow(unused_imports)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":547592,"byte_end":547616,"line_start":1381,"line_end":1381,"column_start":1,"column_end":25}},{"value":"rustfmt::skip","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":547617,"byte_end":547633,"line_start":1382,"line_end":1382,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":2365},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":550102,"byte_end":550107,"line_start":1465,"line_end":1465,"column_start":8,"column_end":13},"name":"float","qualname":"::number::complete::float","value":"pub fn float<T, E: ParseError<T>>(T) -> IResult<T, f32, E> where\nT: crate::traits::AsBytes + InputLength + Slice<RangeFrom<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a byte string and returns a f32.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in a byte string and returns a f32.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":549373,"byte_end":549445,"line_start":1444,"line_end":1444,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":549446,"byte_end":549449,"line_start":1445,"line_end":1445,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Can parse until the end of input.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":549450,"byte_end":549507,"line_start":1446,"line_end":1446,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":549508,"byte_end":549511,"line_start":1447,"line_end":1447,"column_start":1,"column_end":4}},{"value":"/ This function uses the `lexical-core` crate for float parsing by default, you","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":549512,"byte_end":549593,"line_start":1448,"line_end":1448,"column_start":1,"column_end":82}},{"value":"/ can deactivate it by removing the \"lexical\" feature.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":549594,"byte_end":549650,"line_start":1449,"line_end":1449,"column_start":1,"column_end":57}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":549651,"byte_end":549662,"line_start":1450,"line_end":1450,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":549663,"byte_end":549710,"line_start":1451,"line_end":1451,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":549711,"byte_end":549739,"line_start":1452,"line_end":1452,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::float;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":549740,"byte_end":549777,"line_start":1453,"line_end":1453,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":549778,"byte_end":549781,"line_start":1454,"line_end":1454,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":549782,"byte_end":549804,"line_start":1455,"line_end":1455,"column_start":1,"column_end":23}},{"value":"/   float(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":549805,"byte_end":549819,"line_start":1456,"line_end":1456,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":549820,"byte_end":549826,"line_start":1457,"line_end":1457,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":549827,"byte_end":549830,"line_start":1458,"line_end":1458,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"1.1\"), Ok((\"\", 1.1)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":549831,"byte_end":549876,"line_start":1459,"line_end":1459,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"123E-02\"), Ok((\"\", 1.23)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":549877,"byte_end":549927,"line_start":1460,"line_end":1460,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":549928,"byte_end":549983,"line_start":1461,"line_end":1461,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Float))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":549984,"byte_end":550058,"line_start":1462,"line_end":1462,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":550059,"byte_end":550066,"line_start":1463,"line_end":1463,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"lexical\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":550067,"byte_end":550094,"line_start":1464,"line_end":1464,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":2368},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":552289,"byte_end":552295,"line_start":1532,"line_end":1532,"column_start":8,"column_end":14},"name":"double","qualname":"::number::complete::double","value":"pub fn double<T, E: ParseError<T>>(T) -> IResult<T, f64, E> where\nT: crate::traits::AsBytes + InputLength + Slice<RangeFrom<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a byte string and returns a f64.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in a byte string and returns a f64.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":551558,"byte_end":551630,"line_start":1511,"line_end":1511,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":551631,"byte_end":551634,"line_start":1512,"line_end":1512,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Can parse until the end of input.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":551635,"byte_end":551692,"line_start":1513,"line_end":1513,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":551693,"byte_end":551696,"line_start":1514,"line_end":1514,"column_start":1,"column_end":4}},{"value":"/ This function uses the `lexical-core` crate for float parsing by default, you","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":551697,"byte_end":551778,"line_start":1515,"line_end":1515,"column_start":1,"column_end":82}},{"value":"/ can deactivate it by removing the \"lexical\" feature.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":551779,"byte_end":551835,"line_start":1516,"line_end":1516,"column_start":1,"column_end":57}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":551836,"byte_end":551847,"line_start":1517,"line_end":1517,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":551848,"byte_end":551895,"line_start":1518,"line_end":1518,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":551896,"byte_end":551924,"line_start":1519,"line_end":1519,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::double;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":551925,"byte_end":551963,"line_start":1520,"line_end":1520,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":551964,"byte_end":551967,"line_start":1521,"line_end":1521,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":551968,"byte_end":551990,"line_start":1522,"line_end":1522,"column_start":1,"column_end":23}},{"value":"/   double(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":551991,"byte_end":552006,"line_start":1523,"line_end":1523,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":552007,"byte_end":552013,"line_start":1524,"line_end":1524,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":552014,"byte_end":552017,"line_start":1525,"line_end":1525,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"1.1\"), Ok((\"\", 1.1)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":552018,"byte_end":552063,"line_start":1526,"line_end":1526,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"123E-02\"), Ok((\"\", 1.23)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":552064,"byte_end":552114,"line_start":1527,"line_end":1527,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":552115,"byte_end":552170,"line_start":1528,"line_end":1528,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Float))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":552171,"byte_end":552245,"line_start":1529,"line_end":1529,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":552246,"byte_end":552253,"line_start":1530,"line_end":1530,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"lexical\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/complete.rs","byte_start":552254,"byte_end":552281,"line_start":1531,"line_end":1531,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":2371},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streaming","qualname":"::number::streaming","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","parent":null,"children":[{"krate":0,"index":2372},{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":2376},{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2402},{"krate":0,"index":2405},{"krate":0,"index":2408},{"krate":0,"index":2411},{"krate":0,"index":2414},{"krate":0,"index":2417},{"krate":0,"index":2420},{"krate":0,"index":2423},{"krate":0,"index":2426},{"krate":0,"index":2429},{"krate":0,"index":2432},{"krate":0,"index":2435},{"krate":0,"index":2438},{"krate":0,"index":2441},{"krate":0,"index":2444},{"krate":0,"index":2447},{"krate":0,"index":2450},{"krate":0,"index":2453},{"krate":0,"index":2456},{"krate":0,"index":2459},{"krate":0,"index":2462},{"krate":0,"index":2465},{"krate":0,"index":2468},{"krate":0,"index":2471},{"krate":0,"index":2474},{"krate":0,"index":2477},{"krate":0,"index":2480},{"krate":0,"index":2483},{"krate":0,"index":2486},{"krate":0,"index":2489},{"krate":0,"index":2492},{"krate":0,"index":2495},{"krate":0,"index":2498},{"krate":0,"index":2501},{"krate":0,"index":2504},{"krate":0,"index":2507},{"krate":0,"index":2510},{"krate":0,"index":2513},{"krate":0,"index":2516},{"krate":0,"index":2519},{"krate":0,"index":2522},{"krate":0,"index":2525},{"krate":0,"index":6120},{"krate":0,"index":2529},{"krate":0,"index":2532}],"decl_id":null,"docs":" Parsers recognizing numbers, streaming version\n","sig":null,"attributes":[{"value":"/ Parsers recognizing numbers, streaming version","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":562625,"byte_end":562675,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":2399},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":563553,"byte_end":563558,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"be_u8","qualname":"::number::streaming::be_u8","value":"pub fn be_u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":563063,"byte_end":563105,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":563106,"byte_end":563109,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":563110,"byte_end":563206,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":563207,"byte_end":563218,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":563219,"byte_end":563266,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u8;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":563267,"byte_end":563305,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":563306,"byte_end":563309,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":563310,"byte_end":563332,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/   be_u8::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":563333,"byte_end":563368,"line_start":21,"line_end":21,"column_start":1,"column_end":36}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":563369,"byte_end":563375,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":563376,"byte_end":563379,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":563380,"byte_end":563455,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":563456,"byte_end":563527,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":563528,"byte_end":563535,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":563536,"byte_end":563545,"line_start":27,"line_end":27,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2402},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":564401,"byte_end":564407,"line_start":58,"line_end":58,"column_start":8,"column_end":14},"name":"be_u16","qualname":"::number::streaming::be_u16","value":"pub fn be_u16<I, E: ParseError<I>>(I) -> IResult<I, u16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 2 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":563892,"byte_end":563945,"line_start":42,"line_end":42,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":563946,"byte_end":563949,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":563950,"byte_end":564046,"line_start":44,"line_end":44,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":564047,"byte_end":564050,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":564051,"byte_end":564062,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":564063,"byte_end":564110,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u16;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":564111,"byte_end":564150,"line_start":48,"line_end":48,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":564151,"byte_end":564154,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":564155,"byte_end":564177,"line_start":50,"line_end":50,"column_start":1,"column_end":23}},{"value":"/   be_u16::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":564178,"byte_end":564214,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":564215,"byte_end":564221,"line_start":52,"line_end":52,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":564222,"byte_end":564225,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":564226,"byte_end":564299,"line_start":54,"line_end":54,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":564300,"byte_end":564375,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":564376,"byte_end":564383,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":564384,"byte_end":564393,"line_start":57,"line_end":57,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2405},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":565347,"byte_end":565353,"line_start":91,"line_end":91,"column_start":8,"column_end":14},"name":"be_u24","qualname":"::number::streaming::be_u24","value":"pub fn be_u24<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 3 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 3 byte integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":564833,"byte_end":564885,"line_start":75,"line_end":75,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":564886,"byte_end":564889,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":564890,"byte_end":564986,"line_start":77,"line_end":77,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":564987,"byte_end":564990,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":564991,"byte_end":565002,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":565003,"byte_end":565050,"line_start":80,"line_end":80,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u24;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":565051,"byte_end":565090,"line_start":81,"line_end":81,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":565091,"byte_end":565094,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":565095,"byte_end":565117,"line_start":83,"line_end":83,"column_start":1,"column_end":23}},{"value":"/   be_u24::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":565118,"byte_end":565154,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":565155,"byte_end":565161,"line_start":85,"line_end":85,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":565162,"byte_end":565165,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x000102)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":565166,"byte_end":565245,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":565246,"byte_end":565321,"line_start":88,"line_end":88,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":565322,"byte_end":565329,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":565330,"byte_end":565339,"line_start":90,"line_end":90,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2408},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":566300,"byte_end":566306,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"be_u32","qualname":"::number::streaming::be_u32","value":"pub fn be_u32<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 4 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":565779,"byte_end":565832,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":565833,"byte_end":565836,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":565837,"byte_end":565933,"line_start":110,"line_end":110,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":565934,"byte_end":565937,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":565938,"byte_end":565949,"line_start":112,"line_end":112,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":565950,"byte_end":565997,"line_start":113,"line_end":113,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u32;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":565998,"byte_end":566037,"line_start":114,"line_end":114,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":566038,"byte_end":566041,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":566042,"byte_end":566064,"line_start":116,"line_end":116,"column_start":1,"column_end":23}},{"value":"/   be_u32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":566065,"byte_end":566101,"line_start":117,"line_end":117,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":566102,"byte_end":566108,"line_start":118,"line_end":118,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":566109,"byte_end":566112,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":566113,"byte_end":566198,"line_start":120,"line_end":120,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":566199,"byte_end":566274,"line_start":121,"line_end":121,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":566275,"byte_end":566282,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":566283,"byte_end":566292,"line_start":123,"line_end":123,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2411},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":567277,"byte_end":567283,"line_start":157,"line_end":157,"column_start":8,"column_end":14},"name":"be_u64","qualname":"::number::streaming::be_u64","value":"pub fn be_u64<I, E: ParseError<I>>(I) -> IResult<I, u64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 8 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":566732,"byte_end":566785,"line_start":141,"line_end":141,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":566786,"byte_end":566789,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":566790,"byte_end":566886,"line_start":143,"line_end":143,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":566887,"byte_end":566890,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":566891,"byte_end":566902,"line_start":145,"line_end":145,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":566903,"byte_end":566950,"line_start":146,"line_end":146,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u64;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":566951,"byte_end":566990,"line_start":147,"line_end":147,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":566991,"byte_end":566994,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":566995,"byte_end":567017,"line_start":149,"line_end":149,"column_start":1,"column_end":23}},{"value":"/   be_u64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":567018,"byte_end":567054,"line_start":150,"line_end":150,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":567055,"byte_end":567061,"line_start":151,"line_end":151,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":567062,"byte_end":567065,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001020304050607)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":567066,"byte_end":567175,"line_start":153,"line_end":153,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":567176,"byte_end":567251,"line_start":154,"line_end":154,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":567252,"byte_end":567259,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":567260,"byte_end":567269,"line_start":156,"line_end":156,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2414},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":568322,"byte_end":568329,"line_start":190,"line_end":190,"column_start":8,"column_end":15},"name":"be_u128","qualname":"::number::streaming::be_u128","value":"pub fn be_u128<I, E: ParseError<I>>(I) -> IResult<I, u128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 16 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":567709,"byte_end":567763,"line_start":174,"line_end":174,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":567764,"byte_end":567767,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":567768,"byte_end":567864,"line_start":176,"line_end":176,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":567865,"byte_end":567876,"line_start":177,"line_end":177,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":567877,"byte_end":567924,"line_start":178,"line_end":178,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u128;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":567925,"byte_end":567965,"line_start":179,"line_end":179,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":567966,"byte_end":567969,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":567970,"byte_end":567992,"line_start":181,"line_end":181,"column_start":1,"column_end":23}},{"value":"/   be_u128::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":567993,"byte_end":568030,"line_start":182,"line_end":182,"column_start":1,"column_end":38}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":568031,"byte_end":568037,"line_start":183,"line_end":183,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":568038,"byte_end":568041,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203040506070809101112131415)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":568042,"byte_end":568199,"line_start":185,"line_end":185,"column_start":1,"column_end":158}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":568200,"byte_end":568276,"line_start":186,"line_end":186,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":568277,"byte_end":568284,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":568285,"byte_end":568294,"line_start":188,"line_end":188,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":568295,"byte_end":568314,"line_start":189,"line_end":189,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2417},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":569225,"byte_end":569230,"line_start":220,"line_end":220,"column_start":8,"column_end":13},"name":"be_i8","qualname":"::number::streaming::be_i8","value":"pub fn be_i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":568759,"byte_end":568798,"line_start":207,"line_end":207,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":568799,"byte_end":568802,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":568803,"byte_end":568899,"line_start":209,"line_end":209,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":568900,"byte_end":568911,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":568912,"byte_end":568959,"line_start":211,"line_end":211,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i8;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":568960,"byte_end":568998,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":568999,"byte_end":569002,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i8::<_, (_, ErrorKind)>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":569003,"byte_end":569047,"line_start":214,"line_end":214,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":569048,"byte_end":569051,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":569052,"byte_end":569127,"line_start":216,"line_end":216,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":569128,"byte_end":569199,"line_start":217,"line_end":217,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":569200,"byte_end":569207,"line_start":218,"line_end":218,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":569208,"byte_end":569217,"line_start":219,"line_end":219,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2420},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":569873,"byte_end":569879,"line_start":240,"line_end":240,"column_start":8,"column_end":14},"name":"be_i16","qualname":"::number::streaming::be_i16","value":"pub fn be_i16<I, E: ParseError<I>>(I) -> IResult<I, i16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 2 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":569395,"byte_end":569446,"line_start":227,"line_end":227,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":569447,"byte_end":569450,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":569451,"byte_end":569547,"line_start":229,"line_end":229,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":569548,"byte_end":569559,"line_start":230,"line_end":230,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":569560,"byte_end":569607,"line_start":231,"line_end":231,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i16;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":569608,"byte_end":569647,"line_start":232,"line_end":232,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":569648,"byte_end":569651,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i16::<_, (_, ErrorKind)>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":569652,"byte_end":569697,"line_start":234,"line_end":234,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":569698,"byte_end":569701,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":569702,"byte_end":569775,"line_start":236,"line_end":236,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":569776,"byte_end":569847,"line_start":237,"line_end":237,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":569848,"byte_end":569855,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":569856,"byte_end":569865,"line_start":239,"line_end":239,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2423},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":570531,"byte_end":570537,"line_start":260,"line_end":260,"column_start":8,"column_end":14},"name":"be_i24","qualname":"::number::streaming::be_i24","value":"pub fn be_i24<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 3 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":570047,"byte_end":570098,"line_start":247,"line_end":247,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":570099,"byte_end":570102,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":570103,"byte_end":570199,"line_start":249,"line_end":249,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":570200,"byte_end":570211,"line_start":250,"line_end":250,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":570212,"byte_end":570259,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i24;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":570260,"byte_end":570299,"line_start":252,"line_end":252,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":570300,"byte_end":570303,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i24::<_, (_, ErrorKind)>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":570304,"byte_end":570349,"line_start":254,"line_end":254,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":570350,"byte_end":570353,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x000102)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":570354,"byte_end":570433,"line_start":256,"line_end":256,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":570434,"byte_end":570505,"line_start":257,"line_end":257,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":570506,"byte_end":570513,"line_start":258,"line_end":258,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":570514,"byte_end":570523,"line_start":259,"line_end":259,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2426},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571345,"byte_end":571351,"line_start":285,"line_end":285,"column_start":8,"column_end":14},"name":"be_i32","qualname":"::number::streaming::be_i32","value":"pub fn be_i32<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 4 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":570855,"byte_end":570906,"line_start":272,"line_end":272,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":570907,"byte_end":570910,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":570911,"byte_end":571007,"line_start":274,"line_end":274,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571008,"byte_end":571019,"line_start":275,"line_end":275,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571020,"byte_end":571067,"line_start":276,"line_end":276,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i32;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571068,"byte_end":571107,"line_start":277,"line_end":277,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571108,"byte_end":571111,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i32::<_, (_, ErrorKind)>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571112,"byte_end":571157,"line_start":279,"line_end":279,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571158,"byte_end":571161,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571162,"byte_end":571247,"line_start":281,"line_end":281,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(4))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571248,"byte_end":571319,"line_start":282,"line_end":282,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571320,"byte_end":571327,"line_start":283,"line_end":283,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571328,"byte_end":571337,"line_start":284,"line_end":284,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2429},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":572041,"byte_end":572047,"line_start":306,"line_end":306,"column_start":8,"column_end":14},"name":"be_i64","qualname":"::number::streaming::be_i64","value":"pub fn be_i64<I, E: ParseError<I>>(I) -> IResult<I, i64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 8 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571519,"byte_end":571570,"line_start":292,"line_end":292,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571571,"byte_end":571574,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571575,"byte_end":571671,"line_start":294,"line_end":294,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571672,"byte_end":571675,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571676,"byte_end":571687,"line_start":296,"line_end":296,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571688,"byte_end":571735,"line_start":297,"line_end":297,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i64;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571736,"byte_end":571775,"line_start":298,"line_end":298,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571776,"byte_end":571779,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i64::<_, (_, ErrorKind)>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571780,"byte_end":571825,"line_start":300,"line_end":300,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571826,"byte_end":571829,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001020304050607)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571830,"byte_end":571939,"line_start":302,"line_end":302,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":571940,"byte_end":572015,"line_start":303,"line_end":303,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":572016,"byte_end":572023,"line_start":304,"line_end":304,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":572024,"byte_end":572033,"line_start":305,"line_end":305,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2432},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":572805,"byte_end":572812,"line_start":327,"line_end":327,"column_start":8,"column_end":15},"name":"be_i128","qualname":"::number::streaming::be_i128","value":"pub fn be_i128<I, E: ParseError<I>>(I) -> IResult<I, i128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 16 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":572215,"byte_end":572267,"line_start":313,"line_end":313,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":572268,"byte_end":572271,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":572272,"byte_end":572368,"line_start":315,"line_end":315,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":572369,"byte_end":572380,"line_start":316,"line_end":316,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":572381,"byte_end":572428,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i128;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":572429,"byte_end":572469,"line_start":318,"line_end":318,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":572470,"byte_end":572473,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i128::<_, (_, ErrorKind)>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":572474,"byte_end":572520,"line_start":320,"line_end":320,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":572521,"byte_end":572524,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203040506070809101112131415)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":572525,"byte_end":572682,"line_start":322,"line_end":322,"column_start":1,"column_end":158}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":572683,"byte_end":572759,"line_start":323,"line_end":323,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":572760,"byte_end":572767,"line_start":324,"line_end":324,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":572768,"byte_end":572777,"line_start":325,"line_end":325,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":572778,"byte_end":572797,"line_start":326,"line_end":326,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2435},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":573452,"byte_end":573457,"line_start":347,"line_end":347,"column_start":8,"column_end":13},"name":"le_u8","qualname":"::number::streaming::le_u8","value":"pub fn le_u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":572983,"byte_end":573025,"line_start":334,"line_end":334,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":573026,"byte_end":573029,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":573030,"byte_end":573126,"line_start":336,"line_end":336,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":573127,"byte_end":573138,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":573139,"byte_end":573186,"line_start":338,"line_end":338,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u8;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":573187,"byte_end":573225,"line_start":339,"line_end":339,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":573226,"byte_end":573229,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ let parser = le_u8::<_, (_, ErrorKind)>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":573230,"byte_end":573274,"line_start":341,"line_end":341,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":573275,"byte_end":573278,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":573279,"byte_end":573354,"line_start":343,"line_end":343,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":573355,"byte_end":573426,"line_start":344,"line_end":344,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":573427,"byte_end":573434,"line_start":345,"line_end":345,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":573435,"byte_end":573444,"line_start":346,"line_end":346,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2438},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":574303,"byte_end":574309,"line_start":377,"line_end":377,"column_start":8,"column_end":14},"name":"le_u16","qualname":"::number::streaming::le_u16","value":"pub fn le_u16<I, E: ParseError<I>>(I) -> IResult<I, u16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 2 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":573791,"byte_end":573847,"line_start":361,"line_end":361,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":573848,"byte_end":573851,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":573852,"byte_end":573948,"line_start":363,"line_end":363,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":573949,"byte_end":573952,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":573953,"byte_end":573964,"line_start":365,"line_end":365,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":573965,"byte_end":574012,"line_start":366,"line_end":366,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u16;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":574013,"byte_end":574052,"line_start":367,"line_end":367,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":574053,"byte_end":574056,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":574057,"byte_end":574079,"line_start":369,"line_end":369,"column_start":1,"column_end":23}},{"value":"/   le_u16::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":574080,"byte_end":574116,"line_start":370,"line_end":370,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":574117,"byte_end":574123,"line_start":371,"line_end":371,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":574124,"byte_end":574127,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":574128,"byte_end":574201,"line_start":373,"line_end":373,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":574202,"byte_end":574277,"line_start":374,"line_end":374,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":574278,"byte_end":574285,"line_start":375,"line_end":375,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":574286,"byte_end":574295,"line_start":376,"line_end":376,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2441},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":575266,"byte_end":575272,"line_start":410,"line_end":410,"column_start":8,"column_end":14},"name":"le_u24","qualname":"::number::streaming::le_u24","value":"pub fn le_u24<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 3 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":574748,"byte_end":574804,"line_start":394,"line_end":394,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":574805,"byte_end":574808,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":574809,"byte_end":574905,"line_start":396,"line_end":396,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":574906,"byte_end":574909,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":574910,"byte_end":574921,"line_start":398,"line_end":398,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":574922,"byte_end":574969,"line_start":399,"line_end":399,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u24;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":574970,"byte_end":575009,"line_start":400,"line_end":400,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":575010,"byte_end":575013,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":575014,"byte_end":575036,"line_start":402,"line_end":402,"column_start":1,"column_end":23}},{"value":"/   le_u24::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":575037,"byte_end":575073,"line_start":403,"line_end":403,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":575074,"byte_end":575080,"line_start":404,"line_end":404,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":575081,"byte_end":575084,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x020100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":575085,"byte_end":575164,"line_start":406,"line_end":406,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":575165,"byte_end":575240,"line_start":407,"line_end":407,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":575241,"byte_end":575248,"line_start":408,"line_end":408,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":575249,"byte_end":575258,"line_start":409,"line_end":409,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2444},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":576235,"byte_end":576241,"line_start":443,"line_end":443,"column_start":8,"column_end":14},"name":"le_u32","qualname":"::number::streaming::le_u32","value":"pub fn le_u32<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 4 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":575711,"byte_end":575767,"line_start":427,"line_end":427,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":575768,"byte_end":575771,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":575772,"byte_end":575868,"line_start":429,"line_end":429,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":575869,"byte_end":575872,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":575873,"byte_end":575884,"line_start":431,"line_end":431,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":575885,"byte_end":575932,"line_start":432,"line_end":432,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u32;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":575933,"byte_end":575972,"line_start":433,"line_end":433,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":575973,"byte_end":575976,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":575977,"byte_end":575999,"line_start":435,"line_end":435,"column_start":1,"column_end":23}},{"value":"/   le_u32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":576000,"byte_end":576036,"line_start":436,"line_end":436,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":576037,"byte_end":576043,"line_start":437,"line_end":437,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":576044,"byte_end":576047,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x03020100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":576048,"byte_end":576133,"line_start":439,"line_end":439,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":576134,"byte_end":576209,"line_start":440,"line_end":440,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":576210,"byte_end":576217,"line_start":441,"line_end":441,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":576218,"byte_end":576227,"line_start":442,"line_end":442,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2447},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":577228,"byte_end":577234,"line_start":476,"line_end":476,"column_start":8,"column_end":14},"name":"le_u64","qualname":"::number::streaming::le_u64","value":"pub fn le_u64<I, E: ParseError<I>>(I) -> IResult<I, u64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 8 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":576680,"byte_end":576736,"line_start":460,"line_end":460,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":576737,"byte_end":576740,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":576741,"byte_end":576837,"line_start":462,"line_end":462,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":576838,"byte_end":576841,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":576842,"byte_end":576853,"line_start":464,"line_end":464,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":576854,"byte_end":576901,"line_start":465,"line_end":465,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u64;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":576902,"byte_end":576941,"line_start":466,"line_end":466,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":576942,"byte_end":576945,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":576946,"byte_end":576968,"line_start":468,"line_end":468,"column_start":1,"column_end":23}},{"value":"/   le_u64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":576969,"byte_end":577005,"line_start":469,"line_end":469,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":577006,"byte_end":577012,"line_start":470,"line_end":470,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":577013,"byte_end":577016,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0706050403020100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":577017,"byte_end":577126,"line_start":472,"line_end":472,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":577127,"byte_end":577202,"line_start":473,"line_end":473,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":577203,"byte_end":577210,"line_start":474,"line_end":474,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":577211,"byte_end":577220,"line_start":475,"line_end":475,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2450},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":578293,"byte_end":578300,"line_start":510,"line_end":510,"column_start":8,"column_end":15},"name":"le_u128","qualname":"::number::streaming::le_u128","value":"pub fn le_u128<I, E: ParseError<I>>(I) -> IResult<I, u128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 16 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":577673,"byte_end":577730,"line_start":493,"line_end":493,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":577731,"byte_end":577734,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":577735,"byte_end":577831,"line_start":495,"line_end":495,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":577832,"byte_end":577835,"line_start":496,"line_end":496,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":577836,"byte_end":577847,"line_start":497,"line_end":497,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":577848,"byte_end":577895,"line_start":498,"line_end":498,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u128;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":577896,"byte_end":577936,"line_start":499,"line_end":499,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":577937,"byte_end":577940,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":577941,"byte_end":577963,"line_start":501,"line_end":501,"column_start":1,"column_end":23}},{"value":"/   le_u128::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":577964,"byte_end":578001,"line_start":502,"line_end":502,"column_start":1,"column_end":38}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":578002,"byte_end":578008,"line_start":503,"line_end":503,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":578009,"byte_end":578012,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x15141312111009080706050403020100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":578013,"byte_end":578170,"line_start":505,"line_end":505,"column_start":1,"column_end":158}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":578171,"byte_end":578247,"line_start":506,"line_end":506,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":578248,"byte_end":578255,"line_start":507,"line_end":507,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":578256,"byte_end":578265,"line_start":508,"line_end":508,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":578266,"byte_end":578285,"line_start":509,"line_end":509,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2453},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579209,"byte_end":579214,"line_start":540,"line_end":540,"column_start":8,"column_end":13},"name":"le_i8","qualname":"::number::streaming::le_i8","value":"pub fn le_i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":578743,"byte_end":578782,"line_start":527,"line_end":527,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":578783,"byte_end":578786,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":578787,"byte_end":578883,"line_start":529,"line_end":529,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":578884,"byte_end":578895,"line_start":530,"line_end":530,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":578896,"byte_end":578943,"line_start":531,"line_end":531,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i8;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":578944,"byte_end":578982,"line_start":532,"line_end":532,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":578983,"byte_end":578986,"line_start":533,"line_end":533,"column_start":1,"column_end":4}},{"value":"/ let parser = le_i8::<_, (_, ErrorKind)>;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":578987,"byte_end":579031,"line_start":534,"line_end":534,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579032,"byte_end":579035,"line_start":535,"line_end":535,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579036,"byte_end":579111,"line_start":536,"line_end":536,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579112,"byte_end":579183,"line_start":537,"line_end":537,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579184,"byte_end":579191,"line_start":538,"line_end":538,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579192,"byte_end":579201,"line_start":539,"line_end":539,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2456},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579889,"byte_end":579895,"line_start":563,"line_end":563,"column_start":8,"column_end":14},"name":"le_i16","qualname":"::number::streaming::le_i16","value":"pub fn le_i16<I, E: ParseError<I>>(I) -> IResult<I, i16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 2 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579379,"byte_end":579433,"line_start":547,"line_end":547,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579434,"byte_end":579437,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579438,"byte_end":579534,"line_start":549,"line_end":549,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579535,"byte_end":579538,"line_start":550,"line_end":550,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579539,"byte_end":579550,"line_start":551,"line_end":551,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579551,"byte_end":579598,"line_start":552,"line_end":552,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i16;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579599,"byte_end":579638,"line_start":553,"line_end":553,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579639,"byte_end":579642,"line_start":554,"line_end":554,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579643,"byte_end":579665,"line_start":555,"line_end":555,"column_start":1,"column_end":23}},{"value":"/   le_i16::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579666,"byte_end":579702,"line_start":556,"line_end":556,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579703,"byte_end":579709,"line_start":557,"line_end":557,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579710,"byte_end":579713,"line_start":558,"line_end":558,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579714,"byte_end":579787,"line_start":559,"line_end":559,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579788,"byte_end":579863,"line_start":560,"line_end":560,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579864,"byte_end":579871,"line_start":561,"line_end":561,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":579872,"byte_end":579881,"line_start":562,"line_end":562,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2459},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":580579,"byte_end":580585,"line_start":586,"line_end":586,"column_start":8,"column_end":14},"name":"le_i24","qualname":"::number::streaming::le_i24","value":"pub fn le_i24<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 3 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":580063,"byte_end":580117,"line_start":570,"line_end":570,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":580118,"byte_end":580121,"line_start":571,"line_end":571,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":580122,"byte_end":580218,"line_start":572,"line_end":572,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":580219,"byte_end":580222,"line_start":573,"line_end":573,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":580223,"byte_end":580234,"line_start":574,"line_end":574,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":580235,"byte_end":580282,"line_start":575,"line_end":575,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i24;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":580283,"byte_end":580322,"line_start":576,"line_end":576,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":580323,"byte_end":580326,"line_start":577,"line_end":577,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":580327,"byte_end":580349,"line_start":578,"line_end":578,"column_start":1,"column_end":23}},{"value":"/   le_i24::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":580350,"byte_end":580386,"line_start":579,"line_end":579,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":580387,"byte_end":580393,"line_start":580,"line_end":580,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":580394,"byte_end":580397,"line_start":581,"line_end":581,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x020100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":580398,"byte_end":580477,"line_start":582,"line_end":582,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":580478,"byte_end":580553,"line_start":583,"line_end":583,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":580554,"byte_end":580561,"line_start":584,"line_end":584,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":580562,"byte_end":580571,"line_start":585,"line_end":585,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2462},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581425,"byte_end":581431,"line_start":614,"line_end":614,"column_start":8,"column_end":14},"name":"le_i32","qualname":"::number::streaming::le_i32","value":"pub fn le_i32<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 4 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":580903,"byte_end":580957,"line_start":598,"line_end":598,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":580958,"byte_end":580961,"line_start":599,"line_end":599,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":580962,"byte_end":581058,"line_start":600,"line_end":600,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581059,"byte_end":581062,"line_start":601,"line_end":601,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581063,"byte_end":581074,"line_start":602,"line_end":602,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581075,"byte_end":581122,"line_start":603,"line_end":603,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i32;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581123,"byte_end":581162,"line_start":604,"line_end":604,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581163,"byte_end":581166,"line_start":605,"line_end":605,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581167,"byte_end":581189,"line_start":606,"line_end":606,"column_start":1,"column_end":23}},{"value":"/   le_i32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581190,"byte_end":581226,"line_start":607,"line_end":607,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581227,"byte_end":581233,"line_start":608,"line_end":608,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581234,"byte_end":581237,"line_start":609,"line_end":609,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x03020100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581238,"byte_end":581323,"line_start":610,"line_end":610,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581324,"byte_end":581399,"line_start":611,"line_end":611,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581400,"byte_end":581407,"line_start":612,"line_end":612,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581408,"byte_end":581417,"line_start":613,"line_end":613,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2465},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582145,"byte_end":582151,"line_start":637,"line_end":637,"column_start":8,"column_end":14},"name":"le_i64","qualname":"::number::streaming::le_i64","value":"pub fn le_i64<I, E: ParseError<I>>(I) -> IResult<I, i64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 8 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581599,"byte_end":581653,"line_start":621,"line_end":621,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581654,"byte_end":581657,"line_start":622,"line_end":622,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581658,"byte_end":581754,"line_start":623,"line_end":623,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581755,"byte_end":581758,"line_start":624,"line_end":624,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581759,"byte_end":581770,"line_start":625,"line_end":625,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581771,"byte_end":581818,"line_start":626,"line_end":626,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i64;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581819,"byte_end":581858,"line_start":627,"line_end":627,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581859,"byte_end":581862,"line_start":628,"line_end":628,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581863,"byte_end":581885,"line_start":629,"line_end":629,"column_start":1,"column_end":23}},{"value":"/   le_i64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581886,"byte_end":581922,"line_start":630,"line_end":630,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581923,"byte_end":581929,"line_start":631,"line_end":631,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581930,"byte_end":581933,"line_start":632,"line_end":632,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0706050403020100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":581934,"byte_end":582043,"line_start":633,"line_end":633,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582044,"byte_end":582119,"line_start":634,"line_end":634,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582120,"byte_end":582127,"line_start":635,"line_end":635,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582128,"byte_end":582137,"line_start":636,"line_end":636,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2468},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582937,"byte_end":582944,"line_start":661,"line_end":661,"column_start":8,"column_end":15},"name":"le_i128","qualname":"::number::streaming::le_i128","value":"pub fn le_i128<I, E: ParseError<I>>(I) -> IResult<I, i128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 16 bytes integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582319,"byte_end":582374,"line_start":644,"line_end":644,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582375,"byte_end":582378,"line_start":645,"line_end":645,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582379,"byte_end":582475,"line_start":646,"line_end":646,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582476,"byte_end":582479,"line_start":647,"line_end":647,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582480,"byte_end":582491,"line_start":648,"line_end":648,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582492,"byte_end":582539,"line_start":649,"line_end":649,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i128;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582540,"byte_end":582580,"line_start":650,"line_end":650,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582581,"byte_end":582584,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582585,"byte_end":582607,"line_start":652,"line_end":652,"column_start":1,"column_end":23}},{"value":"/   le_i128::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582608,"byte_end":582645,"line_start":653,"line_end":653,"column_start":1,"column_end":38}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582646,"byte_end":582652,"line_start":654,"line_end":654,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582653,"byte_end":582656,"line_start":655,"line_end":655,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x15141312111009080706050403020100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582657,"byte_end":582814,"line_start":656,"line_end":656,"column_start":1,"column_end":158}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582815,"byte_end":582891,"line_start":657,"line_end":657,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582892,"byte_end":582899,"line_start":658,"line_end":658,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582900,"byte_end":582909,"line_start":659,"line_end":659,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":582910,"byte_end":582929,"line_start":660,"line_end":660,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2471},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":583690,"byte_end":583692,"line_start":685,"line_end":685,"column_start":8,"column_end":10},"name":"u8","qualname":"::number::streaming::u8","value":"pub fn u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":583115,"byte_end":583156,"line_start":668,"line_end":668,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":583157,"byte_end":583160,"line_start":669,"line_end":669,"column_start":1,"column_end":4}},{"value":"/ Note that endianness does not apply to 1 byte numbers.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":583161,"byte_end":583219,"line_start":670,"line_end":670,"column_start":1,"column_end":59}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":583220,"byte_end":583316,"line_start":671,"line_end":671,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":583317,"byte_end":583328,"line_start":672,"line_end":672,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":583329,"byte_end":583376,"line_start":673,"line_end":673,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":583377,"byte_end":583405,"line_start":674,"line_end":674,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u8;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":583406,"byte_end":583441,"line_start":675,"line_end":675,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":583442,"byte_end":583445,"line_start":676,"line_end":676,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":583446,"byte_end":583468,"line_start":677,"line_end":677,"column_start":1,"column_end":23}},{"value":"/   u8::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":583469,"byte_end":583501,"line_start":678,"line_end":678,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":583502,"byte_end":583508,"line_start":679,"line_end":679,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":583509,"byte_end":583512,"line_start":680,"line_end":680,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":583513,"byte_end":583592,"line_start":681,"line_end":681,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":583593,"byte_end":583664,"line_start":682,"line_end":682,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":583665,"byte_end":583672,"line_start":683,"line_end":683,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":583673,"byte_end":583682,"line_start":684,"line_end":684,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2474},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584998,"byte_end":585001,"line_start":725,"line_end":725,"column_start":8,"column_end":11},"name":"u16","qualname":"::number::streaming::u16","value":"pub fn u16<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u16, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 2 bytes integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 2 bytes integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584026,"byte_end":584068,"line_start":699,"line_end":699,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584069,"byte_end":584072,"line_start":700,"line_end":700,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian u16 integer,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584073,"byte_end":584152,"line_start":701,"line_end":701,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian u16 integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584153,"byte_end":584230,"line_start":702,"line_end":702,"column_start":1,"column_end":78}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584231,"byte_end":584327,"line_start":703,"line_end":703,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584328,"byte_end":584331,"line_start":704,"line_end":704,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584332,"byte_end":584343,"line_start":705,"line_end":705,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584344,"byte_end":584391,"line_start":706,"line_end":706,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584392,"byte_end":584420,"line_start":707,"line_end":707,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u16;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584421,"byte_end":584457,"line_start":708,"line_end":708,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584458,"byte_end":584461,"line_start":709,"line_end":709,"column_start":1,"column_end":4}},{"value":"/ let be_u16 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584462,"byte_end":584484,"line_start":710,"line_end":710,"column_start":1,"column_end":23}},{"value":"/   u16::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584485,"byte_end":584548,"line_start":711,"line_end":711,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584549,"byte_end":584555,"line_start":712,"line_end":712,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584556,"byte_end":584559,"line_start":713,"line_end":713,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584560,"byte_end":584637,"line_start":714,"line_end":714,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(be_u16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584638,"byte_end":584713,"line_start":715,"line_end":715,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584714,"byte_end":584717,"line_start":716,"line_end":716,"column_start":1,"column_end":4}},{"value":"/ let le_u16 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584718,"byte_end":584740,"line_start":717,"line_end":717,"column_start":1,"column_end":23}},{"value":"/   u16::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584741,"byte_end":584807,"line_start":718,"line_end":718,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584808,"byte_end":584814,"line_start":719,"line_end":719,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584815,"byte_end":584818,"line_start":720,"line_end":720,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584819,"byte_end":584896,"line_start":721,"line_end":721,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(le_u16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584897,"byte_end":584972,"line_start":722,"line_end":722,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584973,"byte_end":584980,"line_start":723,"line_end":723,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":584981,"byte_end":584990,"line_start":724,"line_end":724,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2477},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":586430,"byte_end":586433,"line_start":764,"line_end":764,"column_start":8,"column_end":11},"name":"u24","qualname":"::number::streaming::u24","value":"pub fn u24<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 3 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 3 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":585452,"byte_end":585493,"line_start":739,"line_end":739,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":585494,"byte_end":585497,"line_start":740,"line_end":740,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian u24 integer,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":585498,"byte_end":585577,"line_start":741,"line_end":741,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian u24 integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":585578,"byte_end":585655,"line_start":742,"line_end":742,"column_start":1,"column_end":78}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":585656,"byte_end":585752,"line_start":743,"line_end":743,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":585753,"byte_end":585764,"line_start":744,"line_end":744,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":585765,"byte_end":585812,"line_start":745,"line_end":745,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":585813,"byte_end":585841,"line_start":746,"line_end":746,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u24;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":585842,"byte_end":585878,"line_start":747,"line_end":747,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":585879,"byte_end":585882,"line_start":748,"line_end":748,"column_start":1,"column_end":4}},{"value":"/ let be_u24 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":585883,"byte_end":585905,"line_start":749,"line_end":749,"column_start":1,"column_end":23}},{"value":"/   u24::<_,(_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":585906,"byte_end":585968,"line_start":750,"line_end":750,"column_start":1,"column_end":63}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":585969,"byte_end":585975,"line_start":751,"line_end":751,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":585976,"byte_end":585979,"line_start":752,"line_end":752,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":585980,"byte_end":586063,"line_start":753,"line_end":753,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(be_u24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":586064,"byte_end":586139,"line_start":754,"line_end":754,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":586140,"byte_end":586143,"line_start":755,"line_end":755,"column_start":1,"column_end":4}},{"value":"/ let le_u24 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":586144,"byte_end":586166,"line_start":756,"line_end":756,"column_start":1,"column_end":23}},{"value":"/   u24::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":586167,"byte_end":586233,"line_start":757,"line_end":757,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":586234,"byte_end":586240,"line_start":758,"line_end":758,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":586241,"byte_end":586244,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":586245,"byte_end":586328,"line_start":760,"line_end":760,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(le_u24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":586329,"byte_end":586404,"line_start":761,"line_end":761,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":586405,"byte_end":586412,"line_start":762,"line_end":762,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":586413,"byte_end":586422,"line_start":763,"line_end":763,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2480},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587875,"byte_end":587878,"line_start":803,"line_end":803,"column_start":8,"column_end":11},"name":"u32","qualname":"::number::streaming::u32","value":"pub fn u32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 4 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 4 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":586884,"byte_end":586925,"line_start":778,"line_end":778,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":586926,"byte_end":586929,"line_start":779,"line_end":779,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian u32 integer,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":586930,"byte_end":587009,"line_start":780,"line_end":780,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian u32 integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587010,"byte_end":587087,"line_start":781,"line_end":781,"column_start":1,"column_end":78}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587088,"byte_end":587184,"line_start":782,"line_end":782,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587185,"byte_end":587196,"line_start":783,"line_end":783,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587197,"byte_end":587244,"line_start":784,"line_end":784,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587245,"byte_end":587273,"line_start":785,"line_end":785,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u32;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587274,"byte_end":587310,"line_start":786,"line_end":786,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587311,"byte_end":587314,"line_start":787,"line_end":787,"column_start":1,"column_end":4}},{"value":"/ let be_u32 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587315,"byte_end":587337,"line_start":788,"line_end":788,"column_start":1,"column_end":23}},{"value":"/   u32::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587338,"byte_end":587401,"line_start":789,"line_end":789,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587402,"byte_end":587408,"line_start":790,"line_end":790,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587409,"byte_end":587412,"line_start":791,"line_end":791,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587413,"byte_end":587502,"line_start":792,"line_end":792,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(be_u32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587503,"byte_end":587578,"line_start":793,"line_end":793,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587579,"byte_end":587582,"line_start":794,"line_end":794,"column_start":1,"column_end":4}},{"value":"/ let le_u32 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587583,"byte_end":587605,"line_start":795,"line_end":795,"column_start":1,"column_end":23}},{"value":"/   u32::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587606,"byte_end":587672,"line_start":796,"line_end":796,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587673,"byte_end":587679,"line_start":797,"line_end":797,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587680,"byte_end":587683,"line_start":798,"line_end":798,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587684,"byte_end":587773,"line_start":799,"line_end":799,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(le_u32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587774,"byte_end":587849,"line_start":800,"line_end":800,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587850,"byte_end":587857,"line_start":801,"line_end":801,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":587858,"byte_end":587867,"line_start":802,"line_end":802,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2483},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":589368,"byte_end":589371,"line_start":842,"line_end":842,"column_start":8,"column_end":11},"name":"u64","qualname":"::number::streaming::u64","value":"pub fn u64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 8 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 8 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":588329,"byte_end":588370,"line_start":817,"line_end":817,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":588371,"byte_end":588374,"line_start":818,"line_end":818,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian u64 integer,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":588375,"byte_end":588454,"line_start":819,"line_end":819,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian u64 integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":588455,"byte_end":588532,"line_start":820,"line_end":820,"column_start":1,"column_end":78}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":588533,"byte_end":588629,"line_start":821,"line_end":821,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":588630,"byte_end":588641,"line_start":822,"line_end":822,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":588642,"byte_end":588689,"line_start":823,"line_end":823,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":588690,"byte_end":588718,"line_start":824,"line_end":824,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u64;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":588719,"byte_end":588755,"line_start":825,"line_end":825,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":588756,"byte_end":588759,"line_start":826,"line_end":826,"column_start":1,"column_end":4}},{"value":"/ let be_u64 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":588760,"byte_end":588782,"line_start":827,"line_end":827,"column_start":1,"column_end":23}},{"value":"/   u64::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":588783,"byte_end":588846,"line_start":828,"line_end":828,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":588847,"byte_end":588853,"line_start":829,"line_end":829,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":588854,"byte_end":588857,"line_start":830,"line_end":830,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":588858,"byte_end":588971,"line_start":831,"line_end":831,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(be_u64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":588972,"byte_end":589047,"line_start":832,"line_end":832,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":589048,"byte_end":589051,"line_start":833,"line_end":833,"column_start":1,"column_end":4}},{"value":"/ let le_u64 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":589052,"byte_end":589074,"line_start":834,"line_end":834,"column_start":1,"column_end":23}},{"value":"/   u64::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":589075,"byte_end":589141,"line_start":835,"line_end":835,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":589142,"byte_end":589148,"line_start":836,"line_end":836,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":589149,"byte_end":589152,"line_start":837,"line_end":837,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":589153,"byte_end":589266,"line_start":838,"line_end":838,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(le_u64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":589267,"byte_end":589342,"line_start":839,"line_end":839,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":589343,"byte_end":589350,"line_start":840,"line_end":840,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":589351,"byte_end":589360,"line_start":841,"line_end":841,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2486},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590991,"byte_end":590995,"line_start":882,"line_end":882,"column_start":8,"column_end":12},"name":"u128","qualname":"::number::streaming::u128","value":"pub fn u128<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u128, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 16 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 16 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":589822,"byte_end":589864,"line_start":856,"line_end":856,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":589865,"byte_end":589868,"line_start":857,"line_end":857,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian u128 integer,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":589869,"byte_end":589949,"line_start":858,"line_end":858,"column_start":1,"column_end":81}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian u128 integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":589950,"byte_end":590028,"line_start":859,"line_end":859,"column_start":1,"column_end":79}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590029,"byte_end":590125,"line_start":860,"line_end":860,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590126,"byte_end":590137,"line_start":861,"line_end":861,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590138,"byte_end":590185,"line_start":862,"line_end":862,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590186,"byte_end":590214,"line_start":863,"line_end":863,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u128;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590215,"byte_end":590252,"line_start":864,"line_end":864,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590253,"byte_end":590256,"line_start":865,"line_end":865,"column_start":1,"column_end":4}},{"value":"/ let be_u128 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590257,"byte_end":590280,"line_start":866,"line_end":866,"column_start":1,"column_end":24}},{"value":"/   u128::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590281,"byte_end":590345,"line_start":867,"line_end":867,"column_start":1,"column_end":65}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590346,"byte_end":590352,"line_start":868,"line_end":868,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590353,"byte_end":590356,"line_start":869,"line_end":869,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590357,"byte_end":590519,"line_start":870,"line_end":870,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(be_u128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590520,"byte_end":590597,"line_start":871,"line_end":871,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590598,"byte_end":590601,"line_start":872,"line_end":872,"column_start":1,"column_end":4}},{"value":"/ let le_u128 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590602,"byte_end":590625,"line_start":873,"line_end":873,"column_start":1,"column_end":24}},{"value":"/   u128::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590626,"byte_end":590693,"line_start":874,"line_end":874,"column_start":1,"column_end":68}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590694,"byte_end":590700,"line_start":875,"line_end":875,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590701,"byte_end":590704,"line_start":876,"line_end":876,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590705,"byte_end":590867,"line_start":877,"line_end":877,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(le_u128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590868,"byte_end":590945,"line_start":878,"line_end":878,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590946,"byte_end":590953,"line_start":879,"line_end":879,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590954,"byte_end":590963,"line_start":880,"line_end":880,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":590964,"byte_end":590983,"line_start":881,"line_end":881,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2489},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592023,"byte_end":592025,"line_start":913,"line_end":913,"column_start":8,"column_end":10},"name":"i8","qualname":"::number::streaming::i8","value":"pub fn i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":591451,"byte_end":591489,"line_start":896,"line_end":896,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":591490,"byte_end":591493,"line_start":897,"line_end":897,"column_start":1,"column_end":4}},{"value":"/ Note that endianness does not apply to 1 byte numbers.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":591494,"byte_end":591552,"line_start":898,"line_end":898,"column_start":1,"column_end":59}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":591553,"byte_end":591649,"line_start":899,"line_end":899,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":591650,"byte_end":591661,"line_start":900,"line_end":900,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":591662,"byte_end":591709,"line_start":901,"line_end":901,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":591710,"byte_end":591738,"line_start":902,"line_end":902,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i8;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":591739,"byte_end":591774,"line_start":903,"line_end":903,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":591775,"byte_end":591778,"line_start":904,"line_end":904,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":591779,"byte_end":591801,"line_start":905,"line_end":905,"column_start":1,"column_end":23}},{"value":"/   i8::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":591802,"byte_end":591834,"line_start":906,"line_end":906,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":591835,"byte_end":591841,"line_start":907,"line_end":907,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":591842,"byte_end":591845,"line_start":908,"line_end":908,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":591846,"byte_end":591925,"line_start":909,"line_end":909,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":591926,"byte_end":591997,"line_start":910,"line_end":910,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":591998,"byte_end":592005,"line_start":911,"line_end":911,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592006,"byte_end":592015,"line_start":912,"line_end":912,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2492},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":593143,"byte_end":593146,"line_start":945,"line_end":945,"column_start":8,"column_end":11},"name":"i16","qualname":"::number::streaming::i16","value":"pub fn i16<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i16, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 2 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 2 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592179,"byte_end":592217,"line_start":920,"line_end":920,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592218,"byte_end":592221,"line_start":921,"line_end":921,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian i16 integer,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592222,"byte_end":592301,"line_start":922,"line_end":922,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian i16 integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592302,"byte_end":592379,"line_start":923,"line_end":923,"column_start":1,"column_end":78}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592380,"byte_end":592476,"line_start":924,"line_end":924,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592477,"byte_end":592488,"line_start":925,"line_end":925,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592489,"byte_end":592536,"line_start":926,"line_end":926,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592537,"byte_end":592565,"line_start":927,"line_end":927,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i16;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592566,"byte_end":592602,"line_start":928,"line_end":928,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592603,"byte_end":592606,"line_start":929,"line_end":929,"column_start":1,"column_end":4}},{"value":"/ let be_i16 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592607,"byte_end":592629,"line_start":930,"line_end":930,"column_start":1,"column_end":23}},{"value":"/   i16::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592630,"byte_end":592693,"line_start":931,"line_end":931,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592694,"byte_end":592700,"line_start":932,"line_end":932,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592701,"byte_end":592704,"line_start":933,"line_end":933,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592705,"byte_end":592782,"line_start":934,"line_end":934,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(be_i16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592783,"byte_end":592858,"line_start":935,"line_end":935,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592859,"byte_end":592862,"line_start":936,"line_end":936,"column_start":1,"column_end":4}},{"value":"/ let le_i16 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592863,"byte_end":592885,"line_start":937,"line_end":937,"column_start":1,"column_end":23}},{"value":"/   i16::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592886,"byte_end":592952,"line_start":938,"line_end":938,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592953,"byte_end":592959,"line_start":939,"line_end":939,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592960,"byte_end":592963,"line_start":940,"line_end":940,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":592964,"byte_end":593041,"line_start":941,"line_end":941,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(le_i16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":593042,"byte_end":593117,"line_start":942,"line_end":942,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":593118,"byte_end":593125,"line_start":943,"line_end":943,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":593126,"byte_end":593135,"line_start":944,"line_end":944,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2495},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":594573,"byte_end":594576,"line_start":984,"line_end":984,"column_start":8,"column_end":11},"name":"i24","qualname":"::number::streaming::i24","value":"pub fn i24<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 3 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 3 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":593597,"byte_end":593635,"line_start":959,"line_end":959,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":593636,"byte_end":593639,"line_start":960,"line_end":960,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian i24 integer,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":593640,"byte_end":593719,"line_start":961,"line_end":961,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian i24 integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":593720,"byte_end":593797,"line_start":962,"line_end":962,"column_start":1,"column_end":78}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":593798,"byte_end":593894,"line_start":963,"line_end":963,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":593895,"byte_end":593906,"line_start":964,"line_end":964,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":593907,"byte_end":593954,"line_start":965,"line_end":965,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":593955,"byte_end":593983,"line_start":966,"line_end":966,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i24;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":593984,"byte_end":594020,"line_start":967,"line_end":967,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":594021,"byte_end":594024,"line_start":968,"line_end":968,"column_start":1,"column_end":4}},{"value":"/ let be_i24 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":594025,"byte_end":594047,"line_start":969,"line_end":969,"column_start":1,"column_end":23}},{"value":"/   i24::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":594048,"byte_end":594111,"line_start":970,"line_end":970,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":594112,"byte_end":594118,"line_start":971,"line_end":971,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":594119,"byte_end":594122,"line_start":972,"line_end":972,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":594123,"byte_end":594206,"line_start":973,"line_end":973,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(be_i24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":594207,"byte_end":594282,"line_start":974,"line_end":974,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":594283,"byte_end":594286,"line_start":975,"line_end":975,"column_start":1,"column_end":4}},{"value":"/ let le_i24 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":594287,"byte_end":594309,"line_start":976,"line_end":976,"column_start":1,"column_end":23}},{"value":"/   i24::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":594310,"byte_end":594376,"line_start":977,"line_end":977,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":594377,"byte_end":594383,"line_start":978,"line_end":978,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":594384,"byte_end":594387,"line_start":979,"line_end":979,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":594388,"byte_end":594471,"line_start":980,"line_end":980,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(le_i24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":594472,"byte_end":594547,"line_start":981,"line_end":981,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":594548,"byte_end":594555,"line_start":982,"line_end":982,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":594556,"byte_end":594565,"line_start":983,"line_end":983,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2498},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":596015,"byte_end":596018,"line_start":1023,"line_end":1023,"column_start":8,"column_end":11},"name":"i32","qualname":"::number::streaming::i32","value":"pub fn i32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 4 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 4 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595027,"byte_end":595065,"line_start":998,"line_end":998,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595066,"byte_end":595069,"line_start":999,"line_end":999,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian i32 integer,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595070,"byte_end":595149,"line_start":1000,"line_end":1000,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian i32 integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595150,"byte_end":595227,"line_start":1001,"line_end":1001,"column_start":1,"column_end":78}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595228,"byte_end":595324,"line_start":1002,"line_end":1002,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595325,"byte_end":595336,"line_start":1003,"line_end":1003,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595337,"byte_end":595384,"line_start":1004,"line_end":1004,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595385,"byte_end":595413,"line_start":1005,"line_end":1005,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i32;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595414,"byte_end":595450,"line_start":1006,"line_end":1006,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595451,"byte_end":595454,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ let be_i32 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595455,"byte_end":595477,"line_start":1008,"line_end":1008,"column_start":1,"column_end":23}},{"value":"/   i32::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595478,"byte_end":595541,"line_start":1009,"line_end":1009,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595542,"byte_end":595548,"line_start":1010,"line_end":1010,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595549,"byte_end":595552,"line_start":1011,"line_end":1011,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595553,"byte_end":595642,"line_start":1012,"line_end":1012,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(be_i32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595643,"byte_end":595718,"line_start":1013,"line_end":1013,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595719,"byte_end":595722,"line_start":1014,"line_end":1014,"column_start":1,"column_end":4}},{"value":"/ let le_i32 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595723,"byte_end":595745,"line_start":1015,"line_end":1015,"column_start":1,"column_end":23}},{"value":"/   i32::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595746,"byte_end":595812,"line_start":1016,"line_end":1016,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595813,"byte_end":595819,"line_start":1017,"line_end":1017,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595820,"byte_end":595823,"line_start":1018,"line_end":1018,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595824,"byte_end":595913,"line_start":1019,"line_end":1019,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(le_i32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595914,"byte_end":595989,"line_start":1020,"line_end":1020,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595990,"byte_end":595997,"line_start":1021,"line_end":1021,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":595998,"byte_end":596007,"line_start":1022,"line_end":1022,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2501},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":597505,"byte_end":597508,"line_start":1062,"line_end":1062,"column_start":8,"column_end":11},"name":"i64","qualname":"::number::streaming::i64","value":"pub fn i64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 8 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 8 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":596469,"byte_end":596507,"line_start":1037,"line_end":1037,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":596508,"byte_end":596511,"line_start":1038,"line_end":1038,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian i64 integer,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":596512,"byte_end":596591,"line_start":1039,"line_end":1039,"column_start":1,"column_end":80}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian i64 integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":596592,"byte_end":596669,"line_start":1040,"line_end":1040,"column_start":1,"column_end":78}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":596670,"byte_end":596766,"line_start":1041,"line_end":1041,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":596767,"byte_end":596778,"line_start":1042,"line_end":1042,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":596779,"byte_end":596826,"line_start":1043,"line_end":1043,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":596827,"byte_end":596855,"line_start":1044,"line_end":1044,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i64;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":596856,"byte_end":596892,"line_start":1045,"line_end":1045,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":596893,"byte_end":596896,"line_start":1046,"line_end":1046,"column_start":1,"column_end":4}},{"value":"/ let be_i64 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":596897,"byte_end":596919,"line_start":1047,"line_end":1047,"column_start":1,"column_end":23}},{"value":"/   i64::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":596920,"byte_end":596983,"line_start":1048,"line_end":1048,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":596984,"byte_end":596990,"line_start":1049,"line_end":1049,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":596991,"byte_end":596994,"line_start":1050,"line_end":1050,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":596995,"byte_end":597108,"line_start":1051,"line_end":1051,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(be_i64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":597109,"byte_end":597184,"line_start":1052,"line_end":1052,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":597185,"byte_end":597188,"line_start":1053,"line_end":1053,"column_start":1,"column_end":4}},{"value":"/ let le_i64 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":597189,"byte_end":597211,"line_start":1054,"line_end":1054,"column_start":1,"column_end":23}},{"value":"/   i64::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":597212,"byte_end":597278,"line_start":1055,"line_end":1055,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":597279,"byte_end":597285,"line_start":1056,"line_end":1056,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":597286,"byte_end":597289,"line_start":1057,"line_end":1057,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":597290,"byte_end":597403,"line_start":1058,"line_end":1058,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(le_i64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":597404,"byte_end":597479,"line_start":1059,"line_end":1059,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":597480,"byte_end":597487,"line_start":1060,"line_end":1060,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":597488,"byte_end":597497,"line_start":1061,"line_end":1061,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2504},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":599125,"byte_end":599129,"line_start":1102,"line_end":1102,"column_start":8,"column_end":12},"name":"i128","qualname":"::number::streaming::i128","value":"pub fn i128<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i128, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 16 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 16 byte integer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":597959,"byte_end":597998,"line_start":1076,"line_end":1076,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":597999,"byte_end":598002,"line_start":1077,"line_end":1077,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian i128 integer,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":598003,"byte_end":598083,"line_start":1078,"line_end":1078,"column_start":1,"column_end":81}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian i128 integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":598084,"byte_end":598162,"line_start":1079,"line_end":1079,"column_start":1,"column_end":79}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":598163,"byte_end":598259,"line_start":1080,"line_end":1080,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":598260,"byte_end":598271,"line_start":1081,"line_end":1081,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":598272,"byte_end":598319,"line_start":1082,"line_end":1082,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":598320,"byte_end":598348,"line_start":1083,"line_end":1083,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i128;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":598349,"byte_end":598386,"line_start":1084,"line_end":1084,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":598387,"byte_end":598390,"line_start":1085,"line_end":1085,"column_start":1,"column_end":4}},{"value":"/ let be_i128 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":598391,"byte_end":598414,"line_start":1086,"line_end":1086,"column_start":1,"column_end":24}},{"value":"/   i128::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":598415,"byte_end":598479,"line_start":1087,"line_end":1087,"column_start":1,"column_end":65}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":598480,"byte_end":598486,"line_start":1088,"line_end":1088,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":598487,"byte_end":598490,"line_start":1089,"line_end":1089,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":598491,"byte_end":598653,"line_start":1090,"line_end":1090,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(be_i128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":598654,"byte_end":598731,"line_start":1091,"line_end":1091,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":598732,"byte_end":598735,"line_start":1092,"line_end":1092,"column_start":1,"column_end":4}},{"value":"/ let le_i128 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":598736,"byte_end":598759,"line_start":1093,"line_end":1093,"column_start":1,"column_end":24}},{"value":"/   i128::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":598760,"byte_end":598827,"line_start":1094,"line_end":1094,"column_start":1,"column_end":68}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":598828,"byte_end":598834,"line_start":1095,"line_end":1095,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":598835,"byte_end":598838,"line_start":1096,"line_end":1096,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":598839,"byte_end":599001,"line_start":1097,"line_end":1097,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(le_i128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":599002,"byte_end":599079,"line_start":1098,"line_end":1098,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":599080,"byte_end":599087,"line_start":1099,"line_end":1099,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":599088,"byte_end":599097,"line_start":1100,"line_end":1100,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":599098,"byte_end":599117,"line_start":1101,"line_end":1101,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2507},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":600101,"byte_end":600107,"line_start":1131,"line_end":1131,"column_start":8,"column_end":14},"name":"be_f32","qualname":"::number::streaming::be_f32","value":"pub fn be_f32<I, E: ParseError<I>>(I) -> IResult<I, f32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian 4 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a big endian 4 bytes floating point number.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":599585,"byte_end":599643,"line_start":1116,"line_end":1116,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":599644,"byte_end":599647,"line_start":1117,"line_end":1117,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":599648,"byte_end":599744,"line_start":1118,"line_end":1118,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":599745,"byte_end":599756,"line_start":1119,"line_end":1119,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":599757,"byte_end":599804,"line_start":1120,"line_end":1120,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_f32;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":599805,"byte_end":599844,"line_start":1121,"line_end":1121,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":599845,"byte_end":599848,"line_start":1122,"line_end":1122,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":599849,"byte_end":599871,"line_start":1123,"line_end":1123,"column_start":1,"column_end":23}},{"value":"/   be_f32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":599872,"byte_end":599908,"line_start":1124,"line_end":1124,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":599909,"byte_end":599915,"line_start":1125,"line_end":1125,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":599916,"byte_end":599919,"line_start":1126,"line_end":1126,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x40, 0x29, 0x00, 0x00][..]), Ok((&b\"\"[..], 2.640625)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":599920,"byte_end":600000,"line_start":1127,"line_end":1127,"column_start":1,"column_end":81}},{"value":"/ assert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":600001,"byte_end":600075,"line_start":1128,"line_end":1128,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":600076,"byte_end":600083,"line_start":1129,"line_end":1129,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":600084,"byte_end":600093,"line_start":1130,"line_end":1130,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2510},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":600871,"byte_end":600877,"line_start":1156,"line_end":1156,"column_start":8,"column_end":14},"name":"be_f64","qualname":"::number::streaming::be_f64","value":"pub fn be_f64<I, E: ParseError<I>>(I) -> IResult<I, f64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian 8 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a big endian 8 bytes floating point number.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":600335,"byte_end":600393,"line_start":1141,"line_end":1141,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":600394,"byte_end":600397,"line_start":1142,"line_end":1142,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":600398,"byte_end":600494,"line_start":1143,"line_end":1143,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":600495,"byte_end":600506,"line_start":1144,"line_end":1144,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":600507,"byte_end":600554,"line_start":1145,"line_end":1145,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_f64;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":600555,"byte_end":600594,"line_start":1146,"line_end":1146,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":600595,"byte_end":600598,"line_start":1147,"line_end":1147,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":600599,"byte_end":600621,"line_start":1148,"line_end":1148,"column_start":1,"column_end":23}},{"value":"/   be_f64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":600622,"byte_end":600658,"line_start":1149,"line_end":1149,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":600659,"byte_end":600665,"line_start":1150,"line_end":1150,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":600666,"byte_end":600669,"line_start":1151,"line_end":1151,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":600670,"byte_end":600770,"line_start":1152,"line_end":1152,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":600771,"byte_end":600845,"line_start":1153,"line_end":1153,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":600846,"byte_end":600853,"line_start":1154,"line_end":1154,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":600854,"byte_end":600863,"line_start":1155,"line_end":1155,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2513},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":601620,"byte_end":601626,"line_start":1181,"line_end":1181,"column_start":8,"column_end":14},"name":"le_f32","qualname":"::number::streaming::le_f32","value":"pub fn le_f32<I, E: ParseError<I>>(I) -> IResult<I, f32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian 4 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a little endian 4 bytes floating point number.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":601105,"byte_end":601166,"line_start":1166,"line_end":1166,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":601167,"byte_end":601170,"line_start":1167,"line_end":1167,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":601171,"byte_end":601267,"line_start":1168,"line_end":1168,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":601268,"byte_end":601279,"line_start":1169,"line_end":1169,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":601280,"byte_end":601327,"line_start":1170,"line_end":1170,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_f32;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":601328,"byte_end":601367,"line_start":1171,"line_end":1171,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":601368,"byte_end":601371,"line_start":1172,"line_end":1172,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":601372,"byte_end":601394,"line_start":1173,"line_end":1173,"column_start":1,"column_end":23}},{"value":"/   le_f32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":601395,"byte_end":601431,"line_start":1174,"line_end":1174,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":601432,"byte_end":601438,"line_start":1175,"line_end":1175,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":601439,"byte_end":601442,"line_start":1176,"line_end":1176,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":601443,"byte_end":601519,"line_start":1177,"line_end":1177,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":601520,"byte_end":601594,"line_start":1178,"line_end":1178,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":601595,"byte_end":601602,"line_start":1179,"line_end":1179,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":601603,"byte_end":601612,"line_start":1180,"line_end":1180,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2516},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":602398,"byte_end":602404,"line_start":1206,"line_end":1206,"column_start":8,"column_end":14},"name":"le_f64","qualname":"::number::streaming::le_f64","value":"pub fn le_f64<I, E: ParseError<I>>(I) -> IResult<I, f64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian 8 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a little endian 8 bytes floating point number.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":601854,"byte_end":601915,"line_start":1191,"line_end":1191,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":601916,"byte_end":601919,"line_start":1192,"line_end":1192,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":601920,"byte_end":602016,"line_start":1193,"line_end":1193,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":602017,"byte_end":602028,"line_start":1194,"line_end":1194,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":602029,"byte_end":602076,"line_start":1195,"line_end":1195,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_f64;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":602077,"byte_end":602116,"line_start":1196,"line_end":1196,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":602117,"byte_end":602120,"line_start":1197,"line_end":1197,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":602121,"byte_end":602143,"line_start":1198,"line_end":1198,"column_start":1,"column_end":23}},{"value":"/   le_f64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":602144,"byte_end":602180,"line_start":1199,"line_end":1199,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":602181,"byte_end":602187,"line_start":1200,"line_end":1200,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":602188,"byte_end":602191,"line_start":1201,"line_end":1201,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 3145728.0)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":602192,"byte_end":602297,"line_start":1202,"line_end":1202,"column_start":1,"column_end":106}},{"value":"/ assert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":602298,"byte_end":602372,"line_start":1203,"line_end":1203,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":602373,"byte_end":602380,"line_start":1204,"line_end":1204,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":602381,"byte_end":602390,"line_start":1205,"line_end":1205,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2519},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":603595,"byte_end":603598,"line_start":1241,"line_end":1241,"column_start":8,"column_end":11},"name":"f32","qualname":"::number::streaming::f32","value":"pub fn f32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, f32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a 4 byte floating point number","sig":null,"attributes":[{"value":"/ Recognizes a 4 byte floating point number","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":602632,"byte_end":602677,"line_start":1216,"line_end":1216,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":602678,"byte_end":602681,"line_start":1217,"line_end":1217,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian f32 float,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":602682,"byte_end":602759,"line_start":1218,"line_end":1218,"column_start":1,"column_end":78}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian f32 float.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":602760,"byte_end":602835,"line_start":1219,"line_end":1219,"column_start":1,"column_end":76}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":602836,"byte_end":602932,"line_start":1220,"line_end":1220,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":602933,"byte_end":602944,"line_start":1221,"line_end":1221,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":602945,"byte_end":602992,"line_start":1222,"line_end":1222,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":602993,"byte_end":603021,"line_start":1223,"line_end":1223,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::f32;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":603022,"byte_end":603058,"line_start":1224,"line_end":1224,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":603059,"byte_end":603062,"line_start":1225,"line_end":1225,"column_start":1,"column_end":4}},{"value":"/ let be_f32 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":603063,"byte_end":603085,"line_start":1226,"line_end":1226,"column_start":1,"column_end":23}},{"value":"/   f32::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":603086,"byte_end":603149,"line_start":1227,"line_end":1227,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":603150,"byte_end":603156,"line_start":1228,"line_end":1228,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":603157,"byte_end":603160,"line_start":1229,"line_end":1229,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_f32(&[0x41, 0x48, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":603161,"byte_end":603237,"line_start":1230,"line_end":1230,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(be_f32(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":603238,"byte_end":603312,"line_start":1231,"line_end":1231,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":603313,"byte_end":603316,"line_start":1232,"line_end":1232,"column_start":1,"column_end":4}},{"value":"/ let le_f32 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":603317,"byte_end":603339,"line_start":1233,"line_end":1233,"column_start":1,"column_end":23}},{"value":"/   f32::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":603340,"byte_end":603406,"line_start":1234,"line_end":1234,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":603407,"byte_end":603413,"line_start":1235,"line_end":1235,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":603414,"byte_end":603417,"line_start":1236,"line_end":1236,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_f32(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":603418,"byte_end":603494,"line_start":1237,"line_end":1237,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(le_f32(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":603495,"byte_end":603569,"line_start":1238,"line_end":1238,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":603570,"byte_end":603577,"line_start":1239,"line_end":1239,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":603578,"byte_end":603587,"line_start":1240,"line_end":1240,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2522},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":605061,"byte_end":605064,"line_start":1280,"line_end":1280,"column_start":8,"column_end":11},"name":"f64","qualname":"::number::streaming::f64","value":"pub fn f64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, f64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an 8 byte floating point number","sig":null,"attributes":[{"value":"/ Recognizes an 8 byte floating point number","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604049,"byte_end":604095,"line_start":1255,"line_end":1255,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604096,"byte_end":604099,"line_start":1256,"line_end":1256,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::Endianness::Big`, parse a big endian f64 float,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604100,"byte_end":604177,"line_start":1257,"line_end":1257,"column_start":1,"column_end":78}},{"value":"/ otherwise if `nom::Endianness::Little` parse a little endian f64 float.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604178,"byte_end":604253,"line_start":1258,"line_end":1258,"column_start":1,"column_end":76}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604254,"byte_end":604350,"line_start":1259,"line_end":1259,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604351,"byte_end":604362,"line_start":1260,"line_end":1260,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604363,"byte_end":604410,"line_start":1261,"line_end":1261,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604411,"byte_end":604439,"line_start":1262,"line_end":1262,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::f64;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604440,"byte_end":604476,"line_start":1263,"line_end":1263,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604477,"byte_end":604480,"line_start":1264,"line_end":1264,"column_start":1,"column_end":4}},{"value":"/ let be_f64 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604481,"byte_end":604503,"line_start":1265,"line_end":1265,"column_start":1,"column_end":23}},{"value":"/   f64::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604504,"byte_end":604567,"line_start":1266,"line_end":1266,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604568,"byte_end":604574,"line_start":1267,"line_end":1267,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604575,"byte_end":604578,"line_start":1268,"line_end":1268,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_f64(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604579,"byte_end":604679,"line_start":1269,"line_end":1269,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(be_f64(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(5))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604680,"byte_end":604754,"line_start":1270,"line_end":1270,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604755,"byte_end":604758,"line_start":1271,"line_end":1271,"column_start":1,"column_end":4}},{"value":"/ let le_f64 = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604759,"byte_end":604781,"line_start":1272,"line_end":1272,"column_start":1,"column_end":23}},{"value":"/   f64::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604782,"byte_end":604848,"line_start":1273,"line_end":1273,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604849,"byte_end":604855,"line_start":1274,"line_end":1274,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604856,"byte_end":604859,"line_start":1275,"line_end":1275,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_f64(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x40][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604860,"byte_end":604960,"line_start":1276,"line_end":1276,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(le_f64(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(5))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":604961,"byte_end":605035,"line_start":1277,"line_end":1277,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":605036,"byte_end":605043,"line_start":1278,"line_end":1278,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":605044,"byte_end":605053,"line_start":1279,"line_end":1279,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2525},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":606044,"byte_end":606051,"line_start":1310,"line_end":1310,"column_start":8,"column_end":15},"name":"hex_u32","qualname":"::number::streaming::hex_u32","value":"pub fn hex_u32<'a, E: ParseError<&'a [u8]>>(&'a [u8])\n-> IResult<&'a [u8], u32, E>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a hex-encoded integer.","sig":null,"attributes":[{"value":"/ Recognizes a hex-encoded integer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":605515,"byte_end":605552,"line_start":1294,"line_end":1294,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":605553,"byte_end":605556,"line_start":1295,"line_end":1295,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":605557,"byte_end":605653,"line_start":1296,"line_end":1296,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":605654,"byte_end":605665,"line_start":1297,"line_end":1297,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":605666,"byte_end":605713,"line_start":1298,"line_end":1298,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::hex_u32;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":605714,"byte_end":605754,"line_start":1299,"line_end":1299,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":605755,"byte_end":605758,"line_start":1300,"line_end":1300,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":605759,"byte_end":605781,"line_start":1301,"line_end":1301,"column_start":1,"column_end":23}},{"value":"/   hex_u32(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":605782,"byte_end":605798,"line_start":1302,"line_end":1302,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":605799,"byte_end":605805,"line_start":1303,"line_end":1303,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":605806,"byte_end":605809,"line_start":1304,"line_end":1304,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(b\"01AE;\"), Ok((&b\";\"[..], 0x01AE)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":605810,"byte_end":605868,"line_start":1305,"line_end":1305,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(parser(b\"abc\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":605869,"byte_end":605938,"line_start":1306,"line_end":1306,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(parser(b\"ggg\"), Err(Err::Error((&b\"ggg\"[..], ErrorKind::IsA))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":605939,"byte_end":606018,"line_start":1307,"line_end":1307,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":606019,"byte_end":606026,"line_start":1308,"line_end":1308,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":606027,"byte_end":606036,"line_start":1309,"line_end":1309,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":6120},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":607258,"byte_end":607273,"line_start":1352,"line_end":1352,"column_start":8,"column_end":23},"name":"recognize_float","qualname":"::number::streaming::recognize_float","value":"pub fn recognize_float<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter, <T as InputIter>::Item: AsChar, T: InputTakeAtPosition +\nInputLength, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a floating point number in text format and returns the corresponding part of the input.","sig":null,"attributes":[{"value":"/ Recognizes a floating point number in text format and returns the corresponding part of the input.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":606576,"byte_end":606678,"line_start":1333,"line_end":1333,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":606679,"byte_end":606682,"line_start":1334,"line_end":1334,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if it reaches the end of input.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":606683,"byte_end":606782,"line_start":1335,"line_end":1335,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":606783,"byte_end":606786,"line_start":1336,"line_end":1336,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":606787,"byte_end":606798,"line_start":1337,"line_end":1337,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":606799,"byte_end":606846,"line_start":1338,"line_end":1338,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::recognize_float;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":606847,"byte_end":606895,"line_start":1339,"line_end":1339,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":606896,"byte_end":606899,"line_start":1340,"line_end":1340,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":606900,"byte_end":606922,"line_start":1341,"line_end":1341,"column_start":1,"column_end":23}},{"value":"/   recognize_float(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":606923,"byte_end":606947,"line_start":1342,"line_end":1342,"column_start":1,"column_end":25}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":606948,"byte_end":606954,"line_start":1343,"line_end":1343,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":606955,"byte_end":606958,"line_start":1344,"line_end":1344,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1;\"), Ok((\";\", \"11e-1\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":606959,"byte_end":607012,"line_start":1345,"line_end":1345,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"123E-02;\"), Ok((\";\", \"123E-02\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":607013,"byte_end":607070,"line_start":1346,"line_end":1346,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", \"123\")));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":607071,"byte_end":607126,"line_start":1347,"line_end":1347,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Char))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":607127,"byte_end":607200,"line_start":1348,"line_end":1348,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":607201,"byte_end":607208,"line_start":1349,"line_end":1349,"column_start":1,"column_end":8}},{"value":"allow(unused_imports)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":607209,"byte_end":607233,"line_start":1350,"line_end":1350,"column_start":1,"column_end":25}},{"value":"rustfmt::skip","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":607234,"byte_end":607250,"line_start":1351,"line_end":1351,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":2529},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":609771,"byte_end":609776,"line_start":1432,"line_end":1432,"column_start":8,"column_end":13},"name":"float","qualname":"::number::streaming::float","value":"pub fn float<T, E: ParseError<T>>(T) -> IResult<T, f32, E> where\nT: crate::traits::AsBytes + InputLength + Slice<RangeFrom<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a byte string and returns a `f32`.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in a byte string and returns a `f32`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":609023,"byte_end":609097,"line_start":1412,"line_end":1412,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":609098,"byte_end":609101,"line_start":1413,"line_end":1413,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if it reaches the end of input.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":609102,"byte_end":609201,"line_start":1414,"line_end":1414,"column_start":1,"column_end":100}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":609202,"byte_end":609213,"line_start":1415,"line_end":1415,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":609214,"byte_end":609261,"line_start":1416,"line_end":1416,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::float;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":609262,"byte_end":609300,"line_start":1417,"line_end":1417,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":609301,"byte_end":609304,"line_start":1418,"line_end":1418,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":609305,"byte_end":609327,"line_start":1419,"line_end":1419,"column_start":1,"column_end":23}},{"value":"/   float(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":609328,"byte_end":609342,"line_start":1420,"line_end":1420,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":609343,"byte_end":609349,"line_start":1421,"line_end":1421,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":609350,"byte_end":609353,"line_start":1422,"line_end":1422,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1;\"), Ok((\";\", 1.1)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":609354,"byte_end":609403,"line_start":1423,"line_end":1423,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"123E-02;\"), Ok((\";\", 1.23)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":609404,"byte_end":609456,"line_start":1424,"line_end":1424,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":609457,"byte_end":609512,"line_start":1425,"line_end":1425,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Float))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":609513,"byte_end":609587,"line_start":1426,"line_end":1426,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":609588,"byte_end":609595,"line_start":1427,"line_end":1427,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":609596,"byte_end":609599,"line_start":1428,"line_end":1428,"column_start":1,"column_end":4}},{"value":"/ this function uses the lexical-core crate for float parsing by default, you","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":609600,"byte_end":609679,"line_start":1429,"line_end":1429,"column_start":1,"column_end":80}},{"value":"/ can deactivate it by removing the \"lexical\" feature","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":609680,"byte_end":609735,"line_start":1430,"line_end":1430,"column_start":1,"column_end":56}},{"value":"cfg(feature = \"lexical\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":609736,"byte_end":609763,"line_start":1431,"line_end":1431,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":2532},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":612123,"byte_end":612129,"line_start":1503,"line_end":1503,"column_start":8,"column_end":14},"name":"double","qualname":"::number::streaming::double","value":"pub fn double<T, E: ParseError<T>>(T) -> IResult<T, f64, E> where\nT: crate::traits::AsBytes + InputLength + Slice<RangeFrom<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a byte string and returns a `f64`.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in a byte string and returns a `f64`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":611373,"byte_end":611447,"line_start":1483,"line_end":1483,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":611448,"byte_end":611451,"line_start":1484,"line_end":1484,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if it reaches the end of input.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":611452,"byte_end":611551,"line_start":1485,"line_end":1485,"column_start":1,"column_end":100}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":611552,"byte_end":611563,"line_start":1486,"line_end":1486,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":611564,"byte_end":611611,"line_start":1487,"line_end":1487,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::double;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":611612,"byte_end":611651,"line_start":1488,"line_end":1488,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":611652,"byte_end":611655,"line_start":1489,"line_end":1489,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":611656,"byte_end":611678,"line_start":1490,"line_end":1490,"column_start":1,"column_end":23}},{"value":"/   double(s)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":611679,"byte_end":611694,"line_start":1491,"line_end":1491,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":611695,"byte_end":611701,"line_start":1492,"line_end":1492,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":611702,"byte_end":611705,"line_start":1493,"line_end":1493,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1;\"), Ok((\";\", 1.1)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":611706,"byte_end":611755,"line_start":1494,"line_end":1494,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"123E-02;\"), Ok((\";\", 1.23)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":611756,"byte_end":611808,"line_start":1495,"line_end":1495,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":611809,"byte_end":611864,"line_start":1496,"line_end":1496,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Float))));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":611865,"byte_end":611939,"line_start":1497,"line_end":1497,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":611940,"byte_end":611947,"line_start":1498,"line_end":1498,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":611948,"byte_end":611951,"line_start":1499,"line_end":1499,"column_start":1,"column_end":4}},{"value":"/ this function uses the lexical-core crate for float parsing by default, you","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":611952,"byte_end":612031,"line_start":1500,"line_end":1500,"column_start":1,"column_end":80}},{"value":"/ can deactivate it by removing the \"lexical\" feature","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":612032,"byte_end":612087,"line_start":1501,"line_end":1501,"column_start":1,"column_end":56}},{"value":"cfg(feature = \"lexical\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/streaming.rs","byte_start":612088,"byte_end":612115,"line_start":1502,"line_end":1502,"column_start":1,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6126},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/mod.rs","byte_start":493615,"byte_end":493618,"line_start":13,"line_end":13,"column_start":3,"column_end":6},"name":"Big","qualname":"::number::Endianness::Big","value":"Endianness::Big","parent":{"krate":0,"index":6125},"children":[],"decl_id":null,"docs":" Big endian\n","sig":null,"attributes":[{"value":"/ Big endian","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/mod.rs","byte_start":493598,"byte_end":493612,"line_start":12,"line_end":12,"column_start":3,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6128},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/mod.rs","byte_start":493642,"byte_end":493648,"line_start":15,"line_end":15,"column_start":3,"column_end":9},"name":"Little","qualname":"::number::Endianness::Little","value":"Endianness::Little","parent":{"krate":0,"index":6125},"children":[],"decl_id":null,"docs":" Little endian\n","sig":null,"attributes":[{"value":"/ Little endian","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/mod.rs","byte_start":493622,"byte_end":493639,"line_start":14,"line_end":14,"column_start":3,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6130},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/mod.rs","byte_start":493691,"byte_end":493697,"line_start":17,"line_end":17,"column_start":3,"column_end":9},"name":"Native","qualname":"::number::Endianness::Native","value":"Endianness::Native","parent":{"krate":0,"index":6125},"children":[],"decl_id":null,"docs":" Will match the host's endianness\n","sig":null,"attributes":[{"value":"/ Will match the host's endianness","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/mod.rs","byte_start":493652,"byte_end":493688,"line_start":16,"line_end":16,"column_start":3,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":6125},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/mod.rs","byte_start":493583,"byte_end":493593,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"Endianness","qualname":"::number::Endianness","value":"pub enum Endianness {\n\n    /// Big endian\n    Big,\n\n    /// Little endian\n    Little,\n\n    /// Will match the host's endianness\n    Native,\n}","parent":null,"children":[{"krate":0,"index":6126},{"krate":0,"index":6128},{"krate":0,"index":6130}],"decl_id":null,"docs":" Configurable endianness\n","sig":null,"attributes":[{"value":"/ Configurable endianness","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/mod.rs","byte_start":493501,"byte_end":493528,"line_start":9,"line_end":9,"column_start":1,"column_end":28}}]}],"impls":[{"id":1,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":24863,"byte_end":24868,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":25019,"byte_end":25024,"line_start":72,"line_end":72,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":25225,"byte_end":25230,"line_start":82,"line_end":82,"column_start":29,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":25277,"byte_end":25282,"line_start":84,"line_end":84,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":25580,"byte_end":25585,"line_start":92,"line_end":92,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":25798,"byte_end":25803,"line_start":99,"line_end":99,"column_start":58,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":28167,"byte_end":28179,"line_start":172,"line_end":172,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":28720,"byte_end":28732,"line_start":193,"line_end":193,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":29018,"byte_end":29030,"line_start":202,"line_end":202,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":29286,"byte_end":29298,"line_start":210,"line_end":210,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":37457,"byte_end":37466,"line_start":480,"line_end":480,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2703}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":51765,"byte_end":51772,"line_start":35,"line_end":35,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":52504,"byte_end":52510,"line_start":57,"line_end":57,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":54290,"byte_end":54293,"line_start":108,"line_end":108,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":54967,"byte_end":54970,"line_start":139,"line_end":139,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":55492,"byte_end":55495,"line_start":156,"line_end":156,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":55738,"byte_end":55741,"line_start":165,"line_end":165,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":56023,"byte_end":56026,"line_start":173,"line_end":173,"column_start":20,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":56059,"byte_end":56062,"line_start":175,"line_end":175,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":56566,"byte_end":56569,"line_start":193,"line_end":193,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":58753,"byte_end":58754,"line_start":282,"line_end":282,"column_start":42,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":59115,"byte_end":59118,"line_start":299,"line_end":299,"column_start":83,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":59562,"byte_end":59569,"line_start":317,"line_end":317,"column_start":7,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":59960,"byte_end":59967,"line_start":334,"line_end":334,"column_start":7,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":60335,"byte_end":60338,"line_start":351,"line_end":351,"column_start":7,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":60733,"byte_end":60735,"line_start":368,"line_end":368,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":61493,"byte_end":61497,"line_start":399,"line_end":399,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":64893,"byte_end":64901,"line_start":105,"line_end":105,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":66066,"byte_end":66074,"line_start":174,"line_end":174,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":77454,"byte_end":77455,"line_start":633,"line_end":633,"column_start":7,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":85854,"byte_end":85855,"line_start":979,"line_end":979,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":97712,"byte_end":97720,"line_start":1487,"line_end":1487,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":99830,"byte_end":99835,"line_start":1593,"line_end":1593,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":100030,"byte_end":100035,"line_start":1602,"line_end":1602,"column_start":59,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":100318,"byte_end":100330,"line_start":1613,"line_end":1613,"column_start":57,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":100655,"byte_end":100667,"line_start":1623,"line_end":1623,"column_start":66,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":124198,"byte_end":124212,"line_start":853,"line_end":853,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16494,"byte_end":16499,"line_start":485,"line_end":485,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":58}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16562,"byte_end":16572,"line_start":491,"line_end":491,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":808}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16595,"byte_end":16601,"line_start":493,"line_end":493,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1137}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16624,"byte_end":16632,"line_start":495,"line_end":495,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1182}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16655,"byte_end":16660,"line_start":497,"line_end":497,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1311}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16684,"byte_end":16689,"line_start":500,"line_end":500,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1544}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/mod.rs","byte_start":310271,"byte_end":310279,"line_start":5,"line_end":5,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1561}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bytes/mod.rs","byte_start":310289,"byte_end":310298,"line_start":6,"line_end":6,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1693}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16712,"byte_end":16716,"line_start":502,"line_end":502,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1825}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":387870,"byte_end":387878,"line_start":7,"line_end":7,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1831}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/bits/mod.rs","byte_start":387888,"byte_end":387897,"line_start":8,"line_end":8,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1864}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16740,"byte_end":16749,"line_start":505,"line_end":505,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1938}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":404772,"byte_end":404780,"line_start":8,"line_end":8,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1943}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/character/mod.rs","byte_start":404790,"byte_end":404799,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2065}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/lib.rs","byte_start":16902,"byte_end":16908,"line_start":515,"line_end":515,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2196}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/mod.rs","byte_start":493471,"byte_end":493479,"line_start":6,"line_end":6,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2206}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/number/mod.rs","byte_start":493489,"byte_end":493498,"line_start":7,"line_end":7,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2371}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":23061,"byte_end":23066,"line_start":16,"line_end":16,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":23936,"byte_end":23941,"line_start":39,"line_end":39,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":67}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":24863,"byte_end":24868,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":25019,"byte_end":25024,"line_start":72,"line_end":72,"column_start":27,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2535},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":25225,"byte_end":25230,"line_start":82,"line_end":82,"column_start":29,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2535},"to":{"krate":0,"index":67}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":25277,"byte_end":25282,"line_start":84,"line_end":84,"column_start":40,"column_end":45},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2535},"to":{"krate":0,"index":70}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":25580,"byte_end":25585,"line_start":92,"line_end":92,"column_start":40,"column_end":45},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2535},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":25798,"byte_end":25803,"line_start":99,"line_end":99,"column_start":58,"column_end":63},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2535},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":28167,"byte_end":28179,"line_start":172,"line_end":172,"column_start":27,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2548},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":28720,"byte_end":28732,"line_start":193,"line_end":193,"column_start":29,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2548},"to":{"krate":0,"index":67}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":29018,"byte_end":29030,"line_start":202,"line_end":202,"column_start":40,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2548},"to":{"krate":0,"index":70}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":29286,"byte_end":29298,"line_start":210,"line_end":210,"column_start":40,"column_end":52},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2548},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/error.rs","byte_start":37457,"byte_end":37466,"line_start":480,"line_end":480,"column_start":6,"column_end":15},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":51765,"byte_end":51772,"line_start":35,"line_end":35,"column_start":35,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":162},"to":{"krate":0,"index":166}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":52504,"byte_end":52510,"line_start":57,"line_end":57,"column_start":6,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":54290,"byte_end":54293,"line_start":108,"line_end":108,"column_start":9,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":54967,"byte_end":54970,"line_start":139,"line_end":139,"column_start":9,"column_end":12},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":55492,"byte_end":55495,"line_start":156,"line_end":156,"column_start":6,"column_end":9},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":55738,"byte_end":55741,"line_start":165,"line_end":165,"column_start":6,"column_end":9},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":56023,"byte_end":56026,"line_start":173,"line_end":173,"column_start":20,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2722},"to":{"krate":2,"index":1775}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":56059,"byte_end":56062,"line_start":175,"line_end":175,"column_start":26,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2722},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":56566,"byte_end":56569,"line_start":193,"line_end":193,"column_start":19,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2722},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":58753,"byte_end":58754,"line_start":282,"line_end":282,"column_start":42,"column_end":43},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":239},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":59115,"byte_end":59118,"line_start":299,"line_end":299,"column_start":83,"column_end":86},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":241},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":59562,"byte_end":59569,"line_start":317,"line_end":317,"column_start":7,"column_end":14},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":257},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":59960,"byte_end":59967,"line_start":334,"line_end":334,"column_start":7,"column_end":14},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":274},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":60335,"byte_end":60338,"line_start":351,"line_end":351,"column_start":7,"column_end":10},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":290},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":60733,"byte_end":60735,"line_start":368,"line_end":368,"column_start":23,"column_end":25},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":304},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/internal.rs","byte_start":61493,"byte_end":61497,"line_start":399,"line_end":399,"column_start":27,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":317},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":64893,"byte_end":64901,"line_start":105,"line_end":105,"column_start":23,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":18,"index":889},"to":{"krate":0,"index":378}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":66066,"byte_end":66074,"line_start":174,"line_end":174,"column_start":21,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":18,"index":889},"to":{"krate":0,"index":399}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":71379,"byte_end":71384,"line_start":407,"line_end":407,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":470}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":75478,"byte_end":75483,"line_start":578,"line_end":578,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":521}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":77454,"byte_end":77455,"line_start":633,"line_end":633,"column_start":7,"column_end":8},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":536},"to":{"krate":0,"index":521}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":85854,"byte_end":85855,"line_start":979,"line_end":979,"column_start":20,"column_end":21},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":620},"to":{"krate":0,"index":607}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":97712,"byte_end":97720,"line_start":1487,"line_end":1487,"column_start":27,"column_end":35},"kind":{"Impl":{"id":38}},"from":{"krate":18,"index":889},"to":{"krate":0,"index":727}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":99830,"byte_end":99835,"line_start":1593,"line_end":1593,"column_start":50,"column_end":55},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2535},"to":{"krate":0,"index":784}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":100030,"byte_end":100035,"line_start":1602,"line_end":1602,"column_start":59,"column_end":64},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2535},"to":{"krate":0,"index":784}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":100318,"byte_end":100330,"line_start":1613,"line_end":1613,"column_start":57,"column_end":69},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2548},"to":{"krate":0,"index":784}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/traits.rs","byte_start":100655,"byte_end":100667,"line_start":1623,"line_end":1623,"column_start":66,"column_end":78},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2548},"to":{"krate":0,"index":784}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.0.1/src/combinator/mod.rs","byte_start":124198,"byte_end":124212,"line_start":853,"line_end":853,"column_start":22,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1099},"to":{"krate":4294967295,"index":4294967295}}]}