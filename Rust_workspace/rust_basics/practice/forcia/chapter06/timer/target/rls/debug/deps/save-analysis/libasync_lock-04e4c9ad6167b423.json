{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0","program":"/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","async_lock","--edition=2018","/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=04e4c9ad6167b423","-C","extra-filename=-04e4c9ad6167b423","--out-dir","/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter06/timer/target/rls/debug/deps","-L","dependency=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter06/timer/target/rls/debug/deps","--extern","event_listener=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter06/timer/target/rls/debug/deps/libevent_listener-66314778e917cd08.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter06/timer/target/rls/debug/deps/libasync_lock-04e4c9ad6167b423.rmeta"},"prelude":{"crate_id":{"name":"async_lock","disambiguator":[757938116241042728,11382487448199953595]},"crate_root":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src","external_crates":[{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3329901521826220148,8779651902869174066]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11533795067257537051,6600409280955634707]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12614123221401343543,9564301585503608515]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1785005413158388284,2453622026203223019]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12957079427417428001,17718260667887668647]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10214993728156300765,14618204673916620187]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12453517098623888364,4709794086161820998]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12634510118091288440,7983944581587655387]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14017342134866723280,9256858969587329629]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7061025862014072460,14171357653989770935]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2285728033677722481,16182084057206383065]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7305883247437987566,266452839079745451]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13956229687295891598,15294992126055156716]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[931598532372339641,10024719927090962737]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[11150552510595322945,15608256962932530162]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4217706585212656622,592289864015908737]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[2229008352226773351,3496425060661471051]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","num":18,"id":{"name":"event_listener","disambiguator":[10642781007197121299,18290904656916396943]}}],"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":0,"byte_end":755,"line_start":1,"line_end":20,"column_start":1,"column_end":67}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":317},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":521,"byte_end":528,"line_start":17,"line_end":17,"column_start":19,"column_end":26},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":328},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":530,"byte_end":547,"line_start":17,"line_end":17,"column_start":28,"column_end":45},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":29},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":566,"byte_end":571,"line_start":18,"line_end":18,"column_start":17,"column_end":22},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":72},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":573,"byte_end":583,"line_start":18,"line_end":18,"column_start":24,"column_end":34},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":101},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":585,"byte_end":598,"line_start":18,"line_end":18,"column_start":36,"column_end":49},"alias_span":null,"name":"MutexGuardArc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":618,"byte_end":624,"line_start":19,"line_end":19,"column_start":18,"column_end":24},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":195},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":626,"byte_end":641,"line_start":19,"line_end":19,"column_start":26,"column_end":41},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":217},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":643,"byte_end":668,"line_start":19,"line_end":19,"column_start":43,"column_end":68},"alias_span":null,"name":"RwLockUpgradableReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":253},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":670,"byte_end":686,"line_start":19,"line_end":19,"column_start":70,"column_end":86},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":334},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":709,"byte_end":718,"line_start":20,"line_end":20,"column_start":21,"column_end":30},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":339},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":720,"byte_end":734,"line_start":20,"line_end":20,"column_start":32,"column_end":46},"alias_span":null,"name":"SemaphoreGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":346},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":736,"byte_end":753,"line_start":20,"line_end":20,"column_start":48,"column_end":65},"alias_span":null,"name":"SemaphoreGuardArc","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":0,"byte_end":755,"line_start":1,"line_end":20,"column_start":1,"column_end":67},"name":"","qualname":"::","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":13},{"krate":0,"index":135},{"krate":0,"index":280},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316}],"decl_id":null,"docs":" Async synchronization primitives.","sig":null,"attributes":[{"value":"/ Async synchronization primitives.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":0,"byte_end":37,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":38,"byte_end":41,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides the following primitives:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":42,"byte_end":91,"line_start":3,"line_end":3,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":92,"byte_end":95,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`] - enables tasks to synchronize all together at the same time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":96,"byte_end":175,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ * [`Mutex`] - a mutual exclusion lock.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":176,"byte_end":218,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"/ * [`RwLock`] - a reader-writer lock, allowing any number of readers or a single writer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":219,"byte_end":310,"line_start":7,"line_end":7,"column_start":1,"column_end":92}},{"value":"/ * [`Semaphore`] - limits the number of concurrent operations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":311,"byte_end":376,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/lib.rs","byte_start":378,"byte_end":449,"line_start":10,"line_end":10,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":317},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":894,"byte_end":901,"line_start":7,"line_end":7,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320}],"decl_id":null,"docs":" A counter to synchronize multiple tasks at the same time.\n","sig":null,"attributes":[{"value":"/ A counter to synchronize multiple tasks at the same time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":804,"byte_end":865,"line_start":5,"line_end":5,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1478,"byte_end":1481,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"name":"new","qualname":"<Barrier>::new","value":"pub const fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a barrier that can block the given number of tasks.","sig":null,"attributes":[{"value":"/ Creates a barrier that can block the given number of tasks.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1060,"byte_end":1123,"line_start":20,"line_end":20,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1128,"byte_end":1131,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 tasks which call [`wait()`] and then wake up all tasks","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1136,"byte_end":1221,"line_start":22,"line_end":22,"column_start":5,"column_end":90}},{"value":"/ at once when the `n`th task calls [`wait()`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1226,"byte_end":1275,"line_start":23,"line_end":23,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1280,"byte_end":1283,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ [`wait()`]: `Barrier::wait()`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1288,"byte_end":1321,"line_start":25,"line_end":25,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1326,"byte_end":1329,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1334,"byte_end":1348,"line_start":27,"line_end":27,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1353,"byte_end":1356,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1361,"byte_end":1368,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Barrier;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1373,"byte_end":1401,"line_start":30,"line_end":30,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1406,"byte_end":1409,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ let barrier = Barrier::new(5);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1414,"byte_end":1448,"line_start":32,"line_end":32,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1453,"byte_end":1460,"line_start":33,"line_end":33,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2732,"byte_end":2736,"line_start":75,"line_end":75,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current task until all tasks reach this point.","sig":null,"attributes":[{"value":"/ Blocks the current task until all tasks reach this point.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1706,"byte_end":1767,"line_start":45,"line_end":45,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1772,"byte_end":1775,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Barriers are reusable after all tasks have synchronized, and can be used continuously.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1780,"byte_end":1870,"line_start":47,"line_end":47,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1875,"byte_end":1878,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Returns a [`BarrierWaitResult`] indicating whether this task is the \"leader\", meaning the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1883,"byte_end":1976,"line_start":49,"line_end":49,"column_start":5,"column_end":98}},{"value":"/ last task to call this method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1981,"byte_end":2015,"line_start":50,"line_end":50,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2020,"byte_end":2023,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2028,"byte_end":2042,"line_start":52,"line_end":52,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2047,"byte_end":2050,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2055,"byte_end":2062,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Barrier;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2067,"byte_end":2095,"line_start":55,"line_end":55,"column_start":5,"column_end":33}},{"value":"/ use futures_lite::future;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2100,"byte_end":2129,"line_start":56,"line_end":56,"column_start":5,"column_end":34}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2134,"byte_end":2157,"line_start":57,"line_end":57,"column_start":5,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2162,"byte_end":2182,"line_start":58,"line_end":58,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2187,"byte_end":2190,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let barrier = Arc::new(Barrier::new(5));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2195,"byte_end":2239,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2244,"byte_end":2247,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ for _ in 0..5 {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2252,"byte_end":2271,"line_start":62,"line_end":62,"column_start":5,"column_end":24}},{"value":"/     let b = barrier.clone();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2276,"byte_end":2308,"line_start":63,"line_end":63,"column_start":5,"column_end":37}},{"value":"/     thread::spawn(move || {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2313,"byte_end":2344,"line_start":64,"line_end":64,"column_start":5,"column_end":36}},{"value":"/         future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2349,"byte_end":2385,"line_start":65,"line_end":65,"column_start":5,"column_end":41}},{"value":"/             // The same messages will be printed together.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2390,"byte_end":2452,"line_start":66,"line_end":66,"column_start":5,"column_end":67}},{"value":"/             // There will NOT be interleaving of \"before\" and \"after\".","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2457,"byte_end":2531,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/             println!(\"before wait\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2536,"byte_end":2576,"line_start":68,"line_end":68,"column_start":5,"column_end":45}},{"value":"/             b.wait().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2581,"byte_end":2612,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/             println!(\"after wait\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2617,"byte_end":2656,"line_start":70,"line_end":70,"column_start":5,"column_end":44}},{"value":"/         });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2661,"byte_end":2676,"line_start":71,"line_end":71,"column_start":5,"column_end":20}},{"value":"/     });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2681,"byte_end":2692,"line_start":72,"line_end":72,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2697,"byte_end":2702,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":2707,"byte_end":2714,"line_start":74,"line_end":74,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":328},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":3776,"byte_end":3793,"line_start":110,"line_end":110,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::barrier::BarrierWaitResult","value":"BarrierWaitResult {  }","parent":null,"children":[{"krate":0,"index":329}],"decl_id":null,"docs":" Returned by [`Barrier::wait()`] when all tasks have called it.","sig":null,"attributes":[{"value":"/ Returned by [`Barrier::wait()`] when all tasks have called it.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":3460,"byte_end":3526,"line_start":97,"line_end":97,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":3527,"byte_end":3530,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":3531,"byte_end":3545,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":3546,"byte_end":3549,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":3550,"byte_end":3557,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":3558,"byte_end":3602,"line_start":102,"line_end":102,"column_start":1,"column_end":45}},{"value":"/ use async_lock::Barrier;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":3603,"byte_end":3631,"line_start":103,"line_end":103,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":3632,"byte_end":3635,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let barrier = Barrier::new(1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":3636,"byte_end":3670,"line_start":105,"line_end":105,"column_start":1,"column_end":35}},{"value":"/ let barrier_wait_result = barrier.wait().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":3671,"byte_end":3722,"line_start":106,"line_end":106,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":3723,"byte_end":3732,"line_start":107,"line_end":107,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":3733,"byte_end":3740,"line_start":108,"line_end":108,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":4328,"byte_end":4337,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this task was the last to call to [`Barrier::wait()`].","sig":null,"attributes":[{"value":"/ Returns `true` if this task was the last to call to [`Barrier::wait()`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":3849,"byte_end":3925,"line_start":115,"line_end":115,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":3930,"byte_end":3933,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":3938,"byte_end":3952,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":3957,"byte_end":3960,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":3965,"byte_end":3972,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":3977,"byte_end":4021,"line_start":120,"line_end":120,"column_start":5,"column_end":49}},{"value":"/ use async_lock::Barrier;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":4026,"byte_end":4054,"line_start":121,"line_end":121,"column_start":5,"column_end":33}},{"value":"/ use futures_lite::future;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":4059,"byte_end":4088,"line_start":122,"line_end":122,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":4093,"byte_end":4096,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let barrier = Barrier::new(2);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":4101,"byte_end":4135,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/ let (a, b) = future::zip(barrier.wait(), barrier.wait()).await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":4140,"byte_end":4207,"line_start":125,"line_end":125,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(a.is_leader(), false);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":4212,"byte_end":4249,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(b.is_leader(), true);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":4254,"byte_end":4290,"line_start":127,"line_end":127,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":4295,"byte_end":4304,"line_start":128,"line_end":128,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":4309,"byte_end":4316,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":29},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5210,"byte_end":5215,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"decl_id":null,"docs":" An async mutex.","sig":null,"attributes":[{"value":"/ An async mutex.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":4628,"byte_end":4647,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":4648,"byte_end":4651,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The locking mechanism uses eventual fairness to ensure locking will be fair on average without","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":4652,"byte_end":4750,"line_start":14,"line_end":14,"column_start":1,"column_end":99}},{"value":"/ sacrificing performance. This is done by forcing a fair lock whenever a lock operation is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":4751,"byte_end":4844,"line_start":15,"line_end":15,"column_start":1,"column_end":94}},{"value":"/ starved for longer than 0.5 milliseconds.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":4845,"byte_end":4890,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":4891,"byte_end":4894,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":4895,"byte_end":4909,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":4910,"byte_end":4913,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":4914,"byte_end":4921,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":4922,"byte_end":4966,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":4967,"byte_end":4993,"line_start":22,"line_end":22,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":4994,"byte_end":4997,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let m = Mutex::new(1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":4998,"byte_end":5024,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5025,"byte_end":5028,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut guard = m.lock().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5029,"byte_end":5064,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/ *guard = 2;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5065,"byte_end":5080,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5081,"byte_end":5084,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ assert!(m.try_lock().is_none());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5085,"byte_end":5121,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/ drop(guard);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5122,"byte_end":5138,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/ assert_eq!(*m.try_lock().unwrap(), 2);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5139,"byte_end":5181,"line_start":31,"line_end":31,"column_start":1,"column_end":43}},{"value":"/ # })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5182,"byte_end":5190,"line_start":32,"line_end":32,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5191,"byte_end":5198,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5890,"byte_end":5893,"line_start":61,"line_end":61,"column_start":18,"column_end":21},"name":"new","qualname":"<Mutex<T>>::new","value":"pub const fn new(T) -> Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new async mutex.","sig":null,"attributes":[{"value":"/ Creates a new async mutex.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5709,"byte_end":5739,"line_start":52,"line_end":52,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5744,"byte_end":5747,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5752,"byte_end":5766,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5771,"byte_end":5774,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5779,"byte_end":5786,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5791,"byte_end":5817,"line_start":57,"line_end":57,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5822,"byte_end":5825,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5830,"byte_end":5860,"line_start":59,"line_end":59,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5865,"byte_end":5872,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6315,"byte_end":6325,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6071,"byte_end":6125,"line_start":69,"line_end":69,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6130,"byte_end":6133,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6138,"byte_end":6152,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6157,"byte_end":6160,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6165,"byte_end":6172,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6177,"byte_end":6203,"line_start":74,"line_end":74,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6208,"byte_end":6211,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(10);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6216,"byte_end":6247,"line_start":76,"line_end":76,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(mutex.into_inner(), 10);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6252,"byte_end":6291,"line_start":77,"line_end":77,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6296,"byte_end":6303,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6803,"byte_end":6807,"line_start":101,"line_end":101,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires the mutex.","sig":null,"attributes":[{"value":"/ Acquires the mutex.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6410,"byte_end":6433,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6438,"byte_end":6441,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the mutex when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6446,"byte_end":6503,"line_start":87,"line_end":87,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6508,"byte_end":6511,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6516,"byte_end":6530,"line_start":89,"line_end":89,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6535,"byte_end":6538,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6543,"byte_end":6550,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6555,"byte_end":6599,"line_start":92,"line_end":92,"column_start":5,"column_end":49}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6604,"byte_end":6630,"line_start":93,"line_end":93,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6635,"byte_end":6638,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(10);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6643,"byte_end":6674,"line_start":95,"line_end":95,"column_start":5,"column_end":36}},{"value":"/ let guard = mutex.lock().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6679,"byte_end":6714,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*guard, 10);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6719,"byte_end":6746,"line_start":97,"line_end":97,"column_start":5,"column_end":32}},{"value":"/ # })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6751,"byte_end":6759,"line_start":98,"line_end":98,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6764,"byte_end":6771,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6776,"byte_end":6785,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10292,"byte_end":10300,"line_start":215,"line_end":215,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the mutex.","sig":null,"attributes":[{"value":"/ Attempts to acquire the mutex.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":9823,"byte_end":9857,"line_start":198,"line_end":198,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":9862,"byte_end":9865,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ If the mutex could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":9870,"byte_end":9962,"line_start":200,"line_end":200,"column_start":5,"column_end":97}},{"value":"/ guard is returned that releases the mutex when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":9967,"byte_end":10026,"line_start":201,"line_end":201,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10031,"byte_end":10034,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10039,"byte_end":10053,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10058,"byte_end":10061,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10066,"byte_end":10073,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10078,"byte_end":10104,"line_start":206,"line_end":206,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10109,"byte_end":10112,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(10);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10117,"byte_end":10148,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/ if let Some(guard) = mutex.try_lock() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10153,"byte_end":10196,"line_start":209,"line_end":209,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(*guard, 10);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10201,"byte_end":10232,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10237,"byte_end":10242,"line_start":211,"line_end":211,"column_start":5,"column_end":10}},{"value":"/ # ;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10247,"byte_end":10254,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10259,"byte_end":10266,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10271,"byte_end":10280,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11018,"byte_end":11025,"line_start":239,"line_end":239,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10500,"byte_end":10555,"line_start":223,"line_end":223,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10560,"byte_end":10563,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the mutex mutably, no actual locking takes place -- the mutable","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10568,"byte_end":10659,"line_start":225,"line_end":225,"column_start":5,"column_end":96}},{"value":"/ borrow statically guarantees the mutex is not already acquired.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10664,"byte_end":10731,"line_start":226,"line_end":226,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10736,"byte_end":10739,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10744,"byte_end":10758,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10763,"byte_end":10766,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10771,"byte_end":10778,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10783,"byte_end":10827,"line_start":231,"line_end":231,"column_start":5,"column_end":49}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10832,"byte_end":10858,"line_start":232,"line_end":232,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10863,"byte_end":10866,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10871,"byte_end":10905,"line_start":234,"line_end":234,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10910,"byte_end":10936,"line_start":235,"line_end":235,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10941,"byte_end":10981,"line_start":236,"line_end":236,"column_start":5,"column_end":45}},{"value":"/ # })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10986,"byte_end":10994,"line_start":237,"line_end":237,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":10999,"byte_end":11006,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11601,"byte_end":11609,"line_start":262,"line_end":262,"column_start":18,"column_end":26},"name":"lock_arc","qualname":"<Mutex<T>>::lock_arc","value":"pub async fn lock_arc<'_>(&'_ Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires the mutex and clones a reference to it.","sig":null,"attributes":[{"value":"/ Acquires the mutex and clones a reference to it.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11130,"byte_end":11182,"line_start":245,"line_end":245,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11187,"byte_end":11190,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Returns an owned guard that releases the mutex when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11195,"byte_end":11259,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11264,"byte_end":11267,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11272,"byte_end":11286,"line_start":249,"line_end":249,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11291,"byte_end":11294,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11299,"byte_end":11306,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11311,"byte_end":11355,"line_start":252,"line_end":252,"column_start":5,"column_end":49}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11360,"byte_end":11386,"line_start":253,"line_end":253,"column_start":5,"column_end":31}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11391,"byte_end":11414,"line_start":254,"line_end":254,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11419,"byte_end":11422,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(10));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11427,"byte_end":11468,"line_start":256,"line_end":256,"column_start":5,"column_end":46}},{"value":"/ let guard = mutex.lock_arc().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11473,"byte_end":11512,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(*guard, 10);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11517,"byte_end":11544,"line_start":258,"line_end":258,"column_start":5,"column_end":32}},{"value":"/ # })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11549,"byte_end":11557,"line_start":259,"line_end":259,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11562,"byte_end":11569,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11574,"byte_end":11583,"line_start":261,"line_end":261,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":12361,"byte_end":12373,"line_start":288,"line_end":288,"column_start":12,"column_end":24},"name":"try_lock_arc","qualname":"<Mutex<T>>::try_lock_arc","value":"pub fn try_lock_arc(&Arc<Self>) -> Option<MutexGuardArc<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the mutex and clone a reference to it.","sig":null,"attributes":[{"value":"/ Attempts to acquire the mutex and clone a reference to it.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11819,"byte_end":11881,"line_start":270,"line_end":270,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11886,"byte_end":11889,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ If the mutex could not be acquired at this time, then [`None`] is returned. Otherwise, an","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11894,"byte_end":11987,"line_start":272,"line_end":272,"column_start":5,"column_end":98}},{"value":"/ owned guard is returned that releases the mutex when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11992,"byte_end":12057,"line_start":273,"line_end":273,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":12062,"byte_end":12065,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":12070,"byte_end":12084,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":12089,"byte_end":12092,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":12097,"byte_end":12104,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":12109,"byte_end":12135,"line_start":278,"line_end":278,"column_start":5,"column_end":31}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":12140,"byte_end":12163,"line_start":279,"line_end":279,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":12168,"byte_end":12171,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(10));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":12176,"byte_end":12217,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/ if let Some(guard) = mutex.try_lock() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":12222,"byte_end":12265,"line_start":282,"line_end":282,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(*guard, 10);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":12270,"byte_end":12301,"line_start":283,"line_end":283,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":12306,"byte_end":12311,"line_start":284,"line_end":284,"column_start":5,"column_end":10}},{"value":"/ # ;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":12316,"byte_end":12323,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":12328,"byte_end":12335,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":12340,"byte_end":12349,"line_start":287,"line_end":287,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":72},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13406,"byte_end":13416,"line_start":326,"line_end":326,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::mutex::MutexGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that releases the mutex when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the mutex when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13345,"byte_end":13394,"line_start":325,"line_end":325,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13975,"byte_end":13981,"line_start":345,"line_end":345,"column_start":12,"column_end":18},"name":"source","qualname":"<MutexGuard>::source","value":"pub fn source(&MutexGuard) -> &'a Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the mutex a guard came from.","sig":null,"attributes":[{"value":"/ Returns a reference to the mutex a guard came from.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13613,"byte_end":13668,"line_start":332,"line_end":332,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13673,"byte_end":13676,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13681,"byte_end":13695,"line_start":334,"line_end":334,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13700,"byte_end":13703,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13708,"byte_end":13715,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13720,"byte_end":13764,"line_start":337,"line_end":337,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{Mutex, MutexGuard};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13769,"byte_end":13809,"line_start":338,"line_end":338,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13814,"byte_end":13817,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(10i32);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13822,"byte_end":13856,"line_start":340,"line_end":340,"column_start":5,"column_end":39}},{"value":"/ let guard = mutex.lock().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13861,"byte_end":13896,"line_start":341,"line_end":341,"column_start":5,"column_end":40}},{"value":"/ dbg!(MutexGuard::source(&guard));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13901,"byte_end":13938,"line_start":342,"line_end":342,"column_start":5,"column_end":42}},{"value":"/ # })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13943,"byte_end":13951,"line_start":343,"line_end":343,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13956,"byte_end":13963,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":101},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":14977,"byte_end":14990,"line_start":385,"line_end":385,"column_start":12,"column_end":25},"name":"MutexGuardArc","qualname":"::mutex::MutexGuardArc","value":"","parent":null,"children":[],"decl_id":null,"docs":" An owned guard that releases the mutex when dropped.\n","sig":null,"attributes":[{"value":"/ An owned guard that releases the mutex when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":14909,"byte_end":14965,"line_start":384,"line_end":384,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15587,"byte_end":15593,"line_start":405,"line_end":405,"column_start":12,"column_end":18},"name":"source","qualname":"<MutexGuardArc<T>>::source","value":"pub fn source(&MutexGuardArc<T>) -> &Arc<Mutex<T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the mutex a guard came from.","sig":null,"attributes":[{"value":"/ Returns a reference to the mutex a guard came from.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15177,"byte_end":15232,"line_start":391,"line_end":391,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15237,"byte_end":15240,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15245,"byte_end":15259,"line_start":393,"line_end":393,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15264,"byte_end":15267,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15272,"byte_end":15279,"line_start":395,"line_end":395,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15284,"byte_end":15328,"line_start":396,"line_end":396,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{Mutex, MutexGuardArc};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15333,"byte_end":15376,"line_start":397,"line_end":397,"column_start":5,"column_end":48}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15381,"byte_end":15404,"line_start":398,"line_end":398,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15409,"byte_end":15412,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(10i32));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15417,"byte_end":15461,"line_start":400,"line_end":400,"column_start":5,"column_end":49}},{"value":"/ let guard = mutex.lock_arc().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15466,"byte_end":15505,"line_start":401,"line_end":401,"column_start":5,"column_end":44}},{"value":"/ dbg!(MutexGuardArc::source(&guard));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15510,"byte_end":15550,"line_start":402,"line_end":402,"column_start":5,"column_end":45}},{"value":"/ # })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15555,"byte_end":15563,"line_start":403,"line_end":403,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15568,"byte_end":15575,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":152},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17726,"byte_end":17732,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158}],"decl_id":null,"docs":" An async reader-writer lock.","sig":null,"attributes":[{"value":"/ An async reader-writer lock.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":16953,"byte_end":16985,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":16986,"byte_end":16989,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows multiple readers or one writer at any point in time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":16990,"byte_end":17071,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17072,"byte_end":17075,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The locking strategy is write-preferring, which means writers are never starved.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17076,"byte_end":17160,"line_start":19,"line_end":19,"column_start":1,"column_end":85}},{"value":"/ Releasing a write lock wakes the next blocked reader and the next blocked writer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17161,"byte_end":17246,"line_start":20,"line_end":20,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17247,"byte_end":17250,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17251,"byte_end":17265,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17266,"byte_end":17269,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17270,"byte_end":17277,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17278,"byte_end":17322,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17323,"byte_end":17350,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17351,"byte_end":17354,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17355,"byte_end":17385,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17386,"byte_end":17389,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // Multiple read locks can be held at a time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17390,"byte_end":17439,"line_start":30,"line_end":30,"column_start":1,"column_end":50}},{"value":"/ let r1 = lock.read().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17440,"byte_end":17471,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ let r2 = lock.read().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17472,"byte_end":17503,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(*r1, 5);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17504,"byte_end":17527,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(*r2, 5);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17528,"byte_end":17551,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/ drop((r1, r2));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17552,"byte_end":17571,"line_start":35,"line_end":35,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17572,"byte_end":17575,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Only one write lock can be held at a time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17576,"byte_end":17625,"line_start":37,"line_end":37,"column_start":1,"column_end":50}},{"value":"/ let mut w = lock.write().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17626,"byte_end":17661,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ *w += 1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17662,"byte_end":17674,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/ assert_eq!(*w, 6);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17675,"byte_end":17697,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/ # })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17698,"byte_end":17706,"line_start":41,"line_end":41,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":17707,"byte_end":17714,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":18676,"byte_end":18679,"line_start":79,"line_end":79,"column_start":18,"column_end":21},"name":"new","qualname":"<RwLock<T>>::new","value":"pub const fn new(T) -> RwLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reader-writer lock.","sig":null,"attributes":[{"value":"/ Creates a new reader-writer lock.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":18487,"byte_end":18524,"line_start":70,"line_end":70,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":18529,"byte_end":18532,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":18537,"byte_end":18551,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":18556,"byte_end":18559,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":18564,"byte_end":18571,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":18576,"byte_end":18603,"line_start":75,"line_end":75,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":18608,"byte_end":18611,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(0);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":18616,"byte_end":18646,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":18651,"byte_end":18658,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19165,"byte_end":19175,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the lock and returns the inner value.","sig":null,"attributes":[{"value":"/ Unwraps the lock and returns the inner value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":18928,"byte_end":18977,"line_start":89,"line_end":89,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":18982,"byte_end":18985,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":18990,"byte_end":19004,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19009,"byte_end":19012,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19017,"byte_end":19024,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19029,"byte_end":19056,"line_start":94,"line_end":94,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19061,"byte_end":19064,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19069,"byte_end":19099,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(lock.into_inner(), 5);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19104,"byte_end":19141,"line_start":97,"line_end":97,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19146,"byte_end":19153,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19808,"byte_end":19816,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"pub fn try_read(&Self) -> Option<RwLockReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire a read lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire a read lock.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19262,"byte_end":19298,"line_start":105,"line_end":105,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19303,"byte_end":19306,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ If a read lock could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19311,"byte_end":19405,"line_start":107,"line_end":107,"column_start":5,"column_end":99}},{"value":"/ guard is returned that releases the lock when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19410,"byte_end":19468,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19473,"byte_end":19476,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19481,"byte_end":19495,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19500,"byte_end":19503,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19508,"byte_end":19515,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19520,"byte_end":19564,"line_start":113,"line_end":113,"column_start":5,"column_end":49}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19569,"byte_end":19596,"line_start":114,"line_end":114,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19601,"byte_end":19604,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19609,"byte_end":19639,"line_start":116,"line_end":116,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19644,"byte_end":19647,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let reader = lock.read().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19652,"byte_end":19687,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*reader, 1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19692,"byte_end":19719,"line_start":119,"line_end":119,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19724,"byte_end":19727,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_some());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19732,"byte_end":19771,"line_start":121,"line_end":121,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19776,"byte_end":19784,"line_start":122,"line_end":122,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19789,"byte_end":19796,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":21269,"byte_end":21273,"line_start":173,"line_end":173,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a read lock.","sig":null,"attributes":[{"value":"/ Acquires a read lock.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":20689,"byte_end":20714,"line_start":152,"line_end":152,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":20719,"byte_end":20722,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the lock when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":20727,"byte_end":20783,"line_start":154,"line_end":154,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":20788,"byte_end":20791,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Note that attempts to acquire a read lock will block if there are also concurrent attempts","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":20796,"byte_end":20890,"line_start":156,"line_end":156,"column_start":5,"column_end":99}},{"value":"/ to acquire a write lock.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":20895,"byte_end":20923,"line_start":157,"line_end":157,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":20928,"byte_end":20931,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":20936,"byte_end":20950,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":20955,"byte_end":20958,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":20963,"byte_end":20970,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":20975,"byte_end":21019,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":21024,"byte_end":21051,"line_start":163,"line_end":163,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":21056,"byte_end":21059,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":21064,"byte_end":21094,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":21099,"byte_end":21102,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let reader = lock.read().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":21107,"byte_end":21142,"line_start":167,"line_end":167,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*reader, 1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":21147,"byte_end":21174,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":21179,"byte_end":21182,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_some());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":21187,"byte_end":21226,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":21231,"byte_end":21239,"line_start":171,"line_end":171,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":21244,"byte_end":21251,"line_start":172,"line_end":172,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":23588,"byte_end":23607,"line_start":236,"line_end":236,"column_start":12,"column_end":31},"name":"try_upgradable_read","qualname":"<RwLock<T>>::try_upgradable_read","value":"pub fn try_upgradable_read(&Self) -> Option<RwLockUpgradableReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire a read lock with the possiblity to upgrade to a write lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire a read lock with the possiblity to upgrade to a write lock.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":22688,"byte_end":22771,"line_start":212,"line_end":212,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":22776,"byte_end":22779,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ If a read lock could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":22784,"byte_end":22878,"line_start":214,"line_end":214,"column_start":5,"column_end":99}},{"value":"/ guard is returned that releases the lock when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":22883,"byte_end":22941,"line_start":215,"line_end":215,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":22946,"byte_end":22949,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Upgradable read lock reserves the right to be upgraded to a write lock, which means there","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":22954,"byte_end":23047,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ can be at most one upgradable read lock at a time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":23052,"byte_end":23106,"line_start":218,"line_end":218,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":23111,"byte_end":23114,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":23119,"byte_end":23133,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":23138,"byte_end":23141,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":23146,"byte_end":23153,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":23158,"byte_end":23202,"line_start":223,"line_end":223,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{RwLock, RwLockUpgradableReadGuard};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":23207,"byte_end":23263,"line_start":224,"line_end":224,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":23268,"byte_end":23271,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":23276,"byte_end":23306,"line_start":226,"line_end":226,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":23311,"byte_end":23314,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let reader = lock.upgradable_read().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":23319,"byte_end":23365,"line_start":228,"line_end":228,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(*reader, 1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":23370,"byte_end":23397,"line_start":229,"line_end":229,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(*lock.try_read().unwrap(), 1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":23402,"byte_end":23447,"line_start":230,"line_end":230,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":23452,"byte_end":23455,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let mut writer = RwLockUpgradableReadGuard::upgrade(reader).await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":23460,"byte_end":23530,"line_start":232,"line_end":232,"column_start":5,"column_end":75}},{"value":"/ *writer = 2;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":23535,"byte_end":23551,"line_start":233,"line_end":233,"column_start":5,"column_end":21}},{"value":"/ # })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":23556,"byte_end":23564,"line_start":234,"line_end":234,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":23569,"byte_end":23576,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":25484,"byte_end":25499,"line_start":292,"line_end":292,"column_start":18,"column_end":33},"name":"upgradable_read","qualname":"<RwLock<T>>::upgradable_read","value":"pub async fn upgradable_read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire a read lock with the possiblity to upgrade to a write lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire a read lock with the possiblity to upgrade to a write lock.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":24500,"byte_end":24583,"line_start":266,"line_end":266,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":24588,"byte_end":24591,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the lock when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":24596,"byte_end":24652,"line_start":268,"line_end":268,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":24657,"byte_end":24660,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ Upgradable read lock reserves the right to be upgraded to a write lock, which means there","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":24665,"byte_end":24758,"line_start":270,"line_end":270,"column_start":5,"column_end":98}},{"value":"/ can be at most one upgradable read lock at a time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":24763,"byte_end":24817,"line_start":271,"line_end":271,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":24822,"byte_end":24825,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ Note that attempts to acquire an upgradable read lock will block if there are concurrent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":24830,"byte_end":24922,"line_start":273,"line_end":273,"column_start":5,"column_end":97}},{"value":"/ attempts to acquire another upgradable read lock or a write lock.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":24927,"byte_end":24996,"line_start":274,"line_end":274,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":25001,"byte_end":25004,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":25009,"byte_end":25023,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":25028,"byte_end":25031,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":25036,"byte_end":25043,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":25048,"byte_end":25092,"line_start":279,"line_end":279,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{RwLock, RwLockUpgradableReadGuard};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":25097,"byte_end":25153,"line_start":280,"line_end":280,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":25158,"byte_end":25161,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":25166,"byte_end":25196,"line_start":282,"line_end":282,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":25201,"byte_end":25204,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let reader = lock.upgradable_read().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":25209,"byte_end":25255,"line_start":284,"line_end":284,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(*reader, 1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":25260,"byte_end":25287,"line_start":285,"line_end":285,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(*lock.try_read().unwrap(), 1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":25292,"byte_end":25337,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":25342,"byte_end":25345,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ let mut writer = RwLockUpgradableReadGuard::upgrade(reader).await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":25350,"byte_end":25420,"line_start":288,"line_end":288,"column_start":5,"column_end":75}},{"value":"/ *writer = 2;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":25425,"byte_end":25441,"line_start":289,"line_end":289,"column_start":5,"column_end":21}},{"value":"/ # })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":25446,"byte_end":25454,"line_start":290,"line_end":290,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":25459,"byte_end":25466,"line_start":291,"line_end":291,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":26925,"byte_end":26934,"line_start":340,"line_end":340,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"pub fn try_write(&Self) -> Option<RwLockWriteGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire a write lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire a write lock.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":26371,"byte_end":26408,"line_start":322,"line_end":322,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":26413,"byte_end":26416,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ If a write lock could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":26421,"byte_end":26516,"line_start":324,"line_end":324,"column_start":5,"column_end":100}},{"value":"/ guard is returned that releases the lock when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":26521,"byte_end":26579,"line_start":325,"line_end":325,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":26584,"byte_end":26587,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":26592,"byte_end":26606,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":26611,"byte_end":26614,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":26619,"byte_end":26626,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":26631,"byte_end":26675,"line_start":330,"line_end":330,"column_start":5,"column_end":49}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":26680,"byte_end":26707,"line_start":331,"line_end":331,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":26712,"byte_end":26715,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":26720,"byte_end":26750,"line_start":333,"line_end":333,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":26755,"byte_end":26758,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_write().is_some());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":26763,"byte_end":26803,"line_start":335,"line_end":335,"column_start":5,"column_end":45}},{"value":"/ let reader = lock.read().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":26808,"byte_end":26843,"line_start":336,"line_end":336,"column_start":5,"column_end":40}},{"value":"/ assert!(lock.try_write().is_none());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":26848,"byte_end":26888,"line_start":337,"line_end":337,"column_start":5,"column_end":45}},{"value":"/ # })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":26893,"byte_end":26901,"line_start":338,"line_end":338,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":26906,"byte_end":26913,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":27793,"byte_end":27798,"line_start":371,"line_end":371,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a write lock.","sig":null,"attributes":[{"value":"/ Acquires a write lock.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":27391,"byte_end":27417,"line_start":355,"line_end":355,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":27422,"byte_end":27425,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the lock when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":27430,"byte_end":27486,"line_start":357,"line_end":357,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":27491,"byte_end":27494,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":27499,"byte_end":27513,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":27518,"byte_end":27521,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":27526,"byte_end":27533,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":27538,"byte_end":27582,"line_start":362,"line_end":362,"column_start":5,"column_end":49}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":27587,"byte_end":27614,"line_start":363,"line_end":363,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":27619,"byte_end":27622,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":27627,"byte_end":27657,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":27662,"byte_end":27665,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let writer = lock.write().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":27670,"byte_end":27706,"line_start":367,"line_end":367,"column_start":5,"column_end":41}},{"value":"/ assert!(lock.try_read().is_none());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":27711,"byte_end":27750,"line_start":368,"line_end":368,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":27755,"byte_end":27763,"line_start":369,"line_end":369,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":27768,"byte_end":27775,"line_start":370,"line_end":370,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":29183,"byte_end":29190,"line_start":414,"line_end":414,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":28686,"byte_end":28737,"line_start":397,"line_end":397,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":28742,"byte_end":28745,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the lock mutably, no actual locking takes place. The mutable borrow","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":28750,"byte_end":28845,"line_start":399,"line_end":399,"column_start":5,"column_end":100}},{"value":"/ statically guarantees no locks exist.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":28850,"byte_end":28891,"line_start":400,"line_end":400,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":28896,"byte_end":28899,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":28904,"byte_end":28918,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":28923,"byte_end":28926,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":28931,"byte_end":28938,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":28943,"byte_end":28987,"line_start":405,"line_end":405,"column_start":5,"column_end":49}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":28992,"byte_end":29019,"line_start":406,"line_end":406,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":29024,"byte_end":29027,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut lock = RwLock::new(1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":29032,"byte_end":29066,"line_start":408,"line_end":408,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":29071,"byte_end":29074,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ *lock.get_mut() = 2;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":29079,"byte_end":29103,"line_start":410,"line_end":410,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(*lock.read().await, 2);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":29108,"byte_end":29146,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/ # })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":29151,"byte_end":29159,"line_start":412,"line_end":412,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":29164,"byte_end":29171,"line_start":413,"line_end":413,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":195},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":30094,"byte_end":30109,"line_start":448,"line_end":448,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::rwlock::RwLockReadGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that releases the read lock when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the read lock when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":30029,"byte_end":30082,"line_start":447,"line_end":447,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":217},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":31194,"byte_end":31219,"line_start":484,"line_end":484,"column_start":12,"column_end":37},"name":"RwLockUpgradableReadGuard","qualname":"::rwlock::RwLockUpgradableReadGuard","value":"RwLockUpgradableReadGuard {  }","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221}],"decl_id":null,"docs":" A guard that releases the upgradable read lock when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the upgradable read lock when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":31118,"byte_end":31182,"line_start":483,"line_end":483,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32404,"byte_end":32413,"line_start":523,"line_end":523,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockUpgradableReadGuard>::downgrade","value":"pub fn downgrade(Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Downgrades into a regular reader guard.","sig":null,"attributes":[{"value":"/ Downgrades into a regular reader guard.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":31832,"byte_end":31875,"line_start":503,"line_end":503,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":31880,"byte_end":31883,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":31888,"byte_end":31902,"line_start":505,"line_end":505,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":31907,"byte_end":31910,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":31915,"byte_end":31922,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":31927,"byte_end":31971,"line_start":508,"line_end":508,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{RwLock, RwLockUpgradableReadGuard};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":31976,"byte_end":32032,"line_start":509,"line_end":509,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32037,"byte_end":32040,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32045,"byte_end":32075,"line_start":511,"line_end":511,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32080,"byte_end":32083,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ let reader = lock.upgradable_read().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32088,"byte_end":32134,"line_start":513,"line_end":513,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(*reader, 1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32139,"byte_end":32166,"line_start":514,"line_end":514,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32171,"byte_end":32174,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_upgradable_read().is_none());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32179,"byte_end":32229,"line_start":516,"line_end":516,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32234,"byte_end":32237,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ let reader = RwLockUpgradableReadGuard::downgrade(reader);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32242,"byte_end":32304,"line_start":518,"line_end":518,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32309,"byte_end":32312,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_upgradable_read().is_some());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32317,"byte_end":32367,"line_start":520,"line_end":520,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32372,"byte_end":32380,"line_start":521,"line_end":521,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32385,"byte_end":32392,"line_start":522,"line_end":522,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":33366,"byte_end":33377,"line_start":552,"line_end":552,"column_start":12,"column_end":23},"name":"try_upgrade","qualname":"<RwLockUpgradableReadGuard>::try_upgrade","value":"pub fn try_upgrade(Self) -> Result<RwLockWriteGuard, Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade into a write lock.","sig":null,"attributes":[{"value":"/ Attempts to upgrade into a write lock.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32487,"byte_end":32529,"line_start":527,"line_end":527,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32534,"byte_end":32537,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ If a write lock could not be acquired at this time, then [`None`] is returned. Otherwise,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32542,"byte_end":32635,"line_start":529,"line_end":529,"column_start":5,"column_end":98}},{"value":"/ an upgraded guard is returned that releases the write lock when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32640,"byte_end":32716,"line_start":530,"line_end":530,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32721,"byte_end":32724,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ This function can only fail if there are other active read locks.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32729,"byte_end":32798,"line_start":532,"line_end":532,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32803,"byte_end":32806,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32811,"byte_end":32825,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32830,"byte_end":32833,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32838,"byte_end":32845,"line_start":536,"line_end":536,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32850,"byte_end":32894,"line_start":537,"line_end":537,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{RwLock, RwLockUpgradableReadGuard};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32899,"byte_end":32955,"line_start":538,"line_end":538,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32960,"byte_end":32963,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":32968,"byte_end":32998,"line_start":540,"line_end":540,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":33003,"byte_end":33006,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ let reader = lock.upgradable_read().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":33011,"byte_end":33057,"line_start":542,"line_end":542,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(*reader, 1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":33062,"byte_end":33089,"line_start":543,"line_end":543,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":33094,"byte_end":33097,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ let reader2 = lock.read().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":33102,"byte_end":33138,"line_start":545,"line_end":545,"column_start":5,"column_end":41}},{"value":"/ let reader = RwLockUpgradableReadGuard::try_upgrade(reader).unwrap_err();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":33143,"byte_end":33220,"line_start":546,"line_end":546,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":33225,"byte_end":33228,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ drop(reader2);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":33233,"byte_end":33251,"line_start":548,"line_end":548,"column_start":5,"column_end":23}},{"value":"/ let writer = RwLockUpgradableReadGuard::try_upgrade(reader).unwrap();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":33256,"byte_end":33329,"line_start":549,"line_end":549,"column_start":5,"column_end":78}},{"value":"/ # })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":33334,"byte_end":33342,"line_start":550,"line_end":550,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":33347,"byte_end":33354,"line_start":551,"line_end":551,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":34236,"byte_end":34243,"line_start":584,"line_end":584,"column_start":18,"column_end":25},"name":"upgrade","qualname":"<RwLockUpgradableReadGuard>::upgrade","value":"pub async fn upgrade(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Upgrades into a write lock.","sig":null,"attributes":[{"value":"/ Upgrades into a write lock.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":33767,"byte_end":33798,"line_start":567,"line_end":567,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":33803,"byte_end":33806,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":33811,"byte_end":33825,"line_start":569,"line_end":569,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":33830,"byte_end":33833,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":33838,"byte_end":33845,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":33850,"byte_end":33894,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{RwLock, RwLockUpgradableReadGuard};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":33899,"byte_end":33955,"line_start":573,"line_end":573,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":33960,"byte_end":33963,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":33968,"byte_end":33998,"line_start":575,"line_end":575,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":34003,"byte_end":34006,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ let reader = lock.upgradable_read().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":34011,"byte_end":34057,"line_start":577,"line_end":577,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(*reader, 1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":34062,"byte_end":34089,"line_start":578,"line_end":578,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":34094,"byte_end":34097,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ let mut writer = RwLockUpgradableReadGuard::upgrade(reader).await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":34102,"byte_end":34172,"line_start":580,"line_end":580,"column_start":5,"column_end":75}},{"value":"/ *writer = 2;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":34177,"byte_end":34193,"line_start":581,"line_end":581,"column_start":5,"column_end":21}},{"value":"/ # })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":34198,"byte_end":34206,"line_start":582,"line_end":582,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":34211,"byte_end":34218,"line_start":583,"line_end":583,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":253},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36083,"byte_end":36099,"line_start":643,"line_end":643,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"decl_id":null,"docs":" A guard that releases the write lock when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the write lock when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36017,"byte_end":36071,"line_start":642,"line_end":642,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36927,"byte_end":36936,"line_start":673,"line_end":673,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockWriteGuard>::downgrade","value":"pub fn downgrade(Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Downgrades into a regular reader guard.","sig":null,"attributes":[{"value":"/ Downgrades into a regular reader guard.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36379,"byte_end":36422,"line_start":652,"line_end":652,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36427,"byte_end":36430,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36435,"byte_end":36449,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36454,"byte_end":36457,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36462,"byte_end":36469,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36474,"byte_end":36518,"line_start":657,"line_end":657,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{RwLock, RwLockWriteGuard};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36523,"byte_end":36570,"line_start":658,"line_end":658,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36575,"byte_end":36578,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36583,"byte_end":36613,"line_start":660,"line_end":660,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36618,"byte_end":36621,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ let mut writer = lock.write().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36626,"byte_end":36666,"line_start":662,"line_end":662,"column_start":5,"column_end":45}},{"value":"/ *writer += 1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36671,"byte_end":36688,"line_start":663,"line_end":663,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36693,"byte_end":36696,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_none());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36701,"byte_end":36740,"line_start":665,"line_end":665,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36745,"byte_end":36748,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ let reader = RwLockWriteGuard::downgrade(writer);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36753,"byte_end":36806,"line_start":667,"line_end":667,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(*reader, 2);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36811,"byte_end":36838,"line_start":668,"line_end":668,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36843,"byte_end":36846,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_some());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36851,"byte_end":36890,"line_start":670,"line_end":670,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36895,"byte_end":36903,"line_start":671,"line_end":671,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36908,"byte_end":36915,"line_start":672,"line_end":672,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":38185,"byte_end":38208,"line_start":714,"line_end":714,"column_start":12,"column_end":35},"name":"downgrade_to_upgradable","qualname":"<RwLockWriteGuard>::downgrade_to_upgradable","value":"pub fn downgrade_to_upgradable(Self) -> RwLockUpgradableReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Downgrades into an upgradable reader guard.","sig":null,"attributes":[{"value":"/ Downgrades into an upgradable reader guard.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":37467,"byte_end":37514,"line_start":690,"line_end":690,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":37519,"byte_end":37522,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":37527,"byte_end":37541,"line_start":692,"line_end":692,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":37546,"byte_end":37549,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":37554,"byte_end":37561,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":37566,"byte_end":37610,"line_start":695,"line_end":695,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{RwLock, RwLockUpgradableReadGuard, RwLockWriteGuard};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":37615,"byte_end":37689,"line_start":696,"line_end":696,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":37694,"byte_end":37697,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":37702,"byte_end":37732,"line_start":698,"line_end":698,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":37737,"byte_end":37740,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ let mut writer = lock.write().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":37745,"byte_end":37785,"line_start":700,"line_end":700,"column_start":5,"column_end":45}},{"value":"/ *writer += 1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":37790,"byte_end":37807,"line_start":701,"line_end":701,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":37812,"byte_end":37815,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_none());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":37820,"byte_end":37859,"line_start":703,"line_end":703,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":37864,"byte_end":37867,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ let reader = RwLockWriteGuard::downgrade_to_upgradable(writer);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":37872,"byte_end":37939,"line_start":705,"line_end":705,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(*reader, 2);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":37944,"byte_end":37971,"line_start":706,"line_end":706,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":37976,"byte_end":37979,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_write().is_none());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":37984,"byte_end":38024,"line_start":708,"line_end":708,"column_start":5,"column_end":45}},{"value":"/ assert!(lock.try_read().is_some());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":38029,"byte_end":38068,"line_start":709,"line_end":709,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":38073,"byte_end":38076,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ assert!(RwLockUpgradableReadGuard::try_upgrade(reader).is_ok())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":38081,"byte_end":38148,"line_start":711,"line_end":711,"column_start":5,"column_end":72}},{"value":"/ # })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":38153,"byte_end":38161,"line_start":712,"line_end":712,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":38166,"byte_end":38173,"line_start":713,"line_end":713,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":334},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":39619,"byte_end":39628,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"decl_id":null,"docs":" A counter for limiting the number of concurrent operations.\n","sig":null,"attributes":[{"value":"/ A counter for limiting the number of concurrent operations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":39527,"byte_end":39590,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":39922,"byte_end":39925,"line_start":23,"line_end":23,"column_start":18,"column_end":21},"name":"new","qualname":"<Semaphore>::new","value":"pub const fn new(usize) -> Semaphore","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with a limit of `n` concurrent operations.","sig":null,"attributes":[{"value":"/ Creates a new semaphore with a limit of `n` concurrent operations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":39697,"byte_end":39767,"line_start":14,"line_end":14,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":39772,"byte_end":39775,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":39780,"byte_end":39794,"line_start":16,"line_end":16,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":39799,"byte_end":39802,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":39807,"byte_end":39814,"line_start":18,"line_end":18,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Semaphore;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":39819,"byte_end":39849,"line_start":19,"line_end":19,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":39854,"byte_end":39857,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ let s = Semaphore::new(5);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":39862,"byte_end":39892,"line_start":21,"line_end":21,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":39897,"byte_end":39904,"line_start":22,"line_end":22,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":40648,"byte_end":40659,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Option<SemaphoreGuard>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get a permit for a concurrent operation.","sig":null,"attributes":[{"value":"/ Attempts to get a permit for a concurrent operation.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":40065,"byte_end":40121,"line_start":30,"line_end":30,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":40126,"byte_end":40129,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ If the permit could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":40134,"byte_end":40227,"line_start":32,"line_end":32,"column_start":5,"column_end":98}},{"value":"/ guard is returned that releases the mutex when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":40232,"byte_end":40291,"line_start":33,"line_end":33,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":40296,"byte_end":40299,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":40304,"byte_end":40318,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":40323,"byte_end":40326,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":40331,"byte_end":40338,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Semaphore;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":40343,"byte_end":40373,"line_start":38,"line_end":38,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":40378,"byte_end":40381,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let s = Semaphore::new(2);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":40386,"byte_end":40416,"line_start":40,"line_end":40,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":40421,"byte_end":40424,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let g1 = s.try_acquire().unwrap();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":40429,"byte_end":40467,"line_start":42,"line_end":42,"column_start":5,"column_end":43}},{"value":"/ let g2 = s.try_acquire().unwrap();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":40472,"byte_end":40510,"line_start":43,"line_end":43,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":40515,"byte_end":40518,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ assert!(s.try_acquire().is_none());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":40523,"byte_end":40562,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/ drop(g2);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":40567,"byte_end":40580,"line_start":46,"line_end":46,"column_start":5,"column_end":18}},{"value":"/ assert!(s.try_acquire().is_some());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":40585,"byte_end":40624,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":40629,"byte_end":40636,"line_start":48,"line_end":48,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":41543,"byte_end":41550,"line_start":82,"line_end":82,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for a permit for a concurrent operation.","sig":null,"attributes":[{"value":"/ Waits for a permit for a concurrent operation.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":41165,"byte_end":41215,"line_start":68,"line_end":68,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":41220,"byte_end":41223,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the permit when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":41228,"byte_end":41286,"line_start":70,"line_end":70,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":41291,"byte_end":41294,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":41299,"byte_end":41313,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":41318,"byte_end":41321,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":41326,"byte_end":41333,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":41338,"byte_end":41382,"line_start":75,"line_end":75,"column_start":5,"column_end":49}},{"value":"/ use async_lock::Semaphore;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":41387,"byte_end":41417,"line_start":76,"line_end":76,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":41422,"byte_end":41425,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ let s = Semaphore::new(2);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":41430,"byte_end":41460,"line_start":78,"line_end":78,"column_start":5,"column_end":35}},{"value":"/ let guard = s.acquire().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":41465,"byte_end":41499,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":41504,"byte_end":41513,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":41518,"byte_end":41525,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":42569,"byte_end":42584,"line_start":119,"line_end":119,"column_start":12,"column_end":27},"name":"try_acquire_arc","qualname":"<Semaphore>::try_acquire_arc","value":"pub fn try_acquire_arc(&Arc<Self>) -> Option<SemaphoreGuardArc>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get an owned permit for a concurrent operation.","sig":null,"attributes":[{"value":"/ Attempts to get an owned permit for a concurrent operation.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":41918,"byte_end":41981,"line_start":99,"line_end":99,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":41986,"byte_end":41989,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ If the permit could not be acquired at this time, then [`None`] is returned. Otherwise, an","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":41994,"byte_end":42088,"line_start":101,"line_end":101,"column_start":5,"column_end":99}},{"value":"/ owned guard is returned that releases the mutex when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":42093,"byte_end":42158,"line_start":102,"line_end":102,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":42163,"byte_end":42166,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":42171,"byte_end":42185,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":42190,"byte_end":42193,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":42198,"byte_end":42205,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Semaphore;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":42210,"byte_end":42240,"line_start":107,"line_end":107,"column_start":5,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":42245,"byte_end":42268,"line_start":108,"line_end":108,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":42273,"byte_end":42276,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let s = Arc::new(Semaphore::new(2));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":42281,"byte_end":42321,"line_start":110,"line_end":110,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":42326,"byte_end":42329,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ let g1 = s.try_acquire_arc().unwrap();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":42334,"byte_end":42376,"line_start":112,"line_end":112,"column_start":5,"column_end":47}},{"value":"/ let g2 = s.try_acquire_arc().unwrap();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":42381,"byte_end":42423,"line_start":113,"line_end":113,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":42428,"byte_end":42431,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ assert!(s.try_acquire_arc().is_none());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":42436,"byte_end":42479,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ drop(g2);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":42484,"byte_end":42497,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ assert!(s.try_acquire_arc().is_some());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":42502,"byte_end":42545,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":42550,"byte_end":42557,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":43538,"byte_end":43549,"line_start":153,"line_end":153,"column_start":18,"column_end":29},"name":"acquire_arc","qualname":"<Semaphore>::acquire_arc","value":"pub async fn acquire_arc<'_>(&'_ Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for an owned permit for a concurrent operation.","sig":null,"attributes":[{"value":"/ Waits for an owned permit for a concurrent operation.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":43111,"byte_end":43168,"line_start":138,"line_end":138,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":43173,"byte_end":43176,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the permit when dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":43181,"byte_end":43239,"line_start":140,"line_end":140,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":43244,"byte_end":43247,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":43252,"byte_end":43266,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":43271,"byte_end":43274,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":43279,"byte_end":43286,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":43291,"byte_end":43335,"line_start":145,"line_end":145,"column_start":5,"column_end":49}},{"value":"/ use async_lock::Semaphore;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":43340,"byte_end":43370,"line_start":146,"line_end":146,"column_start":5,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":43375,"byte_end":43398,"line_start":147,"line_end":147,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":43403,"byte_end":43406,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let s = Arc::new(Semaphore::new(2));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":43411,"byte_end":43451,"line_start":149,"line_end":149,"column_start":5,"column_end":45}},{"value":"/ let guard = s.acquire_arc().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":43456,"byte_end":43494,"line_start":150,"line_end":150,"column_start":5,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":43499,"byte_end":43508,"line_start":151,"line_end":151,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":43513,"byte_end":43520,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":339},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":43985,"byte_end":43999,"line_start":171,"line_end":171,"column_start":12,"column_end":26},"name":"SemaphoreGuard","qualname":"::semaphore::SemaphoreGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that releases the acquired permit.\n","sig":null,"attributes":[{"value":"/ A guard that releases the acquired permit.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":43910,"byte_end":43956,"line_start":169,"line_end":169,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":346},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":44257,"byte_end":44274,"line_start":182,"line_end":182,"column_start":12,"column_end":29},"name":"SemaphoreGuardArc","qualname":"::semaphore::SemaphoreGuardArc","value":"","parent":null,"children":[],"decl_id":null,"docs":" An owned guard that releases the acquired permit.\n","sig":null,"attributes":[{"value":"/ An owned guard that releases the acquired permit.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":44175,"byte_end":44228,"line_start":180,"line_end":180,"column_start":1,"column_end":54}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1046,"byte_end":1053,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":3825,"byte_end":3842,"line_start":114,"line_end":114,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5622,"byte_end":5627,"line_start":48,"line_end":48,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5673,"byte_end":5678,"line_start":49,"line_end":49,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5694,"byte_end":5699,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6395,"byte_end":6400,"line_start":84,"line_end":84,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11115,"byte_end":11120,"line_start":244,"line_end":244,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":12636,"byte_end":12641,"line_start":297,"line_end":297,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":12761,"byte_end":12767,"line_start":300,"line_end":300,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13139,"byte_end":13144,"line_start":313,"line_end":313,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13255,"byte_end":13260,"line_start":319,"line_end":319,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13487,"byte_end":13497,"line_start":328,"line_end":328,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13547,"byte_end":13557,"line_start":329,"line_end":329,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13589,"byte_end":13599,"line_start":331,"line_end":331,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":14077,"byte_end":14087,"line_start":350,"line_end":350,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":14332,"byte_end":14342,"line_start":358,"line_end":358,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":14508,"byte_end":14518,"line_start":364,"line_end":364,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":14650,"byte_end":14660,"line_start":370,"line_end":370,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":14797,"byte_end":14807,"line_start":378,"line_end":378,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15058,"byte_end":15071,"line_start":387,"line_end":387,"column_start":40,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15117,"byte_end":15130,"line_start":388,"line_end":388,"column_start":40,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15154,"byte_end":15167,"line_start":390,"line_end":390,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15691,"byte_end":15704,"line_start":410,"line_end":410,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15945,"byte_end":15958,"line_start":418,"line_end":418,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":16120,"byte_end":16133,"line_start":424,"line_end":424,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":16261,"byte_end":16274,"line_start":430,"line_end":430,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":16407,"byte_end":16420,"line_start":438,"line_end":438,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":16608,"byte_end":16618,"line_start":447,"line_end":447,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":18390,"byte_end":18396,"line_start":66,"line_end":66,"column_start":40,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":18449,"byte_end":18455,"line_start":67,"line_end":67,"column_start":47,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":18471,"byte_end":18477,"line_start":69,"line_end":69,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19246,"byte_end":19252,"line_start":104,"line_end":104,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":29309,"byte_end":29315,"line_start":419,"line_end":419,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":29435,"byte_end":29441,"line_start":422,"line_end":422,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":29817,"byte_end":29823,"line_start":435,"line_end":435,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":29936,"byte_end":29942,"line_start":441,"line_end":441,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":30181,"byte_end":30196,"line_start":450,"line_end":450,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":30246,"byte_end":30261,"line_start":451,"line_end":451,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":30298,"byte_end":30313,"line_start":453,"line_end":453,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":30666,"byte_end":30681,"line_start":463,"line_end":463,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":30847,"byte_end":30862,"line_start":469,"line_end":469,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":30994,"byte_end":31009,"line_start":475,"line_end":475,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":31356,"byte_end":31381,"line_start":489,"line_end":489,"column_start":47,"column_end":72},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":31431,"byte_end":31456,"line_start":490,"line_end":490,"column_start":40,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":31488,"byte_end":31513,"line_start":492,"line_end":492,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":35205,"byte_end":35230,"line_start":611,"line_end":611,"column_start":45,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":35396,"byte_end":35421,"line_start":617,"line_end":617,"column_start":49,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":35553,"byte_end":35578,"line_start":623,"line_end":623,"column_start":27,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":35780,"byte_end":35801,"line_start":633,"line_end":633,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36235,"byte_end":36251,"line_start":648,"line_end":648,"column_start":40,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36301,"byte_end":36317,"line_start":649,"line_end":649,"column_start":40,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36349,"byte_end":36365,"line_start":651,"line_end":651,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":38813,"byte_end":38829,"line_start":732,"line_end":732,"column_start":45,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":38995,"byte_end":39011,"line_start":738,"line_end":738,"column_start":49,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":39143,"byte_end":39159,"line_start":744,"line_end":744,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":39304,"byte_end":39320,"line_start":752,"line_end":752,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":39681,"byte_end":39690,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":41902,"byte_end":41911,"line_start":98,"line_end":98,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":44035,"byte_end":44049,"line_start":173,"line_end":173,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":44307,"byte_end":44324,"line_start":184,"line_end":184,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":1046,"byte_end":1053,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/barrier.rs","byte_start":3825,"byte_end":3842,"line_start":114,"line_end":114,"column_start":6,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5622,"byte_end":5627,"line_start":48,"line_end":48,"column_start":40,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":29},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5673,"byte_end":5678,"line_start":49,"line_end":49,"column_start":40,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":29},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":5694,"byte_end":5699,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":29},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":6395,"byte_end":6400,"line_start":84,"line_end":84,"column_start":17,"column_end":22},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":29},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":11115,"byte_end":11120,"line_start":244,"line_end":244,"column_start":17,"column_end":22},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":29},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":12636,"byte_end":12641,"line_start":297,"line_end":297,"column_start":45,"column_end":50},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":29},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":12761,"byte_end":12767,"line_start":300,"line_end":300,"column_start":29,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13139,"byte_end":13144,"line_start":313,"line_end":313,"column_start":21,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":29},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13255,"byte_end":13260,"line_start":319,"line_end":319,"column_start":39,"column_end":44},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":29},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13487,"byte_end":13497,"line_start":328,"line_end":328,"column_start":40,"column_end":50},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":72},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13547,"byte_end":13557,"line_start":329,"line_end":329,"column_start":40,"column_end":50},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":72},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":13589,"byte_end":13599,"line_start":331,"line_end":331,"column_start":21,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":72},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":14077,"byte_end":14087,"line_start":350,"line_end":350,"column_start":26,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":72},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":14332,"byte_end":14342,"line_start":358,"line_end":358,"column_start":45,"column_end":55},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":72},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":14508,"byte_end":14518,"line_start":364,"line_end":364,"column_start":49,"column_end":59},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":72},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":14650,"byte_end":14660,"line_start":370,"line_end":370,"column_start":27,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":72},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":14797,"byte_end":14807,"line_start":378,"line_end":378,"column_start":30,"column_end":40},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":72},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15058,"byte_end":15071,"line_start":387,"line_end":387,"column_start":40,"column_end":53},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15117,"byte_end":15130,"line_start":388,"line_end":388,"column_start":40,"column_end":53},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15154,"byte_end":15167,"line_start":390,"line_end":390,"column_start":17,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15691,"byte_end":15704,"line_start":410,"line_end":410,"column_start":26,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":15945,"byte_end":15958,"line_start":418,"line_end":418,"column_start":45,"column_end":58},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":16120,"byte_end":16133,"line_start":424,"line_end":424,"column_start":49,"column_end":62},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":16261,"byte_end":16274,"line_start":430,"line_end":430,"column_start":27,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":16407,"byte_end":16420,"line_start":438,"line_end":438,"column_start":30,"column_end":43},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/mutex.rs","byte_start":16608,"byte_end":16618,"line_start":447,"line_end":447,"column_start":24,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":128},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":18390,"byte_end":18396,"line_start":66,"line_end":66,"column_start":40,"column_end":46},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":152},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":18449,"byte_end":18455,"line_start":67,"line_end":67,"column_start":47,"column_end":53},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":152},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":18471,"byte_end":18477,"line_start":69,"line_end":69,"column_start":9,"column_end":15},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":19246,"byte_end":19252,"line_start":104,"line_end":104,"column_start":17,"column_end":23},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":29309,"byte_end":29315,"line_start":419,"line_end":419,"column_start":45,"column_end":51},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":152},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":29435,"byte_end":29441,"line_start":422,"line_end":422,"column_start":29,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":185},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":29817,"byte_end":29823,"line_start":435,"line_end":435,"column_start":21,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":152},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":29936,"byte_end":29942,"line_start":441,"line_end":441,"column_start":39,"column_end":45},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":152},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":30181,"byte_end":30196,"line_start":450,"line_end":450,"column_start":40,"column_end":55},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":30246,"byte_end":30261,"line_start":451,"line_end":451,"column_start":40,"column_end":55},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":30298,"byte_end":30313,"line_start":453,"line_end":453,"column_start":26,"column_end":41},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":30666,"byte_end":30681,"line_start":463,"line_end":463,"column_start":45,"column_end":60},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":30847,"byte_end":30862,"line_start":469,"line_end":469,"column_start":49,"column_end":64},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":30994,"byte_end":31009,"line_start":475,"line_end":475,"column_start":27,"column_end":42},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":31356,"byte_end":31381,"line_start":489,"line_end":489,"column_start":47,"column_end":72},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":217},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":31431,"byte_end":31456,"line_start":490,"line_end":490,"column_start":40,"column_end":65},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":217},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":31488,"byte_end":31513,"line_start":492,"line_end":492,"column_start":21,"column_end":46},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":35205,"byte_end":35230,"line_start":611,"line_end":611,"column_start":45,"column_end":70},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":217},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":35396,"byte_end":35421,"line_start":617,"line_end":617,"column_start":49,"column_end":74},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":217},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":35553,"byte_end":35578,"line_start":623,"line_end":623,"column_start":27,"column_end":52},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":217},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":35780,"byte_end":35801,"line_start":633,"line_end":633,"column_start":26,"column_end":47},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":245},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36235,"byte_end":36251,"line_start":648,"line_end":648,"column_start":40,"column_end":56},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":253},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36301,"byte_end":36317,"line_start":649,"line_end":649,"column_start":40,"column_end":56},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":253},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":36349,"byte_end":36365,"line_start":651,"line_end":651,"column_start":21,"column_end":37},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":38813,"byte_end":38829,"line_start":732,"line_end":732,"column_start":45,"column_end":61},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":253},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":38995,"byte_end":39011,"line_start":738,"line_end":738,"column_start":49,"column_end":65},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":253},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":39143,"byte_end":39159,"line_start":744,"line_end":744,"column_start":27,"column_end":43},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":253},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/rwlock.rs","byte_start":39304,"byte_end":39320,"line_start":752,"line_end":752,"column_start":30,"column_end":46},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":253},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":39681,"byte_end":39690,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":41902,"byte_end":41911,"line_start":98,"line_end":98,"column_start":6,"column_end":15},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":44035,"byte_end":44049,"line_start":173,"line_end":173,"column_start":15,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":339},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.3.0/src/semaphore.rs","byte_start":44307,"byte_end":44324,"line_start":184,"line_end":184,"column_start":15,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":346},"to":{"krate":2,"index":2266}}]}