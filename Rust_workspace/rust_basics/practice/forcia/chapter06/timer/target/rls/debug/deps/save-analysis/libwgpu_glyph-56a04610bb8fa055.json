{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0","program":"/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wgpu_glyph","--edition=2018","/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=56a04610bb8fa055","-C","extra-filename=-56a04610bb8fa055","--out-dir","/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter06/timer/target/rls/debug/deps","-L","dependency=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter06/timer/target/rls/debug/deps","--extern","glyph_brush=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter06/timer/target/rls/debug/deps/libglyph_brush-80e97c833342a58c.rmeta","--extern","log=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter06/timer/target/rls/debug/deps/liblog-2a69b353d1035ca7.rmeta","--extern","wgpu=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter06/timer/target/rls/debug/deps/libwgpu-685369a2c23f0467.rmeta","--cap-lints","allow","-L","native=/usr/lib/x86_64-linux-gnu","--error-format=json","--sysroot","/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter06/timer/target/rls/debug/deps/libwgpu_glyph-56a04610bb8fa055.rmeta"},"prelude":{"crate_id":{"name":"wgpu_glyph","disambiguator":[4072618368558010736,9019110606804450208]},"crate_root":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src","external_crates":[{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3329901521826220148,8779651902869174066]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":2,"id":{"name":"core","disambiguator":[11533795067257537051,6600409280955634707]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12614123221401343543,9564301585503608515]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1785005413158388284,2453622026203223019]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12957079427417428001,17718260667887668647]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10214993728156300765,14618204673916620187]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12453517098623888364,4709794086161820998]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12634510118091288440,7983944581587655387]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14017342134866723280,9256858969587329629]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7061025862014072460,14171357653989770935]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2285728033677722481,16182084057206383065]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7305883247437987566,266452839079745451]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13956229687295891598,15294992126055156716]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[931598532372339641,10024719927090962737]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[11150552510595322945,15608256962932530162]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4217706585212656622,592289864015908737]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[2229008352226773351,3496425060661471051]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":18,"id":{"name":"glyph_brush","disambiguator":[14461146128711531151,15869256615143260113]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":19,"id":{"name":"rusttype","disambiguator":[33839856608319735,13592589050001249357]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":20,"id":{"name":"approx","disambiguator":[2442880620560941311,2677728414806092262]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":21,"id":{"name":"num_traits","disambiguator":[18102483637265266435,5149433718230571651]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":22,"id":{"name":"ordered_float","disambiguator":[17104366438003903018,4308477141959915742]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":23,"id":{"name":"linked_hash_map","disambiguator":[18102253495663845661,4666025729014083536]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":24,"id":{"name":"rustc_hash","disambiguator":[10799712089893873097,15642320727124619119]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":25,"id":{"name":"crossbeam_deque","disambiguator":[5849809951686507806,6378485700357696498]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":26,"id":{"name":"crossbeam_epoch","disambiguator":[5088885285655364609,1830027096095607974]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":27,"id":{"name":"cfg_if","disambiguator":[9015421078749522011,4315844557797051765]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":28,"id":{"name":"maybe_uninit","disambiguator":[18213777896645316402,261489198914462648]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":29,"id":{"name":"crossbeam_utils","disambiguator":[5048551692920081388,17338338557972187176]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":30,"id":{"name":"lazy_static","disambiguator":[2470383162066340162,6700700590454652848]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":31,"id":{"name":"memoffset","disambiguator":[7081681286866654024,9071681368326523802]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":32,"id":{"name":"scopeguard","disambiguator":[13742932171067816904,15949076817111810874]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":33,"id":{"name":"stb_truetype","disambiguator":[9012865023321275348,7139222584977619912]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":34,"id":{"name":"byteorder","disambiguator":[9882234172180254623,3551766597719573225]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":35,"id":{"name":"num_cpus","disambiguator":[12613100163892129466,3784827973501235792]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":36,"id":{"name":"libc","disambiguator":[3800494124530081931,3463518720461322788]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","num":37,"id":{"name":"log","disambiguator":[15023639168608180861,18039869484860833466]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":38,"id":{"name":"cfg_if","disambiguator":[17405709527175409947,1096695995382631820]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":39,"id":{"name":"value_bag","disambiguator":[17683222284734379674,1469789403133961335]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":40,"id":{"name":"ctor","disambiguator":[13094809719813952805,11882337333484102486]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":41,"id":{"name":"glyph_brush_layout","disambiguator":[5304178390722894367,16319695415088982737]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":42,"id":{"name":"xi_unicode","disambiguator":[18124679946462679601,353184808080506780]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":43,"id":{"name":"twox_hash","disambiguator":[1420838189645537910,1957173367847178305]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":44,"id":{"name":"static_assertions","disambiguator":[1936815850315553871,17847035570453106421]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":45,"id":{"name":"rand","disambiguator":[18353170022609452693,12642143146868833541]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":46,"id":{"name":"rand_core","disambiguator":[4862194132302993219,4408341535903406929]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":47,"id":{"name":"getrandom","disambiguator":[15106318253898195824,6999423602095622711]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":48,"id":{"name":"rand_chacha","disambiguator":[6953391146133476504,84927127023638089]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":49,"id":{"name":"ppv_lite86","disambiguator":[9012823233149414985,12709374118519403332]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":50,"id":{"name":"wgpu","disambiguator":[17478398159302983138,4411328080927748135]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":51,"id":{"name":"arrayvec","disambiguator":[5311188084216334454,6394550193531724158]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":52,"id":{"name":"zerocopy","disambiguator":[25677512594696053,17445025395978771016]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":53,"id":{"name":"zerocopy_derive","disambiguator":[3024636627786438440,12149362349242125247]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":54,"id":{"name":"wgpu_native","disambiguator":[13445278681342529552,11322577760539959903]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":55,"id":{"name":"gfx_backend_empty","disambiguator":[5097702521914976291,5244782463740500482]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":56,"id":{"name":"gfx_hal","disambiguator":[1160024678049385583,4108694661582774333]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":57,"id":{"name":"bitflags","disambiguator":[9165588580007963606,5638763360476460501]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":58,"id":{"name":"smallvec","disambiguator":[1599244063048730678,8627346815940542373]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":59,"id":{"name":"raw_window_handle","disambiguator":[12767961922193492099,3234823766176022424]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":60,"id":{"name":"gfx_backend_vulkan","disambiguator":[14228393437441236875,15333872122959288596]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":61,"id":{"name":"ash","disambiguator":[8977929317970838285,10938893338698163859]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":62,"id":{"name":"shared_library","disambiguator":[2864744037292582793,3991889092186414187]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":63,"id":{"name":"rendy_descriptor","disambiguator":[6666727202021241673,6358313001021186202]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":64,"id":{"name":"relevant","disambiguator":[1844741023045667097,8748421391733746310]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":65,"id":{"name":"parking_lot","disambiguator":[8504086672753960089,2666138382128611589]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":66,"id":{"name":"lock_api","disambiguator":[2716539207018647825,17248365013491375856]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":67,"id":{"name":"parking_lot_core","disambiguator":[9516835627499877339,3823233772733366213]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":68,"id":{"name":"copyless","disambiguator":[8055301604793740631,15198196617865541532]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":69,"id":{"name":"rendy_memory","disambiguator":[9630008001426832087,16197857177495833345]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":70,"id":{"name":"hibitset","disambiguator":[5742452947473803537,10494116200913773731]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":71,"id":{"name":"atom","disambiguator":[15954665800976008527,14480536614251483258]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":72,"id":{"name":"colorful","disambiguator":[10135521563720918410,16084109882218347550]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":73,"id":{"name":"slab","disambiguator":[12314209455201404546,12853708085438978694]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":74,"id":{"name":"vec_map","disambiguator":[6223129251989475599,9760855958209078732]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","num":75,"id":{"name":"fxhash","disambiguator":[14148990342152566552,11456709220650684160]}}],"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":0,"byte_end":16305,"line_start":1,"line_end":491,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":111},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":285,"byte_end":291,"line_start":10,"line_end":10,"column_start":17,"column_end":23},"alias_span":null,"name":"Region","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":14},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":348,"byte_end":365,"line_start":14,"line_end":14,"column_start":18,"column_end":35},"alias_span":null,"name":"GlyphBrushBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":310},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":394,"byte_end":402,"line_start":16,"line_end":16,"column_start":5,"column_end":13},"alias_span":null,"name":"rusttype","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":729},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":411,"byte_end":415,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"alias_span":null,"name":"Font","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":398},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":417,"byte_end":422,"line_start":16,"line_end":16,"column_start":28,"column_end":33},"alias_span":null,"name":"Point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":884},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":424,"byte_end":439,"line_start":16,"line_end":16,"column_start":35,"column_end":50},"alias_span":null,"name":"PositionedGlyph","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":528},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":441,"byte_end":445,"line_start":16,"line_end":16,"column_start":52,"column_end":56},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":892},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":447,"byte_end":452,"line_start":16,"line_end":16,"column_start":58,"column_end":63},"alias_span":null,"name":"Scale","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":735},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":454,"byte_end":465,"line_start":16,"line_end":16,"column_start":65,"column_end":76},"alias_span":null,"name":"SharedBytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":460},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":472,"byte_end":490,"line_start":17,"line_end":17,"column_start":5,"column_end":23},"alias_span":null,"name":"BuiltInLineBreaker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":410},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":492,"byte_end":498,"line_start":17,"line_end":17,"column_start":25,"column_end":31},"alias_span":null,"name":"FontId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":411},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":492,"byte_end":498,"line_start":17,"line_end":17,"column_start":25,"column_end":31},"alias_span":null,"name":"FontId","value":"","parent":{"krate":0,"index":131}},{"kind":"Use","ref_id":{"krate":41,"index":131},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":500,"byte_end":507,"line_start":17,"line_end":17,"column_start":33,"column_end":40},"alias_span":null,"name":"FontMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":204},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":509,"byte_end":522,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"alias_span":null,"name":"GlyphCruncher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":327},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":524,"byte_end":539,"line_start":17,"line_end":17,"column_start":57,"column_end":72},"alias_span":null,"name":"GlyphPositioner","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":368},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":545,"byte_end":560,"line_start":18,"line_end":18,"column_start":5,"column_end":20},"alias_span":null,"name":"HorizontalAlign","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":335},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":562,"byte_end":568,"line_start":18,"line_end":18,"column_start":22,"column_end":28},"alias_span":null,"name":"Layout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":438},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":570,"byte_end":579,"line_start":18,"line_end":18,"column_start":30,"column_end":39},"alias_span":null,"name":"LineBreak","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":149},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":581,"byte_end":592,"line_start":18,"line_end":18,"column_start":41,"column_end":52},"alias_span":null,"name":"LineBreaker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":494},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":594,"byte_end":610,"line_start":18,"line_end":18,"column_start":54,"column_end":70},"alias_span":null,"name":"OwnedSectionText","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":480},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":616,"byte_end":634,"line_start":19,"line_end":19,"column_start":5,"column_end":23},"alias_span":null,"name":"OwnedVariedSection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":199},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":636,"byte_end":655,"line_start":19,"line_end":19,"column_start":25,"column_end":44},"alias_span":null,"name":"PositionedGlyphIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":527},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":657,"byte_end":664,"line_start":19,"line_end":19,"column_start":46,"column_end":53},"alias_span":null,"name":"Section","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":479},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":666,"byte_end":681,"line_start":19,"line_end":19,"column_start":55,"column_end":70},"alias_span":null,"name":"SectionGeometry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":491},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":687,"byte_end":698,"line_start":20,"line_end":20,"column_start":5,"column_end":16},"alias_span":null,"name":"SectionText","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":508},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":700,"byte_end":713,"line_start":20,"line_end":20,"column_start":18,"column_end":31},"alias_span":null,"name":"VariedSection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":389},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":715,"byte_end":728,"line_start":20,"line_end":20,"column_start":33,"column_end":46},"alias_span":null,"name":"VerticalAlign","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":0,"byte_end":16305,"line_start":1,"line_end":491,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":51},{"krate":0,"index":110},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":309},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":163},{"krate":0,"index":190},{"krate":0,"index":199},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":224}],"decl_id":null,"docs":" A fast text renderer for [`wgpu`]. Powered by [`glyph_brush`].","sig":null,"attributes":[{"value":"/ A fast text renderer for [`wgpu`]. Powered by [`glyph_brush`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":0,"byte_end":66,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":67,"byte_end":70,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [`wgpu`]: https://github.com/gfx-rs/wgpu","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":71,"byte_end":115,"line_start":3,"line_end":3,"column_start":1,"column_end":45}},{"value":"/ [`glyph_brush`]: https://github.com/alexheretic/glyph-brush/tree/master/glyph-brush","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":116,"byte_end":203,"line_start":4,"line_end":4,"column_start":1,"column_end":88}},{"value":"deny(unused_results)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":204,"byte_end":228,"line_start":5,"line_end":5,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":14},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":16575,"byte_end":16592,"line_start":10,"line_end":10,"column_start":12,"column_end":29},"name":"GlyphBrushBuilder","qualname":"::builder::GlyphBrushBuilder","value":"GlyphBrushBuilder {  }","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20}],"decl_id":null,"docs":" Builder for a [`GlyphBrush`](struct.GlyphBrush.html).\n","sig":null,"attributes":[{"value":"/ Builder for a [`GlyphBrush`](struct.GlyphBrush.html).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":16506,"byte_end":16563,"line_start":9,"line_end":9,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":17233,"byte_end":17249,"line_start":32,"line_end":32,"column_start":12,"column_end":28},"name":"using_font_bytes","qualname":"<GlyphBrushBuilder>::using_font_bytes","value":"pub fn using_font_bytes<B: Into<SharedBytes>>(B) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Specifies the default font data used to render glyphs.\n Referenced with `FontId(0)`, which is default.\n","sig":null,"attributes":[{"value":"/ Specifies the default font data used to render glyphs.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":17094,"byte_end":17152,"line_start":29,"line_end":29,"column_start":5,"column_end":63}},{"value":"/ Referenced with `FontId(0)`, which is default.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":17157,"byte_end":17207,"line_start":30,"line_end":30,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":17212,"byte_end":17221,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":17451,"byte_end":17468,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"using_fonts_bytes","qualname":"<GlyphBrushBuilder>::using_fonts_bytes","value":"pub fn using_fonts_bytes<B, V>(V) -> Result<Self, Error> where\nB: Into<SharedBytes>, V: Into<Vec<B>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":17430,"byte_end":17439,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":17933,"byte_end":17943,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"using_font","qualname":"<GlyphBrushBuilder>::using_font","value":"pub fn using_font(Font) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the default font used to render glyphs.\n Referenced with `FontId(0)`, which is default.\n","sig":null,"attributes":[{"value":"/ Specifies the default font used to render glyphs.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":17799,"byte_end":17852,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/ Referenced with `FontId(0)`, which is default.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":17857,"byte_end":17907,"line_start":56,"line_end":56,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":17912,"byte_end":17921,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":18030,"byte_end":18041,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"using_fonts","qualname":"<GlyphBrushBuilder>::using_fonts","value":"pub fn using_fonts<V: Into<Vec<Font>>>(V) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":18447,"byte_end":18468,"line_start":75,"line_end":75,"column_start":12,"column_end":33},"name":"texture_filter_method","qualname":"<GlyphBrushBuilder>::texture_filter_method","value":"pub fn texture_filter_method(Self, wgpu::FilterMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the texture filtering method.\n","sig":null,"attributes":[{"value":"/ Sets the texture filtering method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":18397,"byte_end":18435,"line_start":74,"line_end":74,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":18930,"byte_end":18944,"line_start":90,"line_end":90,"column_start":12,"column_end":26},"name":"section_hasher","qualname":"<GlyphBrushBuilder>::section_hasher","value":"pub fn section_hasher<T: BuildHasher>(Self, T) -> GlyphBrushBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the section hasher. `GlyphBrush` cannot handle absolute section\n hash collisions so use a good hash algorithm.","sig":null,"attributes":[{"value":"/ Sets the section hasher. `GlyphBrush` cannot handle absolute section","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":18621,"byte_end":18693,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ hash collisions so use a good hash algorithm.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":18698,"byte_end":18747,"line_start":84,"line_end":84,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":18752,"byte_end":18755,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This hasher is used to distinguish sections, rather than for hashmap","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":18760,"byte_end":18832,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ internal use.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":18837,"byte_end":18854,"line_start":87,"line_end":87,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":18859,"byte_end":18862,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Defaults to [seahash](https://docs.rs/seahash).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":18867,"byte_end":18918,"line_start":89,"line_end":89,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":19286,"byte_end":19305,"line_start":102,"line_end":102,"column_start":12,"column_end":31},"name":"depth_stencil_state","qualname":"<GlyphBrushBuilder>::depth_stencil_state","value":"pub fn depth_stencil_state(Self, wgpu::DepthStencilStateDescriptor)\n-> GlyphBrushBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the depth stencil.\n","sig":null,"attributes":[{"value":"/ Sets the depth stencil.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":19247,"byte_end":19274,"line_start":101,"line_end":101,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":19844,"byte_end":19849,"line_start":117,"line_end":117,"column_start":12,"column_end":17},"name":"build","qualname":"<GlyphBrushBuilder>::build","value":"pub fn build(Self, &wgpu::Device, wgpu::TextureFormat) -> GlyphBrush","parent":null,"children":[],"decl_id":null,"docs":" Builds a `GlyphBrush` using the given `wgpu::Device` that can render\n text for texture views with the given `render_format`.\n","sig":null,"attributes":[{"value":"/ Builds a `GlyphBrush` using the given `wgpu::Device` that can render","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":19697,"byte_end":19769,"line_start":115,"line_end":115,"column_start":5,"column_end":77}},{"value":"/ text for texture views with the given `render_format`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":19774,"byte_end":19832,"line_start":116,"line_end":116,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":20379,"byte_end":20384,"line_start":136,"line_end":136,"column_start":12,"column_end":17},"name":"build","qualname":"<GlyphBrushBuilder>::build","value":"pub fn build(Self, &wgpu::Device, wgpu::TextureFormat) -> GlyphBrush","parent":null,"children":[],"decl_id":null,"docs":" Builds a `GlyphBrush` using the given `wgpu::Device` that can render\n text for texture views with the given `render_format`.\n","sig":null,"attributes":[{"value":"/ Builds a `GlyphBrush` using the given `wgpu::Device` that can render","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":20232,"byte_end":20304,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/ text for texture views with the given `render_format`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":20309,"byte_end":20367,"line_start":135,"line_end":135,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":111},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/region.rs","byte_start":37528,"byte_end":37534,"line_start":2,"line_end":2,"column_start":12,"column_end":18},"name":"Region","qualname":"::region::Region","value":"Region { x, y, width, height }","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" A region of the screen.\n","sig":null,"attributes":[{"value":"/ A region of the screen.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/region.rs","byte_start":37489,"byte_end":37516,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":112},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/region.rs","byte_start":37545,"byte_end":37546,"line_start":3,"line_end":3,"column_start":9,"column_end":10},"name":"x","qualname":"::region::Region::x","value":"u32","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":113},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/region.rs","byte_start":37561,"byte_end":37562,"line_start":4,"line_end":4,"column_start":9,"column_end":10},"name":"y","qualname":"::region::Region::y","value":"u32","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":114},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/region.rs","byte_start":37577,"byte_end":37582,"line_start":5,"line_end":5,"column_start":9,"column_end":14},"name":"width","qualname":"::region::Region::width","value":"u32","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":115},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/region.rs","byte_start":37597,"byte_end":37603,"line_start":6,"line_end":6,"column_start":9,"column_end":15},"name":"height","qualname":"::region::Region::height","value":"u32","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":157},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":1159,"byte_end":1169,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"GlyphBrush","qualname":"::GlyphBrush","value":"GlyphBrush {  }","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"decl_id":null,"docs":" Object allowing glyph drawing, containing cache state. Manages glyph positioning cacheing,\n glyph draw caching & efficient GPU texture cache updating and re-sizing on demand.","sig":null,"attributes":[{"value":"/ Object allowing glyph drawing, containing cache state. Manages glyph positioning cacheing,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":890,"byte_end":984,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/ glyph draw caching & efficient GPU texture cache updating and re-sizing on demand.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":985,"byte_end":1071,"line_start":30,"line_end":30,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":1072,"byte_end":1075,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Build using a [`GlyphBrushBuilder`](struct.GlyphBrushBuilder.html).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":1076,"byte_end":1147,"line_start":32,"line_end":32,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":1691,"byte_end":1696,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"queue","qualname":"<GlyphBrush>::queue","value":"pub fn queue<'a, S>(&mut Self, S) where S: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Queues a section/layout to be drawn by the next call of\n [`draw_queued`](struct.GlyphBrush.html#method.draw_queued). Can be\n called multiple times to queue multiple sections for drawing.","sig":null,"attributes":[{"value":"/ Queues a section/layout to be drawn by the next call of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":1377,"byte_end":1436,"line_start":39,"line_end":39,"column_start":5,"column_end":64}},{"value":"/ [`draw_queued`](struct.GlyphBrush.html#method.draw_queued). Can be","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":1441,"byte_end":1511,"line_start":40,"line_end":40,"column_start":5,"column_end":75}},{"value":"/ called multiple times to queue multiple sections for drawing.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":1516,"byte_end":1581,"line_start":41,"line_end":41,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":1586,"byte_end":1589,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Benefits from caching, see [caching behaviour](#caching-behaviour).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":1594,"byte_end":1665,"line_start":43,"line_end":43,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":1670,"byte_end":1679,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":2338,"byte_end":2357,"line_start":62,"line_end":62,"column_start":12,"column_end":31},"name":"queue_custom_layout","qualname":"<GlyphBrush>::queue_custom_layout","value":"pub fn queue_custom_layout<'a, S, G>(&mut Self, S, &G) where\nG: GlyphPositioner, S: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Queues a section/layout to be drawn by the next call of\n [`draw_queued`](struct.GlyphBrush.html#method.draw_queued). Can be\n called multiple times to queue multiple sections for drawing.","sig":null,"attributes":[{"value":"/ Queues a section/layout to be drawn by the next call of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":1839,"byte_end":1898,"line_start":52,"line_end":52,"column_start":5,"column_end":64}},{"value":"/ [`draw_queued`](struct.GlyphBrush.html#method.draw_queued). Can be","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":1903,"byte_end":1973,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/ called multiple times to queue multiple sections for drawing.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":1978,"byte_end":2043,"line_start":54,"line_end":54,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":2048,"byte_end":2051,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Used to provide custom `GlyphPositioner` logic, if using built-in","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":2056,"byte_end":2125,"line_start":56,"line_end":56,"column_start":5,"column_end":74}},{"value":"/ [`Layout`](enum.Layout.html) simply use","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":2130,"byte_end":2173,"line_start":57,"line_end":57,"column_start":5,"column_end":48}},{"value":"/ [`queue`](struct.GlyphBrush.html#method.queue)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":2178,"byte_end":2228,"line_start":58,"line_end":58,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":2233,"byte_end":2236,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Benefits from caching, see [caching behaviour](#caching-behaviour).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":2241,"byte_end":2312,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":2317,"byte_end":2326,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":2806,"byte_end":2826,"line_start":77,"line_end":77,"column_start":12,"column_end":32},"name":"queue_pre_positioned","qualname":"<GlyphBrush>::queue_pre_positioned","value":"pub fn queue_pre_positioned(&mut Self, Vec<(PositionedGlyph, Color, FontId)>,\n                            Rect<f32>, f32)","parent":null,"children":[],"decl_id":null,"docs":" Queues pre-positioned glyphs to be processed by the next call of\n [`draw_queued`](struct.GlyphBrush.html#method.draw_queued). Can be\n called multiple times.\n","sig":null,"attributes":[{"value":"/ Queues pre-positioned glyphs to be processed by the next call of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":2606,"byte_end":2674,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ [`draw_queued`](struct.GlyphBrush.html#method.draw_queued). Can be","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":2679,"byte_end":2749,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ called multiple times.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":2754,"byte_end":2780,"line_start":75,"line_end":75,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":2785,"byte_end":2794,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":3310,"byte_end":3335,"line_start":92,"line_end":92,"column_start":12,"column_end":37},"name":"keep_cached_custom_layout","qualname":"<GlyphBrush>::keep_cached_custom_layout","value":"pub fn keep_cached_custom_layout<'a, S, G>(&mut Self, S, &G) where\nS: Into<Cow>, G: GlyphPositioner","parent":null,"children":[],"decl_id":null,"docs":" Retains the section in the cache as if it had been used in the last\n draw-frame.","sig":null,"attributes":[{"value":"/ Retains the section in the cache as if it had been used in the last","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":3036,"byte_end":3107,"line_start":86,"line_end":86,"column_start":5,"column_end":76}},{"value":"/ draw-frame.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":3112,"byte_end":3127,"line_start":87,"line_end":87,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":3132,"byte_end":3135,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Should not be necessary unless using multiple draws per frame with","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":3140,"byte_end":3210,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ distinct transforms, see [caching behaviour](#caching-behaviour).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":3215,"byte_end":3284,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":3289,"byte_end":3298,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":3877,"byte_end":3888,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"keep_cached","qualname":"<GlyphBrush>::keep_cached","value":"pub fn keep_cached<'a, S>(&mut Self, S) where S: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Retains the section in the cache as if it had been used in the last\n draw-frame.","sig":null,"attributes":[{"value":"/ Retains the section in the cache as if it had been used in the last","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":3603,"byte_end":3674,"line_start":104,"line_end":104,"column_start":5,"column_end":76}},{"value":"/ draw-frame.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":3679,"byte_end":3694,"line_start":105,"line_end":105,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":3699,"byte_end":3702,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Should not be necessary unless using multiple draws per frame with","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":3707,"byte_end":3777,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ distinct transforms, see [caching behaviour](#caching-behaviour).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":3782,"byte_end":3851,"line_start":108,"line_end":108,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":3856,"byte_end":3865,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":6620,"byte_end":6625,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"fonts","qualname":"<GlyphBrush>::fonts","value":"pub fn fonts(&Self) -> &[Font]","parent":null,"children":[],"decl_id":null,"docs":" Returns the available fonts.","sig":null,"attributes":[{"value":"/ Returns the available fonts.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":6490,"byte_end":6522,"line_start":182,"line_end":182,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":6527,"byte_end":6530,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The `FontId` corresponds to the index of the font data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":6535,"byte_end":6594,"line_start":184,"line_end":184,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":6599,"byte_end":6608,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":6858,"byte_end":6872,"line_start":193,"line_end":193,"column_start":12,"column_end":26},"name":"add_font_bytes","qualname":"<GlyphBrush>::add_font_bytes","value":"pub fn add_font_bytes<'a:'font, B: Into<SharedBytes>>(&mut Self, B) -> FontId","parent":null,"children":[],"decl_id":null,"docs":" Adds an additional font to the one(s) initially added on build.","sig":null,"attributes":[{"value":"/ Adds an additional font to the one(s) initially added on build.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":6694,"byte_end":6761,"line_start":190,"line_end":190,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":6766,"byte_end":6769,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Returns a new [`FontId`](struct.FontId.html) to reference this font.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":6774,"byte_end":6846,"line_start":192,"line_end":192,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":7196,"byte_end":7204,"line_start":203,"line_end":203,"column_start":12,"column_end":20},"name":"add_font","qualname":"<GlyphBrush>::add_font","value":"pub fn add_font<'a:'font>(&mut Self, Font) -> FontId","parent":null,"children":[],"decl_id":null,"docs":" Adds an additional font to the one(s) initially added on build.","sig":null,"attributes":[{"value":"/ Adds an additional font to the one(s) initially added on build.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":7032,"byte_end":7099,"line_start":200,"line_end":200,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":7104,"byte_end":7107,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ Returns a new [`FontId`](struct.FontId.html) to reference this font.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":7112,"byte_end":7184,"line_start":202,"line_end":202,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":8443,"byte_end":8454,"line_start":240,"line_end":240,"column_start":12,"column_end":23},"name":"draw_queued","qualname":"<GlyphBrush>::draw_queued","value":"pub fn draw_queued(&mut Self, &wgpu::Device, &mut wgpu::CommandEncoder,\n                   &wgpu::TextureView, u32, u32) -> Result<(), String>","parent":null,"children":[],"decl_id":null,"docs":" Draws all queued sections onto a render target.\n See [`queue`](struct.GlyphBrush.html#method.queue).","sig":null,"attributes":[{"value":"/ Draws all queued sections onto a render target.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":7965,"byte_end":8016,"line_start":229,"line_end":229,"column_start":5,"column_end":56}},{"value":"/ See [`queue`](struct.GlyphBrush.html#method.queue).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":8021,"byte_end":8076,"line_start":230,"line_end":230,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":8081,"byte_end":8084,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ It __does not__ submit the encoder command buffer to the device queue.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":8089,"byte_end":8163,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":8168,"byte_end":8171,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Trims the cache, see [caching behaviour](#caching-behaviour).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":8176,"byte_end":8241,"line_start":234,"line_end":234,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":8246,"byte_end":8249,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":8254,"byte_end":8266,"line_start":236,"line_end":236,"column_start":5,"column_end":17}},{"value":"/ Panics if the provided `target` has a texture format that does not match","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":8271,"byte_end":8347,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ the `render_format` provided on creation of the `GlyphBrush`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":8352,"byte_end":8417,"line_start":238,"line_end":238,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":8422,"byte_end":8431,"line_start":239,"line_end":239,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":9397,"byte_end":9423,"line_start":268,"line_end":268,"column_start":12,"column_end":38},"name":"draw_queued_with_transform","qualname":"<GlyphBrush>::draw_queued_with_transform","value":"pub fn draw_queued_with_transform(&mut Self, &wgpu::Device,\n                                  &mut wgpu::CommandEncoder,\n                                  &wgpu::TextureView, [f32; ])\n-> Result<(), String>","parent":null,"children":[],"decl_id":null,"docs":" Draws all queued sections onto a render target, applying a position\n transform (e.g. a projection).\n See [`queue`](struct.GlyphBrush.html#method.queue).","sig":null,"attributes":[{"value":"/ Draws all queued sections onto a render target, applying a position","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":8860,"byte_end":8931,"line_start":256,"line_end":256,"column_start":5,"column_end":76}},{"value":"/ transform (e.g. a projection).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":8936,"byte_end":8970,"line_start":257,"line_end":257,"column_start":5,"column_end":39}},{"value":"/ See [`queue`](struct.GlyphBrush.html#method.queue).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":8975,"byte_end":9030,"line_start":258,"line_end":258,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":9035,"byte_end":9038,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ It __does not__ submit the encoder command buffer to the device queue.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":9043,"byte_end":9117,"line_start":260,"line_end":260,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":9122,"byte_end":9125,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Trims the cache, see [caching behaviour](#caching-behaviour).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":9130,"byte_end":9195,"line_start":262,"line_end":262,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":9200,"byte_end":9203,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":9208,"byte_end":9220,"line_start":264,"line_end":264,"column_start":5,"column_end":17}},{"value":"/ Panics if the provided `target` has a texture format that does not match","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":9225,"byte_end":9301,"line_start":265,"line_end":265,"column_start":5,"column_end":81}},{"value":"/ the `render_format` provided on creation of the `GlyphBrush`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":9306,"byte_end":9371,"line_start":266,"line_end":266,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":9376,"byte_end":9385,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":10319,"byte_end":10360,"line_start":293,"line_end":293,"column_start":12,"column_end":53},"name":"draw_queued_with_transform_and_scissoring","qualname":"<GlyphBrush>::draw_queued_with_transform_and_scissoring","value":"pub fn draw_queued_with_transform_and_scissoring(&mut Self, &wgpu::Device,\n                                                 &mut wgpu::CommandEncoder,\n                                                 &wgpu::TextureView, [f32; ],\n                                                 Region) -> Result<(), String>","parent":null,"children":[],"decl_id":null,"docs":" Draws all queued sections onto a render target, applying a position\n transform (e.g. a projection) and a scissoring region.\n See [`queue`](struct.GlyphBrush.html#method.queue).","sig":null,"attributes":[{"value":"/ Draws all queued sections onto a render target, applying a position","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":9758,"byte_end":9829,"line_start":281,"line_end":281,"column_start":5,"column_end":76}},{"value":"/ transform (e.g. a projection) and a scissoring region.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":9834,"byte_end":9892,"line_start":282,"line_end":282,"column_start":5,"column_end":63}},{"value":"/ See [`queue`](struct.GlyphBrush.html#method.queue).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":9897,"byte_end":9952,"line_start":283,"line_end":283,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":9957,"byte_end":9960,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ It __does not__ submit the encoder command buffer to the device queue.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":9965,"byte_end":10039,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":10044,"byte_end":10047,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Trims the cache, see [caching behaviour](#caching-behaviour).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":10052,"byte_end":10117,"line_start":287,"line_end":287,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":10122,"byte_end":10125,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":10130,"byte_end":10142,"line_start":289,"line_end":289,"column_start":5,"column_end":17}},{"value":"/ Panics if the provided `target` has a texture format that does not match","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":10147,"byte_end":10223,"line_start":290,"line_end":290,"column_start":5,"column_end":81}},{"value":"/ the `render_format` provided on creation of the `GlyphBrush`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":10228,"byte_end":10293,"line_start":291,"line_end":291,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":10298,"byte_end":10307,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":12034,"byte_end":12045,"line_start":345,"line_end":345,"column_start":12,"column_end":23},"name":"draw_queued","qualname":"<GlyphBrush>::draw_queued","value":"pub fn draw_queued(&mut Self, &wgpu::Device, &mut wgpu::CommandEncoder,\n                   &wgpu::TextureView,\n                   wgpu::RenderPassDepthStencilAttachmentDescriptor<&wgpu::TextureView>,\n                   u32, u32) -> Result<(), String>","parent":null,"children":[],"decl_id":null,"docs":" Draws all queued sections onto a render target.\n See [`queue`](struct.GlyphBrush.html#method.queue).","sig":null,"attributes":[{"value":"/ Draws all queued sections onto a render target.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":11556,"byte_end":11607,"line_start":334,"line_end":334,"column_start":5,"column_end":56}},{"value":"/ See [`queue`](struct.GlyphBrush.html#method.queue).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":11612,"byte_end":11667,"line_start":335,"line_end":335,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":11672,"byte_end":11675,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ It __does not__ submit the encoder command buffer to the device queue.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":11680,"byte_end":11754,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":11759,"byte_end":11762,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ Trims the cache, see [caching behaviour](#caching-behaviour).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":11767,"byte_end":11832,"line_start":339,"line_end":339,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":11837,"byte_end":11840,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":11845,"byte_end":11857,"line_start":341,"line_end":341,"column_start":5,"column_end":17}},{"value":"/ Panics if the provided `target` has a texture format that does not match","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":11862,"byte_end":11938,"line_start":342,"line_end":342,"column_start":5,"column_end":81}},{"value":"/ the `render_format` provided on creation of the `GlyphBrush`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":11943,"byte_end":12008,"line_start":343,"line_end":343,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":12013,"byte_end":12022,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":13153,"byte_end":13179,"line_start":377,"line_end":377,"column_start":12,"column_end":38},"name":"draw_queued_with_transform","qualname":"<GlyphBrush>::draw_queued_with_transform","value":"pub fn draw_queued_with_transform(&mut Self, &wgpu::Device,\n                                  &mut wgpu::CommandEncoder,\n                                  &wgpu::TextureView,\n                                  wgpu::RenderPassDepthStencilAttachmentDescriptor<&wgpu::TextureView>,\n                                  [f32; ]) -> Result<(), String>","parent":null,"children":[],"decl_id":null,"docs":" Draws all queued sections onto a render target, applying a position\n transform (e.g. a projection).\n See [`queue`](struct.GlyphBrush.html#method.queue).","sig":null,"attributes":[{"value":"/ Draws all queued sections onto a render target, applying a position","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":12616,"byte_end":12687,"line_start":365,"line_end":365,"column_start":5,"column_end":76}},{"value":"/ transform (e.g. a projection).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":12692,"byte_end":12726,"line_start":366,"line_end":366,"column_start":5,"column_end":39}},{"value":"/ See [`queue`](struct.GlyphBrush.html#method.queue).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":12731,"byte_end":12786,"line_start":367,"line_end":367,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":12791,"byte_end":12794,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ It __does not__ submit the encoder command buffer to the device queue.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":12799,"byte_end":12873,"line_start":369,"line_end":369,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":12878,"byte_end":12881,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ Trims the cache, see [caching behaviour](#caching-behaviour).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":12886,"byte_end":12951,"line_start":371,"line_end":371,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":12956,"byte_end":12959,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":12964,"byte_end":12976,"line_start":373,"line_end":373,"column_start":5,"column_end":17}},{"value":"/ Panics if the provided `target` has a texture format that does not match","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":12981,"byte_end":13057,"line_start":374,"line_end":374,"column_start":5,"column_end":81}},{"value":"/ the `render_format` provided on creation of the `GlyphBrush`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":13062,"byte_end":13127,"line_start":375,"line_end":375,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":13132,"byte_end":13141,"line_start":376,"line_end":376,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":14311,"byte_end":14352,"line_start":412,"line_end":412,"column_start":12,"column_end":53},"name":"draw_queued_with_transform_and_scissoring","qualname":"<GlyphBrush>::draw_queued_with_transform_and_scissoring","value":"pub fn draw_queued_with_transform_and_scissoring(&mut Self, &wgpu::Device,\n                                                 &mut wgpu::CommandEncoder,\n                                                 &wgpu::TextureView,\n                                                 wgpu::RenderPassDepthStencilAttachmentDescriptor<&wgpu::TextureView>,\n                                                 [f32; ], Region)\n-> Result<(), String>","parent":null,"children":[],"decl_id":null,"docs":" Draws all queued sections onto a render target, applying a position\n transform (e.g. a projection) and a scissoring region.\n See [`queue`](struct.GlyphBrush.html#method.queue).","sig":null,"attributes":[{"value":"/ Draws all queued sections onto a render target, applying a position","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":13750,"byte_end":13821,"line_start":400,"line_end":400,"column_start":5,"column_end":76}},{"value":"/ transform (e.g. a projection) and a scissoring region.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":13826,"byte_end":13884,"line_start":401,"line_end":401,"column_start":5,"column_end":63}},{"value":"/ See [`queue`](struct.GlyphBrush.html#method.queue).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":13889,"byte_end":13944,"line_start":402,"line_end":402,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":13949,"byte_end":13952,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ It __does not__ submit the encoder command buffer to the device queue.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":13957,"byte_end":14031,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":14036,"byte_end":14039,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Trims the cache, see [caching behaviour](#caching-behaviour).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":14044,"byte_end":14109,"line_start":406,"line_end":406,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":14114,"byte_end":14117,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":14122,"byte_end":14134,"line_start":408,"line_end":408,"column_start":5,"column_end":17}},{"value":"/ Panics if the provided `target` has a texture format that does not match","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":14139,"byte_end":14215,"line_start":409,"line_end":409,"column_start":5,"column_end":81}},{"value":"/ the `render_format` provided on creation of the `GlyphBrush`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":14220,"byte_end":14285,"line_start":410,"line_end":410,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":14290,"byte_end":14299,"line_start":411,"line_end":411,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":16804,"byte_end":16821,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":17062,"byte_end":17079,"line_start":28,"line_end":28,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":18316,"byte_end":18333,"line_start":71,"line_end":71,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":19662,"byte_end":19679,"line_start":114,"line_end":114,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":20166,"byte_end":20183,"line_start":132,"line_end":132,"column_start":5,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/pipeline/cache.rs","byte_start":35776,"byte_end":35781,"line_start":6,"line_end":6,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/pipeline.rs","byte_start":21268,"byte_end":21276,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/pipeline.rs","byte_start":21964,"byte_end":21972,"line_start":54,"line_end":54,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/pipeline.rs","byte_start":23062,"byte_end":23070,"line_start":96,"line_end":96,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/pipeline.rs","byte_start":33656,"byte_end":33664,"line_start":437,"line_end":437,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/pipeline.rs","byte_start":33752,"byte_end":33760,"line_start":441,"line_end":441,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":1343,"byte_end":1353,"line_start":38,"line_end":38,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":7342,"byte_end":7352,"line_start":208,"line_end":208,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":10770,"byte_end":10780,"line_start":310,"line_end":310,"column_start":5,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":15291,"byte_end":15301,"line_start":450,"line_end":450,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":218},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":16159,"byte_end":16169,"line_start":486,"line_end":486,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":16804,"byte_end":16821,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":14},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":17062,"byte_end":17079,"line_start":28,"line_end":28,"column_start":10,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":14},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":18316,"byte_end":18333,"line_start":71,"line_end":71,"column_start":29,"column_end":46},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":14},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":19662,"byte_end":19679,"line_start":114,"line_end":114,"column_start":26,"column_end":43},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":14},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/builder.rs","byte_start":20166,"byte_end":20183,"line_start":132,"line_end":132,"column_start":5,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":14},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/pipeline/cache.rs","byte_start":35776,"byte_end":35781,"line_start":6,"line_end":6,"column_start":6,"column_end":11},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/pipeline.rs","byte_start":21268,"byte_end":21276,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":68},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/pipeline.rs","byte_start":21964,"byte_end":21972,"line_start":54,"line_end":54,"column_start":6,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":68},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/pipeline.rs","byte_start":23062,"byte_end":23070,"line_start":96,"line_end":96,"column_start":13,"column_end":21},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":68},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/pipeline.rs","byte_start":33656,"byte_end":33664,"line_start":437,"line_end":437,"column_start":6,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/pipeline.rs","byte_start":33752,"byte_end":33760,"line_start":441,"line_end":441,"column_start":41,"column_end":49},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":236},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":1343,"byte_end":1353,"line_start":38,"line_end":38,"column_start":36,"column_end":46},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":7342,"byte_end":7352,"line_start":208,"line_end":208,"column_start":29,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":10770,"byte_end":10780,"line_start":310,"line_end":310,"column_start":5,"column_end":15},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":15291,"byte_end":15301,"line_start":450,"line_end":450,"column_start":9,"column_end":19},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":157},"to":{"krate":18,"index":204}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu_glyph-0.7.0/src/lib.rs","byte_start":16159,"byte_end":16169,"line_start":486,"line_end":486,"column_start":29,"column_end":39},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":157},"to":{"krate":2,"index":6599}}]}