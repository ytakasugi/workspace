{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6","program":"/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","atom","/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=59564601da7234f3","-C","extra-filename=-59564601da7234f3","--out-dir","/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter06/timer/target/rls/debug/deps","-L","dependency=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter06/timer/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter06/timer/target/rls/debug/deps/libatom-59564601da7234f3.rmeta"},"prelude":{"crate_id":{"name":"atom","disambiguator":[15954665800976008527,14480536614251483258]},"crate_root":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src","external_crates":[{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3329901521826220148,8779651902869174066]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11533795067257537051,6600409280955634707]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12614123221401343543,9564301585503608515]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1785005413158388284,2453622026203223019]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12957079427417428001,17718260667887668647]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10214993728156300765,14618204673916620187]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12453517098623888364,4709794086161820998]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12634510118091288440,7983944581587655387]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14017342134866723280,9256858969587329629]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7061025862014072460,14171357653989770935]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2285728033677722481,16182084057206383065]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7305883247437987566,266452839079745451]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13956229687295891598,15294992126055156716]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[931598532372339641,10024719927090962737]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[11150552510595322945,15608256962932530162]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4217706585212656622,592289864015908737]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[2229008352226773351,3496425060661471051]}}],"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":613,"byte_end":9600,"line_start":16,"line_end":312,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":613,"byte_end":9600,"line_start":16,"line_end":312,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":103},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":107},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":57},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":61},{"krate":0,"index":69},{"krate":0,"index":74},{"krate":0,"index":78},{"krate":0,"index":82}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":932,"byte_end":936,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"Atom","qualname":"::Atom","value":"Atom {  }","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17}],"decl_id":null,"docs":" An Atom wraps an AtomicPtr, it allows for safe mutation of an atomic\n into common Rust Types.\n","sig":null,"attributes":[{"value":"/ An Atom wraps an AtomicPtr, it allows for safe mutation of an atomic","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":820,"byte_end":892,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ into common Rust Types.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":893,"byte_end":920,"line_start":26,"line_end":26,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":1322,"byte_end":1327,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"empty","qualname":"<Atom<P>>::empty","value":"pub fn empty() -> Atom<P>","parent":null,"children":[],"decl_id":null,"docs":" Create a empty Atom\n","sig":null,"attributes":[{"value":"/ Create a empty Atom","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":1287,"byte_end":1310,"line_start":39,"line_end":39,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":1511,"byte_end":1514,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<Atom<P>>::new","value":"pub fn new(P) -> Atom<P>","parent":null,"children":[],"decl_id":null,"docs":" Create a new Atomic from Pointer P\n","sig":null,"attributes":[{"value":"/ Create a new Atomic from Pointer P","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":1461,"byte_end":1499,"line_start":47,"line_end":47,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":1803,"byte_end":1807,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atom<P>>::swap","value":"pub fn swap(&Self, P) -> Option<P>","parent":null,"children":[],"decl_id":null,"docs":" Swap a new value into the Atom, This will try multiple\n times until it succeeds. The old value will be returned.\n","sig":null,"attributes":[{"value":"/ Swap a new value into the Atom, This will try multiple","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":1668,"byte_end":1726,"line_start":55,"line_end":55,"column_start":5,"column_end":63}},{"value":"/ times until it succeeds. The old value will be returned.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":1731,"byte_end":1791,"line_start":56,"line_end":56,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":2252,"byte_end":2256,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"take","qualname":"<Atom<P>>::take","value":"pub fn take(&Self) -> Option<P>","parent":null,"children":[],"decl_id":null,"docs":" Take the value of the Atom replacing it with null pointer\n Returning the contents. If the contents was a `null` pointer the\n result will be `None`.\n","sig":null,"attributes":[{"value":"/ Take the value of the Atom replacing it with null pointer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":2075,"byte_end":2136,"line_start":67,"line_end":67,"column_start":5,"column_end":66}},{"value":"/ Returning the contents. If the contents was a `null` pointer the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":2141,"byte_end":2209,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ result will be `None`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":2214,"byte_end":2240,"line_start":69,"line_end":69,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":2745,"byte_end":2756,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"set_if_none","qualname":"<Atom<P>>::set_if_none","value":"pub fn set_if_none(&Self, P) -> Option<P>","parent":null,"children":[],"decl_id":null,"docs":" This will do a `CAS` setting the value only if it is NULL\n this will return `None` if the value was written,\n otherwise a `Some(v)` will be returned, where the value was\n the same value that you passed into this function\n","sig":null,"attributes":[{"value":"/ This will do a `CAS` setting the value only if it is NULL","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":2488,"byte_end":2549,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/ this will return `None` if the value was written,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":2554,"byte_end":2607,"line_start":80,"line_end":80,"column_start":5,"column_end":58}},{"value":"/ otherwise a `Some(v)` will be returned, where the value was","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":2612,"byte_end":2675,"line_start":81,"line_end":81,"column_start":5,"column_end":68}},{"value":"/ the same value that you passed into this function","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":2680,"byte_end":2733,"line_start":82,"line_end":82,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":3290,"byte_end":3310,"line_start":97,"line_end":97,"column_start":12,"column_end":32},"name":"replace_and_set_next","qualname":"<Atom<P>>::replace_and_set_next","value":"pub fn replace_and_set_next(&Self, P) -> bool where P: GetNextMut<NextPtr =\nOption<P>>","parent":null,"children":[],"decl_id":null,"docs":" Take the current content, write it into P then do a CAS to extent this\n Atom with the previous contents. This can be used to create a LIFO","sig":null,"attributes":[{"value":"/ Take the current content, write it into P then do a CAS to extent this","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":3054,"byte_end":3128,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ Atom with the previous contents. This can be used to create a LIFO","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":3133,"byte_end":3203,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":3208,"byte_end":3211,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Returns true if this set this migrated the Atom from null.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":3216,"byte_end":3278,"line_start":96,"line_end":96,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":4297,"byte_end":4304,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"is_none","qualname":"<Atom<P>>::is_none","value":"pub fn is_none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check to see if an atom is None","sig":null,"attributes":[{"value":"/ Check to see if an atom is None","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":4170,"byte_end":4205,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":4210,"byte_end":4213,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This only means that the contents was None when it was measured","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":4218,"byte_end":4285,"line_start":123,"line_end":123,"column_start":5,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":37},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":4873,"byte_end":4883,"line_start":152,"line_end":152,"column_start":11,"column_end":21},"name":"IntoRawPtr","qualname":"::IntoRawPtr","value":"IntoRawPtr","parent":null,"children":[{"krate":0,"index":38}],"decl_id":null,"docs":" Convert from into a raw pointer\n","sig":null,"attributes":[{"value":"/ Convert from into a raw pointer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":4827,"byte_end":4862,"line_start":151,"line_end":151,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":4900,"byte_end":4908,"line_start":153,"line_end":153,"column_start":15,"column_end":23},"name":"into_raw","qualname":"::IntoRawPtr::into_raw","value":"pub unsafe fn into_raw(Self) -> *mut ()","parent":{"krate":0,"index":37},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":39},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":4982,"byte_end":4992,"line_start":157,"line_end":157,"column_start":11,"column_end":21},"name":"FromRawPtr","qualname":"::FromRawPtr","value":"FromRawPtr","parent":null,"children":[{"krate":0,"index":40}],"decl_id":null,"docs":" Convert from a raw ptr into a pointer\n","sig":null,"attributes":[{"value":"/ Convert from a raw ptr into a pointer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":4930,"byte_end":4971,"line_start":156,"line_end":156,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":5009,"byte_end":5017,"line_start":158,"line_end":158,"column_start":15,"column_end":23},"name":"from_raw","qualname":"::FromRawPtr::from_raw","value":"pub unsafe fn from_raw(*mut ()) -> Self","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":85},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":6371,"byte_end":6382,"line_start":211,"line_end":211,"column_start":12,"column_end":23},"name":"AtomSetOnce","qualname":"::AtomSetOnce","value":"AtomSetOnce {  }","parent":null,"children":[{"krate":0,"index":87}],"decl_id":null,"docs":" This is a restricted version of the Atom. It allows for only\n `set_if_none` to be called.","sig":null,"attributes":[{"value":"/ This is a restricted version of the Atom. It allows for only","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":6128,"byte_end":6192,"line_start":205,"line_end":205,"column_start":1,"column_end":65}},{"value":"/ `set_if_none` to be called.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":6193,"byte_end":6224,"line_start":206,"line_end":206,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":6225,"byte_end":6228,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ `swap` and `take` can be used only with a mutable reference. Meaning","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":6229,"byte_end":6301,"line_start":208,"line_end":208,"column_start":1,"column_end":73}},{"value":"/ that AtomSetOnce is not usable as a ","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":6302,"byte_end":6342,"line_start":209,"line_end":209,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":6555,"byte_end":6560,"line_start":219,"line_end":219,"column_start":12,"column_end":17},"name":"empty","qualname":"<AtomSetOnce<P>>::empty","value":"pub fn empty() -> AtomSetOnce<P>","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `AtomSetOnce`\n","sig":null,"attributes":[{"value":"/ Create an empty `AtomSetOnce`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":6510,"byte_end":6543,"line_start":218,"line_end":218,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":6696,"byte_end":6699,"line_start":224,"line_end":224,"column_start":12,"column_end":15},"name":"new","qualname":"<AtomSetOnce<P>>::new","value":"pub fn new(P) -> AtomSetOnce<P>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `AtomSetOnce` from Pointer P\n","sig":null,"attributes":[{"value":"/ Create a new `AtomSetOnce` from Pointer P","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":6639,"byte_end":6684,"line_start":223,"line_end":223,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":7047,"byte_end":7058,"line_start":232,"line_end":232,"column_start":12,"column_end":23},"name":"set_if_none","qualname":"<AtomSetOnce<P>>::set_if_none","value":"pub fn set_if_none(&Self, P) -> Option<P>","parent":null,"children":[],"decl_id":null,"docs":" This will do a `CAS` setting the value only if it is NULL\n this will return `OK(())` if the value was written,\n otherwise a `Err(P)` will be returned, where the value was\n the same value that you passed into this function\n","sig":null,"attributes":[{"value":"/ This will do a `CAS` setting the value only if it is NULL","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":6789,"byte_end":6850,"line_start":228,"line_end":228,"column_start":5,"column_end":66}},{"value":"/ this will return `OK(())` if the value was written,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":6855,"byte_end":6910,"line_start":229,"line_end":229,"column_start":5,"column_end":60}},{"value":"/ otherwise a `Err(P)` will be returned, where the value was","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":6915,"byte_end":6977,"line_start":230,"line_end":230,"column_start":5,"column_end":67}},{"value":"/ the same value that you passed into this function","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":6982,"byte_end":7035,"line_start":231,"line_end":231,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":7187,"byte_end":7196,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"into_atom","qualname":"<AtomSetOnce<P>>::into_atom","value":"pub fn into_atom(Self) -> Atom<P>","parent":null,"children":[],"decl_id":null,"docs":" Convert an `AtomSetOnce` into an `Atom`\n","sig":null,"attributes":[{"value":"/ Convert an `AtomSetOnce` into an `Atom`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":7132,"byte_end":7175,"line_start":236,"line_end":236,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":7305,"byte_end":7309,"line_start":240,"line_end":240,"column_start":12,"column_end":16},"name":"atom","qualname":"<AtomSetOnce<P>>::atom","value":"pub fn atom(&mut Self) -> &mut Atom<P>","parent":null,"children":[],"decl_id":null,"docs":" Allow access to the atom if exclusive access is granted\n","sig":null,"attributes":[{"value":"/ Allow access to the atom if exclusive access is granted","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":7234,"byte_end":7293,"line_start":239,"line_end":239,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":7489,"byte_end":7496,"line_start":245,"line_end":245,"column_start":12,"column_end":19},"name":"is_none","qualname":"<AtomSetOnce<P>>::is_none","value":"pub fn is_none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check to see if an atom is None","sig":null,"attributes":[{"value":"/ Check to see if an atom is None","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":7362,"byte_end":7397,"line_start":242,"line_end":242,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":7402,"byte_end":7405,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ This only means that the contents was None when it was measured","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":7410,"byte_end":7477,"line_start":244,"line_end":244,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":7677,"byte_end":7680,"line_start":252,"line_end":252,"column_start":12,"column_end":15},"name":"get","qualname":"<AtomSetOnce<P>>::get","value":"pub fn get<'a>(&'a Self) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" If the Atom is set, get the value\n","sig":null,"attributes":[{"value":"/ If the Atom is set, get the value","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":7628,"byte_end":7665,"line_start":251,"line_end":251,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":8275,"byte_end":8282,"line_start":271,"line_end":271,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AtomSetOnce<Box<T>>>::get_mut","value":"pub fn get_mut<'a>(&'a mut Self) -> Option<&'a mut T>","parent":null,"children":[],"decl_id":null,"docs":" If the Atom is set, get the value\n","sig":null,"attributes":[{"value":"/ If the Atom is set, get the value","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":8226,"byte_end":8263,"line_start":270,"line_end":270,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":8941,"byte_end":8944,"line_start":290,"line_end":290,"column_start":12,"column_end":15},"name":"dup","qualname":"<AtomSetOnce<T>>::dup","value":"pub fn dup<'a>(&Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Duplicate the inner pointer if it is set\n","sig":null,"attributes":[{"value":"/ Duplicate the inner pointer if it is set","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":8885,"byte_end":8929,"line_start":289,"line_end":289,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":82},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":9518,"byte_end":9528,"line_start":309,"line_end":309,"column_start":11,"column_end":21},"name":"GetNextMut","qualname":"::GetNextMut","value":"GetNextMut","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"decl_id":null,"docs":" This is a utility Trait that fetches the next ptr from\n an object.\n","sig":null,"attributes":[{"value":"/ This is a utility Trait that fetches the next ptr from","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":9434,"byte_end":9492,"line_start":307,"line_end":307,"column_start":1,"column_end":59}},{"value":"/ an object.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":9493,"byte_end":9507,"line_start":308,"line_end":308,"column_start":1,"column_end":15}}]},{"kind":"Type","id":{"krate":0,"index":83},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":9540,"byte_end":9547,"line_start":310,"line_end":310,"column_start":10,"column_end":17},"name":"NextPtr","qualname":"::GetNextMut::NextPtr","value":"type NextPtr;","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":9556,"byte_end":9564,"line_start":311,"line_end":311,"column_start":8,"column_end":16},"name":"get_next","qualname":"::GetNextMut::get_next","value":"pub fn get_next(&mut Self) -> &mut Self::NextPtr","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":1047,"byte_end":1051,"line_start":32,"line_end":32,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":1240,"byte_end":1244,"line_start":38,"line_end":38,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":4401,"byte_end":4405,"line_start":129,"line_end":129,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":4688,"byte_end":4692,"line_start":140,"line_end":140,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":4769,"byte_end":4773,"line_start":145,"line_end":145,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":5067,"byte_end":5070,"line_start":161,"line_end":161,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":5203,"byte_end":5206,"line_start":168,"line_end":168,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":5344,"byte_end":5347,"line_start":175,"line_end":175,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":5490,"byte_end":5493,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":6451,"byte_end":6462,"line_start":215,"line_end":215,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":7551,"byte_end":7562,"line_start":248,"line_end":248,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":8200,"byte_end":8211,"line_start":269,"line_end":269,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":8827,"byte_end":8838,"line_start":288,"line_end":288,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":1047,"byte_end":1051,"line_start":32,"line_end":32,"column_start":19,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":14},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":1240,"byte_end":1244,"line_start":38,"line_end":38,"column_start":9,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":14},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":4401,"byte_end":4405,"line_start":129,"line_end":129,"column_start":18,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":14},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":4688,"byte_end":4692,"line_start":140,"line_end":140,"column_start":25,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":14},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":4769,"byte_end":4773,"line_start":145,"line_end":145,"column_start":25,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":14},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":5067,"byte_end":5070,"line_start":161,"line_end":161,"column_start":24,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":37}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":5203,"byte_end":5206,"line_start":168,"line_end":168,"column_start":24,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":5344,"byte_end":5347,"line_start":175,"line_end":175,"column_start":24,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":4415},"to":{"krate":0,"index":37}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":5490,"byte_end":5493,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":4415},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":6451,"byte_end":6462,"line_start":215,"line_end":215,"column_start":9,"column_end":20},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":85},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":7551,"byte_end":7562,"line_start":248,"line_end":248,"column_start":12,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":85},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":8200,"byte_end":8211,"line_start":269,"line_end":269,"column_start":9,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":85},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/atom-0.3.6/src/lib.rs","byte_start":8827,"byte_end":8838,"line_start":288,"line_end":288,"column_start":9,"column_end":20},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":85},"to":{"krate":4294967295,"index":4294967295}}]}