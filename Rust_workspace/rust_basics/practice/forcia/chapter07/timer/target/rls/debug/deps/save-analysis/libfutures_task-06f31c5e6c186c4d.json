{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13","program":"/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_task","--edition=2018","/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"std\"","-C","metadata=06f31c5e6c186c4d","-C","extra-filename=-06f31c5e6c186c4d","--out-dir","/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps","-L","dependency=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libfutures_task-06f31c5e6c186c4d.rmeta"},"prelude":{"crate_id":{"name":"futures_task","disambiguator":[2111332017055957182,8490147308431125490]},"crate_root":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src","external_crates":[{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3329901521826220148,8779651902869174066]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","num":2,"id":{"name":"core","disambiguator":[11533795067257537051,6600409280955634707]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12614123221401343543,9564301585503608515]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1785005413158388284,2453622026203223019]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12957079427417428001,17718260667887668647]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10214993728156300765,14618204673916620187]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12453517098623888364,4709794086161820998]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12634510118091288440,7983944581587655387]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14017342134866723280,9256858969587329629]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7061025862014072460,14171357653989770935]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2285728033677722481,16182084057206383065]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7305883247437987566,266452839079745451]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13956229687295891598,15294992126055156716]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[931598532372339641,10024719927090962737]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[11150552510595322945,15608256962932530162]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4217706585212656622,592289864015908737]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[2229008352226773351,3496425060661471051]}}],"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":0,"byte_end":1690,"line_start":1,"line_end":54,"column_start":1,"column_end":70}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":10},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":995,"byte_end":1000,"line_start":27,"line_end":27,"column_start":24,"column_end":29},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":1002,"byte_end":1012,"line_start":27,"line_end":27,"column_start":31,"column_end":41},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":13},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":1014,"byte_end":1024,"line_start":27,"line_end":27,"column_start":43,"column_end":53},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":263},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":1160,"byte_end":1167,"line_start":33,"line_end":33,"column_start":30,"column_end":37},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":277},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":1271,"byte_end":1276,"line_start":38,"line_end":38,"column_start":27,"column_end":32},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":308},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":1389,"byte_end":1398,"line_start":43,"line_end":43,"column_start":32,"column_end":41},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":313},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":1400,"byte_end":1408,"line_start":43,"line_end":43,"column_start":43,"column_end":51},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":111},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":1458,"byte_end":1467,"line_start":47,"line_end":47,"column_start":29,"column_end":38},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":77},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":1469,"byte_end":1483,"line_start":47,"line_end":47,"column_start":40,"column_end":54},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":1485,"byte_end":1500,"line_start":47,"line_end":47,"column_start":56,"column_end":71},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":236},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":1547,"byte_end":1557,"line_start":50,"line_end":50,"column_start":28,"column_end":38},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":237},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":1586,"byte_end":1600,"line_start":51,"line_end":51,"column_start":28,"column_end":42},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":9306},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":1642,"byte_end":1649,"line_start":54,"line_end":54,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":34965},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":1651,"byte_end":1655,"line_start":54,"line_end":54,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":9316},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":1657,"byte_end":1662,"line_start":54,"line_end":54,"column_start":37,"column_end":42},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":35005},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":1664,"byte_end":1672,"line_start":54,"line_end":54,"column_start":44,"column_end":52},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":35014},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":1674,"byte_end":1688,"line_start":54,"line_end":54,"column_start":54,"column_end":68},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":0,"byte_end":1690,"line_start":1,"line_end":54,"column_start":1,"column_end":70},"name":"","qualname":"::","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":5},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":261},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":67},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250}],"decl_id":null,"docs":" Tools for working with tasks.\n","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":0,"byte_end":33,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":160,"byte_end":248,"line_start":7,"line_end":7,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/lib.rs","byte_start":416,"byte_end":437,"line_start":10,"line_end":10,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":10},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":1862,"byte_end":1867,"line_start":6,"line_end":6,"column_start":11,"column_end":16},"name":"Spawn","qualname":"::spawn::Spawn","value":"Spawn","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12}],"decl_id":null,"docs":" The `Spawn` trait allows for pushing futures onto an executor that will\n run them to completion.\n","sig":null,"attributes":[{"value":"/ The `Spawn` trait allows for pushing futures onto an executor that will","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":1748,"byte_end":1823,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ run them to completion.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":1824,"byte_end":1851,"line_start":5,"line_end":5,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":2187,"byte_end":2196,"line_start":15,"line_end":15,"column_start":8,"column_end":17},"name":"spawn_obj","qualname":"::spawn::Spawn::spawn_obj","value":"pub fn spawn_obj(&Self, FutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Spawns a future that will be run to completion.","sig":null,"attributes":[{"value":"/ Spawns a future that will be run to completion.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":1874,"byte_end":1925,"line_start":7,"line_end":7,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":1930,"byte_end":1933,"line_start":8,"line_end":8,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":1938,"byte_end":1950,"line_start":9,"line_end":9,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":1955,"byte_end":1958,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ The executor may be unable to spawn tasks. Spawn errors should","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":1963,"byte_end":2029,"line_start":11,"line_end":11,"column_start":5,"column_end":71}},{"value":"/ represent relatively rare scenarios, such as the executor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":2034,"byte_end":2095,"line_start":12,"line_end":12,"column_start":5,"column_end":66}},{"value":"/ having been shut down so that it is no longer able to accept","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":2100,"byte_end":2164,"line_start":13,"line_end":13,"column_start":5,"column_end":69}},{"value":"/ tasks.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":2169,"byte_end":2179,"line_start":14,"line_end":14,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":2606,"byte_end":2612,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"status","qualname":"::spawn::Spawn::status","value":"pub fn status(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Determines whether the executor is able to spawn new tasks.","sig":null,"attributes":[{"value":"/ Determines whether the executor is able to spawn new tasks.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":2268,"byte_end":2331,"line_start":17,"line_end":17,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":2336,"byte_end":2339,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will return `Ok` when the executor is *likely*","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":2344,"byte_end":2406,"line_start":19,"line_end":19,"column_start":5,"column_end":67}},{"value":"/ (but not guaranteed) to accept a subsequent spawn attempt.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":2411,"byte_end":2473,"line_start":20,"line_end":20,"column_start":5,"column_end":67}},{"value":"/ Likewise, an `Err` return means that `spawn` is likely, but","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":2478,"byte_end":2541,"line_start":21,"line_end":21,"column_start":5,"column_end":68}},{"value":"/ not guaranteed, to yield an error.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":2546,"byte_end":2584,"line_start":22,"line_end":22,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":2589,"byte_end":2598,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":13},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":2789,"byte_end":2799,"line_start":31,"line_end":31,"column_start":11,"column_end":21},"name":"LocalSpawn","qualname":"::spawn::LocalSpawn","value":"LocalSpawn","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15}],"decl_id":null,"docs":" The `LocalSpawn` is similar to [`Spawn`], but allows spawning futures\n that don't implement `Send`.\n","sig":null,"attributes":[{"value":"/ The `LocalSpawn` is similar to [`Spawn`], but allows spawning futures","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":2672,"byte_end":2745,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/ that don't implement `Send`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":2746,"byte_end":2778,"line_start":30,"line_end":30,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":3119,"byte_end":3134,"line_start":40,"line_end":40,"column_start":8,"column_end":23},"name":"spawn_local_obj","qualname":"::spawn::LocalSpawn::spawn_local_obj","value":"pub fn spawn_local_obj(&Self, LocalFutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Spawns a future that will be run to completion.","sig":null,"attributes":[{"value":"/ Spawns a future that will be run to completion.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":2806,"byte_end":2857,"line_start":32,"line_end":32,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":2862,"byte_end":2865,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":2870,"byte_end":2882,"line_start":34,"line_end":34,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":2887,"byte_end":2890,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ The executor may be unable to spawn tasks. Spawn errors should","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":2895,"byte_end":2961,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ represent relatively rare scenarios, such as the executor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":2966,"byte_end":3027,"line_start":37,"line_end":37,"column_start":5,"column_end":66}},{"value":"/ having been shut down so that it is no longer able to accept","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":3032,"byte_end":3096,"line_start":38,"line_end":38,"column_start":5,"column_end":69}},{"value":"/ tasks.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":3101,"byte_end":3111,"line_start":39,"line_end":39,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":3549,"byte_end":3561,"line_start":49,"line_end":49,"column_start":8,"column_end":20},"name":"status_local","qualname":"::spawn::LocalSpawn::status_local","value":"pub fn status_local(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Determines whether the executor is able to spawn new tasks.","sig":null,"attributes":[{"value":"/ Determines whether the executor is able to spawn new tasks.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":3211,"byte_end":3274,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":3279,"byte_end":3282,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method will return `Ok` when the executor is *likely*","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":3287,"byte_end":3349,"line_start":44,"line_end":44,"column_start":5,"column_end":67}},{"value":"/ (but not guaranteed) to accept a subsequent spawn attempt.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":3354,"byte_end":3416,"line_start":45,"line_end":45,"column_start":5,"column_end":67}},{"value":"/ Likewise, an `Err` return means that `spawn` is likely, but","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":3421,"byte_end":3484,"line_start":46,"line_end":46,"column_start":5,"column_end":68}},{"value":"/ not guaranteed, to yield an error.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":3489,"byte_end":3527,"line_start":47,"line_end":47,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":3532,"byte_end":3541,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":16},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":3676,"byte_end":3686,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"SpawnError","qualname":"::spawn::SpawnError","value":"SpawnError {  }","parent":null,"children":[{"krate":0,"index":17}],"decl_id":null,"docs":" An error that occurred during spawning.\n","sig":null,"attributes":[{"value":"/ An error that occurred during spawning.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":3621,"byte_end":3664,"line_start":54,"line_end":54,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":4185,"byte_end":4193,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<SpawnError>::shutdown","value":"pub fn shutdown() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Spawning failed because the executor has been shut down.\n","sig":null,"attributes":[{"value":"/ Spawning failed because the executor has been shut down.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":4113,"byte_end":4173,"line_start":75,"line_end":75,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":4322,"byte_end":4333,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<SpawnError>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether spawning failed to the executor being shut down.\n","sig":null,"attributes":[{"value":"/ Check whether spawning failed to the executor being shut down.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":4244,"byte_end":4310,"line_start":80,"line_end":80,"column_start":5,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":263},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314087,"byte_end":8314094,"line_start":20,"line_end":20,"column_start":11,"column_end":18},"name":"ArcWake","qualname":"::arc_wake::ArcWake","value":"ArcWake: Send + Sync","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265}],"decl_id":null,"docs":" A way of waking up a specific task.","sig":null,"attributes":[{"value":"/ A way of waking up a specific task.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8313314,"byte_end":8313353,"line_start":3,"line_end":3,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8313354,"byte_end":8313357,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ By implementing this trait, types that are expected to be wrapped in an `Arc`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8313358,"byte_end":8313439,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ can be converted into [`Waker`] objects.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8313440,"byte_end":8313484,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/ Those Wakers can be used to signal executors that a task it owns","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8313485,"byte_end":8313553,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ is ready to be `poll`ed again.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8313554,"byte_end":8313588,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8313589,"byte_end":8313592,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two ways to convert `ArcWake` into [`Waker`]:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8313593,"byte_end":8313663,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8313664,"byte_end":8313667,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ * [`waker`](super::waker()) converts `Arc<impl ArcWake>` into [`Waker`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8313668,"byte_end":8313744,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ * [`waker_ref`](super::waker_ref()) converts `&Arc<impl ArcWake>` into [`WakerRef`] that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8313745,"byte_end":8313837,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/   provides access to a [`&Waker`][`Waker`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8313838,"byte_end":8313885,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8313886,"byte_end":8313889,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`Waker`]: std::task::Waker","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8313890,"byte_end":8313921,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/ [`WakerRef`]: super::WakerRef","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8313922,"byte_end":8313955,"line_start":17,"line_end":17,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314546,"byte_end":8314550,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"wake","qualname":"::arc_wake::ArcWake::wake","value":"pub fn wake(Arc<Self>)","parent":{"krate":0,"index":263},"children":[],"decl_id":null,"docs":" Indicates that the associated task is ready to make progress and should\n be `poll`ed.","sig":null,"attributes":[{"value":"/ Indicates that the associated task is ready to make progress and should","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314114,"byte_end":8314189,"line_start":21,"line_end":21,"column_start":5,"column_end":80}},{"value":"/ be `poll`ed.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314194,"byte_end":8314210,"line_start":22,"line_end":22,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314215,"byte_end":8314218,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This function can be called from an arbitrary thread, including threads which","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314223,"byte_end":8314304,"line_start":24,"line_end":24,"column_start":5,"column_end":86}},{"value":"/ did not create the `ArcWake` based [`Waker`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314309,"byte_end":8314358,"line_start":25,"line_end":25,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314363,"byte_end":8314366,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Executors generally maintain a queue of \"ready\" tasks; `wake` should place","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314371,"byte_end":8314449,"line_start":27,"line_end":27,"column_start":5,"column_end":83}},{"value":"/ the associated task onto this queue.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314454,"byte_end":8314494,"line_start":28,"line_end":28,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314499,"byte_end":8314502,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ [`Waker`]: std::task::Waker","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314507,"byte_end":8314538,"line_start":30,"line_end":30,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8315178,"byte_end":8315189,"line_start":48,"line_end":48,"column_start":8,"column_end":19},"name":"wake_by_ref","qualname":"::arc_wake::ArcWake::wake_by_ref","value":"pub fn wake_by_ref(&Arc<Self>)","parent":{"krate":0,"index":263},"children":[],"decl_id":null,"docs":" Indicates that the associated task is ready to make progress and should\n be `poll`ed.","sig":null,"attributes":[{"value":"/ Indicates that the associated task is ready to make progress and should","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314614,"byte_end":8314689,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ be `poll`ed.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314694,"byte_end":8314710,"line_start":36,"line_end":36,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314715,"byte_end":8314718,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This function can be called from an arbitrary thread, including threads which","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314723,"byte_end":8314804,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/ did not create the `ArcWake` based [`Waker`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314809,"byte_end":8314858,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314863,"byte_end":8314866,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Executors generally maintain a queue of \"ready\" tasks; `wake_by_ref` should place","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314871,"byte_end":8314956,"line_start":41,"line_end":41,"column_start":5,"column_end":90}},{"value":"/ the associated task onto this queue.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314961,"byte_end":8315001,"line_start":42,"line_end":42,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8315006,"byte_end":8315009,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This function is similar to [`wake`](ArcWake::wake), but must not consume the provided data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8315014,"byte_end":8315109,"line_start":44,"line_end":44,"column_start":5,"column_end":100}},{"value":"/ pointer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8315114,"byte_end":8315126,"line_start":45,"line_end":45,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8315131,"byte_end":8315134,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ [`Waker`]: std::task::Waker","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8315139,"byte_end":8315170,"line_start":47,"line_end":47,"column_start":5,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":277},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker.rs","byte_start":8315706,"byte_end":8315711,"line_start":19,"line_end":19,"column_start":8,"column_end":13},"name":"waker","qualname":"::waker::waker","value":"pub fn waker<W>(Arc<W>) -> Waker where W: ArcWake + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Waker`] from an `Arc<impl ArcWake>`.","sig":null,"attributes":[{"value":"/ Creates a [`Waker`] from an `Arc<impl ArcWake>`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker.rs","byte_start":8315556,"byte_end":8315608,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker.rs","byte_start":8315609,"byte_end":8315612,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The returned [`Waker`] will call","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker.rs","byte_start":8315613,"byte_end":8315649,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ [`ArcWake.wake()`](ArcWake::wake) if awoken.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker.rs","byte_start":8315650,"byte_end":8315698,"line_start":18,"line_end":18,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":313},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8317537,"byte_end":8317545,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"WakerRef","qualname":"::waker_ref::WakerRef","value":"WakerRef {  }","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316}],"decl_id":null,"docs":" A [`Waker`] that is only valid for a given lifetime.","sig":null,"attributes":[{"value":"/ A [`Waker`] that is only valid for a given lifetime.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8317332,"byte_end":8317388,"line_start":9,"line_end":9,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8317389,"byte_end":8317392,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Note: this type implements [`Deref<Target = Waker>`](std::ops::Deref),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8317393,"byte_end":8317467,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ so it can be used to get a `&Waker`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8317468,"byte_end":8317508,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8317718,"byte_end":8317721,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<WakerRef>::new","value":"pub fn new(&'a Waker) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`WakerRef`] from a [`Waker`] reference.\n","sig":null,"attributes":[{"value":"/ Create a new [`WakerRef`] from a [`Waker`] reference.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8317649,"byte_end":8317706,"line_start":20,"line_end":20,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8318369,"byte_end":8318380,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"new_unowned","qualname":"<WakerRef>::new_unowned","value":"pub fn new_unowned(ManuallyDrop<Waker>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`WakerRef`] from a [`Waker`] that must not be dropped.","sig":null,"attributes":[{"value":"/ Create a new [`WakerRef`] from a [`Waker`] that must not be dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8318029,"byte_end":8318101,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8318106,"byte_end":8318109,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note: this if for rare cases where the caller created a [`Waker`] in","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8318114,"byte_end":8318186,"line_start":33,"line_end":33,"column_start":5,"column_end":77}},{"value":"/ an unsafe way (that will be valid only for a lifetime to be determined","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8318191,"byte_end":8318265,"line_start":34,"line_end":34,"column_start":5,"column_end":79}},{"value":"/ by the caller), and the [`Waker`] doesn't need to or must not be","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8318270,"byte_end":8318338,"line_start":35,"line_end":35,"column_start":5,"column_end":73}},{"value":"/ destroyed.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8318343,"byte_end":8318357,"line_start":36,"line_end":36,"column_start":5,"column_end":19}}]},{"kind":"Function","id":{"krate":0,"index":308},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8318811,"byte_end":8318820,"line_start":58,"line_end":58,"column_start":8,"column_end":17},"name":"waker_ref","qualname":"::waker_ref::waker_ref","value":"pub fn waker_ref<W>(&Arc<W>) -> WakerRef where W: ArcWake","parent":null,"children":[],"decl_id":null,"docs":" Creates a reference to a [`Waker`] from a reference to `Arc<impl ArcWake>`.","sig":null,"attributes":[{"value":"/ Creates a reference to a [`Waker`] from a reference to `Arc<impl ArcWake>`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8318623,"byte_end":8318702,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8318703,"byte_end":8318706,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The resulting [`Waker`] will call","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8318707,"byte_end":8318744,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/ [`ArcWake.wake()`](ArcWake::wake) if awoken.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8318745,"byte_end":8318793,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8318794,"byte_end":8318803,"line_start":57,"line_end":57,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":77},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":7944,"byte_end":7958,"line_start":16,"line_end":16,"column_start":12,"column_end":26},"name":"LocalFutureObj","qualname":"::future_obj::LocalFutureObj","value":"LocalFutureObj {  }","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"decl_id":null,"docs":" A custom trait object for polling futures, roughly akin to\n `Box<dyn Future<Output = T> + 'a>`.","sig":null,"attributes":[{"value":"/ A custom trait object for polling futures, roughly akin to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":7655,"byte_end":7717,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/ `Box<dyn Future<Output = T> + 'a>`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":7718,"byte_end":7757,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":7758,"byte_end":7761,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This custom trait object was introduced as currently it is not possible to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":7762,"byte_end":7840,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ take `dyn Trait` by value and `Box<dyn Trait>` is not available in no_std","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":7841,"byte_end":7918,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ contexts.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":7919,"byte_end":7932,"line_start":15,"line_end":15,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":8961,"byte_end":8964,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalFutureObj>::new","value":"pub fn new<F: UnsafeFutureObj + 'a>(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `LocalFutureObj` from a custom trait object representation.\n","sig":null,"attributes":[{"value":"/ Create a `LocalFutureObj` from a custom trait object representation.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":8863,"byte_end":8935,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":8940,"byte_end":8949,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":9513,"byte_end":9528,"line_start":61,"line_end":61,"column_start":19,"column_end":34},"name":"into_future_obj","qualname":"<LocalFutureObj>::into_future_obj","value":"pub unsafe fn into_future_obj(Self) -> FutureObj","parent":null,"children":[],"decl_id":null,"docs":" Converts the `LocalFutureObj` into a `FutureObj`.","sig":null,"attributes":[{"value":"/ Converts the `LocalFutureObj` into a `FutureObj`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":9215,"byte_end":9268,"line_start":53,"line_end":53,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":9273,"byte_end":9276,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":9281,"byte_end":9293,"line_start":55,"line_end":55,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":9298,"byte_end":9301,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ To make this operation safe one has to ensure that the `UnsafeFutureObj`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":9306,"byte_end":9382,"line_start":57,"line_end":57,"column_start":5,"column_end":81}},{"value":"/ instance from which this `LocalFutureObj` was created actually","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":9387,"byte_end":9453,"line_start":58,"line_end":58,"column_start":5,"column_end":71}},{"value":"/ implements `Send`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":9458,"byte_end":9480,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":9485,"byte_end":9494,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":111},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":10743,"byte_end":10752,"line_start":108,"line_end":108,"column_start":12,"column_end":21},"name":"FutureObj","qualname":"::future_obj::FutureObj","value":"","parent":null,"children":[],"decl_id":null,"docs":" A custom trait object for polling futures, roughly akin to\n `Box<dyn Future<Output = T> + Send + 'a>`.","sig":null,"attributes":[{"value":"/ A custom trait object for polling futures, roughly akin to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":10302,"byte_end":10364,"line_start":99,"line_end":99,"column_start":1,"column_end":63}},{"value":"/ `Box<dyn Future<Output = T> + Send + 'a>`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":10365,"byte_end":10411,"line_start":100,"line_end":100,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":10412,"byte_end":10415,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ This custom trait object was introduced as currently it is not possible to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":10416,"byte_end":10494,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ take `dyn Trait` by value and `Box<dyn Trait>` is not available in no_std","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":10495,"byte_end":10572,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ contexts.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":10573,"byte_end":10586,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":10587,"byte_end":10590,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ You should generally not need to use this type outside of `no_std` or when","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":10591,"byte_end":10669,"line_start":106,"line_end":106,"column_start":1,"column_end":79}},{"value":"/ implementing `Spawn`, consider using `BoxFuture` instead.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":10670,"byte_end":10731,"line_start":107,"line_end":107,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":10996,"byte_end":10999,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"new","qualname":"<FutureObj>::new","value":"pub fn new<F: UnsafeFutureObj + Send>(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `FutureObj` from a custom trait object representation.\n","sig":null,"attributes":[{"value":"/ Create a `FutureObj` from a custom trait object representation.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":10903,"byte_end":10970,"line_start":114,"line_end":114,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":10975,"byte_end":10984,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":132},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":11862,"byte_end":11877,"line_start":147,"line_end":147,"column_start":18,"column_end":33},"name":"UnsafeFutureObj","qualname":"::future_obj::UnsafeFutureObj","value":"UnsafeFutureObj<'a, T>: 'a","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"decl_id":null,"docs":" A custom implementation of a future trait object for `FutureObj`, providing\n a vtable with drop support.","sig":null,"attributes":[{"value":"/ A custom implementation of a future trait object for `FutureObj`, providing","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":11465,"byte_end":11544,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"/ a vtable with drop support.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":11545,"byte_end":11576,"line_start":138,"line_end":138,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":11577,"byte_end":11580,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ This custom representation is typically used only in `no_std` contexts,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":11581,"byte_end":11656,"line_start":140,"line_end":140,"column_start":1,"column_end":76}},{"value":"/ where the default `Box`-based implementation is not available.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":11657,"byte_end":11723,"line_start":141,"line_end":141,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":11724,"byte_end":11727,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":11728,"byte_end":11740,"line_start":143,"line_end":143,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":11741,"byte_end":11744,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ See the safety notes on individual methods for what guarantees an","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":11745,"byte_end":11814,"line_start":145,"line_end":145,"column_start":1,"column_end":70}},{"value":"/ implementor must provide.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":11815,"byte_end":11844,"line_start":146,"line_end":146,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12322,"byte_end":12330,"line_start":158,"line_end":158,"column_start":8,"column_end":16},"name":"into_raw","qualname":"::future_obj::UnsafeFutureObj::into_raw","value":"pub fn into_raw(Self) -> *mut Future<Output = T> + 'a","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Convert an owned instance into a (conceptually owned) fat pointer.","sig":null,"attributes":[{"value":"/ Convert an owned instance into a (conceptually owned) fat pointer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":11895,"byte_end":11965,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":11970,"byte_end":11973,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":11978,"byte_end":11990,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":11995,"byte_end":11998,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ## Implementor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12003,"byte_end":12021,"line_start":152,"line_end":152,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12026,"byte_end":12029,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ The trait implementor must guarantee that it is safe to convert the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12034,"byte_end":12105,"line_start":154,"line_end":154,"column_start":5,"column_end":76}},{"value":"/ provided `*mut (dyn Future<Output = T> + 'a)` into a `Pin<&mut (dyn","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12110,"byte_end":12181,"line_start":155,"line_end":155,"column_start":5,"column_end":76}},{"value":"/ Future<Output = T> + 'a)>` and call methods on it, non-reentrantly,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12186,"byte_end":12257,"line_start":156,"line_end":156,"column_start":5,"column_end":76}},{"value":"/ until `UnsafeFutureObj::drop` is called with it.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12262,"byte_end":12314,"line_start":157,"line_end":157,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":13008,"byte_end":13012,"line_start":178,"line_end":178,"column_start":15,"column_end":19},"name":"drop","qualname":"::future_obj::UnsafeFutureObj::drop","value":"pub unsafe fn drop(*mut Future<Output = T> + 'a)","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Drops the future represented by the given fat pointer.","sig":null,"attributes":[{"value":"/ Drops the future represented by the given fat pointer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12381,"byte_end":12439,"line_start":160,"line_end":160,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12444,"byte_end":12447,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12452,"byte_end":12464,"line_start":162,"line_end":162,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12469,"byte_end":12472,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ## Implementor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12477,"byte_end":12495,"line_start":164,"line_end":164,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12500,"byte_end":12503,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ The trait implementor must guarantee that it is safe to call this","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12508,"byte_end":12577,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ function once per `into_raw` invocation.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12582,"byte_end":12626,"line_start":167,"line_end":167,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12631,"byte_end":12634,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ## Caller","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12639,"byte_end":12652,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12657,"byte_end":12660,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12665,"byte_end":12692,"line_start":171,"line_end":171,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12697,"byte_end":12700,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/  * the pointer passed was obtained from an `into_raw` invocation from","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12705,"byte_end":12778,"line_start":173,"line_end":173,"column_start":5,"column_end":78}},{"value":"/    this same trait object","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12783,"byte_end":12812,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/  * the pointer is not currently in use as a `Pin<&mut (dyn Future<Output","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12817,"byte_end":12893,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/    = T> + 'a)>`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12898,"byte_end":12917,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/  * the pointer must not be used again after this function is called","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":12922,"byte_end":12993,"line_start":177,"line_end":177,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":236},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":18823,"byte_end":18833,"line_start":29,"line_end":29,"column_start":8,"column_end":18},"name":"noop_waker","qualname":"::noop_waker::noop_waker","value":"pub fn noop_waker() -> Waker","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Waker`] which does\n nothing when `wake()` is called on it.","sig":null,"attributes":[{"value":"/ Create a new [`Waker`] which does","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":18603,"byte_end":18640,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/ nothing when `wake()` is called on it.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":18641,"byte_end":18683,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":18684,"byte_end":18687,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":18688,"byte_end":18702,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":18703,"byte_end":18706,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":18707,"byte_end":18714,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ use futures::task::noop_waker;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":18715,"byte_end":18749,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ let waker = noop_waker();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":18750,"byte_end":18779,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ waker.wake();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":18780,"byte_end":18797,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":18798,"byte_end":18805,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":18806,"byte_end":18815,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":237},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":19244,"byte_end":19258,"line_start":45,"line_end":45,"column_start":8,"column_end":22},"name":"noop_waker_ref","qualname":"::noop_waker::noop_waker_ref","value":"pub fn noop_waker_ref() -> &'static Waker","parent":null,"children":[],"decl_id":null,"docs":" Get a static reference to a [`Waker`] which\n does nothing when `wake()` is called on it.","sig":null,"attributes":[{"value":"/ Get a static reference to a [`Waker`] which","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":18994,"byte_end":19041,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/ does nothing when `wake()` is called on it.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":19042,"byte_end":19089,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":19090,"byte_end":19093,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":19094,"byte_end":19108,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":19109,"byte_end":19112,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":19113,"byte_end":19120,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ use futures::task::noop_waker_ref;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":19121,"byte_end":19159,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ let waker = noop_waker_ref();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":19160,"byte_end":19193,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/ waker.wake_by_ref();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":19194,"byte_end":19218,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":19219,"byte_end":19226,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":19227,"byte_end":19236,"line_start":44,"line_end":44,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":3727,"byte_end":3737,"line_start":59,"line_end":59,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":3898,"byte_end":3908,"line_start":65,"line_end":65,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":4076,"byte_end":4086,"line_start":72,"line_end":72,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":4096,"byte_end":4106,"line_start":74,"line_end":74,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":5601,"byte_end":5604,"line_start":131,"line_end":131,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":5898,"byte_end":5901,"line_start":141,"line_end":141,"column_start":50,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":6214,"byte_end":6216,"line_start":151,"line_end":151,"column_start":40,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":6510,"byte_end":6512,"line_start":161,"line_end":161,"column_start":50,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":6893,"byte_end":6896,"line_start":174,"line_end":174,"column_start":44,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":7222,"byte_end":7225,"line_start":184,"line_end":184,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8317630,"byte_end":8317638,"line_start":19,"line_end":19,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8318521,"byte_end":8318529,"line_start":45,"line_end":45,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":8361,"byte_end":8375,"line_start":25,"line_end":25,"column_start":19,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":8835,"byte_end":8849,"line_start":42,"line_end":42,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":9613,"byte_end":9627,"line_start":66,"line_end":66,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":9811,"byte_end":9825,"line_start":73,"line_end":73,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":9932,"byte_end":9946,"line_start":80,"line_end":80,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":10177,"byte_end":10191,"line_start":91,"line_end":91,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":10803,"byte_end":10812,"line_start":110,"line_end":110,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":10847,"byte_end":10856,"line_start":111,"line_end":111,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":10880,"byte_end":10889,"line_start":113,"line_end":113,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":11119,"byte_end":11128,"line_start":121,"line_end":121,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":11287,"byte_end":11296,"line_start":128,"line_end":128,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":13667,"byte_end":13670,"line_start":201,"line_end":201,"column_start":50,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":13978,"byte_end":13981,"line_start":212,"line_end":212,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":14374,"byte_end":14377,"line_start":226,"line_end":226,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":14721,"byte_end":14724,"line_start":238,"line_end":238,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":15039,"byte_end":15042,"line_start":248,"line_end":248,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":15363,"byte_end":15366,"line_start":258,"line_end":258,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":15817,"byte_end":15820,"line_start":273,"line_end":273,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":16248,"byte_end":16251,"line_start":285,"line_end":285,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":16698,"byte_end":16707,"line_start":297,"line_end":297,"column_start":67,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":16869,"byte_end":16878,"line_start":303,"line_end":303,"column_start":65,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":17081,"byte_end":17090,"line_start":309,"line_end":309,"column_start":72,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":17262,"byte_end":17271,"line_start":315,"line_end":315,"column_start":70,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":17467,"byte_end":17481,"line_start":321,"line_end":321,"column_start":60,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":17636,"byte_end":17650,"line_start":327,"line_end":327,"column_start":58,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":17839,"byte_end":17853,"line_start":333,"line_end":333,"column_start":65,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":18018,"byte_end":18032,"line_start":339,"line_end":339,"column_start":63,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":19341,"byte_end":19353,"line_start":47,"line_end":47,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":3727,"byte_end":3737,"line_start":59,"line_end":59,"column_start":21,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":16},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":3898,"byte_end":3908,"line_start":65,"line_end":65,"column_start":23,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":16},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":4076,"byte_end":4086,"line_start":72,"line_end":72,"column_start":28,"column_end":38},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":16},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":4096,"byte_end":4106,"line_start":74,"line_end":74,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":16},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":5601,"byte_end":5604,"line_start":131,"line_end":131,"column_start":40,"column_end":43},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":10}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":5898,"byte_end":5901,"line_start":141,"line_end":141,"column_start":50,"column_end":53},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":13}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":6214,"byte_end":6216,"line_start":151,"line_end":151,"column_start":40,"column_end":42},"kind":{"Impl":{"id":6}},"from":{"krate":5,"index":3524},"to":{"krate":0,"index":10}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":6510,"byte_end":6512,"line_start":161,"line_end":161,"column_start":50,"column_end":52},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":3524},"to":{"krate":0,"index":13}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":6893,"byte_end":6896,"line_start":174,"line_end":174,"column_start":44,"column_end":47},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":4415},"to":{"krate":0,"index":10}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/spawn.rs","byte_start":7222,"byte_end":7225,"line_start":184,"line_end":184,"column_start":54,"column_end":57},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":4415},"to":{"krate":0,"index":13}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314096,"byte_end":8314100,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":263}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/arc_wake.rs","byte_start":8314103,"byte_end":8314107,"line_start":20,"line_end":20,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":263}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8317630,"byte_end":8317638,"line_start":19,"line_end":19,"column_start":10,"column_end":18},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/waker_ref.rs","byte_start":8318521,"byte_end":8318529,"line_start":45,"line_end":45,"column_start":16,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":313},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":8361,"byte_end":8375,"line_start":25,"line_end":25,"column_start":19,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":8835,"byte_end":8849,"line_start":42,"line_end":42,"column_start":13,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":9613,"byte_end":9627,"line_start":66,"line_end":66,"column_start":24,"column_end":38},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":9811,"byte_end":9825,"line_start":73,"line_end":73,"column_start":40,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":9932,"byte_end":9946,"line_start":80,"line_end":80,"column_start":20,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":10177,"byte_end":10191,"line_start":91,"line_end":91,"column_start":18,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":10803,"byte_end":10812,"line_start":110,"line_end":110,"column_start":19,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":10847,"byte_end":10856,"line_start":111,"line_end":111,"column_start":25,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":10880,"byte_end":10889,"line_start":113,"line_end":113,"column_start":13,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":11119,"byte_end":11128,"line_start":121,"line_end":121,"column_start":24,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":11287,"byte_end":11296,"line_start":128,"line_end":128,"column_start":20,"column_end":29},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":13667,"byte_end":13670,"line_start":201,"line_end":201,"column_start":50,"column_end":53},"kind":{"Impl":{"id":23}},"from":{"krate":2,"index":32460},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":13978,"byte_end":13981,"line_start":212,"line_end":212,"column_start":47,"column_end":50},"kind":{"Impl":{"id":24}},"from":{"krate":2,"index":32460},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":14374,"byte_end":14377,"line_start":226,"line_end":226,"column_start":54,"column_end":57},"kind":{"Impl":{"id":25}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":14721,"byte_end":14724,"line_start":238,"line_end":238,"column_start":55,"column_end":58},"kind":{"Impl":{"id":26}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":15039,"byte_end":15042,"line_start":248,"line_end":248,"column_start":55,"column_end":58},"kind":{"Impl":{"id":27}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":15363,"byte_end":15366,"line_start":258,"line_end":258,"column_start":54,"column_end":57},"kind":{"Impl":{"id":28}},"from":{"krate":2,"index":32460},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":15817,"byte_end":15820,"line_start":273,"line_end":273,"column_start":55,"column_end":58},"kind":{"Impl":{"id":29}},"from":{"krate":2,"index":32460},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":16248,"byte_end":16251,"line_start":285,"line_end":285,"column_start":55,"column_end":58},"kind":{"Impl":{"id":30}},"from":{"krate":2,"index":32460},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":16698,"byte_end":16707,"line_start":297,"line_end":297,"column_start":67,"column_end":76},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":16869,"byte_end":16878,"line_start":303,"line_end":303,"column_start":65,"column_end":74},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":17081,"byte_end":17090,"line_start":309,"line_end":309,"column_start":72,"column_end":81},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":17262,"byte_end":17271,"line_start":315,"line_end":315,"column_start":70,"column_end":79},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":17467,"byte_end":17481,"line_start":321,"line_end":321,"column_start":60,"column_end":74},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":17636,"byte_end":17650,"line_start":327,"line_end":327,"column_start":58,"column_end":72},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":17839,"byte_end":17853,"line_start":333,"line_end":333,"column_start":65,"column_end":79},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/future_obj.rs","byte_start":18018,"byte_end":18032,"line_start":339,"line_end":339,"column_start":63,"column_end":77},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.13/src/noop_waker.rs","byte_start":19341,"byte_end":19353,"line_start":47,"line_end":47,"column_start":26,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":238},"to":{"krate":2,"index":2057}}]}