{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2","program":"/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rendy_memory","--edition=2018","/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=d87c72cf40b008b5","-C","extra-filename=-d87c72cf40b008b5","--out-dir","/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps","-L","dependency=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps","--extern","colorful=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libcolorful-25c8c21a84ee8e9e.rmeta","--extern","gfx_hal=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libgfx_hal-d631eea5c67a604b.rmeta","--extern","hibitset=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libhibitset-df41c95e0f9c4941.rmeta","--extern","log=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/liblog-2a69b353d1035ca7.rmeta","--extern","relevant=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/librelevant-ac2a14e675429ffd.rmeta","--extern","slab=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libslab-ec281b2dbb801bdd.rmeta","--extern","smallvec=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libsmallvec-2aea88e982b3db23.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/librendy_memory-d87c72cf40b008b5.rmeta"},"prelude":{"crate_id":{"name":"rendy_memory","disambiguator":[9630008001426832087,16197857177495833345]},"crate_root":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src","external_crates":[{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3329901521826220148,8779651902869174066]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11533795067257537051,6600409280955634707]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12614123221401343543,9564301585503608515]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1785005413158388284,2453622026203223019]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12957079427417428001,17718260667887668647]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10214993728156300765,14618204673916620187]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12453517098623888364,4709794086161820998]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12634510118091288440,7983944581587655387]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14017342134866723280,9256858969587329629]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7061025862014072460,14171357653989770935]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2285728033677722481,16182084057206383065]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7305883247437987566,266452839079745451]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13956229687295891598,15294992126055156716]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[931598532372339641,10024719927090962737]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[11150552510595322945,15608256962932530162]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4217706585212656622,592289864015908737]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[2229008352226773351,3496425060661471051]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","num":18,"id":{"name":"gfx_hal","disambiguator":[1160024678049385583,4108694661582774333]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","num":19,"id":{"name":"bitflags","disambiguator":[9165588580007963606,5638763360476460501]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","num":20,"id":{"name":"smallvec","disambiguator":[1599244063048730678,8627346815940542373]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","num":21,"id":{"name":"maybe_uninit","disambiguator":[18213777896645316402,261489198914462648]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","num":22,"id":{"name":"raw_window_handle","disambiguator":[12767961922193492099,3234823766176022424]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","num":23,"id":{"name":"libc","disambiguator":[3800494124530081931,3463518720461322788]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","num":24,"id":{"name":"hibitset","disambiguator":[5742452947473803537,10494116200913773731]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","num":25,"id":{"name":"atom","disambiguator":[15954665800976008527,14480536614251483258]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","num":26,"id":{"name":"colorful","disambiguator":[10135521563720918410,16084109882218347550]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","num":27,"id":{"name":"log","disambiguator":[15023639168608180861,18039869484860833466]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","num":28,"id":{"name":"cfg_if","disambiguator":[17405709527175409947,1096695995382631820]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","num":29,"id":{"name":"value_bag","disambiguator":[17683222284734379674,1469789403133961335]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","num":30,"id":{"name":"ctor","disambiguator":[13094809719813952805,11882337333484102486]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","num":31,"id":{"name":"relevant","disambiguator":[1844741023045667097,8748421391733746310]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","num":32,"id":{"name":"cfg_if","disambiguator":[9015421078749522011,4315844557797051765]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","num":33,"id":{"name":"slab","disambiguator":[12314209455201404546,12853708085438978694]}}],"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","byte_start":0,"byte_end":602,"line_start":1,"line_end":31,"column_start":1,"column_end":3}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","byte_start":387,"byte_end":388,"line_start":24,"line_end":24,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":214},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","byte_start":401,"byte_end":406,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"alias_span":null,"name":"Block","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":666},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","byte_start":420,"byte_end":425,"line_start":26,"line_end":26,"column_start":13,"column_end":18},"alias_span":null,"name":"Heaps","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":658},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","byte_start":427,"byte_end":438,"line_start":26,"line_end":26,"column_start":20,"column_end":31},"alias_span":null,"name":"HeapsConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":642},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","byte_start":440,"byte_end":450,"line_start":26,"line_end":26,"column_start":33,"column_end":43},"alias_span":null,"name":"HeapsError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":673},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","byte_start":452,"byte_end":463,"line_start":26,"line_end":26,"column_start":45,"column_end":56},"alias_span":null,"name":"MemoryBlock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":342},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","byte_start":487,"byte_end":492,"line_start":27,"line_end":27,"column_start":22,"column_end":27},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":725},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","byte_start":494,"byte_end":502,"line_start":27,"line_end":27,"column_start":29,"column_end":37},"alias_span":null,"name":"Coherent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":726},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","byte_start":494,"byte_end":502,"line_start":27,"line_end":27,"column_start":29,"column_end":37},"alias_span":null,"name":"Coherent","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":740},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","byte_start":504,"byte_end":515,"line_start":27,"line_end":27,"column_start":39,"column_end":50},"alias_span":null,"name":"MappedRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":732},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","byte_start":517,"byte_end":530,"line_start":27,"line_end":27,"column_start":52,"column_end":65},"alias_span":null,"name":"MaybeCoherent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":718},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","byte_start":532,"byte_end":543,"line_start":27,"line_end":27,"column_start":67,"column_end":78},"alias_span":null,"name":"NonCoherent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":719},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","byte_start":532,"byte_end":543,"line_start":27,"line_end":27,"column_start":67,"column_end":78},"alias_span":null,"name":"NonCoherent","value":"","parent":{"krate":0,"index":499}},{"kind":"Use","ref_id":{"krate":0,"index":753},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","byte_start":558,"byte_end":564,"line_start":28,"line_end":28,"column_start":13,"column_end":19},"alias_span":null,"name":"Memory","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","byte_start":577,"byte_end":578,"line_start":29,"line_end":29,"column_start":12,"column_end":13},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","byte_start":597,"byte_end":598,"line_start":30,"line_end":30,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","byte_start":0,"byte_end":602,"line_start":1,"line_end":31,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":211},{"krate":0,"index":223},{"krate":0,"index":319},{"krate":0,"index":412},{"krate":0,"index":422},{"krate":0,"index":453},{"krate":0,"index":473},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":1006},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":1012},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502}],"decl_id":null,"docs":" GPU memory management","sig":null,"attributes":[{"value":"/ GPU memory management","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","byte_start":26,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"warn(missing_debug_implementations, missing_copy_implementations,\n       missing_docs, trivial_casts, trivial_numeric_casts,\n       unused_extern_crates, unused_import_braces, unused_qualifications)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/lib.rs","byte_start":31,"byte_end":253,"line_start":4,"line_end":13,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":503},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":2326,"byte_end":2340,"line_start":15,"line_end":15,"column_start":12,"column_end":26},"name":"DedicatedBlock","qualname":"::allocator::dedicated::DedicatedBlock","value":"DedicatedBlock {  }","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506}],"decl_id":null,"docs":" Memory block allocated from `DedicatedAllocator`\n","sig":null,"attributes":[{"value":"/ Memory block allocated from `DedicatedAllocator`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":2245,"byte_end":2297,"line_start":13,"line_end":13,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":2667,"byte_end":2680,"line_start":29,"line_end":29,"column_start":12,"column_end":25},"name":"unwrap_memory","qualname":"<DedicatedBlock<B>>::unwrap_memory","value":"pub fn unwrap_memory(Self) -> Memory<B>","parent":null,"children":[],"decl_id":null,"docs":" Get inner memory.\n Panics if mapped.\n","sig":null,"attributes":[{"value":"/ Get inner memory.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":2608,"byte_end":2629,"line_start":27,"line_end":27,"column_start":5,"column_end":26}},{"value":"/ Panics if mapped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":2634,"byte_end":2655,"line_start":28,"line_end":28,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":2810,"byte_end":2821,"line_start":35,"line_end":35,"column_start":12,"column_end":23},"name":"from_memory","qualname":"<DedicatedBlock<B>>::from_memory","value":"pub fn from_memory(Memory<B>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Make unmapped block.\n","sig":null,"attributes":[{"value":"/ Make unmapped block.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":2774,"byte_end":2798,"line_start":34,"line_end":34,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":510},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":5096,"byte_end":5114,"line_start":114,"line_end":114,"column_start":12,"column_end":30},"name":"DedicatedAllocator","qualname":"::allocator::dedicated::DedicatedAllocator","value":"DedicatedAllocator {  }","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513}],"decl_id":null,"docs":" Dedicated memory allocator that uses memory object per allocation requested.","sig":null,"attributes":[{"value":"/ Dedicated memory allocator that uses memory object per allocation requested.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":4711,"byte_end":4791,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":4792,"byte_end":4795,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ This allocator suites best huge allocations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":4796,"byte_end":4844,"line_start":107,"line_end":107,"column_start":1,"column_end":49}},{"value":"/ From 32 MiB when GPU has 4-8 GiB memory total.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":4845,"byte_end":4895,"line_start":108,"line_end":108,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":4896,"byte_end":4899,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ `Heaps` use this allocator when none of sub-allocators bound to the memory type","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":4900,"byte_end":4983,"line_start":110,"line_end":110,"column_start":1,"column_end":84}},{"value":"/ can handle size required.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":4984,"byte_end":5013,"line_start":111,"line_end":111,"column_start":1,"column_end":30}},{"value":"/ TODO: Check if resource prefers dedicated memory.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":5014,"byte_end":5067,"line_start":112,"line_end":112,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":5314,"byte_end":5333,"line_start":122,"line_end":122,"column_start":12,"column_end":31},"name":"properties_required","qualname":"<DedicatedAllocator>::properties_required","value":"pub fn properties_required() -> gfx_hal::memory::Properties","parent":null,"children":[],"decl_id":null,"docs":" Get properties required by the allocator.\n","sig":null,"attributes":[{"value":"/ Get properties required by the allocator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":5257,"byte_end":5302,"line_start":121,"line_end":121,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":5530,"byte_end":5533,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"new","qualname":"<DedicatedAllocator>::new","value":"pub fn new(gfx_hal::MemoryTypeId, gfx_hal::memory::Properties) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new `LinearAllocator`\n for `memory_type` with `memory_properties` specified\n","sig":null,"attributes":[{"value":"/ Create new `LinearAllocator`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":5425,"byte_end":5457,"line_start":126,"line_end":126,"column_start":5,"column_end":37}},{"value":"/ for `memory_type` with `memory_properties` specified","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":5462,"byte_end":5518,"line_start":127,"line_end":127,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":516},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":7516,"byte_end":7528,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"name":"DynamicBlock","qualname":"::allocator::dynamic::DynamicBlock","value":"DynamicBlock {  }","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524}],"decl_id":null,"docs":" Memory block allocated from `DynamicAllocator`\n","sig":null,"attributes":[{"value":"/ Memory block allocated from `DynamicAllocator`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":7437,"byte_end":7487,"line_start":20,"line_end":20,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":528},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":9685,"byte_end":9698,"line_start":106,"line_end":106,"column_start":12,"column_end":25},"name":"DynamicConfig","qualname":"::allocator::dynamic::DynamicConfig","value":"DynamicConfig { block_size_granularity, max_chunk_size, min_device_allocation }","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531}],"decl_id":null,"docs":" Config for `DynamicAllocator`.\n","sig":null,"attributes":[{"value":"/ Config for `DynamicAllocator`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":9532,"byte_end":9566,"line_start":103,"line_end":103,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":529},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":9772,"byte_end":9794,"line_start":108,"line_end":108,"column_start":9,"column_end":31},"name":"block_size_granularity","qualname":"::allocator::dynamic::DynamicConfig::block_size_granularity","value":"u64","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":" All requests are rounded up to multiple of this value.\n","sig":null,"attributes":[{"value":"/ All requests are rounded up to multiple of this value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":9705,"byte_end":9763,"line_start":107,"line_end":107,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":530},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":9930,"byte_end":9944,"line_start":112,"line_end":112,"column_start":9,"column_end":23},"name":"max_chunk_size","qualname":"::allocator::dynamic::DynamicConfig::max_chunk_size","value":"u64","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":" Maximum chunk of blocks size.\n Actual chunk size is `min(max_chunk_size, block_size * blocks_per_chunk)`\n","sig":null,"attributes":[{"value":"/ Maximum chunk of blocks size.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":9806,"byte_end":9839,"line_start":110,"line_end":110,"column_start":5,"column_end":38}},{"value":"/ Actual chunk size is `min(max_chunk_size, block_size * blocks_per_chunk)`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":9844,"byte_end":9921,"line_start":111,"line_end":111,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":531},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":10003,"byte_end":10024,"line_start":115,"line_end":115,"column_start":9,"column_end":30},"name":"min_device_allocation","qualname":"::allocator::dynamic::DynamicConfig::min_device_allocation","value":"u64","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":" Minimum size of device allocation.\n","sig":null,"attributes":[{"value":"/ Minimum size of device allocation.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":9956,"byte_end":9994,"line_start":114,"line_end":114,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":537},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":10179,"byte_end":10195,"line_start":122,"line_end":122,"column_start":12,"column_end":28},"name":"DynamicAllocator","qualname":"::allocator::dynamic::DynamicAllocator","value":"DynamicAllocator {  }","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545}],"decl_id":null,"docs":" No-fragmentation allocator.\n Suitable for any type of small allocations.\n Every freed block can be reused.\n","sig":null,"attributes":[{"value":"/ No-fragmentation allocator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":10034,"byte_end":10065,"line_start":118,"line_end":118,"column_start":1,"column_end":32}},{"value":"/ Suitable for any type of small allocations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":10066,"byte_end":10113,"line_start":119,"line_end":119,"column_start":1,"column_end":48}},{"value":"/ Every freed block can be reused.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":10114,"byte_end":10150,"line_start":120,"line_end":120,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":11734,"byte_end":11737,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"new","qualname":"<DynamicAllocator<B>>::new","value":"pub fn new(gfx_hal::MemoryTypeId, gfx_hal::memory::Properties, DynamicConfig)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new `DynamicAllocator`\n for `memory_type` with `memory_properties` specified,\n with `DynamicConfig` provided.\n","sig":null,"attributes":[{"value":"/ Create new `DynamicAllocator`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":11588,"byte_end":11621,"line_start":180,"line_end":180,"column_start":5,"column_end":38}},{"value":"/ for `memory_type` with `memory_properties` specified,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":11626,"byte_end":11683,"line_start":181,"line_end":181,"column_start":5,"column_end":62}},{"value":"/ with `DynamicConfig` provided.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":11688,"byte_end":11722,"line_start":182,"line_end":182,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":13330,"byte_end":13344,"line_start":234,"line_end":234,"column_start":12,"column_end":26},"name":"max_allocation","qualname":"<DynamicAllocator<B>>::max_allocation","value":"pub fn max_allocation(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Maximum allocation size.\n","sig":null,"attributes":[{"value":"/ Maximum allocation size.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":13290,"byte_end":13318,"line_start":233,"line_end":233,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":22589,"byte_end":22596,"line_start":496,"line_end":496,"column_start":12,"column_end":19},"name":"dispose","qualname":"<DynamicAllocator<B>>::dispose","value":"pub fn dispose(Self)","parent":null,"children":[],"decl_id":null,"docs":" Perform full cleanup of the memory allocated.\n","sig":null,"attributes":[{"value":"/ Perform full cleanup of the memory allocated.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":22528,"byte_end":22577,"line_start":495,"line_end":495,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":149},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":28720,"byte_end":28731,"line_start":16,"line_end":16,"column_start":12,"column_end":23},"name":"LinearBlock","qualname":"::allocator::linear::LinearBlock","value":"LinearBlock {  }","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155}],"decl_id":null,"docs":" Memory block allocated from `LinearAllocator`\n","sig":null,"attributes":[{"value":"/ Memory block allocated from `LinearAllocator`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":28659,"byte_end":28708,"line_start":15,"line_end":15,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":576},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":30937,"byte_end":30949,"line_start":105,"line_end":105,"column_start":12,"column_end":24},"name":"LinearConfig","qualname":"::allocator::linear::LinearConfig","value":"LinearConfig { linear_size }","parent":null,"children":[{"krate":0,"index":577}],"decl_id":null,"docs":" Config for `LinearAllocator`.\n","sig":null,"attributes":[{"value":"/ Config for `LinearAllocator`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":30785,"byte_end":30818,"line_start":102,"line_end":102,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":577},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":31015,"byte_end":31026,"line_start":108,"line_end":108,"column_start":9,"column_end":20},"name":"linear_size","qualname":"::allocator::linear::LinearConfig::linear_size","value":"u64","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" Size of the linear chunk.\n Keep it big.\n","sig":null,"attributes":[{"value":"/ Size of the linear chunk.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":30956,"byte_end":30985,"line_start":106,"line_end":106,"column_start":5,"column_end":34}},{"value":"/ Keep it big.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":30990,"byte_end":31006,"line_start":107,"line_end":107,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":583},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":31548,"byte_end":31563,"line_start":121,"line_end":121,"column_start":12,"column_end":27},"name":"LinearAllocator","qualname":"::allocator::linear::LinearAllocator","value":"LinearAllocator {  }","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589}],"decl_id":null,"docs":" Linear allocator that return memory from chunk sequentially.\n It keeps only number of bytes allocated from each chunk.\n Once chunk is exhausted it is placed into list.\n When all blocks allocated from head of that list are freed,\n head is freed as well.","sig":null,"attributes":[{"value":"/ Linear allocator that return memory from chunk sequentially.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":31036,"byte_end":31100,"line_start":111,"line_end":111,"column_start":1,"column_end":65}},{"value":"/ It keeps only number of bytes allocated from each chunk.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":31101,"byte_end":31161,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/ Once chunk is exhausted it is placed into list.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":31162,"byte_end":31213,"line_start":113,"line_end":113,"column_start":1,"column_end":52}},{"value":"/ When all blocks allocated from head of that list are freed,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":31214,"byte_end":31277,"line_start":114,"line_end":114,"column_start":1,"column_end":64}},{"value":"/ head is freed as well.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":31278,"byte_end":31304,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":31305,"byte_end":31308,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ This allocator suites best short-lived types of allocations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":31309,"byte_end":31373,"line_start":117,"line_end":117,"column_start":1,"column_end":65}},{"value":"/ Allocation strategy requires minimal overhead and implementation is fast.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":31374,"byte_end":31451,"line_start":118,"line_end":118,"column_start":1,"column_end":78}},{"value":"/ But holding single block will completely stop memory recycling.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":31452,"byte_end":31519,"line_start":119,"line_end":119,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":32093,"byte_end":32112,"line_start":145,"line_end":145,"column_start":12,"column_end":31},"name":"properties_required","qualname":"<LinearAllocator<B>>::properties_required","value":"pub fn properties_required() -> gfx_hal::memory::Properties","parent":null,"children":[],"decl_id":null,"docs":" Get properties required by the `LinearAllocator`.\n","sig":null,"attributes":[{"value":"/ Get properties required by the `LinearAllocator`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":32028,"byte_end":32081,"line_start":144,"line_end":144,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":32248,"byte_end":32262,"line_start":150,"line_end":150,"column_start":12,"column_end":26},"name":"max_allocation","qualname":"<LinearAllocator<B>>::max_allocation","value":"pub fn max_allocation(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Maximum allocation size.\n","sig":null,"attributes":[{"value":"/ Maximum allocation size.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":32208,"byte_end":32236,"line_start":149,"line_end":149,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":32463,"byte_end":32466,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"new","qualname":"<LinearAllocator<B>>::new","value":"pub fn new(gfx_hal::MemoryTypeId, gfx_hal::memory::Properties, LinearConfig)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new `LinearAllocator`\n for `memory_type` with `memory_properties` specified,\n with `LinearConfig` provided.\n","sig":null,"attributes":[{"value":"/ Create new `LinearAllocator`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":32319,"byte_end":32351,"line_start":154,"line_end":154,"column_start":5,"column_end":37}},{"value":"/ for `memory_type` with `memory_properties` specified,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":32356,"byte_end":32413,"line_start":155,"line_end":155,"column_start":5,"column_end":62}},{"value":"/ with `LinearConfig` provided.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":32418,"byte_end":32451,"line_start":156,"line_end":156,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":33288,"byte_end":33295,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"dispose","qualname":"<LinearAllocator<B>>::dispose","value":"pub fn dispose(Self, &B::Device)","parent":null,"children":[],"decl_id":null,"docs":" Perform full cleanup of the memory allocated.\n","sig":null,"attributes":[{"value":"/ Perform full cleanup of the memory allocated.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":33227,"byte_end":33276,"line_start":182,"line_end":182,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":603},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":1094,"byte_end":1103,"line_start":19,"line_end":19,"column_start":5,"column_end":14},"name":"Dedicated","qualname":"::allocator::Kind::Dedicated","value":"Kind::Dedicated","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Memory object per allocation.\n","sig":null,"attributes":[{"value":"/ Memory object per allocation.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":1056,"byte_end":1089,"line_start":18,"line_end":18,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":605},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":1145,"byte_end":1152,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::allocator::Kind::Dynamic","value":"Kind::Dynamic","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" General purpose allocator.\n","sig":null,"attributes":[{"value":"/ General purpose allocator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":1110,"byte_end":1140,"line_start":21,"line_end":21,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":607},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":1265,"byte_end":1271,"line_start":27,"line_end":27,"column_start":5,"column_end":11},"name":"Linear","qualname":"::allocator::Kind::Linear","value":"Kind::Linear","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Allocates linearly.\n Fast and low overhead.\n Suitable for one-time-use allocations.\n","sig":null,"attributes":[{"value":"/ Allocates linearly.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":1159,"byte_end":1182,"line_start":24,"line_end":24,"column_start":5,"column_end":28}},{"value":"/ Fast and low overhead.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":1187,"byte_end":1213,"line_start":25,"line_end":25,"column_start":5,"column_end":31}},{"value":"/ Suitable for one-time-use allocations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":1218,"byte_end":1260,"line_start":26,"line_end":26,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":602},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":1045,"byte_end":1049,"line_start":17,"line_end":17,"column_start":10,"column_end":14},"name":"Kind","qualname":"::allocator::Kind","value":"pub enum Kind {\n\n    /// Memory object per allocation.\n    Dedicated,\n\n    /// General purpose allocator.\n    Dynamic,\n\n    /// Allocates linearly.\n    /// Fast and low overhead.\n    /// Suitable for one-time-use allocations.\n    Linear,\n}","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":607}],"decl_id":null,"docs":" Allocator kind.\n","sig":null,"attributes":[{"value":"/ Allocator kind.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":954,"byte_end":973,"line_start":15,"line_end":15,"column_start":1,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":205},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":1342,"byte_end":1351,"line_start":31,"line_end":31,"column_start":11,"column_end":20},"name":"Allocator","qualname":"::allocator::Allocator","value":"Allocator<B: gfx_hal::Backend>","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210}],"decl_id":null,"docs":" Allocator trait implemented for various allocators.\n","sig":null,"attributes":[{"value":"/ Allocator trait implemented for various allocators.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":1276,"byte_end":1331,"line_start":30,"line_end":30,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":207},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":1426,"byte_end":1431,"line_start":33,"line_end":33,"column_start":10,"column_end":15},"name":"Block","qualname":"::allocator::Allocator::Block","value":"type Block: Block<B>;","parent":{"krate":0,"index":205},"children":[],"decl_id":null,"docs":" Block type returned by allocator.\n","sig":null,"attributes":[{"value":"/ Block type returned by allocator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":1379,"byte_end":1416,"line_start":32,"line_end":32,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":1479,"byte_end":1483,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"kind","qualname":"::allocator::Allocator::kind","value":"pub fn kind() -> Kind","parent":{"krate":0,"index":205},"children":[],"decl_id":null,"docs":" Get allocator kind.\n","sig":null,"attributes":[{"value":"/ Get allocator kind.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":1448,"byte_end":1471,"line_start":35,"line_end":35,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":1623,"byte_end":1628,"line_start":40,"line_end":40,"column_start":8,"column_end":13},"name":"alloc","qualname":"::allocator::Allocator::alloc","value":"pub fn alloc(&mut Self, &B::Device, u64, u64)\n-> Result<(Self::Block, u64), gfx_hal::device::AllocationError>","parent":{"krate":0,"index":205},"children":[],"decl_id":null,"docs":" Allocate block of memory.\n On success returns allocated block and amount of memory consumed from device.\n","sig":null,"attributes":[{"value":"/ Allocate block of memory.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":1500,"byte_end":1529,"line_start":38,"line_end":38,"column_start":5,"column_end":34}},{"value":"/ On success returns allocated block and amount of memory consumed from device.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":1534,"byte_end":1615,"line_start":39,"line_end":39,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":1882,"byte_end":1886,"line_start":49,"line_end":49,"column_start":8,"column_end":12},"name":"free","qualname":"::allocator::Allocator::free","value":"pub fn free(&mut Self, &B::Device, Self::Block) -> u64","parent":{"krate":0,"index":205},"children":[],"decl_id":null,"docs":" Free block of memory.\n Returns amount of memory returned to the device.\n","sig":null,"attributes":[{"value":"/ Free block of memory.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":1792,"byte_end":1817,"line_start":47,"line_end":47,"column_start":5,"column_end":30}},{"value":"/ Returns amount of memory returned to the device.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/mod.rs","byte_start":1822,"byte_end":1874,"line_start":48,"line_end":48,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":214},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/block.rs","byte_start":38385,"byte_end":38390,"line_start":9,"line_end":9,"column_start":11,"column_end":16},"name":"Block","qualname":"::block::Block","value":"Block<B: gfx_hal::Backend>","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":222}],"decl_id":null,"docs":" Block that owns a `Range` of the `Memory`.\n Implementor must ensure that there can't be any other blocks\n with overlapping range (either through type system or safety notes for unsafe functions).\n Provides access to safe memory range mapping.\n","sig":null,"attributes":[{"value":"/ Block that owns a `Range` of the `Memory`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/block.rs","byte_start":38119,"byte_end":38165,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"/ Implementor must ensure that there can't be any other blocks","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/block.rs","byte_start":38166,"byte_end":38230,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"/ with overlapping range (either through type system or safety notes for unsafe functions).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/block.rs","byte_start":38231,"byte_end":38324,"line_start":7,"line_end":7,"column_start":1,"column_end":94}},{"value":"/ Provides access to safe memory range mapping.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/block.rs","byte_start":38325,"byte_end":38374,"line_start":8,"line_end":8,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/block.rs","byte_start":38465,"byte_end":38475,"line_start":11,"line_end":11,"column_start":8,"column_end":18},"name":"properties","qualname":"::block::Block::properties","value":"pub fn properties(&Self) -> gfx_hal::memory::Properties","parent":{"krate":0,"index":214},"children":[],"decl_id":null,"docs":" Get memory properties of the block.\n","sig":null,"attributes":[{"value":"/ Get memory properties of the block.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/block.rs","byte_start":38418,"byte_end":38457,"line_start":10,"line_end":10,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/block.rs","byte_start":38554,"byte_end":38560,"line_start":14,"line_end":14,"column_start":8,"column_end":14},"name":"memory","qualname":"::block::Block::memory","value":"pub fn memory(&Self) -> &B::Memory","parent":{"krate":0,"index":214},"children":[],"decl_id":null,"docs":" Get raw memory object.\n","sig":null,"attributes":[{"value":"/ Get raw memory object.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/block.rs","byte_start":38520,"byte_end":38546,"line_start":13,"line_end":13,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/block.rs","byte_start":38637,"byte_end":38642,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"range","qualname":"::block::Block::range","value":"pub fn range(&Self) -> Range<u64>","parent":{"krate":0,"index":214},"children":[],"decl_id":null,"docs":" Get memory range owned by this block.\n","sig":null,"attributes":[{"value":"/ Get memory range owned by this block.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/block.rs","byte_start":38588,"byte_end":38629,"line_start":16,"line_end":16,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/block.rs","byte_start":38704,"byte_end":38708,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"size","qualname":"::block::Block::size","value":"pub fn size(&Self) -> u64","parent":{"krate":0,"index":214},"children":[],"decl_id":null,"docs":" Get size of the block.\n","sig":null,"attributes":[{"value":"/ Get size of the block.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/block.rs","byte_start":38670,"byte_end":38696,"line_start":19,"line_end":19,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/block.rs","byte_start":38934,"byte_end":38937,"line_start":27,"line_end":27,"column_start":8,"column_end":11},"name":"map","qualname":"::block::Block::map","value":"pub fn map<'a>(&'a mut Self, &B::Device, Range<u64>)\n-> Result<MappedRange, gfx_hal::device::MapError>","parent":{"krate":0,"index":214},"children":[],"decl_id":null,"docs":" Get mapping for the buffer range.\n Memory writes to the region performed by device become available for the host.\n","sig":null,"attributes":[{"value":"/ Get mapping for the buffer range.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/block.rs","byte_start":38802,"byte_end":38839,"line_start":25,"line_end":25,"column_start":5,"column_end":42}},{"value":"/ Memory writes to the region performed by device become available for the host.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/block.rs","byte_start":38844,"byte_end":38926,"line_start":26,"line_end":26,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/block.rs","byte_start":39206,"byte_end":39211,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"unmap","qualname":"::block::Block::unmap","value":"pub fn unmap(&mut Self, &B::Device)","parent":{"krate":0,"index":214},"children":[],"decl_id":null,"docs":" Release memory mapping. Must be called after successful `map` call.\n No-op if block is not mapped.\n","sig":null,"attributes":[{"value":"/ Release memory mapping. Must be called after successful `map` call.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/block.rs","byte_start":39089,"byte_end":39160,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ No-op if block is not mapped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/block.rs","byte_start":39165,"byte_end":39198,"line_start":34,"line_end":34,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":643},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":39671,"byte_end":39686,"line_start":15,"line_end":15,"column_start":5,"column_end":20},"name":"AllocationError","qualname":"::heaps::HeapsError::AllocationError","value":"HeapsError::AllocationError(gfx_hal::device::AllocationError)","parent":{"krate":0,"index":642},"children":[],"decl_id":null,"docs":" Memory allocation failure.\n","sig":null,"attributes":[{"value":"/ Memory allocation failure.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":39636,"byte_end":39666,"line_start":14,"line_end":14,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":646},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":39815,"byte_end":39831,"line_start":17,"line_end":17,"column_start":5,"column_end":21},"name":"NoSuitableMemory","qualname":"::heaps::HeapsError::NoSuitableMemory","value":"HeapsError::NoSuitableMemory(u32, gfx_hal::memory::Properties)","parent":{"krate":0,"index":642},"children":[],"decl_id":null,"docs":" No memory types among required for resource with requested properties was found.\n","sig":null,"attributes":[{"value":"/ No memory types among required for resource with requested properties was found.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":39726,"byte_end":39810,"line_start":16,"line_end":16,"column_start":5,"column_end":89}}]},{"kind":"Enum","id":{"krate":0,"index":642},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":39619,"byte_end":39629,"line_start":13,"line_end":13,"column_start":10,"column_end":20},"name":"HeapsError","qualname":"::heaps::HeapsError","value":"pub enum HeapsError {\n\n    /// Memory allocation failure.\n    AllocationError(gfx_hal::device::AllocationError),\n\n    /// No memory types among required for resource with requested properties was found.\n    NoSuitableMemory(u32, gfx_hal::memory::Properties),\n}","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":646}],"decl_id":null,"docs":" Possible errors returned by `Heaps`.\n","sig":null,"attributes":[{"value":"/ Possible errors returned by `Heaps`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":39495,"byte_end":39535,"line_start":10,"line_end":10,"column_start":1,"column_end":41}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":39536,"byte_end":39574,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":658},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":40825,"byte_end":40836,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"HeapsConfig","qualname":"::heaps::HeapsConfig","value":"HeapsConfig { linear, dynamic }","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660}],"decl_id":null,"docs":" Config for `Heaps` allocator.\n","sig":null,"attributes":[{"value":"/ Config for `Heaps` allocator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":40673,"byte_end":40706,"line_start":46,"line_end":46,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":659},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":40888,"byte_end":40894,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"name":"linear","qualname":"::heaps::HeapsConfig::linear","value":"std::option::Option<allocator::linear::LinearConfig>","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":" Config for linear sub-allocator.\n","sig":null,"attributes":[{"value":"/ Config for linear sub-allocator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":40843,"byte_end":40879,"line_start":50,"line_end":50,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":660},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":40969,"byte_end":40976,"line_start":54,"line_end":54,"column_start":9,"column_end":16},"name":"dynamic","qualname":"::heaps::HeapsConfig::dynamic","value":"std::option::Option<allocator::dynamic::DynamicConfig>","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":" Config for dynamic sub-allocator.\n","sig":null,"attributes":[{"value":"/ Config for dynamic sub-allocator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":40923,"byte_end":40960,"line_start":53,"line_end":53,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":666},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":41083,"byte_end":41088,"line_start":59,"line_end":59,"column_start":12,"column_end":17},"name":"Heaps","qualname":"::heaps::Heaps","value":"Heaps {  }","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":669}],"decl_id":null,"docs":" Heaps available on particular physical device.\n","sig":null,"attributes":[{"value":"/ Heaps available on particular physical device.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":41004,"byte_end":41054,"line_start":57,"line_end":57,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":41335,"byte_end":41338,"line_start":69,"line_end":69,"column_start":19,"column_end":22},"name":"new","qualname":"<Heaps<B>>::new","value":"pub unsafe fn new<P, H>(P, H) -> Self where P: IntoIterator<Item =\n(gfx_hal::memory::Properties, u32, HeapsConfig)>, H: IntoIterator<Item = u64>","parent":null,"children":[],"decl_id":null,"docs":" This must be called with `gfx_hal::memory::Properties` fetched from physical device.\n","sig":null,"attributes":[{"value":"/ This must be called with `gfx_hal::memory::Properties` fetched from physical device.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":41228,"byte_end":41316,"line_start":68,"line_end":68,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":42664,"byte_end":42672,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"allocate","qualname":"<Heaps<B>>::allocate","value":"pub fn allocate<impl MemoryUsage: MemoryUsage>(&mut Self, &B::Device, u32,\n                                               impl MemoryUsage, u64, u64)\n-> Result<MemoryBlock<B>, HeapsError>","parent":null,"children":[],"decl_id":null,"docs":" Allocate memory block\n from one of memory types specified by `mask`,\n for intended `usage`,\n with `size`\n and `align` requirements.\n","sig":null,"attributes":[{"value":"/ Allocate memory block","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":42489,"byte_end":42514,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/ from one of memory types specified by `mask`,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":42519,"byte_end":42568,"line_start":102,"line_end":102,"column_start":5,"column_end":54}},{"value":"/ for intended `usage`,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":42573,"byte_end":42598,"line_start":103,"line_end":103,"column_start":5,"column_end":30}},{"value":"/ with `size`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":42603,"byte_end":42618,"line_start":104,"line_end":104,"column_start":5,"column_end":20}},{"value":"/ and `align` requirements.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":42623,"byte_end":42652,"line_start":105,"line_end":105,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":45446,"byte_end":45450,"line_start":193,"line_end":193,"column_start":12,"column_end":16},"name":"free","qualname":"<Heaps<B>>::free","value":"pub fn free(&mut Self, &B::Device, MemoryBlock<B>)","parent":null,"children":[],"decl_id":null,"docs":" Free memory block.","sig":null,"attributes":[{"value":"/ Free memory block.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":45349,"byte_end":45371,"line_start":190,"line_end":190,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":45376,"byte_end":45379,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Memory block must be allocated from this heap.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":45384,"byte_end":45434,"line_start":192,"line_end":192,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":46076,"byte_end":46083,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"dispose","qualname":"<Heaps<B>>::dispose","value":"pub fn dispose(Self, &B::Device)","parent":null,"children":[],"decl_id":null,"docs":" Dispose of allocator.\n Cleanup allocators before dropping.\n Will panic if memory instances are left allocated.\n","sig":null,"attributes":[{"value":"/ Dispose of allocator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":45936,"byte_end":45961,"line_start":205,"line_end":205,"column_start":5,"column_end":30}},{"value":"/ Cleanup allocators before dropping.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":45966,"byte_end":46005,"line_start":206,"line_end":206,"column_start":5,"column_end":44}},{"value":"/ Will panic if memory instances are left allocated.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":46010,"byte_end":46064,"line_start":207,"line_end":207,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":46234,"byte_end":46245,"line_start":215,"line_end":215,"column_start":12,"column_end":23},"name":"utilization","qualname":"<Heaps<B>>::utilization","value":"pub fn utilization(&Self) -> TotalMemoryUtilization","parent":null,"children":[],"decl_id":null,"docs":" Get memory utilization.\n","sig":null,"attributes":[{"value":"/ Get memory utilization.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":46195,"byte_end":46222,"line_start":214,"line_end":214,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":673},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":46556,"byte_end":46567,"line_start":225,"line_end":225,"column_start":12,"column_end":23},"name":"MemoryBlock","qualname":"::heaps::MemoryBlock","value":"MemoryBlock {  }","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676}],"decl_id":null,"docs":" Memory block allocated from `Heaps`.\n","sig":null,"attributes":[{"value":"/ Memory block allocated from `Heaps`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":46487,"byte_end":46527,"line_start":223,"line_end":223,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":46739,"byte_end":46750,"line_start":235,"line_end":235,"column_start":12,"column_end":23},"name":"memory_type","qualname":"<MemoryBlock<B>>::memory_type","value":"pub fn memory_type(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get memory type id.\n","sig":null,"attributes":[{"value":"/ Get memory type id.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":46704,"byte_end":46727,"line_start":234,"line_end":234,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":342},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/write.rs","byte_start":68123,"byte_end":68128,"line_start":4,"line_end":4,"column_start":11,"column_end":16},"name":"Write","qualname":"::mapping::write::Write","value":"Write<T: Copy>","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345}],"decl_id":null,"docs":" Trait for memory region suitable for host writes.\n","sig":null,"attributes":[{"value":"/ Trait for memory region suitable for host writes.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/write.rs","byte_start":68059,"byte_end":68112,"line_start":3,"line_end":3,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/write.rs","byte_start":68288,"byte_end":68293,"line_start":10,"line_end":10,"column_start":15,"column_end":20},"name":"slice","qualname":"::mapping::write::Write::slice","value":"pub unsafe fn slice(&mut Self) -> &mut [T]","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":" Get mutable slice of `T` bound to mapped range.","sig":null,"attributes":[{"value":"/ Get mutable slice of `T` bound to mapped range.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/write.rs","byte_start":68144,"byte_end":68195,"line_start":5,"line_end":5,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/write.rs","byte_start":68200,"byte_end":68203,"line_start":6,"line_end":6,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/write.rs","byte_start":68208,"byte_end":68220,"line_start":7,"line_end":7,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/write.rs","byte_start":68225,"byte_end":68228,"line_start":8,"line_end":8,"column_start":5,"column_end":8}},{"value":"/ * Returned slice should not be read.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/write.rs","byte_start":68233,"byte_end":68273,"line_start":9,"line_end":9,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/write.rs","byte_start":68476,"byte_end":68481,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"write","qualname":"::mapping::write::Write::write","value":"pub fn write(&mut Self, &[T])","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":" Write data into mapped memory sub-region.","sig":null,"attributes":[{"value":"/ Write data into mapped memory sub-region.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/write.rs","byte_start":68323,"byte_end":68368,"line_start":12,"line_end":12,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/write.rs","byte_start":68373,"byte_end":68376,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/write.rs","byte_start":68381,"byte_end":68392,"line_start":14,"line_end":14,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/write.rs","byte_start":68397,"byte_end":68400,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ Panics if `data.len()` is greater than this sub-region len.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/write.rs","byte_start":68405,"byte_end":68468,"line_start":16,"line_end":16,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":718},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":56486,"byte_end":56497,"line_start":17,"line_end":17,"column_start":12,"column_end":23},"name":"NonCoherent","qualname":"::mapping::NonCoherent","value":"","parent":null,"children":[],"decl_id":null,"docs":" Non-coherent marker.\n","sig":null,"attributes":[{"value":"/ Non-coherent marker.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":56420,"byte_end":56444,"line_start":15,"line_end":15,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":725},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":56562,"byte_end":56570,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"Coherent","qualname":"::mapping::Coherent","value":"","parent":null,"children":[],"decl_id":null,"docs":" Coherent marker.\n","sig":null,"attributes":[{"value":"/ Coherent marker.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":56500,"byte_end":56520,"line_start":19,"line_end":19,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":732},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":56685,"byte_end":56698,"line_start":25,"line_end":25,"column_start":12,"column_end":25},"name":"MaybeCoherent","qualname":"::mapping::MaybeCoherent","value":"","parent":null,"children":[],"decl_id":null,"docs":" Value that contains either coherent marker or non-coherent marker.\n","sig":null,"attributes":[{"value":"/ Value that contains either coherent marker or non-coherent marker.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":56573,"byte_end":56643,"line_start":23,"line_end":23,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":740},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":56848,"byte_end":56859,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"name":"MappedRange","qualname":"::mapping::MappedRange","value":"MappedRange {  }","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747}],"decl_id":null,"docs":" Represents range of the memory mapped to the host.\n Provides methods for safer host access to the memory.\n","sig":null,"attributes":[{"value":"/ Represents range of the memory mapped to the host.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":56707,"byte_end":56761,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/ Provides methods for safer host access to the memory.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":56762,"byte_end":56819,"line_start":28,"line_end":28,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":58681,"byte_end":58689,"line_start":89,"line_end":89,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<MappedRange>::from_raw","value":"pub unsafe fn from_raw(&'a Memory<B>, NonNull<u8>, Range<u64>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct mapped range from raw mapping","sig":null,"attributes":[{"value":"/ Construct mapped range from raw mapping","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":58394,"byte_end":58437,"line_start":82,"line_end":82,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":58442,"byte_end":58445,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":58450,"byte_end":58462,"line_start":84,"line_end":84,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":58467,"byte_end":58470,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ `memory` `range` must be mapped to host memory region pointer by `ptr`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":58475,"byte_end":58550,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ `range` is in memory object space.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":58555,"byte_end":58593,"line_start":87,"line_end":87,"column_start":5,"column_end":43}},{"value":"/ `ptr` points to the `range.start` offset from memory origin.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":58598,"byte_end":58662,"line_start":88,"line_end":88,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":59159,"byte_end":59162,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"ptr","qualname":"<MappedRange>::ptr","value":"pub fn ptr(&Self) -> NonNull<u8>","parent":null,"children":[],"decl_id":null,"docs":" Get pointer to beginning of memory region.\n i.e. to `range().start` offset from memory origin.\n","sig":null,"attributes":[{"value":"/ Get pointer to beginning of memory region.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":59042,"byte_end":59088,"line_start":102,"line_end":102,"column_start":5,"column_end":51}},{"value":"/ i.e. to `range().start` offset from memory origin.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":59093,"byte_end":59147,"line_start":103,"line_end":103,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":59248,"byte_end":59253,"line_start":109,"line_end":109,"column_start":12,"column_end":17},"name":"range","qualname":"<MappedRange>::range","value":"pub fn range(&Self) -> Range<u64>","parent":null,"children":[],"decl_id":null,"docs":" Get mapped range.\n","sig":null,"attributes":[{"value":"/ Get mapped range.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":59215,"byte_end":59236,"line_start":108,"line_end":108,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":59795,"byte_end":59799,"line_start":122,"line_end":122,"column_start":19,"column_end":23},"name":"read","qualname":"<MappedRange>::read","value":"pub unsafe fn read<'b, T>(&'b mut Self, &B::Device, Range<u64>)\n-> Result<&'b [T], gfx_hal::device::MapError> where 'a:'b, T: Copy","parent":null,"children":[],"decl_id":null,"docs":" Fetch readable slice of sub-range to be read.\n Invalidating range if memory is not coherent.\n `range.end - range.start` must be multiple of `size_of::()`.\n `mapping offset + range.start` must be multiple of `align_of::()`.","sig":null,"attributes":[{"value":"/ Fetch readable slice of sub-range to be read.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":59315,"byte_end":59364,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"/ Invalidating range if memory is not coherent.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":59369,"byte_end":59418,"line_start":114,"line_end":114,"column_start":5,"column_end":54}},{"value":"/ `range.end - range.start` must be multiple of `size_of::()`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":59423,"byte_end":59487,"line_start":115,"line_end":115,"column_start":5,"column_end":69}},{"value":"/ `mapping offset + range.start` must be multiple of `align_of::()`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":59492,"byte_end":59562,"line_start":116,"line_end":116,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":59567,"byte_end":59570,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":59575,"byte_end":59587,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":59592,"byte_end":59595,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ * Caller must ensure that device won't write to the memory region until the borrowing ends.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":59600,"byte_end":59695,"line_start":120,"line_end":120,"column_start":5,"column_end":100}},{"value":"/ * `T` Must be plain-old-data type compatible with data in mapped region.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":59700,"byte_end":59776,"line_start":121,"line_end":121,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":60919,"byte_end":60924,"line_start":160,"line_end":160,"column_start":19,"column_end":24},"name":"write","qualname":"<MappedRange>::write","value":"pub unsafe fn write<'b, T: 'b>(&'b mut Self, &'b B::Device, Range<u64>)\n-> Result</*impl Trait*/, gfx_hal::device::MapError> where 'a:'b, T: Copy","parent":null,"children":[],"decl_id":null,"docs":" Fetch writer to the sub-region.\n This writer will flush data on drop if written at least once.","sig":null,"attributes":[{"value":"/ Fetch writer to the sub-region.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":60674,"byte_end":60709,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/ This writer will flush data on drop if written at least once.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":60714,"byte_end":60779,"line_start":155,"line_end":155,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":60784,"byte_end":60787,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":60792,"byte_end":60804,"line_start":157,"line_end":157,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":60809,"byte_end":60812,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ * Caller must ensure that device won't write to or read from the memory region.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":60817,"byte_end":60900,"line_start":159,"line_end":159,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":62290,"byte_end":62298,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"coherent","qualname":"<MappedRange>::coherent","value":"pub fn coherent(Self) -> Result<MappedRange, MappedRange>","parent":null,"children":[],"decl_id":null,"docs":" Convert into mapped range with statically known coherency.\n","sig":null,"attributes":[{"value":"/ Convert into mapped range with statically known coherency.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":62216,"byte_end":62278,"line_start":206,"line_end":206,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":63728,"byte_end":63733,"line_start":263,"line_end":263,"column_start":19,"column_end":24},"name":"write","qualname":"<MappedRange>::write","value":"pub unsafe fn write<'b, U: 'b>(&'b mut Self, Range<u64>)\n-> Result</*impl Trait*/, gfx_hal::device::MapError> where U: Copy","parent":null,"children":[],"decl_id":null,"docs":" Fetch writer to the sub-region.","sig":null,"attributes":[{"value":"/ Fetch writer to the sub-region.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":63553,"byte_end":63588,"line_start":258,"line_end":258,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":63593,"byte_end":63596,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":63601,"byte_end":63613,"line_start":260,"line_end":260,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":63618,"byte_end":63621,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ * Caller must ensure that device won't write to or read from the memory region.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":63626,"byte_end":63709,"line_start":262,"line_end":262,"column_start":5,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":753},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":69784,"byte_end":69790,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Memory","qualname":"::memory::Memory","value":"Memory {  }","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758}],"decl_id":null,"docs":" Memory object wrapper.\n Contains size and properties of the memory.\n","sig":null,"attributes":[{"value":"/ Memory object wrapper.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":69681,"byte_end":69707,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/ Contains size and properties of the memory.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":69708,"byte_end":69755,"line_start":4,"line_end":4,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":70024,"byte_end":70034,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"properties","qualname":"<Memory<B>>::properties","value":"pub fn properties(&Self) -> gfx_hal::memory::Properties","parent":null,"children":[],"decl_id":null,"docs":" Get memory properties.\n","sig":null,"attributes":[{"value":"/ Get memory properties.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":69986,"byte_end":70012,"line_start":17,"line_end":17,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":70142,"byte_end":70146,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"size","qualname":"<Memory<B>>::size","value":"pub fn size(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get memory size.\n","sig":null,"attributes":[{"value":"/ Get memory size.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":70110,"byte_end":70130,"line_start":22,"line_end":22,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":70223,"byte_end":70226,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"raw","qualname":"<Memory<B>>::raw","value":"pub fn raw(&Self) -> &B::Memory","parent":null,"children":[],"decl_id":null,"docs":" Get raw memory.\n","sig":null,"attributes":[{"value":"/ Get raw memory.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":70192,"byte_end":70211,"line_start":27,"line_end":27,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":70313,"byte_end":70321,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Memory<B>>::into_raw","value":"pub fn into_raw(Self) -> B::Memory","parent":null,"children":[],"decl_id":null,"docs":" Unwrap raw memory.\n","sig":null,"attributes":[{"value":"/ Unwrap raw memory.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":70279,"byte_end":70301,"line_start":32,"line_end":32,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":70504,"byte_end":70512,"line_start":43,"line_end":43,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Memory<B>>::from_raw","value":"pub unsafe fn from_raw(B::Memory, u64, gfx_hal::memory::Properties) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create memory from raw object.","sig":null,"attributes":[{"value":"/ Create memory from raw object.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":70404,"byte_end":70438,"line_start":38,"line_end":38,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":70443,"byte_end":70446,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":70451,"byte_end":70463,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":70468,"byte_end":70471,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ TODO:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":70476,"byte_end":70485,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":70937,"byte_end":70949,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"host_visible","qualname":"<Memory<B>>::host_visible","value":"pub fn host_visible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this memory is host-visible and can be mapped.\n `memory.host_visible()` is equivalent to `memory.properties().contains(Properties::CPU_VISIBLE)`\n","sig":null,"attributes":[{"value":"/ Check if this memory is host-visible and can be mapped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":70761,"byte_end":70820,"line_start":56,"line_end":56,"column_start":5,"column_end":64}},{"value":"/ `memory.host_visible()` is equivalent to `memory.properties().contains(Properties::CPU_VISIBLE)`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":70825,"byte_end":70925,"line_start":57,"line_end":57,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":71268,"byte_end":71281,"line_start":65,"line_end":65,"column_start":12,"column_end":25},"name":"host_coherent","qualname":"<Memory<B>>::host_coherent","value":"pub fn host_coherent(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this memory is host-coherent and doesn't require invalidating or flushing.\n `memory.host_coherent()` is equivalent to `memory.properties().contains(Properties::COHERENT)`\n","sig":null,"attributes":[{"value":"/ Check if this memory is host-coherent and doesn't require invalidating or flushing.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":71066,"byte_end":71153,"line_start":63,"line_end":63,"column_start":5,"column_end":92}},{"value":"/ `memory.host_coherent()` is equivalent to `memory.properties().contains(Properties::COHERENT)`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":71158,"byte_end":71256,"line_start":64,"line_end":64,"column_start":5,"column_end":103}}]},{"kind":"Trait","id":{"krate":0,"index":424},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":71965,"byte_end":71976,"line_start":7,"line_end":7,"column_start":11,"column_end":22},"name":"MemoryUsage","qualname":"::usage::MemoryUsage","value":"MemoryUsage: std::fmt::Debug","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427}],"decl_id":null,"docs":" Memory usage trait.\n","sig":null,"attributes":[{"value":"/ Memory usage trait.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":71931,"byte_end":71954,"line_start":6,"line_end":6,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":72057,"byte_end":72076,"line_start":9,"line_end":9,"column_start":8,"column_end":27},"name":"properties_required","qualname":"::usage::MemoryUsage::properties_required","value":"pub fn properties_required(&Self) -> gfx_hal::memory::Properties","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Get set of properties required for the usage.\n","sig":null,"attributes":[{"value":"/ Get set of properties required for the usage.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":72000,"byte_end":72049,"line_start":8,"line_end":8,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":72305,"byte_end":72319,"line_start":16,"line_end":16,"column_start":8,"column_end":22},"name":"memory_fitness","qualname":"::usage::MemoryUsage::memory_fitness","value":"pub fn memory_fitness(&Self, gfx_hal::memory::Properties) -> u32","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Get comparable fitness value for memory properties.","sig":null,"attributes":[{"value":"/ Get comparable fitness value for memory properties.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":72121,"byte_end":72176,"line_start":11,"line_end":11,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":72181,"byte_end":72184,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":72189,"byte_end":72201,"line_start":13,"line_end":13,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":72206,"byte_end":72209,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ This function will panic if properties set doesn't contain required properties.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":72214,"byte_end":72297,"line_start":15,"line_end":15,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":72443,"byte_end":72460,"line_start":19,"line_end":19,"column_start":8,"column_end":25},"name":"allocator_fitness","qualname":"::usage::MemoryUsage::allocator_fitness","value":"pub fn allocator_fitness(&Self, Kind) -> u32","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":" Get comparable fitness value for memory allocator.\n","sig":null,"attributes":[{"value":"/ Get comparable fitness value for memory allocator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":72381,"byte_end":72435,"line_start":18,"line_end":18,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":762},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":73102,"byte_end":73106,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"Data","qualname":"::usage::Data","value":"","parent":null,"children":[],"decl_id":null,"docs":" Full speed GPU access.\n Optimal for render targets and persistent resources.\n Avoid memory with host access.\n","sig":null,"attributes":[{"value":"/ Full speed GPU access.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":72942,"byte_end":72968,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ Optimal for render targets and persistent resources.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":72969,"byte_end":73025,"line_start":39,"line_end":39,"column_start":1,"column_end":57}},{"value":"/ Avoid memory with host access.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":73026,"byte_end":73060,"line_start":40,"line_end":40,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":769},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":74225,"byte_end":74232,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"Dynamic","qualname":"::usage::Dynamic","value":"","parent":null,"children":[],"decl_id":null,"docs":" CPU to GPU data flow with update commands.\n Used for dynamic buffer data, typically constant buffers.\n Host access is guaranteed.\n Prefers memory with fast GPU access.\n","sig":null,"attributes":[{"value":"/ CPU to GPU data flow with update commands.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":74003,"byte_end":74049,"line_start":67,"line_end":67,"column_start":1,"column_end":47}},{"value":"/ Used for dynamic buffer data, typically constant buffers.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":74050,"byte_end":74111,"line_start":68,"line_end":68,"column_start":1,"column_end":62}},{"value":"/ Host access is guaranteed.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":74112,"byte_end":74142,"line_start":69,"line_end":69,"column_start":1,"column_end":31}},{"value":"/ Prefers memory with fast GPU access.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":74143,"byte_end":74183,"line_start":70,"line_end":70,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":776},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":75288,"byte_end":75294,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"Upload","qualname":"::usage::Upload","value":"","parent":null,"children":[],"decl_id":null,"docs":" CPU to GPU data flow with mapping.\n Used for staging data before copying to the `Data` memory.\n Host access is guaranteed.\n","sig":null,"attributes":[{"value":"/ CPU to GPU data flow with mapping.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":75114,"byte_end":75152,"line_start":98,"line_end":98,"column_start":1,"column_end":39}},{"value":"/ Used for staging data before copying to the `Data` memory.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":75153,"byte_end":75215,"line_start":99,"line_end":99,"column_start":1,"column_end":63}},{"value":"/ Host access is guaranteed.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":75216,"byte_end":75246,"line_start":100,"line_end":100,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":783},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":76358,"byte_end":76366,"line_start":132,"line_end":132,"column_start":12,"column_end":20},"name":"Download","qualname":"::usage::Download","value":"","parent":null,"children":[],"decl_id":null,"docs":" GPU to CPU data flow with mapping.\n Used for copying data from `Data` memory to be read by the host.\n Host access is guaranteed.\n","sig":null,"attributes":[{"value":"/ GPU to CPU data flow with mapping.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":76178,"byte_end":76216,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/ Used for copying data from `Data` memory to be read by the host.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":76217,"byte_end":76285,"line_start":129,"line_end":129,"column_start":1,"column_end":69}},{"value":"/ Host access is guaranteed.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":76286,"byte_end":76316,"line_start":130,"line_end":130,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":791},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":77425,"byte_end":77429,"line_start":164,"line_end":164,"column_start":5,"column_end":9},"name":"Data","qualname":"::usage::MemoryUsageValue::Data","value":"MemoryUsageValue::Data","parent":{"krate":0,"index":790},"children":[],"decl_id":null,"docs":" See [`Data`]","sig":null,"attributes":[{"value":"/ See [`Data`]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":77361,"byte_end":77377,"line_start":161,"line_end":161,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":77382,"byte_end":77385,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`Data`]: struct.Data.html","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":77390,"byte_end":77420,"line_start":163,"line_end":163,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":793},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":77509,"byte_end":77516,"line_start":169,"line_end":169,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::usage::MemoryUsageValue::Dynamic","value":"MemoryUsageValue::Dynamic","parent":{"krate":0,"index":790},"children":[],"decl_id":null,"docs":" See [`Dynamic`]","sig":null,"attributes":[{"value":"/ See [`Dynamic`]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":77436,"byte_end":77455,"line_start":166,"line_end":166,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":77460,"byte_end":77463,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [`Dynamic`]: struct.Dynamic.html","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":77468,"byte_end":77504,"line_start":168,"line_end":168,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":795},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":77593,"byte_end":77599,"line_start":174,"line_end":174,"column_start":5,"column_end":11},"name":"Upload","qualname":"::usage::MemoryUsageValue::Upload","value":"MemoryUsageValue::Upload","parent":{"krate":0,"index":790},"children":[],"decl_id":null,"docs":" See [`Upload`]","sig":null,"attributes":[{"value":"/ See [`Upload`]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":77523,"byte_end":77541,"line_start":171,"line_end":171,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":77546,"byte_end":77549,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ [`Upload`]: struct.Upload.html","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":77554,"byte_end":77588,"line_start":173,"line_end":173,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":797},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":77682,"byte_end":77690,"line_start":179,"line_end":179,"column_start":5,"column_end":13},"name":"Download","qualname":"::usage::MemoryUsageValue::Download","value":"MemoryUsageValue::Download","parent":{"krate":0,"index":790},"children":[],"decl_id":null,"docs":" See [`Download`]","sig":null,"attributes":[{"value":"/ See [`Download`]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":77606,"byte_end":77626,"line_start":176,"line_end":176,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":77631,"byte_end":77634,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ [`Download`]: struct.Download.html","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":77639,"byte_end":77677,"line_start":178,"line_end":178,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":790},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":77338,"byte_end":77354,"line_start":160,"line_end":160,"column_start":10,"column_end":26},"name":"MemoryUsageValue","qualname":"::usage::MemoryUsageValue","value":"pub enum MemoryUsageValue {\n\n    /// See [`Data`]\n    ///\n    /// [`Data`]: struct.Data.html\n    Data,\n\n    /// See [`Dynamic`]\n    ///\n    /// [`Dynamic`]: struct.Dynamic.html\n    Dynamic,\n\n    /// See [`Upload`]\n    ///\n    /// [`Upload`]: struct.Upload.html\n    Upload,\n\n    /// See [`Download`]\n    ///\n    /// [`Download`]: struct.Download.html\n    Download,\n}","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":793},{"krate":0,"index":795},{"krate":0,"index":797}],"decl_id":null,"docs":" Well-known memory usage types.\n","sig":null,"attributes":[{"value":"/ Well-known memory usage types.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":77249,"byte_end":77283,"line_start":158,"line_end":158,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":810},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82212,"byte_end":82229,"line_start":8,"line_end":8,"column_start":12,"column_end":29},"name":"MemoryUtilization","qualname":"::utilization::MemoryUtilization","value":"MemoryUtilization { used, effective }","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812}],"decl_id":null,"docs":" Memory utilization stats.\n","sig":null,"attributes":[{"value":"/ Memory utilization stats.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82141,"byte_end":82170,"line_start":6,"line_end":6,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":811},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82281,"byte_end":82285,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"used","qualname":"::utilization::MemoryUtilization::used","value":"u64","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":" Total number of bytes allocated.\n","sig":null,"attributes":[{"value":"/ Total number of bytes allocated.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82236,"byte_end":82272,"line_start":9,"line_end":9,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":812},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82342,"byte_end":82351,"line_start":12,"line_end":12,"column_start":9,"column_end":18},"name":"effective","qualname":"::utilization::MemoryUtilization::effective","value":"u64","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":" Effective number bytes allocated.\n","sig":null,"attributes":[{"value":"/ Effective number bytes allocated.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82296,"byte_end":82333,"line_start":11,"line_end":11,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":818},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82438,"byte_end":82459,"line_start":17,"line_end":17,"column_start":12,"column_end":33},"name":"MemoryHeapUtilization","qualname":"::utilization::MemoryHeapUtilization","value":"MemoryHeapUtilization { utilization, size }","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820}],"decl_id":null,"docs":" Memory utilization of one heap.\n","sig":null,"attributes":[{"value":"/ Memory utilization of one heap.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82361,"byte_end":82396,"line_start":15,"line_end":15,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":819},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82491,"byte_end":82502,"line_start":19,"line_end":19,"column_start":9,"column_end":20},"name":"utilization","qualname":"::utilization::MemoryHeapUtilization::utilization","value":"utilization::MemoryUtilization","parent":{"krate":0,"index":818},"children":[],"decl_id":null,"docs":" Utilization.\n","sig":null,"attributes":[{"value":"/ Utilization.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82466,"byte_end":82482,"line_start":18,"line_end":18,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":820},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82558,"byte_end":82562,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"name":"size","qualname":"::utilization::MemoryHeapUtilization::size","value":"u64","parent":{"krate":0,"index":818},"children":[],"decl_id":null,"docs":" Memory heap size.\n","sig":null,"attributes":[{"value":"/ Memory heap size.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82528,"byte_end":82549,"line_start":21,"line_end":21,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":826},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82649,"byte_end":82670,"line_start":27,"line_end":27,"column_start":12,"column_end":33},"name":"MemoryTypeUtilization","qualname":"::utilization::MemoryTypeUtilization","value":"MemoryTypeUtilization { utilization, properties, heap_index }","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829}],"decl_id":null,"docs":" Memory utilization of one type.\n","sig":null,"attributes":[{"value":"/ Memory utilization of one type.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82572,"byte_end":82607,"line_start":25,"line_end":25,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":827},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82702,"byte_end":82713,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"name":"utilization","qualname":"::utilization::MemoryTypeUtilization::utilization","value":"utilization::MemoryUtilization","parent":{"krate":0,"index":826},"children":[],"decl_id":null,"docs":" Utilization.\n","sig":null,"attributes":[{"value":"/ Utilization.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82677,"byte_end":82693,"line_start":28,"line_end":28,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":828},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82769,"byte_end":82779,"line_start":32,"line_end":32,"column_start":9,"column_end":19},"name":"properties","qualname":"::utilization::MemoryTypeUtilization::properties","value":"gfx_hal::memory::Properties","parent":{"krate":0,"index":826},"children":[],"decl_id":null,"docs":" Memory type info.\n","sig":null,"attributes":[{"value":"/ Memory type info.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82739,"byte_end":82760,"line_start":31,"line_end":31,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":829},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82847,"byte_end":82857,"line_start":35,"line_end":35,"column_start":9,"column_end":19},"name":"heap_index","qualname":"::utilization::MemoryTypeUtilization::heap_index","value":"usize","parent":{"krate":0,"index":826},"children":[],"decl_id":null,"docs":" Index of heap this memory type uses.\n","sig":null,"attributes":[{"value":"/ Index of heap this memory type uses.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82798,"byte_end":82838,"line_start":34,"line_end":34,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":835},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82934,"byte_end":82956,"line_start":40,"line_end":40,"column_start":12,"column_end":34},"name":"TotalMemoryUtilization","qualname":"::utilization::TotalMemoryUtilization","value":"TotalMemoryUtilization { types, heaps }","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":837}],"decl_id":null,"docs":" Total memory utilization.\n","sig":null,"attributes":[{"value":"/ Total memory utilization.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82869,"byte_end":82898,"line_start":38,"line_end":38,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":836},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82997,"byte_end":83002,"line_start":42,"line_end":42,"column_start":9,"column_end":14},"name":"types","qualname":"::utilization::TotalMemoryUtilization::types","value":"std::vec::Vec<utilization::MemoryTypeUtilization>","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Utilization by types.\n","sig":null,"attributes":[{"value":"/ Utilization by types.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":82963,"byte_end":82988,"line_start":41,"line_end":41,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":837},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":83071,"byte_end":83076,"line_start":45,"line_end":45,"column_start":9,"column_end":14},"name":"heaps","qualname":"::utilization::TotalMemoryUtilization::heaps","value":"std::vec::Vec<utilization::MemoryHeapUtilization>","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Utilization by heaps.\n","sig":null,"attributes":[{"value":"/ Utilization by heaps.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":83037,"byte_end":83062,"line_start":44,"line_end":44,"column_start":5,"column_end":30}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":2453,"byte_end":2467,"line_start":20,"line_end":20,"column_start":25,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":2515,"byte_end":2529,"line_start":21,"line_end":21,"column_start":25,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":2562,"byte_end":2576,"line_start":23,"line_end":23,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":2963,"byte_end":2977,"line_start":43,"line_end":43,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":5232,"byte_end":5250,"line_start":120,"line_end":120,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":5801,"byte_end":5819,"line_start":140,"line_end":140,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":6745,"byte_end":6763,"line_start":182,"line_end":182,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":7747,"byte_end":7759,"line_start":32,"line_end":32,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":7807,"byte_end":7819,"line_start":33,"line_end":33,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":7852,"byte_end":7864,"line_start":35,"line_end":35,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":8218,"byte_end":8230,"line_start":53,"line_end":53,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":10810,"byte_end":10826,"line_start":145,"line_end":145,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":10874,"byte_end":10890,"line_start":146,"line_end":146,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":11238,"byte_end":11247,"line_start":160,"line_end":160,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":11540,"byte_end":11556,"line_start":176,"line_end":176,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":23054,"byte_end":23070,"line_start":511,"line_end":511,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":24302,"byte_end":24307,"line_start":563,"line_end":563,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":28907,"byte_end":28918,"line_start":24,"line_end":24,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":29293,"byte_end":29304,"line_start":38,"line_end":38,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":29352,"byte_end":29363,"line_start":39,"line_end":39,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":29396,"byte_end":29407,"line_start":41,"line_end":41,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":29598,"byte_end":29609,"line_start":54,"line_end":54,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":31892,"byte_end":31896,"line_start":137,"line_end":137,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":31944,"byte_end":31948,"line_start":138,"line_end":138,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":31981,"byte_end":31996,"line_start":140,"line_end":140,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":34476,"byte_end":34491,"line_start":220,"line_end":220,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/heap.rs","byte_start":49452,"byte_end":49462,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/memory_type.rs","byte_start":50942,"byte_end":50952,"line_start":19,"line_end":19,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":39897,"byte_end":39907,"line_start":20,"line_end":20,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":40307,"byte_end":40317,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":40370,"byte_end":40380,"line_start":34,"line_end":34,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":40542,"byte_end":40552,"line_start":40,"line_end":40,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":41182,"byte_end":41187,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":290},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":46652,"byte_end":46663,"line_start":230,"line_end":230,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":47893,"byte_end":47904,"line_start":278,"line_end":278,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":48256,"byte_end":48267,"line_start":294,"line_end":294,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/write.rs","byte_start":68877,"byte_end":68887,"line_start":32,"line_end":32,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/write.rs","byte_start":69073,"byte_end":69083,"line_start":44,"line_end":44,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/write.rs","byte_start":69449,"byte_end":69462,"line_start":63,"line_end":63,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":57139,"byte_end":57150,"line_start":44,"line_end":44,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":389},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":62866,"byte_end":62877,"line_start":226,"line_end":226,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":63200,"byte_end":63211,"line_start":240,"line_end":240,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":63496,"byte_end":63507,"line_start":254,"line_end":254,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":69939,"byte_end":69945,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":72515,"byte_end":72516,"line_start":22,"line_end":22,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":73130,"byte_end":73134,"line_start":44,"line_end":44,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":74256,"byte_end":74263,"line_start":74,"line_end":74,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":75318,"byte_end":75324,"line_start":104,"line_end":104,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":76390,"byte_end":76398,"line_start":134,"line_end":134,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":77740,"byte_end":77756,"line_start":183,"line_end":183,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":83136,"byte_end":83158,"line_start":48,"line_end":48,"column_start":28,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":2453,"byte_end":2467,"line_start":20,"line_end":20,"column_start":25,"column_end":39},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":503},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":2515,"byte_end":2529,"line_start":21,"line_end":21,"column_start":25,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":503},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":2562,"byte_end":2576,"line_start":23,"line_end":23,"column_start":9,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":2963,"byte_end":2977,"line_start":43,"line_end":43,"column_start":22,"column_end":36},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":503},"to":{"krate":0,"index":214}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":5232,"byte_end":5250,"line_start":120,"line_end":120,"column_start":6,"column_end":24},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":5801,"byte_end":5819,"line_start":140,"line_end":140,"column_start":26,"column_end":44},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":510},"to":{"krate":0,"index":205}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dedicated.rs","byte_start":6745,"byte_end":6763,"line_start":182,"line_end":182,"column_start":15,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":510},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":7747,"byte_end":7759,"line_start":32,"line_end":32,"column_start":25,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":516},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":7807,"byte_end":7819,"line_start":33,"line_end":33,"column_start":25,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":516},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":7852,"byte_end":7864,"line_start":35,"line_end":35,"column_start":9,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":8218,"byte_end":8230,"line_start":53,"line_end":53,"column_start":22,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":516},"to":{"krate":0,"index":214}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":10810,"byte_end":10826,"line_start":145,"line_end":145,"column_start":25,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":537},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":10874,"byte_end":10890,"line_start":146,"line_end":146,"column_start":25,"column_end":41},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":537},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":11238,"byte_end":11247,"line_start":160,"line_end":160,"column_start":21,"column_end":30},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":11540,"byte_end":11556,"line_start":176,"line_end":176,"column_start":9,"column_end":25},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":23054,"byte_end":23070,"line_start":511,"line_end":511,"column_start":26,"column_end":42},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":537},"to":{"krate":0,"index":205}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/dynamic.rs","byte_start":24302,"byte_end":24307,"line_start":563,"line_end":563,"column_start":9,"column_end":14},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":28907,"byte_end":28918,"line_start":24,"line_end":24,"column_start":29,"column_end":40},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":29293,"byte_end":29304,"line_start":38,"line_end":38,"column_start":25,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":29352,"byte_end":29363,"line_start":39,"line_end":39,"column_start":25,"column_end":36},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":29396,"byte_end":29407,"line_start":41,"line_end":41,"column_start":9,"column_end":20},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":29598,"byte_end":29609,"line_start":54,"line_end":54,"column_start":22,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":149},"to":{"krate":0,"index":214}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":31892,"byte_end":31896,"line_start":137,"line_end":137,"column_start":25,"column_end":29},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":31944,"byte_end":31948,"line_start":138,"line_end":138,"column_start":25,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":31981,"byte_end":31996,"line_start":140,"line_end":140,"column_start":9,"column_end":24},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/allocator/linear.rs","byte_start":34476,"byte_end":34491,"line_start":220,"line_end":220,"column_start":26,"column_end":41},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":583},"to":{"krate":0,"index":205}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/heap.rs","byte_start":49452,"byte_end":49462,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/memory_type.rs","byte_start":50942,"byte_end":50952,"line_start":19,"line_end":19,"column_start":9,"column_end":19},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":39897,"byte_end":39907,"line_start":20,"line_end":20,"column_start":28,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":642},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":40307,"byte_end":40317,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":642},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":40370,"byte_end":40380,"line_start":34,"line_end":34,"column_start":49,"column_end":59},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":642},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":40542,"byte_end":40552,"line_start":40,"line_end":40,"column_start":45,"column_end":55},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":642},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":41182,"byte_end":41187,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":46652,"byte_end":46663,"line_start":230,"line_end":230,"column_start":9,"column_end":20},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":673},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":47893,"byte_end":47904,"line_start":278,"line_end":278,"column_start":9,"column_end":20},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/heaps/mod.rs","byte_start":48256,"byte_end":48267,"line_start":294,"line_end":294,"column_start":22,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":673},"to":{"krate":0,"index":214}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/write.rs","byte_start":68877,"byte_end":68887,"line_start":32,"line_end":32,"column_start":25,"column_end":35},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":699},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/write.rs","byte_start":69073,"byte_end":69083,"line_start":44,"line_end":44,"column_start":29,"column_end":39},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":699},"to":{"krate":0,"index":342}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/write.rs","byte_start":69449,"byte_end":69462,"line_start":63,"line_end":63,"column_start":26,"column_end":39},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":710},"to":{"krate":0,"index":342}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":57139,"byte_end":57150,"line_start":44,"line_end":44,"column_start":13,"column_end":24},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":62866,"byte_end":62877,"line_start":226,"line_end":226,"column_start":52,"column_end":63},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":740},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":63200,"byte_end":63211,"line_start":240,"line_end":240,"column_start":55,"column_end":66},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":740},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/mapping/mod.rs","byte_start":63496,"byte_end":63507,"line_start":254,"line_end":254,"column_start":13,"column_end":24},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/memory.rs","byte_start":69939,"byte_end":69945,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":753},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":71988,"byte_end":71993,"line_start":7,"line_end":7,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":6599},"to":{"krate":0,"index":424}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":72515,"byte_end":72516,"line_start":22,"line_end":22,"column_start":25,"column_end":26},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":429},"to":{"krate":0,"index":424}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":73130,"byte_end":73134,"line_start":44,"line_end":44,"column_start":22,"column_end":26},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":762},"to":{"krate":0,"index":424}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":74256,"byte_end":74263,"line_start":74,"line_end":74,"column_start":22,"column_end":29},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":769},"to":{"krate":0,"index":424}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":75318,"byte_end":75324,"line_start":104,"line_end":104,"column_start":22,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":776},"to":{"krate":0,"index":424}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":76390,"byte_end":76398,"line_start":134,"line_end":134,"column_start":22,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":783},"to":{"krate":0,"index":424}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/usage.rs","byte_start":77740,"byte_end":77756,"line_start":183,"line_end":183,"column_start":22,"column_end":38},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":790},"to":{"krate":0,"index":424}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-memory-0.5.2/src/utilization.rs","byte_start":83136,"byte_end":83158,"line_start":48,"line_end":48,"column_start":28,"column_end":50},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":835},"to":{"krate":2,"index":6604}}]}