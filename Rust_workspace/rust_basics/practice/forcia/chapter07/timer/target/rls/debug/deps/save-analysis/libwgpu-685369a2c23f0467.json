{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0","program":"/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wgpu","--edition=2018","/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=685369a2c23f0467","-C","extra-filename=-685369a2c23f0467","--out-dir","/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps","-L","dependency=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps","--extern","arrayvec=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libarrayvec-5811383bc658f510.rmeta","--extern","raw_window_handle=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libraw_window_handle-88752bf925715e9f.rmeta","--extern","wgn=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libwgpu_native-551af266c916299b.rmeta","--extern","zerocopy=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libzerocopy-79bf9f54fee8cad5.rmeta","--cap-lints","allow","-L","native=/usr/lib/x86_64-linux-gnu","--error-format=json","--sysroot","/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libwgpu-685369a2c23f0467.rmeta"},"prelude":{"crate_id":{"name":"wgpu","disambiguator":[17478398159302983138,4411328080927748135]},"crate_root":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src","external_crates":[{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3329901521826220148,8779651902869174066]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11533795067257537051,6600409280955634707]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12614123221401343543,9564301585503608515]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1785005413158388284,2453622026203223019]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12957079427417428001,17718260667887668647]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10214993728156300765,14618204673916620187]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12453517098623888364,4709794086161820998]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12634510118091288440,7983944581587655387]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14017342134866723280,9256858969587329629]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7061025862014072460,14171357653989770935]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2285728033677722481,16182084057206383065]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7305883247437987566,266452839079745451]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13956229687295891598,15294992126055156716]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[931598532372339641,10024719927090962737]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[11150552510595322945,15608256962932530162]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4217706585212656622,592289864015908737]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[2229008352226773351,3496425060661471051]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":18,"id":{"name":"arrayvec","disambiguator":[5311188084216334454,6394550193531724158]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":19,"id":{"name":"zerocopy","disambiguator":[25677512594696053,17445025395978771016]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":20,"id":{"name":"byteorder","disambiguator":[9882234172180254623,3551766597719573225]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":21,"id":{"name":"zerocopy_derive","disambiguator":[3024636627786438440,12149362349242125247]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":22,"id":{"name":"wgpu_native","disambiguator":[13445278681342529552,11322577760539959903]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":23,"id":{"name":"gfx_backend_empty","disambiguator":[5097702521914976291,5244782463740500482]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":24,"id":{"name":"gfx_hal","disambiguator":[1160024678049385583,4108694661582774333]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":25,"id":{"name":"bitflags","disambiguator":[9165588580007963606,5638763360476460501]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":26,"id":{"name":"smallvec","disambiguator":[1599244063048730678,8627346815940542373]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":27,"id":{"name":"maybe_uninit","disambiguator":[18213777896645316402,261489198914462648]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":28,"id":{"name":"raw_window_handle","disambiguator":[12767961922193492099,3234823766176022424]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":29,"id":{"name":"libc","disambiguator":[3800494124530081931,3463518720461322788]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":30,"id":{"name":"gfx_backend_vulkan","disambiguator":[14228393437441236875,15333872122959288596]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":31,"id":{"name":"log","disambiguator":[15023639168608180861,18039869484860833466]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":32,"id":{"name":"cfg_if","disambiguator":[17405709527175409947,1096695995382631820]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":33,"id":{"name":"value_bag","disambiguator":[17683222284734379674,1469789403133961335]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":34,"id":{"name":"ctor","disambiguator":[13094809719813952805,11882337333484102486]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":35,"id":{"name":"ash","disambiguator":[8977929317970838285,10938893338698163859]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":36,"id":{"name":"shared_library","disambiguator":[2864744037292582793,3991889092186414187]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":37,"id":{"name":"lazy_static","disambiguator":[2470383162066340162,6700700590454652848]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":38,"id":{"name":"rendy_descriptor","disambiguator":[6666727202021241673,6358313001021186202]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":39,"id":{"name":"relevant","disambiguator":[1844741023045667097,8748421391733746310]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":40,"id":{"name":"cfg_if","disambiguator":[9015421078749522011,4315844557797051765]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":41,"id":{"name":"parking_lot","disambiguator":[8504086672753960089,2666138382128611589]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":42,"id":{"name":"lock_api","disambiguator":[2716539207018647825,17248365013491375856]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":43,"id":{"name":"scopeguard","disambiguator":[13742932171067816904,15949076817111810874]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":44,"id":{"name":"parking_lot_core","disambiguator":[9516835627499877339,3823233772733366213]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":45,"id":{"name":"copyless","disambiguator":[8055301604793740631,15198196617865541532]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":46,"id":{"name":"rendy_memory","disambiguator":[9630008001426832087,16197857177495833345]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":47,"id":{"name":"hibitset","disambiguator":[5742452947473803537,10494116200913773731]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":48,"id":{"name":"atom","disambiguator":[15954665800976008527,14480536614251483258]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":49,"id":{"name":"colorful","disambiguator":[10135521563720918410,16084109882218347550]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":50,"id":{"name":"slab","disambiguator":[12314209455201404546,12853708085438978694]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":51,"id":{"name":"vec_map","disambiguator":[6223129251989475599,9760855958209078732]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","num":52,"id":{"name":"fxhash","disambiguator":[14148990342152566552,11456709220650684160]}}],"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":0,"byte_end":44215,"line_start":1,"line_end":1364,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":24,"index":991},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":283,"byte_end":294,"line_start":14,"line_end":14,"column_start":5,"column_end":16},"alias_span":null,"name":"AdapterInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3540},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":300,"byte_end":311,"line_start":15,"line_end":15,"column_start":5,"column_end":16},"alias_span":null,"name":"AddressMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2121},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":317,"byte_end":327,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"alias_span":null,"name":"BackendBit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2462},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":333,"byte_end":348,"line_start":17,"line_end":17,"column_start":5,"column_end":20},"alias_span":null,"name":"BlendDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2267},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":354,"byte_end":365,"line_start":18,"line_end":18,"column_start":5,"column_end":16},"alias_span":null,"name":"BlendFactor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2321},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":371,"byte_end":385,"line_start":19,"line_end":19,"column_start":5,"column_end":19},"alias_span":null,"name":"BlendOperation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1377},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":391,"byte_end":404,"line_start":20,"line_end":20,"column_start":5,"column_end":18},"alias_span":null,"name":"BufferAddress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3092},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":410,"byte_end":426,"line_start":21,"line_end":21,"column_start":5,"column_end":21},"alias_span":null,"name":"BufferDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3099},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":432,"byte_end":452,"line_start":22,"line_end":22,"column_start":5,"column_end":25},"alias_span":null,"name":"BufferMapAsyncStatus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2941},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":458,"byte_end":469,"line_start":23,"line_end":23,"column_start":5,"column_end":16},"alias_span":null,"name":"BufferUsage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3832},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":475,"byte_end":480,"line_start":24,"line_end":24,"column_start":5,"column_end":10},"alias_span":null,"name":"Color","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2474},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":486,"byte_end":506,"line_start":25,"line_end":25,"column_start":5,"column_end":25},"alias_span":null,"name":"ColorStateDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2351},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":512,"byte_end":522,"line_start":26,"line_end":26,"column_start":5,"column_end":15},"alias_span":null,"name":"ColorWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1864},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":528,"byte_end":552,"line_start":27,"line_end":27,"column_start":5,"column_end":29},"alias_span":null,"name":"CommandEncoderDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1872},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":558,"byte_end":581,"line_start":28,"line_end":28,"column_start":5,"column_end":28},"alias_span":null,"name":"CommandBufferDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3585},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":587,"byte_end":602,"line_start":29,"line_end":29,"column_start":5,"column_end":20},"alias_span":null,"name":"CompareFunction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2787},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":608,"byte_end":616,"line_start":30,"line_end":30,"column_start":5,"column_end":13},"alias_span":null,"name":"CullMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2535},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":622,"byte_end":649,"line_start":31,"line_end":31,"column_start":5,"column_end":32},"alias_span":null,"name":"DepthStencilStateDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2258},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":655,"byte_end":671,"line_start":32,"line_end":32,"column_start":5,"column_end":21},"alias_span":null,"name":"DeviceDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2244},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":677,"byte_end":687,"line_start":33,"line_end":33,"column_start":5,"column_end":15},"alias_span":null,"name":"Extensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3851},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":693,"byte_end":701,"line_start":34,"line_end":34,"column_start":5,"column_end":13},"alias_span":null,"name":"Extent3d","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3564},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":707,"byte_end":717,"line_start":35,"line_end":35,"column_start":5,"column_end":15},"alias_span":null,"name":"FilterMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2766},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":723,"byte_end":732,"line_start":36,"line_end":36,"column_start":5,"column_end":14},"alias_span":null,"name":"FrontFace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2547},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":738,"byte_end":749,"line_start":37,"line_end":37,"column_start":5,"column_end":16},"alias_span":null,"name":"IndexFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2673},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":755,"byte_end":768,"line_start":38,"line_end":38,"column_start":5,"column_end":18},"alias_span":null,"name":"InputStepMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2252},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":774,"byte_end":780,"line_start":39,"line_end":39,"column_start":5,"column_end":11},"alias_span":null,"name":"Limits","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1775},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":786,"byte_end":792,"line_start":40,"line_end":40,"column_start":5,"column_end":11},"alias_span":null,"name":"LoadOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3842},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":798,"byte_end":806,"line_start":41,"line_end":41,"column_start":5,"column_end":13},"alias_span":null,"name":"Origin3d","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2097},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":812,"byte_end":827,"line_start":42,"line_end":42,"column_start":5,"column_end":20},"alias_span":null,"name":"PowerPreference","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3656},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":833,"byte_end":844,"line_start":43,"line_end":43,"column_start":5,"column_end":16},"alias_span":null,"name":"PresentMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2736},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":850,"byte_end":867,"line_start":44,"line_end":44,"column_start":5,"column_end":22},"alias_span":null,"name":"PrimitiveTopology","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2811},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":873,"byte_end":901,"line_start":45,"line_end":45,"column_start":5,"column_end":33},"alias_span":null,"name":"RasterizationStateDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1825},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":907,"byte_end":949,"line_start":46,"line_end":46,"column_start":5,"column_end":47},"alias_span":null,"name":"RenderPassDepthStencilAttachmentDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2237},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":955,"byte_end":976,"line_start":47,"line_end":47,"column_start":5,"column_end":26},"alias_span":null,"name":"RequestAdapterOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3624},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":982,"byte_end":999,"line_start":48,"line_end":48,"column_start":5,"column_end":22},"alias_span":null,"name":"SamplerDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1094},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1005,"byte_end":1019,"line_start":49,"line_end":49,"column_start":5,"column_end":19},"alias_span":null,"name":"ShaderLocation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2715},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1025,"byte_end":1047,"line_start":50,"line_end":50,"column_start":5,"column_end":27},"alias_span":null,"name":"ShaderModuleDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1405},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1053,"byte_end":1064,"line_start":51,"line_end":51,"column_start":5,"column_end":16},"alias_span":null,"name":"ShaderStage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2483},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1070,"byte_end":1086,"line_start":52,"line_end":52,"column_start":5,"column_end":21},"alias_span":null,"name":"StencilOperation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2522},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1092,"byte_end":1118,"line_start":53,"line_end":53,"column_start":5,"column_end":31},"alias_span":null,"name":"StencilStateFaceDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1796},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1124,"byte_end":1131,"line_start":54,"line_end":54,"column_start":5,"column_end":12},"alias_span":null,"name":"StoreOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3668},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1137,"byte_end":1156,"line_start":55,"line_end":55,"column_start":5,"column_end":24},"alias_span":null,"name":"SwapChainDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3460},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1162,"byte_end":1175,"line_start":56,"line_end":56,"column_start":5,"column_end":18},"alias_span":null,"name":"TextureAspect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3437},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1181,"byte_end":1198,"line_start":57,"line_end":57,"column_start":5,"column_end":22},"alias_span":null,"name":"TextureDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3138},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1204,"byte_end":1220,"line_start":58,"line_end":58,"column_start":5,"column_end":21},"alias_span":null,"name":"TextureDimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3159},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1226,"byte_end":1239,"line_start":59,"line_end":59,"column_start":5,"column_end":18},"alias_span":null,"name":"TextureFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3306},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1245,"byte_end":1257,"line_start":60,"line_end":60,"column_start":5,"column_end":17},"alias_span":null,"name":"TextureUsage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3508},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1263,"byte_end":1284,"line_start":61,"line_end":61,"column_start":5,"column_end":26},"alias_span":null,"name":"TextureViewDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3481},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1290,"byte_end":1310,"line_start":62,"line_end":62,"column_start":5,"column_end":25},"alias_span":null,"name":"TextureViewDimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2694},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1316,"byte_end":1341,"line_start":63,"line_end":63,"column_start":5,"column_end":30},"alias_span":null,"name":"VertexAttributeDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2568},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1347,"byte_end":1359,"line_start":64,"line_end":64,"column_start":5,"column_end":17},"alias_span":null,"name":"VertexFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":696},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1365,"byte_end":1375,"line_start":65,"line_end":65,"column_start":5,"column_end":15},"alias_span":null,"name":"read_spirv","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":0,"byte_end":44215,"line_start":1,"line_end":1364,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":499},{"krate":0,"index":6},{"krate":0,"index":501},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":211},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":67},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":315},{"krate":0,"index":312},{"krate":0,"index":318},{"krate":0,"index":325},{"krate":0,"index":322},{"krate":0,"index":328},{"krate":0,"index":355},{"krate":0,"index":353},{"krate":0,"index":351},{"krate":0,"index":348},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":356},{"krate":0,"index":365},{"krate":0,"index":363},{"krate":0,"index":360},{"krate":0,"index":367},{"krate":0,"index":373},{"krate":0,"index":370},{"krate":0,"index":376},{"krate":0,"index":383},{"krate":0,"index":380},{"krate":0,"index":386},{"krate":0,"index":392},{"krate":0,"index":389},{"krate":0,"index":395},{"krate":0,"index":402},{"krate":0,"index":399},{"krate":0,"index":405},{"krate":0,"index":413},{"krate":0,"index":410},{"krate":0,"index":416},{"krate":0,"index":433},{"krate":0,"index":430},{"krate":0,"index":436},{"krate":0,"index":443},{"krate":0,"index":440},{"krate":0,"index":446},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":463},{"krate":0,"index":460},{"krate":0,"index":466},{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":482},{"krate":0,"index":479},{"krate":0,"index":69},{"krate":0,"index":485},{"krate":0,"index":494},{"krate":0,"index":491},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":80},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":92},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":133},{"krate":0,"index":140},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":176},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208}],"decl_id":null,"docs":" A cross-platform graphics and compute library based on WebGPU.\n","sig":null,"attributes":[{"value":"/ A cross-platform graphics and compute library based on WebGPU.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":0,"byte_end":66,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":215},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1883,"byte_end":1890,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"Adapter","qualname":"::Adapter","value":"Adapter {  }","parent":null,"children":[{"krate":0,"index":216}],"decl_id":null,"docs":" A handle to a physical graphics and/or compute device.","sig":null,"attributes":[{"value":"/ A handle to a physical graphics and/or compute device.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1660,"byte_end":1718,"line_start":79,"line_end":79,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1719,"byte_end":1722,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ An `Adapter` can be used to open a connection to the corresponding device on the host system,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1723,"byte_end":1820,"line_start":81,"line_end":81,"column_start":1,"column_end":98}},{"value":"/ yielding a [`Device`] object.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1821,"byte_end":1854,"line_start":82,"line_end":82,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":219},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":2149,"byte_end":2155,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"Device","qualname":"::Device","value":"Device {  }","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221}],"decl_id":null,"docs":" An open connection to a graphics and/or compute device.","sig":null,"attributes":[{"value":"/ An open connection to a graphics and/or compute device.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1920,"byte_end":1979,"line_start":88,"line_end":88,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1980,"byte_end":1983,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ The `Device` is the responsible for the creation of most rendering and compute resources, as","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":1984,"byte_end":2080,"line_start":90,"line_end":90,"column_start":1,"column_end":97}},{"value":"/ well as exposing [`Queue`] objects.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":2081,"byte_end":2120,"line_start":91,"line_end":91,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":224},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":2269,"byte_end":2275,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":225}],"decl_id":null,"docs":" A handle to a GPU-accessible buffer.\n","sig":null,"attributes":[{"value":"/ A handle to a GPU-accessible buffer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":2200,"byte_end":2240,"line_start":98,"line_end":98,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":228},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":2370,"byte_end":2377,"line_start":106,"line_end":106,"column_start":12,"column_end":19},"name":"Texture","qualname":"::Texture","value":"Texture {  }","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230}],"decl_id":null,"docs":" A handle to a texture on the GPU.\n","sig":null,"attributes":[{"value":"/ A handle to a texture on the GPU.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":2304,"byte_end":2341,"line_start":104,"line_end":104,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":233},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":2612,"byte_end":2623,"line_start":116,"line_end":116,"column_start":12,"column_end":23},"name":"TextureView","qualname":"::TextureView","value":"TextureView {  }","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"decl_id":null,"docs":" A handle to a texture view.","sig":null,"attributes":[{"value":"/ A handle to a texture view.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":2424,"byte_end":2455,"line_start":111,"line_end":111,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":2456,"byte_end":2459,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ A `TextureView` object describes a texture and associated metadata needed by a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":2460,"byte_end":2542,"line_start":113,"line_end":113,"column_start":1,"column_end":83}},{"value":"/ [`RenderPipeline`] or [`BindGroup`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":2543,"byte_end":2583,"line_start":114,"line_end":114,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":238},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":2996,"byte_end":3003,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"Sampler","qualname":"::Sampler","value":"Sampler {  }","parent":null,"children":[{"krate":0,"index":239}],"decl_id":null,"docs":" A handle to a sampler.","sig":null,"attributes":[{"value":"/ A handle to a sampler.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":2674,"byte_end":2700,"line_start":121,"line_end":121,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":2701,"byte_end":2704,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ A `Sampler` object defines how a pipeline will sample from a [`TextureView`]. Samplers define","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":2705,"byte_end":2802,"line_start":123,"line_end":123,"column_start":1,"column_end":98}},{"value":"/ image filters (including anisotropy) and address (wrapping) modes, among other things. See","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":2803,"byte_end":2897,"line_start":124,"line_end":124,"column_start":1,"column_end":95}},{"value":"/ the documentation for [`SamplerDescriptor`] for more information.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":2898,"byte_end":2967,"line_start":125,"line_end":125,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":242},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":3275,"byte_end":3282,"line_start":136,"line_end":136,"column_start":12,"column_end":19},"name":"Surface","qualname":"::Surface","value":"Surface {  }","parent":null,"children":[{"krate":0,"index":243}],"decl_id":null,"docs":" A handle to a presentable surface.","sig":null,"attributes":[{"value":"/ A handle to a presentable surface.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":3033,"byte_end":3071,"line_start":131,"line_end":131,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":3072,"byte_end":3075,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ A `Surface` represents a platform-specific surface (e.g. a window) to which rendered images may","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":3076,"byte_end":3175,"line_start":133,"line_end":133,"column_start":1,"column_end":100}},{"value":"/ be presented. A `Surface` may be created with [`Surface::create`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":3176,"byte_end":3246,"line_start":134,"line_end":134,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":246},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":3543,"byte_end":3552,"line_start":145,"line_end":145,"column_start":12,"column_end":21},"name":"SwapChain","qualname":"::SwapChain","value":"SwapChain {  }","parent":null,"children":[{"krate":0,"index":247}],"decl_id":null,"docs":" A handle to a swap chain.","sig":null,"attributes":[{"value":"/ A handle to a swap chain.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":3312,"byte_end":3341,"line_start":140,"line_end":140,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":3342,"byte_end":3345,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ A `SwapChain` represents the image or series of images that will be presented to a [`Surface`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":3346,"byte_end":3445,"line_start":142,"line_end":142,"column_start":1,"column_end":100}},{"value":"/ A `SwapChain` may be created with [`Device::create_swap_chain`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":3446,"byte_end":3514,"line_start":143,"line_end":143,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":250},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":4049,"byte_end":4064,"line_start":156,"line_end":156,"column_start":12,"column_end":27},"name":"BindGroupLayout","qualname":"::BindGroupLayout","value":"BindGroupLayout {  }","parent":null,"children":[{"krate":0,"index":251}],"decl_id":null,"docs":" An opaque handle to a binding group layout.","sig":null,"attributes":[{"value":"/ An opaque handle to a binding group layout.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":3584,"byte_end":3631,"line_start":149,"line_end":149,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":3632,"byte_end":3635,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ A `BindGroupLayout` is a handle to the GPU-side layout of a binding group. It can be used to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":3636,"byte_end":3732,"line_start":151,"line_end":151,"column_start":1,"column_end":97}},{"value":"/ create a [`BindGroupDescriptor`] object, which in turn can be used to create a [`BindGroup`]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":3733,"byte_end":3829,"line_start":152,"line_end":152,"column_start":1,"column_end":97}},{"value":"/ object with [`Device::create_bind_group`]. A series of `BindGroupLayout`s can also be used to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":3830,"byte_end":3927,"line_start":153,"line_end":153,"column_start":1,"column_end":98}},{"value":"/ create a [`PipelineLayoutDescriptor`], which can be used to create a [`PipelineLayout`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":3928,"byte_end":4020,"line_start":154,"line_end":154,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":254},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":4506,"byte_end":4515,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"name":"BindGroup","qualname":"::BindGroup","value":"BindGroup {  }","parent":null,"children":[{"krate":0,"index":255}],"decl_id":null,"docs":" An opaque handle to a binding group.","sig":null,"attributes":[{"value":"/ An opaque handle to a binding group.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":4102,"byte_end":4142,"line_start":160,"line_end":160,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":4143,"byte_end":4146,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ A `BindGroup` represents the set of resources bound to the bindings described by a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":4147,"byte_end":4233,"line_start":162,"line_end":162,"column_start":1,"column_end":87}},{"value":"/ [`BindGroupLayout`]. It can be created with [`Device::create_bind_group`]. A `BindGroup` can","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":4234,"byte_end":4330,"line_start":163,"line_end":163,"column_start":1,"column_end":97}},{"value":"/ be bound to a particular [`RenderPass`] with [`RenderPass::set_bind_group`], or to a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":4331,"byte_end":4419,"line_start":164,"line_end":164,"column_start":1,"column_end":89}},{"value":"/ [`ComputePass`] with [`ComputePass::set_bind_group`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":4420,"byte_end":4477,"line_start":165,"line_end":165,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":258},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":4965,"byte_end":4977,"line_start":183,"line_end":183,"column_start":12,"column_end":24},"name":"ShaderModule","qualname":"::ShaderModule","value":"ShaderModule {  }","parent":null,"children":[{"krate":0,"index":259}],"decl_id":null,"docs":" A handle to a compiled shader module.","sig":null,"attributes":[{"value":"/ A handle to a compiled shader module.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":4654,"byte_end":4695,"line_start":177,"line_end":177,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":4696,"byte_end":4699,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ A `ShaderModule` represents a compiled shader module on the GPU. It can be created by passing","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":4700,"byte_end":4797,"line_start":179,"line_end":179,"column_start":1,"column_end":98}},{"value":"/ valid SPIR-V source code to [`Device::create_shader_module`]. Shader modules are used to define","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":4798,"byte_end":4897,"line_start":180,"line_end":180,"column_start":1,"column_end":100}},{"value":"/ programmable stages of a pipeline.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":4898,"byte_end":4936,"line_start":181,"line_end":181,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":262},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":5171,"byte_end":5185,"line_start":191,"line_end":191,"column_start":12,"column_end":26},"name":"PipelineLayout","qualname":"::PipelineLayout","value":"PipelineLayout {  }","parent":null,"children":[{"krate":0,"index":263}],"decl_id":null,"docs":" An opaque handle to a pipeline layout.","sig":null,"attributes":[{"value":"/ An opaque handle to a pipeline layout.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":5012,"byte_end":5054,"line_start":187,"line_end":187,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":5055,"byte_end":5058,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ A `PipelineLayout` object describes the available binding groups of a pipeline.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":5059,"byte_end":5142,"line_start":189,"line_end":189,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":266},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":5497,"byte_end":5511,"line_start":200,"line_end":200,"column_start":12,"column_end":26},"name":"RenderPipeline","qualname":"::RenderPipeline","value":"RenderPipeline {  }","parent":null,"children":[{"krate":0,"index":267}],"decl_id":null,"docs":" A handle to a rendering (graphics) pipeline.","sig":null,"attributes":[{"value":"/ A handle to a rendering (graphics) pipeline.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":5222,"byte_end":5270,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":5271,"byte_end":5274,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ A `RenderPipeline` object represents a graphics pipeline and its stages, bindings, vertex","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":5275,"byte_end":5368,"line_start":197,"line_end":197,"column_start":1,"column_end":94}},{"value":"/ buffers and targets. A `RenderPipeline` may be created with [`Device::create_render_pipeline`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":5369,"byte_end":5468,"line_start":198,"line_end":198,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":270},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":5612,"byte_end":5627,"line_start":206,"line_end":206,"column_start":12,"column_end":27},"name":"ComputePipeline","qualname":"::ComputePipeline","value":"ComputePipeline {  }","parent":null,"children":[{"krate":0,"index":271}],"decl_id":null,"docs":" A handle to a compute pipeline.\n","sig":null,"attributes":[{"value":"/ A handle to a compute pipeline.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":5548,"byte_end":5583,"line_start":204,"line_end":204,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":274},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":6021,"byte_end":6034,"line_start":216,"line_end":216,"column_start":12,"column_end":25},"name":"CommandBuffer","qualname":"::CommandBuffer","value":"CommandBuffer {  }","parent":null,"children":[{"krate":0,"index":275}],"decl_id":null,"docs":" An opaque handle to a command buffer on the GPU.","sig":null,"attributes":[{"value":"/ An opaque handle to a command buffer on the GPU.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":5665,"byte_end":5717,"line_start":210,"line_end":210,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":5718,"byte_end":5721,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ A `CommandBuffer` represents a complete sequence of commands that may be submitted to a command","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":5722,"byte_end":5821,"line_start":212,"line_end":212,"column_start":1,"column_end":100}},{"value":"/ queue with [`Queue::submit`]. A `CommandBuffer` is obtained by recording a series of commands to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":5822,"byte_end":5922,"line_start":213,"line_end":213,"column_start":1,"column_end":101}},{"value":"/ a [`CommandEncoder`] and then calling [`CommandEncoder::finish`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":5923,"byte_end":5992,"line_start":214,"line_end":214,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":278},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":6449,"byte_end":6463,"line_start":228,"line_end":228,"column_start":12,"column_end":26},"name":"CommandEncoder","qualname":"::CommandEncoder","value":"CommandEncoder {  }","parent":null,"children":[{"krate":0,"index":279}],"decl_id":null,"docs":" An object that encodes GPU operations.","sig":null,"attributes":[{"value":"/ An object that encodes GPU operations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":6070,"byte_end":6112,"line_start":220,"line_end":220,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":6113,"byte_end":6116,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ A `CommandEncoder` can record [`RenderPass`]es, [`ComputePass`]es, and transfer operations","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":6117,"byte_end":6211,"line_start":222,"line_end":222,"column_start":1,"column_end":95}},{"value":"/ between driver-managed resources like [`Buffer`]s and [`Texture`]s.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":6212,"byte_end":6283,"line_start":223,"line_end":223,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":6284,"byte_end":6287,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ When finished recording, call [`CommandEncoder::finish`] to obtain a [`CommandBuffer`] which may","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":6288,"byte_end":6388,"line_start":225,"line_end":225,"column_start":1,"column_end":101}},{"value":"/ be submitted for execution.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":6389,"byte_end":6420,"line_start":226,"line_end":226,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":282},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":6575,"byte_end":6585,"line_start":234,"line_end":234,"column_start":12,"column_end":22},"name":"RenderPass","qualname":"::RenderPass","value":"RenderPass {  }","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285}],"decl_id":null,"docs":" An in-progress recording of a render pass.\n","sig":null,"attributes":[{"value":"/ An in-progress recording of a render pass.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":6500,"byte_end":6546,"line_start":232,"line_end":232,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":289},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":6735,"byte_end":6746,"line_start":241,"line_end":241,"column_start":12,"column_end":23},"name":"ComputePass","qualname":"::ComputePass","value":"ComputePass {  }","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292}],"decl_id":null,"docs":" An in-progress recording of a compute pass.\n","sig":null,"attributes":[{"value":"/ An in-progress recording of a compute pass.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":6659,"byte_end":6706,"line_start":239,"line_end":239,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":296},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":6957,"byte_end":6962,"line_start":250,"line_end":250,"column_start":12,"column_end":17},"name":"Queue","qualname":"::Queue","value":"Queue {  }","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298}],"decl_id":null,"docs":" A handle to a command queue on a device.","sig":null,"attributes":[{"value":"/ A handle to a command queue on a device.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":6821,"byte_end":6865,"line_start":246,"line_end":246,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":6866,"byte_end":6869,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ A `Queue` executes recorded [`CommandBuffer`] objects.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":6870,"byte_end":6928,"line_start":248,"line_end":248,"column_start":1,"column_end":59}}]},{"kind":"StructVariant","id":{"krate":0,"index":303},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":7150,"byte_end":7156,"line_start":258,"line_end":258,"column_start":5,"column_end":11},"name":"Buffer","qualname":"::BindingResource::Buffer","value":"BindingResource::Buffer { buffer, range }","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":306},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":7235,"byte_end":7242,"line_start":262,"line_end":262,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::BindingResource::Sampler","value":"BindingResource::Sampler(&'a Sampler)","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":309},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":7261,"byte_end":7272,"line_start":263,"line_end":263,"column_start":5,"column_end":16},"name":"TextureView","qualname":"::BindingResource::TextureView","value":"BindingResource::TextureView(&'a TextureView)","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":301},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":7124,"byte_end":7139,"line_start":257,"line_end":257,"column_start":10,"column_end":25},"name":"BindingResource","qualname":"::BindingResource","value":"pub enum BindingResource<'a> {\n    Buffer {\n        buffer: &'a Buffer,\n        range: Range<BufferAddress>,\n    },\n    Sampler(&'a Sampler),\n    TextureView(&'a TextureView),\n}","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":309}],"decl_id":null,"docs":" A resource that can be bound to a pipeline.\n","sig":null,"attributes":[{"value":"/ A resource that can be bound to a pipeline.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":7043,"byte_end":7090,"line_start":255,"line_end":255,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":318},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":7381,"byte_end":7388,"line_start":268,"line_end":268,"column_start":12,"column_end":19},"name":"Binding","qualname":"::Binding","value":"Binding { binding, resource }","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321}],"decl_id":null,"docs":" A bindable resource and the slot to bind it to.\n","sig":null,"attributes":[{"value":"/ A bindable resource and the slot to bind it to.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":7294,"byte_end":7345,"line_start":266,"line_end":266,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":320},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":7403,"byte_end":7410,"line_start":269,"line_end":269,"column_start":9,"column_end":16},"name":"binding","qualname":"::Binding::binding","value":"u32","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":321},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":7425,"byte_end":7433,"line_start":270,"line_end":270,"column_start":9,"column_end":17},"name":"resource","qualname":"::Binding::resource","value":"BindingResource<'a>","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":329},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":7570,"byte_end":7583,"line_start":276,"line_end":276,"column_start":5,"column_end":18},"name":"UniformBuffer","qualname":"::BindingType::UniformBuffer","value":"BindingType::UniformBuffer { dynamic }","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":331},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":7620,"byte_end":7633,"line_start":279,"line_end":279,"column_start":5,"column_end":18},"name":"StorageBuffer","qualname":"::BindingType::StorageBuffer","value":"BindingType::StorageBuffer { dynamic, readonly }","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":334},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":7694,"byte_end":7701,"line_start":283,"line_end":283,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::BindingType::Sampler","value":"BindingType::Sampler","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":336},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":7707,"byte_end":7721,"line_start":284,"line_end":284,"column_start":5,"column_end":19},"name":"SampledTexture","qualname":"::BindingType::SampledTexture","value":"BindingType::SampledTexture { multisampled, dimension }","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":339},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":7804,"byte_end":7818,"line_start":288,"line_end":288,"column_start":5,"column_end":19},"name":"StorageTexture","qualname":"::BindingType::StorageTexture","value":"BindingType::StorageTexture { dimension }","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":328},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":7552,"byte_end":7563,"line_start":275,"line_end":275,"column_start":10,"column_end":21},"name":"BindingType","qualname":"::BindingType","value":"pub enum BindingType {\n    UniformBuffer {\n        dynamic: bool,\n    },\n    StorageBuffer {\n        dynamic: bool,\n        readonly: bool,\n    },\n    Sampler,\n    SampledTexture {\n        multisampled: bool,\n        dimension: TextureViewDimension,\n    },\n    StorageTexture {\n        dimension: TextureViewDimension,\n    },\n}","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":339}],"decl_id":null,"docs":" Specific type of a binding..\n","sig":null,"attributes":[{"value":"/ Specific type of a binding..","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":7459,"byte_end":7491,"line_start":273,"line_end":273,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":356},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":7972,"byte_end":7994,"line_start":295,"line_end":295,"column_start":12,"column_end":34},"name":"BindGroupLayoutBinding","qualname":"::BindGroupLayoutBinding","value":"BindGroupLayoutBinding { binding, visibility, ty }","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359}],"decl_id":null,"docs":" A description of a single binding inside a bind group.\n","sig":null,"attributes":[{"value":"/ A description of a single binding inside a bind group.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":7872,"byte_end":7930,"line_start":293,"line_end":293,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":357},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8005,"byte_end":8012,"line_start":296,"line_end":296,"column_start":9,"column_end":16},"name":"binding","qualname":"::BindGroupLayoutBinding::binding","value":"u32","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":358},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8027,"byte_end":8037,"line_start":297,"line_end":297,"column_start":9,"column_end":19},"name":"visibility","qualname":"::BindGroupLayoutBinding::visibility","value":"wgpu_native::ShaderStage","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":359},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8060,"byte_end":8062,"line_start":298,"line_end":298,"column_start":9,"column_end":11},"name":"ty","qualname":"::BindGroupLayoutBinding::ty","value":"BindingType","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":367},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8115,"byte_end":8140,"line_start":302,"line_end":302,"column_start":12,"column_end":37},"name":"BindGroupLayoutDescriptor","qualname":"::BindGroupLayoutDescriptor","value":"BindGroupLayoutDescriptor { bindings }","parent":null,"children":[{"krate":0,"index":369}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":369},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8155,"byte_end":8163,"line_start":303,"line_end":303,"column_start":9,"column_end":17},"name":"bindings","qualname":"::BindGroupLayoutDescriptor::bindings","value":"&'a [BindGroupLayoutBinding]","parent":{"krate":0,"index":367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":376},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8305,"byte_end":8324,"line_start":308,"line_end":308,"column_start":12,"column_end":31},"name":"BindGroupDescriptor","qualname":"::BindGroupDescriptor","value":"BindGroupDescriptor { layout, bindings }","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"decl_id":null,"docs":" A description of a group of bindings and the resources to be bound.\n","sig":null,"attributes":[{"value":"/ A description of a group of bindings and the resources to be bound.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8198,"byte_end":8269,"line_start":306,"line_end":306,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":378},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8379,"byte_end":8385,"line_start":310,"line_end":310,"column_start":9,"column_end":15},"name":"layout","qualname":"::BindGroupDescriptor::layout","value":"&'a BindGroupLayout","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":" The layout for this bind group.\n","sig":null,"attributes":[{"value":"/ The layout for this bind group.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8335,"byte_end":8370,"line_start":309,"line_end":309,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":379},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8467,"byte_end":8475,"line_start":313,"line_end":313,"column_start":9,"column_end":17},"name":"bindings","qualname":"::BindGroupDescriptor::bindings","value":"&'a [Binding<'a>]","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":" The resources to bind to this bind group.\n","sig":null,"attributes":[{"value":"/ The resources to bind to this bind group.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8413,"byte_end":8458,"line_start":312,"line_end":312,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":386},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8699,"byte_end":8723,"line_start":321,"line_end":321,"column_start":12,"column_end":36},"name":"PipelineLayoutDescriptor","qualname":"::PipelineLayoutDescriptor","value":"PipelineLayoutDescriptor { bind_group_layouts }","parent":null,"children":[{"krate":0,"index":388}],"decl_id":null,"docs":" A description of a pipeline layout.","sig":null,"attributes":[{"value":"/ A description of a pipeline layout.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8499,"byte_end":8538,"line_start":316,"line_end":316,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8539,"byte_end":8542,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ A `PipelineLayoutDescriptor` can be passed to [`Device::create_pipeline_layout`] to obtain a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8543,"byte_end":8639,"line_start":318,"line_end":318,"column_start":1,"column_end":97}},{"value":"/ [`PipelineLayout`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8640,"byte_end":8663,"line_start":319,"line_end":319,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":388},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8738,"byte_end":8756,"line_start":322,"line_end":322,"column_start":9,"column_end":27},"name":"bind_group_layouts","qualname":"::PipelineLayoutDescriptor::bind_group_layouts","value":"&'a [&'a BindGroupLayout]","parent":{"krate":0,"index":386},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":395},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8875,"byte_end":8902,"line_start":327,"line_end":327,"column_start":12,"column_end":39},"name":"ProgrammableStageDescriptor","qualname":"::ProgrammableStageDescriptor","value":"ProgrammableStageDescriptor { module, entry_point }","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398}],"decl_id":null,"docs":" A description of a programmable pipeline stage.\n","sig":null,"attributes":[{"value":"/ A description of a programmable pipeline stage.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8788,"byte_end":8839,"line_start":325,"line_end":325,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":397},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8968,"byte_end":8974,"line_start":329,"line_end":329,"column_start":9,"column_end":15},"name":"module","qualname":"::ProgrammableStageDescriptor::module","value":"&'a ShaderModule","parent":{"krate":0,"index":395},"children":[],"decl_id":null,"docs":" The compiled shader module for this stage.\n","sig":null,"attributes":[{"value":"/ The compiled shader module for this stage.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8913,"byte_end":8959,"line_start":328,"line_end":328,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":398},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":9063,"byte_end":9074,"line_start":332,"line_end":332,"column_start":9,"column_end":20},"name":"entry_point","qualname":"::ProgrammableStageDescriptor::entry_point","value":"&'a str","parent":{"krate":0,"index":395},"children":[],"decl_id":null,"docs":" The name of the entry point in the compiled shader.\n","sig":null,"attributes":[{"value":"/ The name of the entry point in the compiled shader.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":8999,"byte_end":9054,"line_start":331,"line_end":331,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":405},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":9161,"byte_end":9183,"line_start":337,"line_end":337,"column_start":12,"column_end":34},"name":"VertexBufferDescriptor","qualname":"::VertexBufferDescriptor","value":"VertexBufferDescriptor { stride, step_mode, attributes }","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409}],"decl_id":null,"docs":" A description of a vertex buffer.\n","sig":null,"attributes":[{"value":"/ A description of a vertex buffer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":9088,"byte_end":9125,"line_start":335,"line_end":335,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":407},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":9261,"byte_end":9267,"line_start":339,"line_end":339,"column_start":9,"column_end":15},"name":"stride","qualname":"::VertexBufferDescriptor::stride","value":"u64","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":" The stride, in bytes, between elements of this buffer.\n","sig":null,"attributes":[{"value":"/ The stride, in bytes, between elements of this buffer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":9194,"byte_end":9252,"line_start":338,"line_end":338,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":408},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":9293,"byte_end":9302,"line_start":341,"line_end":341,"column_start":9,"column_end":18},"name":"step_mode","qualname":"::VertexBufferDescriptor::step_mode","value":"wgpu_native::InputStepMode","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":409},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":9391,"byte_end":9401,"line_start":344,"line_end":344,"column_start":9,"column_end":19},"name":"attributes","qualname":"::VertexBufferDescriptor::attributes","value":"&'a [wgpu_native::VertexAttributeDescriptor]","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":" The list of attributes which comprise a single vertex.\n","sig":null,"attributes":[{"value":"/ The list of attributes which comprise a single vertex.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":9324,"byte_end":9382,"line_start":343,"line_end":343,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":416},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":9534,"byte_end":9558,"line_start":349,"line_end":349,"column_start":12,"column_end":36},"name":"RenderPipelineDescriptor","qualname":"::RenderPipelineDescriptor","value":"RenderPipelineDescriptor { layout, vertex_stage, fragment_stage, rasterization_state, primitive_topology, color_states, depth_stencil_state, index_format, vertex_buffers, sample_count, sample_mask, alpha_to_coverage_enabled }","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429}],"decl_id":null,"docs":" A complete description of a render (graphics) pipeline.\n","sig":null,"attributes":[{"value":"/ A complete description of a render (graphics) pipeline.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":9439,"byte_end":9498,"line_start":347,"line_end":347,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":418},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":9626,"byte_end":9632,"line_start":351,"line_end":351,"column_start":9,"column_end":15},"name":"layout","qualname":"::RenderPipelineDescriptor::layout","value":"&'a PipelineLayout","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" The layout of bind groups for this pipeline.\n","sig":null,"attributes":[{"value":"/ The layout of bind groups for this pipeline.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":9569,"byte_end":9617,"line_start":350,"line_end":350,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":419},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":9718,"byte_end":9730,"line_start":354,"line_end":354,"column_start":9,"column_end":21},"name":"vertex_stage","qualname":"::RenderPipelineDescriptor::vertex_stage","value":"ProgrammableStageDescriptor<'a>","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" The compiled vertex stage and its entry point.\n","sig":null,"attributes":[{"value":"/ The compiled vertex stage and its entry point.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":9659,"byte_end":9709,"line_start":353,"line_end":353,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":420},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":9839,"byte_end":9853,"line_start":357,"line_end":357,"column_start":9,"column_end":23},"name":"fragment_stage","qualname":"::RenderPipelineDescriptor::fragment_stage","value":"std::option::Option<ProgrammableStageDescriptor<'a>>","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" The compiled fragment stage and its entry point, if any.\n","sig":null,"attributes":[{"value":"/ The compiled fragment stage and its entry point, if any.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":9770,"byte_end":9830,"line_start":356,"line_end":356,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":421},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":9958,"byte_end":9977,"line_start":360,"line_end":360,"column_start":9,"column_end":28},"name":"rasterization_state","qualname":"::RenderPipelineDescriptor::rasterization_state","value":"std::option::Option<wgpu_native::RasterizationStateDescriptor>","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" The rasterization process for this pipeline.\n","sig":null,"attributes":[{"value":"/ The rasterization process for this pipeline.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":9901,"byte_end":9949,"line_start":359,"line_end":359,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":422},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":10085,"byte_end":10103,"line_start":363,"line_end":363,"column_start":9,"column_end":27},"name":"primitive_topology","qualname":"::RenderPipelineDescriptor::primitive_topology","value":"wgpu_native::PrimitiveTopology","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" The primitive topology used to interpret vertices.\n","sig":null,"attributes":[{"value":"/ The primitive topology used to interpret vertices.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":10022,"byte_end":10076,"line_start":362,"line_end":362,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":423},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":10208,"byte_end":10220,"line_start":366,"line_end":366,"column_start":9,"column_end":21},"name":"color_states","qualname":"::RenderPipelineDescriptor::color_states","value":"&'a [wgpu_native::ColorStateDescriptor]","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" The effect of draw calls on the color aspect of the output target.\n","sig":null,"attributes":[{"value":"/ The effect of draw calls on the color aspect of the output target.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":10129,"byte_end":10199,"line_start":365,"line_end":365,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":424},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":10355,"byte_end":10374,"line_start":369,"line_end":369,"column_start":9,"column_end":28},"name":"depth_stencil_state","qualname":"::RenderPipelineDescriptor::depth_stencil_state","value":"std::option::Option<wgpu_native::DepthStencilStateDescriptor>","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" The effect of draw calls on the depth and stencil aspects of the output target, if any.\n","sig":null,"attributes":[{"value":"/ The effect of draw calls on the depth and stencil aspects of the output target, if any.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":10255,"byte_end":10346,"line_start":368,"line_end":368,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":425},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":10487,"byte_end":10499,"line_start":372,"line_end":372,"column_start":9,"column_end":21},"name":"index_format","qualname":"::RenderPipelineDescriptor::index_format","value":"wgpu_native::IndexFormat","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" The format of any index buffers used with this pipeline.\n","sig":null,"attributes":[{"value":"/ The format of any index buffers used with this pipeline.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":10418,"byte_end":10478,"line_start":371,"line_end":371,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":426},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":10589,"byte_end":10603,"line_start":375,"line_end":375,"column_start":9,"column_end":23},"name":"vertex_buffers","qualname":"::RenderPipelineDescriptor::vertex_buffers","value":"&'a [VertexBufferDescriptor<'a>]","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" The format of any vertex buffers used with this pipeline.\n","sig":null,"attributes":[{"value":"/ The format of any vertex buffers used with this pipeline.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":10519,"byte_end":10580,"line_start":374,"line_end":374,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":427},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":10711,"byte_end":10723,"line_start":378,"line_end":378,"column_start":9,"column_end":21},"name":"sample_count","qualname":"::RenderPipelineDescriptor::sample_count","value":"u32","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" The number of samples calculated per pixel (for MSAA).\n","sig":null,"attributes":[{"value":"/ The number of samples calculated per pixel (for MSAA).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":10644,"byte_end":10702,"line_start":377,"line_end":377,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":428},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":10820,"byte_end":10831,"line_start":381,"line_end":381,"column_start":9,"column_end":20},"name":"sample_mask","qualname":"::RenderPipelineDescriptor::sample_mask","value":"u32","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" Bitmask that restricts the samples of a pixel modified by this pipeline.\n","sig":null,"attributes":[{"value":"/ Bitmask that restricts the samples of a pixel modified by this pipeline.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":10735,"byte_end":10811,"line_start":380,"line_end":380,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":429},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":11212,"byte_end":11237,"line_start":388,"line_end":388,"column_start":9,"column_end":34},"name":"alpha_to_coverage_enabled","qualname":"::RenderPipelineDescriptor::alpha_to_coverage_enabled","value":"bool","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" When enabled, produces another sample mask per pixel based on the alpha output value, that\n is ANDed with the sample_mask and the primitive coverage to restrict the set of samples\n affected by a primitive.\n The implicit mask produced for alpha of zero is guaranteed to be zero, and for alpha of one\n is guaranteed to be all 1-s.\n","sig":null,"attributes":[{"value":"/ When enabled, produces another sample mask per pixel based on the alpha output value, that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":10843,"byte_end":10937,"line_start":383,"line_end":383,"column_start":5,"column_end":99}},{"value":"/ is ANDed with the sample_mask and the primitive coverage to restrict the set of samples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":10942,"byte_end":11033,"line_start":384,"line_end":384,"column_start":5,"column_end":96}},{"value":"/ affected by a primitive.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":11038,"byte_end":11066,"line_start":385,"line_end":385,"column_start":5,"column_end":33}},{"value":"/ The implicit mask produced for alpha of zero is guaranteed to be zero, and for alpha of one","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":11071,"byte_end":11166,"line_start":386,"line_end":386,"column_start":5,"column_end":100}},{"value":"/ is guaranteed to be all 1-s.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":11171,"byte_end":11203,"line_start":387,"line_end":387,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":436},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":11333,"byte_end":11358,"line_start":393,"line_end":393,"column_start":12,"column_end":37},"name":"ComputePipelineDescriptor","qualname":"::ComputePipelineDescriptor","value":"ComputePipelineDescriptor { layout, compute_stage }","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439}],"decl_id":null,"docs":" A complete description of a compute pipeline.\n","sig":null,"attributes":[{"value":"/ A complete description of a compute pipeline.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":11248,"byte_end":11297,"line_start":391,"line_end":391,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":438},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":11426,"byte_end":11432,"line_start":395,"line_end":395,"column_start":9,"column_end":15},"name":"layout","qualname":"::ComputePipelineDescriptor::layout","value":"&'a PipelineLayout","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" The layout of bind groups for this pipeline.\n","sig":null,"attributes":[{"value":"/ The layout of bind groups for this pipeline.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":11369,"byte_end":11417,"line_start":394,"line_end":394,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":439},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":11519,"byte_end":11532,"line_start":398,"line_end":398,"column_start":9,"column_end":22},"name":"compute_stage","qualname":"::ComputePipelineDescriptor::compute_stage","value":"ProgrammableStageDescriptor<'a>","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" The compiled compute stage and its entry point.\n","sig":null,"attributes":[{"value":"/ The compiled compute stage and its entry point.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":11459,"byte_end":11510,"line_start":397,"line_end":397,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":446},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":11657,"byte_end":11677,"line_start":403,"line_end":403,"column_start":12,"column_end":32},"name":"RenderPassDescriptor","qualname":"::RenderPassDescriptor","value":"RenderPassDescriptor { color_attachments, depth_stencil_attachment }","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449}],"decl_id":null,"docs":" A description of all the attachments of a render pass.\n","sig":null,"attributes":[{"value":"/ A description of all the attachments of a render pass.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":11570,"byte_end":11628,"line_start":401,"line_end":401,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":448},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":11742,"byte_end":11759,"line_start":405,"line_end":405,"column_start":9,"column_end":26},"name":"color_attachments","qualname":"::RenderPassDescriptor::color_attachments","value":"&'a [RenderPassColorAttachmentDescriptor<'a>]","parent":{"krate":0,"index":446},"children":[],"decl_id":null,"docs":" The color attachments of the render pass.\n","sig":null,"attributes":[{"value":"/ The color attachments of the render pass.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":11688,"byte_end":11733,"line_start":404,"line_end":404,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":449},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":11886,"byte_end":11910,"line_start":408,"line_end":408,"column_start":9,"column_end":33},"name":"depth_stencil_attachment","qualname":"::RenderPassDescriptor::depth_stencil_attachment","value":"std::option::Option<wgpu_native::RenderPassDepthStencilAttachmentDescriptor<&'a TextureView>>","parent":{"krate":0,"index":446},"children":[],"decl_id":null,"docs":" The depth and stencil attachment of the render pass, if any.\n","sig":null,"attributes":[{"value":"/ The depth and stencil attachment of the render pass, if any.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":11813,"byte_end":11877,"line_start":407,"line_end":407,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":453},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":12068,"byte_end":12103,"line_start":414,"line_end":414,"column_start":12,"column_end":47},"name":"RenderPassColorAttachmentDescriptor","qualname":"::RenderPassColorAttachmentDescriptor","value":"RenderPassColorAttachmentDescriptor { attachment, resolve_target, load_op, store_op, clear_color }","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459}],"decl_id":null,"docs":" A description of a color attachment.\n","sig":null,"attributes":[{"value":"/ A description of a color attachment.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":11992,"byte_end":12032,"line_start":412,"line_end":412,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":455},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":12155,"byte_end":12165,"line_start":416,"line_end":416,"column_start":9,"column_end":19},"name":"attachment","qualname":"::RenderPassColorAttachmentDescriptor::attachment","value":"&'a TextureView","parent":{"krate":0,"index":453},"children":[],"decl_id":null,"docs":" The actual color attachment.\n","sig":null,"attributes":[{"value":"/ The actual color attachment.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":12114,"byte_end":12146,"line_start":415,"line_end":415,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":456},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":12255,"byte_end":12269,"line_start":419,"line_end":419,"column_start":9,"column_end":23},"name":"resolve_target","qualname":"::RenderPassColorAttachmentDescriptor::resolve_target","value":"std::option::Option<&'a TextureView>","parent":{"krate":0,"index":453},"children":[],"decl_id":null,"docs":" The resolve target for this color attachment, if any.\n","sig":null,"attributes":[{"value":"/ The resolve target for this color attachment, if any.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":12189,"byte_end":12246,"line_start":418,"line_end":418,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":457},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":12377,"byte_end":12384,"line_start":422,"line_end":422,"column_start":9,"column_end":16},"name":"load_op","qualname":"::RenderPassColorAttachmentDescriptor::load_op","value":"wgpu_native::LoadOp","parent":{"krate":0,"index":453},"children":[],"decl_id":null,"docs":" The beginning-of-pass load operation for this color attachment.\n","sig":null,"attributes":[{"value":"/ The beginning-of-pass load operation for this color attachment.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":12301,"byte_end":12368,"line_start":421,"line_end":421,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":458},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":12470,"byte_end":12478,"line_start":425,"line_end":425,"column_start":9,"column_end":17},"name":"store_op","qualname":"::RenderPassColorAttachmentDescriptor::store_op","value":"wgpu_native::StoreOp","parent":{"krate":0,"index":453},"children":[],"decl_id":null,"docs":" The end-of-pass store operation for this color attachment.\n","sig":null,"attributes":[{"value":"/ The end-of-pass store operation for this color attachment.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":12399,"byte_end":12461,"line_start":424,"line_end":424,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":459},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":12586,"byte_end":12597,"line_start":428,"line_end":428,"column_start":9,"column_end":20},"name":"clear_color","qualname":"::RenderPassColorAttachmentDescriptor::clear_color","value":"wgpu_native::Color","parent":{"krate":0,"index":453},"children":[],"decl_id":null,"docs":" The color that will be assigned to every pixel of this attachment when cleared.\n","sig":null,"attributes":[{"value":"/ The color that will be assigned to every pixel of this attachment when cleared.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":12494,"byte_end":12577,"line_start":427,"line_end":427,"column_start":5,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":466},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":12685,"byte_end":12700,"line_start":433,"line_end":433,"column_start":12,"column_end":27},"name":"SwapChainOutput","qualname":"::SwapChainOutput","value":"SwapChainOutput { view }","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469}],"decl_id":null,"docs":" A swap chain image that can be rendered to.\n","sig":null,"attributes":[{"value":"/ A swap chain image that can be rendered to.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":12609,"byte_end":12656,"line_start":431,"line_end":431,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":468},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":12715,"byte_end":12719,"line_start":434,"line_end":434,"column_start":9,"column_end":13},"name":"view","qualname":"::SwapChainOutput::view","value":"TextureView","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":473},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":12884,"byte_end":12898,"line_start":440,"line_end":440,"column_start":12,"column_end":26},"name":"BufferCopyView","qualname":"::BufferCopyView","value":"BufferCopyView { buffer, offset, row_pitch, image_height }","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478}],"decl_id":null,"docs":" A view of a buffer which can be used to copy to or from a texture.\n","sig":null,"attributes":[{"value":"/ A view of a buffer which can be used to copy to or from a texture.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":12778,"byte_end":12848,"line_start":438,"line_end":438,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":475},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":12957,"byte_end":12963,"line_start":442,"line_end":442,"column_start":9,"column_end":15},"name":"buffer","qualname":"::BufferCopyView::buffer","value":"&'a Buffer","parent":{"krate":0,"index":473},"children":[],"decl_id":null,"docs":" The buffer to be copied to or from.\n","sig":null,"attributes":[{"value":"/ The buffer to be copied to or from.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":12909,"byte_end":12948,"line_start":441,"line_end":441,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":476},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":13079,"byte_end":13085,"line_start":445,"line_end":445,"column_start":9,"column_end":15},"name":"offset","qualname":"::BufferCopyView::offset","value":"u64","parent":{"krate":0,"index":473},"children":[],"decl_id":null,"docs":" The offset in bytes from the start of the buffer. This must be aligned to 512 bytes.\n","sig":null,"attributes":[{"value":"/ The offset in bytes from the start of the buffer. This must be aligned to 512 bytes.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":12982,"byte_end":13070,"line_start":444,"line_end":444,"column_start":5,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":477},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":13207,"byte_end":13216,"line_start":448,"line_end":448,"column_start":9,"column_end":18},"name":"row_pitch","qualname":"::BufferCopyView::row_pitch","value":"u32","parent":{"krate":0,"index":473},"children":[],"decl_id":null,"docs":" The size in bytes of a single row of the texture. This must be a multiple of 256 bytes.\n","sig":null,"attributes":[{"value":"/ The size in bytes of a single row of the texture. This must be a multiple of 256 bytes.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":13107,"byte_end":13198,"line_start":447,"line_end":447,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":478},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":13315,"byte_end":13327,"line_start":451,"line_end":451,"column_start":9,"column_end":21},"name":"image_height","qualname":"::BufferCopyView::image_height","value":"u32","parent":{"krate":0,"index":473},"children":[],"decl_id":null,"docs":" The height in texels of the imaginary texture view overlaid on the buffer.\n","sig":null,"attributes":[{"value":"/ The height in texels of the imaginary texture view overlaid on the buffer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":13228,"byte_end":13306,"line_start":450,"line_end":450,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":485},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":13744,"byte_end":13759,"line_start":467,"line_end":467,"column_start":12,"column_end":27},"name":"TextureCopyView","qualname":"::TextureCopyView","value":"TextureCopyView { texture, mip_level, array_layer, origin }","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490}],"decl_id":null,"docs":" A view of a texture which can be used to copy to or from a buffer or another texture.\n","sig":null,"attributes":[{"value":"/ A view of a texture which can be used to copy to or from a buffer or another texture.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":13619,"byte_end":13708,"line_start":465,"line_end":465,"column_start":1,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":487},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":13819,"byte_end":13826,"line_start":469,"line_end":469,"column_start":9,"column_end":16},"name":"texture","qualname":"::TextureCopyView::texture","value":"&'a Texture","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" The texture to be copied to or from.\n","sig":null,"attributes":[{"value":"/ The texture to be copied to or from.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":13770,"byte_end":13810,"line_start":468,"line_end":468,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":488},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":13895,"byte_end":13904,"line_start":472,"line_end":472,"column_start":9,"column_end":18},"name":"mip_level","qualname":"::TextureCopyView::mip_level","value":"u32","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" The target mip level of the texture.\n","sig":null,"attributes":[{"value":"/ The target mip level of the texture.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":13846,"byte_end":13886,"line_start":471,"line_end":471,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":489},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":13961,"byte_end":13972,"line_start":475,"line_end":475,"column_start":9,"column_end":20},"name":"array_layer","qualname":"::TextureCopyView::array_layer","value":"u32","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" The target layer of the texture.\n","sig":null,"attributes":[{"value":"/ The target layer of the texture.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":13916,"byte_end":13952,"line_start":474,"line_end":474,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":490},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":14055,"byte_end":14061,"line_start":478,"line_end":478,"column_start":9,"column_end":15},"name":"origin","qualname":"::TextureCopyView::origin","value":"wgpu_native::Origin3d","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" The base texel of the texture in the selected `mip_level`.\n","sig":null,"attributes":[{"value":"/ The base texel of the texture in the selected `mip_level`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":13984,"byte_end":14046,"line_start":477,"line_end":477,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":75},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":14423,"byte_end":14441,"line_start":493,"line_end":493,"column_start":12,"column_end":30},"name":"CreateBufferMapped","qualname":"::CreateBufferMapped","value":"CreateBufferMapped { data }","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"decl_id":null,"docs":" A buffer being created, mapped in host memory.\n","sig":null,"attributes":[{"value":"/ A buffer being created, mapped in host memory.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":14361,"byte_end":14411,"line_start":492,"line_end":492,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":79},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":14482,"byte_end":14486,"line_start":495,"line_end":495,"column_start":9,"column_end":13},"name":"data","qualname":"::CreateBufferMapped::data","value":"&'a mut [T]","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":14812,"byte_end":14827,"line_start":509,"line_end":509,"column_start":12,"column_end":27},"name":"fill_from_slice","qualname":"<CreateBufferMapped>::fill_from_slice","value":"pub fn fill_from_slice(Self, &[T]) -> Buffer","parent":null,"children":[],"decl_id":null,"docs":" Copies a slice into the mapped buffer and unmaps it, returning a [`Buffer`].","sig":null,"attributes":[{"value":"/ Copies a slice into the mapped buffer and unmaps it, returning a [`Buffer`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":14567,"byte_end":14647,"line_start":502,"line_end":502,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":14652,"byte_end":14655,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ `slice` and `self.data` must have the same length.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":14660,"byte_end":14714,"line_start":504,"line_end":504,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":14719,"byte_end":14722,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":14727,"byte_end":14739,"line_start":506,"line_end":506,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":14744,"byte_end":14747,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ Panics if the slices have different lengths.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":14752,"byte_end":14800,"line_start":508,"line_end":508,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":15010,"byte_end":15016,"line_start":515,"line_end":515,"column_start":12,"column_end":18},"name":"finish","qualname":"<CreateBufferMapped>::finish","value":"pub fn finish(Self) -> Buffer","parent":null,"children":[],"decl_id":null,"docs":" Unmaps the buffer from host memory and returns a [`Buffer`].\n","sig":null,"attributes":[{"value":"/ Unmaps the buffer from host memory and returns a [`Buffer`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":14934,"byte_end":14998,"line_start":514,"line_end":514,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":15194,"byte_end":15200,"line_start":523,"line_end":523,"column_start":12,"column_end":18},"name":"create","qualname":"<Surface>::create","value":"pub fn create<W: raw_window_handle::HasRawWindowHandle>(&W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a surface from a raw window handle.\n","sig":null,"attributes":[{"value":"/ Creates a surface from a raw window handle.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":15135,"byte_end":15182,"line_start":522,"line_end":522,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":15900,"byte_end":15907,"line_start":543,"line_end":543,"column_start":12,"column_end":19},"name":"request","qualname":"<Adapter>::request","value":"pub fn request(&wgn::RequestAdapterOptions) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an [`Adapter`] which matches the given options.","sig":null,"attributes":[{"value":"/ Retrieves an [`Adapter`] which matches the given options.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":15640,"byte_end":15701,"line_start":538,"line_end":538,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":15706,"byte_end":15709,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ Some options are \"soft\", so treated as non-mandatory. Others are \"hard\".","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":15714,"byte_end":15790,"line_start":540,"line_end":540,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":15795,"byte_end":15798,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ If no adapters are found that suffice all the \"hard\" options, `None` is returned.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":15803,"byte_end":15888,"line_start":542,"line_end":542,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":16354,"byte_end":16368,"line_start":555,"line_end":555,"column_start":12,"column_end":26},"name":"request_device","qualname":"<Adapter>::request_device","value":"pub fn request_device(&Self, &DeviceDescriptor) -> (Device, Queue)","parent":null,"children":[],"decl_id":null,"docs":" Requests a connection to a physical device, creating a logical device.\n Returns the device together with a queue that executes command buffers.","sig":null,"attributes":[{"value":"/ Requests a connection to a physical device, creating a logical device.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":16067,"byte_end":16141,"line_start":549,"line_end":549,"column_start":5,"column_end":79}},{"value":"/ Returns the device together with a queue that executes command buffers.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":16146,"byte_end":16221,"line_start":550,"line_end":550,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":16226,"byte_end":16229,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":16234,"byte_end":16246,"line_start":552,"line_end":552,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":16251,"byte_end":16254,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ Panics if the extensions specified by `desc` are not supported by this adapter.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":16259,"byte_end":16342,"line_start":554,"line_end":554,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":16751,"byte_end":16759,"line_start":567,"line_end":567,"column_start":12,"column_end":20},"name":"get_info","qualname":"<Adapter>::get_info","value":"pub fn get_info(&Self) -> AdapterInfo","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":16921,"byte_end":16925,"line_start":574,"line_end":574,"column_start":12,"column_end":16},"name":"poll","qualname":"<Device>::poll","value":"pub fn poll(&Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Check for resource cleanups and mapping callbacks.\n","sig":null,"attributes":[{"value":"/ Check for resource cleanups and mapping callbacks.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":16855,"byte_end":16909,"line_start":573,"line_end":573,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":17080,"byte_end":17100,"line_start":579,"line_end":579,"column_start":12,"column_end":32},"name":"create_shader_module","qualname":"<Device>::create_shader_module","value":"pub fn create_shader_module(&Self, &[u32]) -> ShaderModule","parent":null,"children":[],"decl_id":null,"docs":" Creates a shader module from SPIR-V source code.\n","sig":null,"attributes":[{"value":"/ Creates a shader module from SPIR-V source code.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":17016,"byte_end":17068,"line_start":578,"line_end":578,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":17487,"byte_end":17509,"line_start":592,"line_end":592,"column_start":12,"column_end":34},"name":"create_command_encoder","qualname":"<Device>::create_command_encoder","value":"pub fn create_command_encoder(&Self, &CommandEncoderDescriptor)\n-> CommandEncoder","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty [`CommandEncoder`].\n","sig":null,"attributes":[{"value":"/ Creates an empty [`CommandEncoder`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":17435,"byte_end":17475,"line_start":591,"line_end":591,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":17735,"byte_end":17752,"line_start":599,"line_end":599,"column_start":12,"column_end":29},"name":"create_bind_group","qualname":"<Device>::create_bind_group","value":"pub fn create_bind_group(&Self, &BindGroupDescriptor) -> BindGroup","parent":null,"children":[],"decl_id":null,"docs":" Creates a new bind group.\n","sig":null,"attributes":[{"value":"/ Creates a new bind group.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":17694,"byte_end":17723,"line_start":598,"line_end":598,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":19155,"byte_end":19179,"line_start":636,"line_end":636,"column_start":12,"column_end":36},"name":"create_bind_group_layout","qualname":"<Device>::create_bind_group_layout","value":"pub fn create_bind_group_layout(&Self, &BindGroupLayoutDescriptor)\n-> BindGroupLayout","parent":null,"children":[],"decl_id":null,"docs":" Creates a bind group layout.\n","sig":null,"attributes":[{"value":"/ Creates a bind group layout.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":19111,"byte_end":19143,"line_start":635,"line_end":635,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":21154,"byte_end":21176,"line_start":678,"line_end":678,"column_start":12,"column_end":34},"name":"create_pipeline_layout","qualname":"<Device>::create_pipeline_layout","value":"pub fn create_pipeline_layout(&Self, &PipelineLayoutDescriptor)\n-> PipelineLayout","parent":null,"children":[],"decl_id":null,"docs":" Creates a pipeline layout.\n","sig":null,"attributes":[{"value":"/ Creates a pipeline layout.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":21112,"byte_end":21142,"line_start":677,"line_end":677,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":21807,"byte_end":21829,"line_start":697,"line_end":697,"column_start":12,"column_end":34},"name":"create_render_pipeline","qualname":"<Device>::create_render_pipeline","value":"pub fn create_render_pipeline(&Self, &RenderPipelineDescriptor)\n-> RenderPipeline","parent":null,"children":[],"decl_id":null,"docs":" Creates a render pipeline.\n","sig":null,"attributes":[{"value":"/ Creates a render pipeline.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":21765,"byte_end":21795,"line_start":696,"line_end":696,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":24661,"byte_end":24684,"line_start":760,"line_end":760,"column_start":12,"column_end":35},"name":"create_compute_pipeline","qualname":"<Device>::create_compute_pipeline","value":"pub fn create_compute_pipeline(&Self, &ComputePipelineDescriptor)\n-> ComputePipeline","parent":null,"children":[],"decl_id":null,"docs":" Creates a compute pipeline.\n","sig":null,"attributes":[{"value":"/ Creates a compute pipeline.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":24618,"byte_end":24649,"line_start":759,"line_end":759,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":25338,"byte_end":25351,"line_start":778,"line_end":778,"column_start":12,"column_end":25},"name":"create_buffer","qualname":"<Device>::create_buffer","value":"pub fn create_buffer(&Self, &BufferDescriptor) -> Buffer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new buffer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":25301,"byte_end":25326,"line_start":777,"line_end":777,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":25753,"byte_end":25773,"line_start":788,"line_end":788,"column_start":12,"column_end":32},"name":"create_buffer_mapped","qualname":"<Device>::create_buffer_mapped","value":"pub fn create_buffer_mapped<'a, T>(&'a Self, usize, BufferUsage)\n-> CreateBufferMapped where T: 'static + Copy","parent":null,"children":[],"decl_id":null,"docs":" Creates a new buffer and maps it into host-visible memory.","sig":null,"attributes":[{"value":"/ Creates a new buffer and maps it into host-visible memory.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":25497,"byte_end":25559,"line_start":784,"line_end":784,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":25564,"byte_end":25567,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ This returns a [`CreateBufferMapped<T>`], which exposes a `&mut [T]`. The actual [`Buffer`]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":25572,"byte_end":25667,"line_start":786,"line_end":786,"column_start":5,"column_end":100}},{"value":"/ will not be created until calling [`CreateBufferMapped::finish`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":25672,"byte_end":25741,"line_start":787,"line_end":787,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":26560,"byte_end":26574,"line_start":815,"line_end":815,"column_start":12,"column_end":26},"name":"create_texture","qualname":"<Device>::create_texture","value":"pub fn create_texture(&Self, &TextureDescriptor) -> Texture","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Texture`].","sig":null,"attributes":[{"value":"/ Creates a new [`Texture`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":26450,"byte_end":26480,"line_start":812,"line_end":812,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":26485,"byte_end":26488,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ `desc` specifies the general format of the texture.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":26493,"byte_end":26548,"line_start":814,"line_end":814,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":26853,"byte_end":26867,"line_start":825,"line_end":825,"column_start":12,"column_end":26},"name":"create_sampler","qualname":"<Device>::create_sampler","value":"pub fn create_sampler(&Self, &SamplerDescriptor) -> Sampler","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Sampler`].","sig":null,"attributes":[{"value":"/ Creates a new [`Sampler`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":26749,"byte_end":26779,"line_start":822,"line_end":822,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":26784,"byte_end":26787,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ `desc` specifies the behavior of the sampler.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":26792,"byte_end":26841,"line_start":824,"line_end":824,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":27084,"byte_end":27101,"line_start":832,"line_end":832,"column_start":12,"column_end":29},"name":"create_swap_chain","qualname":"<Device>::create_swap_chain","value":"pub fn create_swap_chain(&Self, &Surface, &SwapChainDescriptor) -> SwapChain","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`SwapChain`] which targets `surface`.\n","sig":null,"attributes":[{"value":"/ Create a new [`SwapChain`] which targets `surface`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":27017,"byte_end":27072,"line_start":831,"line_end":831,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":117},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":27535,"byte_end":27553,"line_start":848,"line_end":848,"column_start":12,"column_end":30},"name":"BufferAsyncMapping","qualname":"::BufferAsyncMapping","value":"BufferAsyncMapping { data }","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":119},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":27567,"byte_end":27571,"line_start":849,"line_end":849,"column_start":9,"column_end":13},"name":"data","qualname":"::BufferAsyncMapping::data","value":"T","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":121},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":27643,"byte_end":27663,"line_start":853,"line_end":853,"column_start":10,"column_end":30},"name":"BufferMapAsyncResult","qualname":"::BufferMapAsyncResult","value":"Result<BufferAsyncMapping<T>, ()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":28320,"byte_end":28334,"line_start":884,"line_end":884,"column_start":12,"column_end":26},"name":"map_read_async","qualname":"<Buffer>::map_read_async","value":"pub fn map_read_async<T, F>(&Self, BufferAddress, BufferAddress, F) where\nT: 'static + FromBytes, F: FnOnce(BufferMapAsyncResult<&[T]>) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":29945,"byte_end":29960,"line_start":930,"line_end":930,"column_start":12,"column_end":27},"name":"map_write_async","qualname":"<Buffer>::map_write_async","value":"pub fn map_write_async<T, F>(&Self, BufferAddress, BufferAddress, F) where\nT: 'static + AsBytes + FromBytes, F: FnOnce(BufferMapAsyncResult<&mut [T]>) ->\n() + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":31690,"byte_end":31695,"line_start":977,"line_end":977,"column_start":12,"column_end":17},"name":"unmap","qualname":"<Buffer>::unmap","value":"pub fn unmap(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Flushes any pending write operations and unmaps the buffer from host memory.\n","sig":null,"attributes":[{"value":"/ Flushes any pending write operations and unmaps the buffer from host memory.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":31598,"byte_end":31678,"line_start":976,"line_end":976,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":31921,"byte_end":31932,"line_start":990,"line_end":990,"column_start":12,"column_end":23},"name":"create_view","qualname":"<Texture>::create_view","value":"pub fn create_view(&Self, &TextureViewDescriptor) -> TextureView","parent":null,"children":[],"decl_id":null,"docs":" Creates a view of this texture.\n","sig":null,"attributes":[{"value":"/ Creates a view of this texture.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":31874,"byte_end":31909,"line_start":989,"line_end":989,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":32184,"byte_end":32203,"line_start":998,"line_end":998,"column_start":12,"column_end":31},"name":"create_default_view","qualname":"<Texture>::create_default_view","value":"pub fn create_default_view(&Self) -> TextureView","parent":null,"children":[],"decl_id":null,"docs":" Creates a default view of this whole texture.\n","sig":null,"attributes":[{"value":"/ Creates a default view of this whole texture.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":32123,"byte_end":32172,"line_start":997,"line_end":997,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":32774,"byte_end":32780,"line_start":1024,"line_end":1024,"column_start":12,"column_end":18},"name":"finish","qualname":"<CommandEncoder>::finish","value":"pub fn finish(Self) -> CommandBuffer","parent":null,"children":[],"decl_id":null,"docs":" Finishes recording and returns a [`CommandBuffer`] that can be submitted for execution.\n","sig":null,"attributes":[{"value":"/ Finishes recording and returns a [`CommandBuffer`] that can be submitted for execution.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":32671,"byte_end":32762,"line_start":1023,"line_end":1023,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":33064,"byte_end":33081,"line_start":1033,"line_end":1033,"column_start":12,"column_end":29},"name":"begin_render_pass","qualname":"<CommandEncoder>::begin_render_pass","value":"pub fn begin_render_pass(&mut Self, &RenderPassDescriptor) -> RenderPass","parent":null,"children":[],"decl_id":null,"docs":" Begins recording of a render pass.","sig":null,"attributes":[{"value":"/ Begins recording of a render pass.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":32916,"byte_end":32954,"line_start":1030,"line_end":1030,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":32959,"byte_end":32962,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ This function returns a [`RenderPass`] object which records a single render pass.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":32967,"byte_end":33052,"line_start":1032,"line_end":1032,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":34813,"byte_end":34831,"line_start":1077,"line_end":1077,"column_start":12,"column_end":30},"name":"begin_compute_pass","qualname":"<CommandEncoder>::begin_compute_pass","value":"pub fn begin_compute_pass(&mut Self) -> ComputePass","parent":null,"children":[],"decl_id":null,"docs":" Begins recording of a compute pass.","sig":null,"attributes":[{"value":"/ Begins recording of a compute pass.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":34662,"byte_end":34701,"line_start":1074,"line_end":1074,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":34706,"byte_end":34709,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ This function returns a [`ComputePass`] object which records a single compute pass.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":34714,"byte_end":34801,"line_start":1076,"line_end":1076,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":35060,"byte_end":35081,"line_start":1085,"line_end":1085,"column_start":12,"column_end":33},"name":"copy_buffer_to_buffer","qualname":"<CommandEncoder>::copy_buffer_to_buffer","value":"pub fn copy_buffer_to_buffer(&mut Self, &Buffer, BufferAddress, &Buffer,\n                             BufferAddress, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Copy data from one buffer to another.\n","sig":null,"attributes":[{"value":"/ Copy data from one buffer to another.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":35007,"byte_end":35048,"line_start":1084,"line_end":1084,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":35566,"byte_end":35588,"line_start":1104,"line_end":1104,"column_start":12,"column_end":34},"name":"copy_buffer_to_texture","qualname":"<CommandEncoder>::copy_buffer_to_texture","value":"pub fn copy_buffer_to_texture(&mut Self, BufferCopyView, TextureCopyView,\n                              Extent3d)","parent":null,"children":[],"decl_id":null,"docs":" Copy data from a buffer to a texture.\n","sig":null,"attributes":[{"value":"/ Copy data from a buffer to a texture.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":35513,"byte_end":35554,"line_start":1103,"line_end":1103,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":35968,"byte_end":35990,"line_start":1119,"line_end":1119,"column_start":12,"column_end":34},"name":"copy_texture_to_buffer","qualname":"<CommandEncoder>::copy_texture_to_buffer","value":"pub fn copy_texture_to_buffer(&mut Self, TextureCopyView, BufferCopyView,\n                              Extent3d)","parent":null,"children":[],"decl_id":null,"docs":" Copy data from a texture to a buffer.\n","sig":null,"attributes":[{"value":"/ Copy data from a texture to a buffer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":35915,"byte_end":35956,"line_start":1118,"line_end":1118,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":36371,"byte_end":36394,"line_start":1134,"line_end":1134,"column_start":12,"column_end":35},"name":"copy_texture_to_texture","qualname":"<CommandEncoder>::copy_texture_to_texture","value":"pub fn copy_texture_to_texture(&mut Self, TextureCopyView, TextureCopyView,\n                               Extent3d)","parent":null,"children":[],"decl_id":null,"docs":" Copy data from one texture to another.\n","sig":null,"attributes":[{"value":"/ Copy data from one texture to another.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":36317,"byte_end":36359,"line_start":1133,"line_end":1133,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":36823,"byte_end":36837,"line_start":1151,"line_end":1151,"column_start":12,"column_end":26},"name":"set_bind_group","qualname":"<RenderPass>::set_bind_group","value":"pub fn set_bind_group(&mut Self, u32, &BindGroup, &[BufferAddress])","parent":null,"children":[],"decl_id":null,"docs":" Sets the active bind group for a given bind group index.\n","sig":null,"attributes":[{"value":"/ Sets the active bind group for a given bind group index.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":36751,"byte_end":36811,"line_start":1150,"line_end":1150,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":37280,"byte_end":37292,"line_start":1169,"line_end":1169,"column_start":12,"column_end":24},"name":"set_pipeline","qualname":"<RenderPass>::set_pipeline","value":"pub fn set_pipeline(&mut Self, &RenderPipeline)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active render pipeline.","sig":null,"attributes":[{"value":"/ Sets the active render pipeline.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":37145,"byte_end":37181,"line_start":1166,"line_end":1166,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":37186,"byte_end":37189,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will exhibit the behavior defined by `pipeline`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":37194,"byte_end":37268,"line_start":1168,"line_end":1168,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":37417,"byte_end":37432,"line_start":1173,"line_end":1173,"column_start":12,"column_end":27},"name":"set_blend_color","qualname":"<RenderPass>::set_blend_color","value":"pub fn set_blend_color(&mut Self, Color)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":37736,"byte_end":37752,"line_start":1181,"line_end":1181,"column_start":12,"column_end":28},"name":"set_index_buffer","qualname":"<RenderPass>::set_index_buffer","value":"pub fn set_index_buffer(&mut Self, &Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active index buffer.","sig":null,"attributes":[{"value":"/ Sets the active index buffer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":37535,"byte_end":37568,"line_start":1177,"line_end":1177,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":37573,"byte_end":37576,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw_indexed`](RenderPass::draw_indexed) on this [`RenderPass`] will","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":37581,"byte_end":37675,"line_start":1179,"line_end":1179,"column_start":5,"column_end":99}},{"value":"/ use `buffer` as the source index buffer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":37680,"byte_end":37724,"line_start":1180,"line_end":1180,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":38143,"byte_end":38161,"line_start":1189,"line_end":1189,"column_start":12,"column_end":30},"name":"set_vertex_buffers","qualname":"<RenderPass>::set_vertex_buffers","value":"pub fn set_vertex_buffers(&mut Self, u32, &[(&Buffer, BufferAddress)])","parent":null,"children":[],"decl_id":null,"docs":" Sets the active vertex buffers, starting from `start_slot`.","sig":null,"attributes":[{"value":"/ Sets the active vertex buffers, starting from `start_slot`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":37893,"byte_end":37956,"line_start":1185,"line_end":1185,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":37961,"byte_end":37964,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ Each element of `buffer_pairs` describes a vertex buffer and an offset in bytes into that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":37969,"byte_end":38062,"line_start":1187,"line_end":1187,"column_start":5,"column_end":98}},{"value":"/ buffer. The offset must be aligned to a multiple of 4 bytes.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":38067,"byte_end":38131,"line_start":1188,"line_end":1188,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":38816,"byte_end":38832,"line_start":1212,"line_end":1212,"column_start":12,"column_end":28},"name":"set_scissor_rect","qualname":"<RenderPass>::set_scissor_rect","value":"pub fn set_scissor_rect(&mut Self, u32, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the scissor region.","sig":null,"attributes":[{"value":"/ Sets the scissor region.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":38680,"byte_end":38708,"line_start":1209,"line_end":1209,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":38713,"byte_end":38716,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will discard any fragments that fall outside this region.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":38721,"byte_end":38804,"line_start":1211,"line_end":1211,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":39076,"byte_end":39088,"line_start":1219,"line_end":1219,"column_start":12,"column_end":24},"name":"set_viewport","qualname":"<RenderPass>::set_viewport","value":"pub fn set_viewport(&mut Self, f32, f32, f32, f32, f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the viewport region.","sig":null,"attributes":[{"value":"/ Sets the viewport region.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":38957,"byte_end":38986,"line_start":1216,"line_end":1216,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":38991,"byte_end":38994,"line_start":1217,"line_end":1217,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will draw any fragments in this region.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":38999,"byte_end":39064,"line_start":1218,"line_end":1218,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":39377,"byte_end":39398,"line_start":1226,"line_end":1226,"column_start":12,"column_end":33},"name":"set_stencil_reference","qualname":"<RenderPass>::set_stencil_reference","value":"pub fn set_stencil_reference(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the stencil reference.","sig":null,"attributes":[{"value":"/ Sets the stencil reference.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":39263,"byte_end":39294,"line_start":1223,"line_end":1223,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":39299,"byte_end":39302,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ Subsequent stencil tests will test against this value.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":39307,"byte_end":39365,"line_start":1225,"line_end":1225,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":39671,"byte_end":39675,"line_start":1233,"line_end":1233,"column_start":12,"column_end":16},"name":"draw","qualname":"<RenderPass>::draw","value":"pub fn draw(&mut Self, Range<u32>, Range<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s).","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":39511,"byte_end":39565,"line_start":1230,"line_end":1230,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":39570,"byte_end":39573,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderPass::set_vertex_buffers`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":39578,"byte_end":39659,"line_start":1232,"line_end":1232,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":40241,"byte_end":40253,"line_start":1247,"line_end":1247,"column_start":12,"column_end":24},"name":"draw_indexed","qualname":"<RenderPass>::draw_indexed","value":"pub fn draw_indexed(&mut Self, Range<u32>, i32, Range<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":39958,"byte_end":40047,"line_start":1243,"line_end":1243,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":40052,"byte_end":40055,"line_start":1244,"line_end":1244,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderPass::set_index_buffer`], while the active","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":40060,"byte_end":40154,"line_start":1245,"line_end":1245,"column_start":5,"column_end":99}},{"value":"/ vertex buffers can be set with [`RenderPass::set_vertex_buffers`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":40159,"byte_end":40229,"line_start":1246,"line_end":1246,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":40790,"byte_end":40803,"line_start":1261,"line_end":1261,"column_start":12,"column_end":25},"name":"draw_indirect","qualname":"<RenderPass>::draw_indirect","value":"pub fn draw_indirect(&mut Self, &Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":40583,"byte_end":40684,"line_start":1258,"line_end":1258,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":40689,"byte_end":40692,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderPass::set_vertex_buffers`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":40697,"byte_end":40778,"line_start":1260,"line_end":1260,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":41316,"byte_end":41337,"line_start":1270,"line_end":1270,"column_start":12,"column_end":33},"name":"draw_indexed_indirect","qualname":"<RenderPass>::draw_indexed_indirect","value":"pub fn draw_indexed_indirect(&mut Self, &Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers,\n based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":40977,"byte_end":41066,"line_start":1265,"line_end":1265,"column_start":5,"column_end":94}},{"value":"/ based on the contents of the `indirect_buffer`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":41071,"byte_end":41122,"line_start":1266,"line_end":1266,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":41127,"byte_end":41130,"line_start":1267,"line_end":1267,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderPass::set_index_buffer`], while the active","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":41135,"byte_end":41229,"line_start":1268,"line_end":1268,"column_start":5,"column_end":99}},{"value":"/ vertex buffers can be set with [`RenderPass::set_vertex_buffers`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":41234,"byte_end":41304,"line_start":1269,"line_end":1269,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":41786,"byte_end":41800,"line_start":1285,"line_end":1285,"column_start":12,"column_end":26},"name":"set_bind_group","qualname":"<ComputePass>::set_bind_group","value":"pub fn set_bind_group(&mut Self, u32, &BindGroup, &[BufferAddress])","parent":null,"children":[],"decl_id":null,"docs":" Sets the active bind group for a given bind group index.\n","sig":null,"attributes":[{"value":"/ Sets the active bind group for a given bind group index.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":41714,"byte_end":41774,"line_start":1284,"line_end":1284,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":42158,"byte_end":42170,"line_start":1301,"line_end":1301,"column_start":12,"column_end":24},"name":"set_pipeline","qualname":"<ComputePass>::set_pipeline","value":"pub fn set_pipeline(&mut Self, &ComputePipeline)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active compute pipeline.\n","sig":null,"attributes":[{"value":"/ Sets the active compute pipeline.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":42109,"byte_end":42146,"line_start":1300,"line_end":1300,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":42438,"byte_end":42446,"line_start":1308,"line_end":1308,"column_start":12,"column_end":20},"name":"dispatch","qualname":"<ComputePass>::dispatch","value":"pub fn dispatch(&mut Self, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Dispatches compute work operations.","sig":null,"attributes":[{"value":"/ Dispatches compute work operations.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":42290,"byte_end":42329,"line_start":1305,"line_end":1305,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":42334,"byte_end":42337,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ `x`, `y` and `z` denote the number of work groups to dispatch in each dimension.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":42342,"byte_end":42426,"line_start":1307,"line_end":1307,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":42653,"byte_end":42670,"line_start":1313,"line_end":1313,"column_start":12,"column_end":29},"name":"dispatch_indirect","qualname":"<ComputePass>::dispatch_indirect","value":"pub fn dispatch_indirect(&mut Self, &Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Dispatches compute work operations, based on the contents of the `indirect_buffer`.\n","sig":null,"attributes":[{"value":"/ Dispatches compute work operations, based on the contents of the `indirect_buffer`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":42554,"byte_end":42641,"line_start":1312,"line_end":1312,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":43107,"byte_end":43113,"line_start":1328,"line_end":1328,"column_start":12,"column_end":18},"name":"submit","qualname":"<Queue>::submit","value":"pub fn submit(&mut Self, &[CommandBuffer])","parent":null,"children":[],"decl_id":null,"docs":" Submits a series of finished command buffers for execution.\n","sig":null,"attributes":[{"value":"/ Submits a series of finished command buffers for execution.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":43032,"byte_end":43095,"line_start":1327,"line_end":1327,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":43904,"byte_end":43920,"line_start":1354,"line_end":1354,"column_start":12,"column_end":28},"name":"get_next_texture","qualname":"<SwapChain>::get_next_texture","value":"pub fn get_next_texture(&mut Self) -> SwapChainOutput","parent":null,"children":[],"decl_id":null,"docs":" Returns the next texture to be presented by the swapchain for drawing.","sig":null,"attributes":[{"value":"/ Returns the next texture to be presented by the swapchain for drawing.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":43659,"byte_end":43733,"line_start":1350,"line_end":1350,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":43738,"byte_end":43741,"line_start":1351,"line_end":1351,"column_start":5,"column_end":8}},{"value":"/ When the [`SwapChainOutput`] returned by this method is dropped, the swapchain will present","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":43746,"byte_end":43841,"line_start":1352,"line_end":1352,"column_start":5,"column_end":100}},{"value":"/ the texture to the associated [`Surface`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":43846,"byte_end":43892,"line_start":1353,"line_end":1353,"column_start":5,"column_end":51}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":4561,"byte_end":4570,"line_start":171,"line_end":171,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":13346,"byte_end":13360,"line_start":454,"line_end":454,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":14085,"byte_end":14100,"line_start":481,"line_end":481,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":14516,"byte_end":14534,"line_start":498,"line_end":498,"column_start":13,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":15121,"byte_end":15128,"line_start":521,"line_end":521,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":15626,"byte_end":15633,"line_start":537,"line_end":537,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":16842,"byte_end":16848,"line_start":572,"line_end":572,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":27303,"byte_end":27309,"line_start":839,"line_end":839,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":27722,"byte_end":27740,"line_start":855,"line_end":855,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":28300,"byte_end":28306,"line_start":883,"line_end":883,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":147},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":31769,"byte_end":31775,"line_start":982,"line_end":982,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":31860,"byte_end":31867,"line_start":988,"line_end":988,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":32370,"byte_end":32377,"line_start":1006,"line_end":1006,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":32510,"byte_end":32521,"line_start":1014,"line_end":1014,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":32650,"byte_end":32664,"line_start":1022,"line_end":1022,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":36730,"byte_end":36740,"line_start":1149,"line_end":1149,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":41535,"byte_end":41545,"line_start":1275,"line_end":1275,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":41692,"byte_end":41703,"line_start":1283,"line_end":1283,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":42865,"byte_end":42876,"line_start":1318,"line_end":1318,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":43020,"byte_end":43025,"line_start":1326,"line_end":1326,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":43475,"byte_end":43490,"line_start":1341,"line_end":1341,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":43643,"byte_end":43652,"line_start":1349,"line_end":1349,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":4561,"byte_end":4570,"line_start":171,"line_end":171,"column_start":15,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":254},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":13346,"byte_end":13360,"line_start":454,"line_end":454,"column_start":10,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":14085,"byte_end":14100,"line_start":481,"line_end":481,"column_start":10,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":485},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":14516,"byte_end":14534,"line_start":498,"line_end":498,"column_start":13,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":75},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":15121,"byte_end":15128,"line_start":521,"line_end":521,"column_start":6,"column_end":13},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":15626,"byte_end":15633,"line_start":537,"line_end":537,"column_start":6,"column_end":13},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":16842,"byte_end":16848,"line_start":572,"line_end":572,"column_start":6,"column_end":12},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":27303,"byte_end":27309,"line_start":839,"line_end":839,"column_start":15,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":219},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":27722,"byte_end":27740,"line_start":855,"line_end":855,"column_start":18,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":117},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":28300,"byte_end":28306,"line_start":883,"line_end":883,"column_start":6,"column_end":12},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":31769,"byte_end":31775,"line_start":982,"line_end":982,"column_start":15,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":224},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":31860,"byte_end":31867,"line_start":988,"line_end":988,"column_start":6,"column_end":13},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":32370,"byte_end":32377,"line_start":1006,"line_end":1006,"column_start":15,"column_end":22},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":228},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":32510,"byte_end":32521,"line_start":1014,"line_end":1014,"column_start":15,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":233},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":32650,"byte_end":32664,"line_start":1022,"line_end":1022,"column_start":6,"column_end":20},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":36730,"byte_end":36740,"line_start":1149,"line_end":1149,"column_start":10,"column_end":20},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":41535,"byte_end":41545,"line_start":1275,"line_end":1275,"column_start":19,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":41692,"byte_end":41703,"line_start":1283,"line_end":1283,"column_start":10,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":42865,"byte_end":42876,"line_start":1318,"line_end":1318,"column_start":19,"column_end":30},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":289},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":43020,"byte_end":43025,"line_start":1326,"line_end":1326,"column_start":6,"column_end":11},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":43475,"byte_end":43490,"line_start":1341,"line_end":1341,"column_start":19,"column_end":34},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":466},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.4.0/src/lib.rs","byte_start":43643,"byte_end":43652,"line_start":1349,"line_end":1349,"column_start":6,"column_end":15},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}}]}