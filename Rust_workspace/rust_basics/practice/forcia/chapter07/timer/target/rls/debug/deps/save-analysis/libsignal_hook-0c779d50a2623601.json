{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6","program":"/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","signal_hook","--edition=2018","/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"channel\"","--cfg","feature=\"iterator\"","-C","metadata=0c779d50a2623601","-C","extra-filename=-0c779d50a2623601","--out-dir","/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps","-L","dependency=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps","--extern","libc=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/liblibc-cebc448cccd95954.rmeta","--extern","signal_hook_registry=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libsignal_hook_registry-807423b2098cc08d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libsignal_hook-0c779d50a2623601.rmeta"},"prelude":{"crate_id":{"name":"signal_hook","disambiguator":[14438612853857083644,10524183691112107765]},"crate_root":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src","external_crates":[{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3329901521826220148,8779651902869174066]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11533795067257537051,6600409280955634707]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12614123221401343543,9564301585503608515]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1785005413158388284,2453622026203223019]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12957079427417428001,17718260667887668647]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10214993728156300765,14618204673916620187]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12453517098623888364,4709794086161820998]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12634510118091288440,7983944581587655387]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14017342134866723280,9256858969587329629]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7061025862014072460,14171357653989770935]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2285728033677722481,16182084057206383065]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7305883247437987566,266452839079745451]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13956229687295891598,15294992126055156716]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[931598532372339641,10024719927090962737]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[11150552510595322945,15608256962932530162]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4217706585212656622,592289864015908737]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[2229008352226773351,3496425060661471051]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","num":18,"id":{"name":"libc","disambiguator":[3800494124530081931,3463518720461322788]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","num":19,"id":{"name":"signal_hook_registry","disambiguator":[9950117374121127304,6436849121242944466]}}],"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":0,"byte_end":19826,"line_start":1,"line_end":399,"column_start":1,"column_end":37}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":423},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":60441,"byte_end":60455,"line_start":21,"line_end":21,"column_start":14,"column_end":28},"alias_span":null,"name":"WithRawSiginfo","value":"","parent":{"krate":0,"index":145}},{"kind":"Use","ref_id":{"krate":0,"index":424},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":60441,"byte_end":60455,"line_start":21,"line_end":21,"column_start":14,"column_end":28},"alias_span":null,"name":"WithRawSiginfo","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":391},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":33200,"byte_end":33206,"line_start":70,"line_end":70,"column_start":25,"column_end":31},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":25}},{"kind":"Use","ref_id":{"krate":0,"index":409},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":33208,"byte_end":33215,"line_start":70,"line_end":70,"column_start":33,"column_end":40},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":25}},{"kind":"Use","ref_id":{"krate":19,"index":115},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":70219,"byte_end":70227,"line_start":20,"line_end":20,"column_start":32,"column_end":40},"alias_span":null,"name":"register","value":"","parent":{"krate":0,"index":255}},{"kind":"Use","ref_id":{"krate":19,"index":129},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":70229,"byte_end":70239,"line_start":20,"line_end":20,"column_start":42,"column_end":52},"alias_span":null,"name":"unregister","value":"","parent":{"krate":0,"index":255}},{"kind":"Use","ref_id":{"krate":0,"index":336},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":70274,"byte_end":70297,"line_start":22,"line_end":22,"column_start":32,"column_end":55},"alias_span":null,"name":"emulate_default_handler","value":"","parent":{"krate":0,"index":255}},{"kind":"Use","ref_id":{"krate":0,"index":332},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":70299,"byte_end":70310,"line_start":22,"line_end":22,"column_start":57,"column_end":68},"alias_span":null,"name":"signal_name","value":"","parent":{"krate":0,"index":255}},{"kind":"Use","ref_id":{"krate":18,"index":921},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18638,"byte_end":18645,"line_start":368,"line_end":368,"column_start":13,"column_end":20},"alias_span":null,"name":"SIGABRT","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":926},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18647,"byte_end":18654,"line_start":368,"line_end":368,"column_start":22,"column_end":29},"alias_span":null,"name":"SIGALRM","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":6812},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18656,"byte_end":18662,"line_start":368,"line_end":368,"column_start":31,"column_end":37},"alias_span":null,"name":"SIGBUS","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":6811},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18664,"byte_end":18671,"line_start":368,"line_end":368,"column_start":39,"column_end":46},"alias_span":null,"name":"SIGCHLD","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":6815},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18673,"byte_end":18680,"line_start":368,"line_end":368,"column_start":48,"column_end":55},"alias_span":null,"name":"SIGCONT","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":922},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18682,"byte_end":18688,"line_start":368,"line_end":368,"column_start":57,"column_end":63},"alias_span":null,"name":"SIGFPE","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":917},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18690,"byte_end":18696,"line_start":368,"line_end":368,"column_start":65,"column_end":71},"alias_span":null,"name":"SIGHUP","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":920},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18698,"byte_end":18704,"line_start":368,"line_end":368,"column_start":73,"column_end":79},"alias_span":null,"name":"SIGILL","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":918},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18706,"byte_end":18712,"line_start":368,"line_end":368,"column_start":81,"column_end":87},"alias_span":null,"name":"SIGINT","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":6819},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18714,"byte_end":18719,"line_start":368,"line_end":368,"column_start":89,"column_end":94},"alias_span":null,"name":"SIGIO","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":923},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18733,"byte_end":18740,"line_start":369,"line_end":369,"column_start":13,"column_end":20},"alias_span":null,"name":"SIGKILL","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":925},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18742,"byte_end":18749,"line_start":369,"line_end":369,"column_start":22,"column_end":29},"alias_span":null,"name":"SIGPIPE","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":6809},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18751,"byte_end":18758,"line_start":369,"line_end":369,"column_start":31,"column_end":38},"alias_span":null,"name":"SIGPROF","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":919},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18760,"byte_end":18767,"line_start":369,"line_end":369,"column_start":40,"column_end":47},"alias_span":null,"name":"SIGQUIT","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":924},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18769,"byte_end":18776,"line_start":369,"line_end":369,"column_start":49,"column_end":56},"alias_span":null,"name":"SIGSEGV","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":6816},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18778,"byte_end":18785,"line_start":369,"line_end":369,"column_start":58,"column_end":65},"alias_span":null,"name":"SIGSTOP","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":6820},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18787,"byte_end":18793,"line_start":369,"line_end":369,"column_start":67,"column_end":73},"alias_span":null,"name":"SIGSYS","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":927},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18795,"byte_end":18802,"line_start":369,"line_end":369,"column_start":75,"column_end":82},"alias_span":null,"name":"SIGTERM","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":870},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18804,"byte_end":18811,"line_start":369,"line_end":369,"column_start":84,"column_end":91},"alias_span":null,"name":"SIGTRAP","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":6817},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18825,"byte_end":18832,"line_start":370,"line_end":370,"column_start":13,"column_end":20},"alias_span":null,"name":"SIGTSTP","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":6804},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18834,"byte_end":18841,"line_start":370,"line_end":370,"column_start":22,"column_end":29},"alias_span":null,"name":"SIGTTIN","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":6805},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18843,"byte_end":18850,"line_start":370,"line_end":370,"column_start":31,"column_end":38},"alias_span":null,"name":"SIGTTOU","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":6818},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18852,"byte_end":18858,"line_start":370,"line_end":370,"column_start":40,"column_end":46},"alias_span":null,"name":"SIGURG","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":6813},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18860,"byte_end":18867,"line_start":370,"line_end":370,"column_start":48,"column_end":55},"alias_span":null,"name":"SIGUSR1","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":6814},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18869,"byte_end":18876,"line_start":370,"line_end":370,"column_start":57,"column_end":64},"alias_span":null,"name":"SIGUSR2","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":6808},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18878,"byte_end":18887,"line_start":370,"line_end":370,"column_start":66,"column_end":75},"alias_span":null,"name":"SIGVTALRM","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":6810},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18889,"byte_end":18897,"line_start":370,"line_end":370,"column_start":77,"column_end":85},"alias_span":null,"name":"SIGWINCH","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":6806},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18899,"byte_end":18906,"line_start":370,"line_end":370,"column_start":87,"column_end":94},"alias_span":null,"name":"SIGXCPU","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":18,"index":6807},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18920,"byte_end":18927,"line_start":371,"line_end":371,"column_start":13,"column_end":20},"alias_span":null,"name":"SIGXFSZ","value":"","parent":{"krate":0,"index":351}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":19420,"byte_end":19421,"line_start":386,"line_end":386,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"SIGINT, SIGTERM, SIGQUIT","parent":{"krate":0,"index":349}},{"kind":"Use","ref_id":{"krate":19,"index":113},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":19458,"byte_end":19467,"line_start":388,"line_end":388,"column_start":35,"column_end":44},"alias_span":null,"name":"FORBIDDEN","value":"","parent":{"krate":0,"index":349}},{"kind":"Use","ref_id":{"krate":19,"index":157},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":19820,"byte_end":19825,"line_start":399,"line_end":399,"column_start":31,"column_end":36},"alias_span":null,"name":"SigId","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":0,"byte_end":19826,"line_start":1,"line_end":399,"column_start":1,"column_end":37},"name":"","qualname":"::","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":25},{"krate":0,"index":255},{"krate":0,"index":349},{"krate":0,"index":385}],"decl_id":null,"docs":" Library for easier and safe Unix signal handling","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":139,"byte_end":161,"line_start":6,"line_end":6,"column_start":1,"column_end":23}},{"value":"allow(unknown_lints, renamed_and_removed_lints,\n        intra_doc_link_resolution_failure, broken_intra_doc_links)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":219,"byte_end":347,"line_start":8,"line_end":13,"column_start":1,"column_end":3}},{"value":"/ Library for easier and safe Unix signal handling","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":468,"byte_end":520,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":521,"byte_end":524,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Unix signals are inherently hard to handle correctly, for several reasons:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":525,"byte_end":603,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":604,"byte_end":607,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * They are a global resource. If a library wants to set its own signal handlers, it risks","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":608,"byte_end":701,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"/   disrupting some other library. It is possible to chain the previous signal handler, but then","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":702,"byte_end":800,"line_start":21,"line_end":21,"column_start":1,"column_end":99}},{"value":"/   it is impossible to remove the old signal handlers from the chains in any practical manner.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":801,"byte_end":898,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ * They can be called from whatever thread, requiring synchronization. Also, as they can","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":899,"byte_end":990,"line_start":23,"line_end":23,"column_start":1,"column_end":92}},{"value":"/   interrupt a thread at any time, making most handling race-prone.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":991,"byte_end":1061,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ * According to the POSIX standard, the set of functions one may call inside a signal handler is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":1062,"byte_end":1161,"line_start":25,"line_end":25,"column_start":1,"column_end":100}},{"value":"/   limited to very few of them. To highlight, mutexes (or other locking mechanisms) and memory","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":1162,"byte_end":1259,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/   allocation and deallocation is *not* allowed.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":1260,"byte_end":1311,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":1312,"byte_end":1315,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # The goal of the library","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":1316,"byte_end":1345,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":1346,"byte_end":1349,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The aim is to subscriptions to signals a „structured“ resource, in a similar way memory","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":1350,"byte_end":1445,"line_start":31,"line_end":31,"column_start":1,"column_end":92}},{"value":"/ allocation is ‒ parts of the program can independently subscribe and it's the same part of the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":1446,"byte_end":1546,"line_start":32,"line_end":32,"column_start":1,"column_end":99}},{"value":"/ program that can give them up, independently of what the other parts do. Therefore, it is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":1547,"byte_end":1640,"line_start":33,"line_end":33,"column_start":1,"column_end":94}},{"value":"/ possible to register multiple actions to the same signal.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":1641,"byte_end":1702,"line_start":34,"line_end":34,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":1703,"byte_end":1706,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Another goal is to shield applications away from differences between platforms. Various Unix","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":1707,"byte_end":1803,"line_start":36,"line_end":36,"column_start":1,"column_end":97}},{"value":"/ systems have little quirks and differences that need to be worked around and that's not","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":1804,"byte_end":1895,"line_start":37,"line_end":37,"column_start":1,"column_end":92}},{"value":"/ something every application should be dealing with. We even try to provide some support for","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":1896,"byte_end":1991,"line_start":38,"line_end":38,"column_start":1,"column_end":96}},{"value":"/ Windows, but we lack the expertise in that area, so that one is not complete and is a bit rough","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":1992,"byte_end":2091,"line_start":39,"line_end":39,"column_start":1,"column_end":100}},{"value":"/ (if you know how it works there and are willing to either contribute the code or consult,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":2092,"byte_end":2185,"line_start":40,"line_end":40,"column_start":1,"column_end":94}},{"value":"/ please get in touch).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":2186,"byte_end":2211,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":2212,"byte_end":2215,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Furthermore, it provides implementation of certain common signal-handling patterns, usable from","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":2216,"byte_end":2315,"line_start":43,"line_end":43,"column_start":1,"column_end":100}},{"value":"/ safe Rust, without the application author needing to learn about *all* the traps.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":2316,"byte_end":2401,"line_start":44,"line_end":44,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":2402,"byte_end":2405,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Note that despite everything, there are still some quirks around signal handling that are not","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":2406,"byte_end":2503,"line_start":46,"line_end":46,"column_start":1,"column_end":98}},{"value":"/ possible to paper over and need to be considered. Also, there are some signal use cases that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":2504,"byte_end":2600,"line_start":47,"line_end":47,"column_start":1,"column_end":97}},{"value":"/ are inherently unsafe and they are not covered by this crate.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":2601,"byte_end":2666,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":2667,"byte_end":2670,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Anatomy of the crate","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":2671,"byte_end":2697,"line_start":50,"line_end":50,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":2698,"byte_end":2701,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ The crate is split into several modules.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":2702,"byte_end":2746,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":2747,"byte_end":2750,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ The easiest way to handle signals is using the [`Signals`][crate::iterator::Signals] iterator","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":2751,"byte_end":2848,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ thing. It can register for a set of signals and produce them one by one, in a blocking manner.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":2849,"byte_end":2947,"line_start":55,"line_end":55,"column_start":1,"column_end":99}},{"value":"/ You can reserve a thread for handling them as they come. If you want something asynchronous,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":2948,"byte_end":3044,"line_start":56,"line_end":56,"column_start":1,"column_end":97}},{"value":"/ there are adaptor crates for the most common asynchronous runtimes. The module also contains","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":3045,"byte_end":3141,"line_start":57,"line_end":57,"column_start":1,"column_end":97}},{"value":"/ ways to build iterators that produce a bit more information that just the signal number.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":3142,"byte_end":3234,"line_start":58,"line_end":58,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":3235,"byte_end":3238,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The [`flag`] module contains routines to set a flag based on incoming signals and to do","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":3239,"byte_end":3330,"line_start":60,"line_end":60,"column_start":1,"column_end":92}},{"value":"/ certain actions inside the signal handlers based on the flags (the flags can also be","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":3331,"byte_end":3419,"line_start":61,"line_end":61,"column_start":1,"column_end":89}},{"value":"/ manipulated by the rest of the application). This allows building things like checking if a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":3420,"byte_end":3515,"line_start":62,"line_end":62,"column_start":1,"column_end":96}},{"value":"/ signal happened on each loop iteration or making sure application shuts down on the second","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":3516,"byte_end":3610,"line_start":63,"line_end":63,"column_start":1,"column_end":95}},{"value":"/ CTRL+C if it got stuck in graceful shutdown requested by the first.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":3611,"byte_end":3682,"line_start":64,"line_end":64,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":3683,"byte_end":3686,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The [`consts`] module contains some constants, most importantly the signal numbers themselves","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":3687,"byte_end":3784,"line_start":66,"line_end":66,"column_start":1,"column_end":98}},{"value":"/ (these are just re-exports from [`libc`] and if your OS has some extra ones, you can use them","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":3785,"byte_end":3882,"line_start":67,"line_end":67,"column_start":1,"column_end":98}},{"value":"/ too, this is just for convenience).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":3883,"byte_end":3922,"line_start":68,"line_end":68,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":3923,"byte_end":3926,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ And last, there is the [`low_level`] module. It contains routines to directly register and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":3927,"byte_end":4021,"line_start":70,"line_end":70,"column_start":1,"column_end":95}},{"value":"/ unregister arbitrary actions. Some of the patters in the above modules return a [`SigId`],","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":4022,"byte_end":4116,"line_start":71,"line_end":71,"column_start":1,"column_end":95}},{"value":"/ which can be used with the [`low_level::unregister`] to remove the action. There are also some","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":4117,"byte_end":4215,"line_start":72,"line_end":72,"column_start":1,"column_end":99}},{"value":"/ other utilities that are more suited to build other abstractions with than to use directly.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":4216,"byte_end":4311,"line_start":73,"line_end":73,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":4312,"byte_end":4315,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Certain parts of the library can be enabled or disabled with use flags:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":4316,"byte_end":4391,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":4392,"byte_end":4395,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ * `channel`: The [low_level::channel] module (on by default).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":4396,"byte_end":4461,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/ * `iterator`: The [iterator] module (on by default).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":4462,"byte_end":4518,"line_start":78,"line_end":78,"column_start":1,"column_end":57}},{"value":"/ * `extended-sig-info`: Support for providing more information in the iterators or from the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":4519,"byte_end":4613,"line_start":79,"line_end":79,"column_start":1,"column_end":95}},{"value":"/   async adaptor crates. This is off by default.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":4614,"byte_end":4665,"line_start":80,"line_end":80,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":4666,"byte_end":4669,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ # Limitations","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":4670,"byte_end":4687,"line_start":82,"line_end":82,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":4688,"byte_end":4691,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ * OS limitations still apply. Certain signals are not possible to override or subscribe to ‒","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":4692,"byte_end":4790,"line_start":84,"line_end":84,"column_start":1,"column_end":97}},{"value":"/   `SIGKILL` or `SIGSTOP`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":4791,"byte_end":4820,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ * Overriding some others is probably a very stupid idea (or very unusual needs) ‒ handling eg.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":4821,"byte_end":4921,"line_start":86,"line_end":86,"column_start":1,"column_end":99}},{"value":"/   `SIGSEGV` is not something done lightly. For that reason, the crate will panic in case","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":4922,"byte_end":5014,"line_start":87,"line_end":87,"column_start":1,"column_end":93}},{"value":"/   registering of these is attempted (see [`FORBIDDEN`][crate::consts::FORBIDDEN]. If you still","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":5015,"byte_end":5113,"line_start":88,"line_end":88,"column_start":1,"column_end":99}},{"value":"/   need to do so, you can find such APIs in the `signal-hook-registry` backend crate, but","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":5114,"byte_end":5206,"line_start":89,"line_end":89,"column_start":1,"column_end":93}},{"value":"/   additional care must be taken.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":5207,"byte_end":5243,"line_start":90,"line_end":90,"column_start":1,"column_end":37}},{"value":"/ * Interaction with other signal-handling libraries is limited. If signal-hook finds an existing","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":5244,"byte_end":5343,"line_start":91,"line_end":91,"column_start":1,"column_end":100}},{"value":"/   handler present, it chain-calls it from the signal it installs and assumes other libraries","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":5344,"byte_end":5440,"line_start":92,"line_end":92,"column_start":1,"column_end":97}},{"value":"/   would do the same, but that's everything that can be done to make it work with libraries not","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":5441,"byte_end":5539,"line_start":93,"line_end":93,"column_start":1,"column_end":99}},{"value":"/   based on [`signal-hook-registry`](https://lib.rs/signal-hook-registry)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":5540,"byte_end":5616,"line_start":94,"line_end":94,"column_start":1,"column_end":77}},{"value":"/   (the backend of this crate).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":5617,"byte_end":5651,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/ * The above chaining contains a race condition in multi-threaded programs, where the previous","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":5652,"byte_end":5749,"line_start":96,"line_end":96,"column_start":1,"column_end":98}},{"value":"/   handler might not get called if it is received during the registration process. This is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":5750,"byte_end":5843,"line_start":97,"line_end":97,"column_start":1,"column_end":94}},{"value":"/   handled (at least on non-windows platforms) on the same thread where the registration","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":5844,"byte_end":5935,"line_start":98,"line_end":98,"column_start":1,"column_end":92}},{"value":"/   happens, therefore it is advised to register at least one action for each signal of interest","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":5936,"byte_end":6034,"line_start":99,"line_end":99,"column_start":1,"column_end":99}},{"value":"/   early, before any additional threads are started. Registering any additional (or removing and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":6035,"byte_end":6134,"line_start":100,"line_end":100,"column_start":1,"column_end":100}},{"value":"/   registering again) action on the same signal is without the race condition.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":6135,"byte_end":6216,"line_start":101,"line_end":101,"column_start":1,"column_end":82}},{"value":"/ * Once at least one action is registered for a signal, the default action is replaced (this is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":6217,"byte_end":6315,"line_start":102,"line_end":102,"column_start":1,"column_end":99}},{"value":"/   how signals work in the OS). Even if all actions of that signal are removed, `signal-hook`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":6316,"byte_end":6412,"line_start":103,"line_end":103,"column_start":1,"column_end":97}},{"value":"/   does not restore the default handler (such behaviour would be at times inconsistent with","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":6413,"byte_end":6507,"line_start":104,"line_end":104,"column_start":1,"column_end":95}},{"value":"/   making the actions independent and there's no reasonable way to do so in a race-free way in a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":6508,"byte_end":6607,"line_start":105,"line_end":105,"column_start":1,"column_end":100}},{"value":"/   multi-threaded program while also dealing with signal handlers registered with other","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":6608,"byte_end":6698,"line_start":106,"line_end":106,"column_start":1,"column_end":91}},{"value":"/   libraries). It is, however, possible to *emulate* the default handler (see the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":6699,"byte_end":6783,"line_start":107,"line_end":107,"column_start":1,"column_end":85}},{"value":"/   [`emulate_default_handler`][low_level::emulate_default_handler]) ‒ there are only 4","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":6784,"byte_end":6875,"line_start":108,"line_end":108,"column_start":1,"column_end":90}},{"value":"/   default handlers:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":6876,"byte_end":6899,"line_start":109,"line_end":109,"column_start":1,"column_end":24}},{"value":"/   - Ignore. This is easy to emulate.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":6900,"byte_end":6940,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/   - Abort. Depending on if you call it from within a signal handler of from outside, the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":6941,"byte_end":7033,"line_start":111,"line_end":111,"column_start":1,"column_end":93}},{"value":"/     [`low_level::abort`] or [`std::process::abort`] can be used.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":7034,"byte_end":7102,"line_start":112,"line_end":112,"column_start":1,"column_end":69}},{"value":"/   - Terminate. This can be done with `exit` ([`low_level::exit`] or [`std::process::exit`]).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":7103,"byte_end":7199,"line_start":113,"line_end":113,"column_start":1,"column_end":97}},{"value":"/   - Stop. It is possible to [`raise`][low_level::raise] the [`SIGSTOP`][consts::SIGSTOP] signal.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":7200,"byte_end":7300,"line_start":114,"line_end":114,"column_start":1,"column_end":101}},{"value":"/     That one can't be replaced and always stops the application.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":7301,"byte_end":7369,"line_start":115,"line_end":115,"column_start":1,"column_end":69}},{"value":"/ * Many of the patterns here can collate multiple instances of the same signal into fewer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":7370,"byte_end":7462,"line_start":116,"line_end":116,"column_start":1,"column_end":93}},{"value":"/   instances, if the application doesn't consume them fast enough. This is consistent with what","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":7463,"byte_end":7561,"line_start":117,"line_end":117,"column_start":1,"column_end":99}},{"value":"/   the kernel does if the application doesn't keep up with them, so it is something one needs to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":7562,"byte_end":7661,"line_start":118,"line_end":118,"column_start":1,"column_end":100}},{"value":"/   deal with anyway.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":7662,"byte_end":7685,"line_start":119,"line_end":119,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":7686,"byte_end":7689,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ # Signal masks","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":7690,"byte_end":7708,"line_start":121,"line_end":121,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":7709,"byte_end":7712,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ As the library uses `sigaction` under the hood, signal masking works as expected (eg. with","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":7713,"byte_end":7807,"line_start":123,"line_end":123,"column_start":1,"column_end":95}},{"value":"/ `pthread_sigmask`). This means, signals will *not* be delivered if the signal is masked in all","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":7808,"byte_end":7906,"line_start":124,"line_end":124,"column_start":1,"column_end":99}},{"value":"/ program's threads.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":7907,"byte_end":7929,"line_start":125,"line_end":125,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":7930,"byte_end":7933,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ By the way, if you do want to modify the signal mask (or do other Unix-specific magic), the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":7934,"byte_end":8029,"line_start":127,"line_end":127,"column_start":1,"column_end":96}},{"value":"/ [nix](https://lib.rs/crates/nix) crate offers safe interface to many low-level functions,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8030,"byte_end":8123,"line_start":128,"line_end":128,"column_start":1,"column_end":94}},{"value":"/ including","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8124,"byte_end":8137,"line_start":129,"line_end":129,"column_start":1,"column_end":14}},{"value":"/ [`pthread_sigmask`](https://docs.rs/nix/0.11.0/nix/sys/signal/fn.pthread_sigmask.html).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8138,"byte_end":8229,"line_start":130,"line_end":130,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8230,"byte_end":8233,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ # Portability","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8234,"byte_end":8251,"line_start":132,"line_end":132,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8252,"byte_end":8255,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ It should work on any POSIX.1-2001 system, which are all the major big OSes with the notable","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8256,"byte_end":8352,"line_start":134,"line_end":134,"column_start":1,"column_end":97}},{"value":"/ exception of Windows.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8353,"byte_end":8378,"line_start":135,"line_end":135,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8379,"byte_end":8382,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ Non-standard signals are also supported. Pass the signal value directly from `libc` or use","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8383,"byte_end":8477,"line_start":137,"line_end":137,"column_start":1,"column_end":95}},{"value":"/ the numeric value directly.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8478,"byte_end":8509,"line_start":138,"line_end":138,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8510,"byte_end":8513,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8514,"byte_end":8525,"line_start":140,"line_end":140,"column_start":1,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8526,"byte_end":8549,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::{AtomicBool};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8550,"byte_end":8590,"line_start":142,"line_end":142,"column_start":1,"column_end":41}},{"value":"/ let term = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8591,"byte_end":8639,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/ let _ = signal_hook::flag::register(libc::SIGINT, Arc::clone(&term));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8640,"byte_end":8713,"line_start":144,"line_end":144,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8714,"byte_end":8721,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8722,"byte_end":8725,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ This crate includes a limited support for Windows, based on `signal`/`raise` in the CRT.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8726,"byte_end":8818,"line_start":147,"line_end":147,"column_start":1,"column_end":93}},{"value":"/ There are differences in both API and behavior:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8819,"byte_end":8870,"line_start":148,"line_end":148,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8871,"byte_end":8874,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ - Many parts of the library are not available there.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8875,"byte_end":8931,"line_start":150,"line_end":150,"column_start":1,"column_end":57}},{"value":"/ - We have only a few signals: `SIGABRT`, `SIGABRT_COMPAT`, `SIGBREAK`,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":8932,"byte_end":9006,"line_start":151,"line_end":151,"column_start":1,"column_end":75}},{"value":"/   `SIGFPE`, `SIGILL`, `SIGINT`, `SIGSEGV` and `SIGTERM`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":9007,"byte_end":9067,"line_start":152,"line_end":152,"column_start":1,"column_end":61}},{"value":"/ - Due to lack of signal blocking, there's a race condition.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":9068,"byte_end":9131,"line_start":153,"line_end":153,"column_start":1,"column_end":64}},{"value":"/   After the call to `signal`, there's a moment where we miss a signal.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":9132,"byte_end":9206,"line_start":154,"line_end":154,"column_start":1,"column_end":75}},{"value":"/   That means when you register a handler, there may be a signal which invokes","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":9207,"byte_end":9288,"line_start":155,"line_end":155,"column_start":1,"column_end":82}},{"value":"/   neither the default handler or the handler you register.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":9289,"byte_end":9351,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/ - Handlers registered by `signal` in Windows are cleared on first signal.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":9352,"byte_end":9429,"line_start":157,"line_end":157,"column_start":1,"column_end":78}},{"value":"/   To match behavior in other platforms, we re-register the handler each time the handler is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":9430,"byte_end":9525,"line_start":158,"line_end":158,"column_start":1,"column_end":96}},{"value":"/   called, but there's a moment where we miss a handler.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":9526,"byte_end":9585,"line_start":159,"line_end":159,"column_start":1,"column_end":60}},{"value":"/   That means when you receive two signals in a row, there may be a signal which invokes","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":9586,"byte_end":9677,"line_start":160,"line_end":160,"column_start":1,"column_end":92}},{"value":"/   the default handler, nevertheless you certainly have registered the handler.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":9678,"byte_end":9760,"line_start":161,"line_end":161,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":9761,"byte_end":9764,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Moreover, signals won't work as you expected. `SIGTERM` isn't actually used and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":9765,"byte_end":9848,"line_start":163,"line_end":163,"column_start":1,"column_end":84}},{"value":"/ not all `Ctrl-C`s are turned into `SIGINT`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":9849,"byte_end":9896,"line_start":164,"line_end":164,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":9897,"byte_end":9900,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Patches to improve Windows support in this library are welcome.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":9901,"byte_end":9968,"line_start":166,"line_end":166,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":9969,"byte_end":9972,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":9973,"byte_end":9987,"line_start":168,"line_end":168,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":9988,"byte_end":9991,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ There are several feature flags that control how much is available as part of the crate, some","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":9992,"byte_end":10089,"line_start":170,"line_end":170,"column_start":1,"column_end":98}},{"value":"/ enabled by default.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10090,"byte_end":10113,"line_start":171,"line_end":171,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10114,"byte_end":10117,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ * `channel`: (enabled by default) The [Channel][crate::low_level::channel] synchronization","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10118,"byte_end":10212,"line_start":173,"line_end":173,"column_start":1,"column_end":95}},{"value":"/   primitive for exporting data out of signal handlers.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10213,"byte_end":10271,"line_start":174,"line_end":174,"column_start":1,"column_end":59}},{"value":"/ * `iterator`: (enabled by default) An [Signals iterator][crate::iterator::Signals] that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10272,"byte_end":10363,"line_start":175,"line_end":175,"column_start":1,"column_end":92}},{"value":"/   provides a convenient interface for receiving signals in rust-friendly way.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10364,"byte_end":10445,"line_start":176,"line_end":176,"column_start":1,"column_end":82}},{"value":"/ * `extended-siginfo` adds support for providing extra information as part of the iterator","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10446,"byte_end":10539,"line_start":177,"line_end":177,"column_start":1,"column_end":94}},{"value":"/   interface.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10540,"byte_end":10556,"line_start":178,"line_end":178,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10557,"byte_end":10560,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10561,"byte_end":10575,"line_start":180,"line_end":180,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10576,"byte_end":10579,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ ## Using a flag to terminate a loop-based application","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10580,"byte_end":10637,"line_start":182,"line_end":182,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10638,"byte_end":10641,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10642,"byte_end":10653,"line_start":184,"line_end":184,"column_start":1,"column_end":12}},{"value":"/ use std::io::Error;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10654,"byte_end":10677,"line_start":185,"line_end":185,"column_start":1,"column_end":24}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10678,"byte_end":10701,"line_start":186,"line_end":186,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::{AtomicBool, Ordering};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10702,"byte_end":10752,"line_start":187,"line_end":187,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10753,"byte_end":10756,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Error> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10757,"byte_end":10793,"line_start":189,"line_end":189,"column_start":1,"column_end":37}},{"value":"/     let term = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10794,"byte_end":10846,"line_start":190,"line_end":190,"column_start":1,"column_end":53}},{"value":"/     signal_hook::flag::register(signal_hook::consts::SIGTERM, Arc::clone(&term))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10847,"byte_end":10933,"line_start":191,"line_end":191,"column_start":1,"column_end":87}},{"value":"/     while !term.load(Ordering::Relaxed) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10934,"byte_end":10979,"line_start":192,"line_end":192,"column_start":1,"column_end":46}},{"value":"/         // Do some time-limited stuff here","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":10980,"byte_end":11026,"line_start":193,"line_end":193,"column_start":1,"column_end":47}},{"value":"/         // (if this could block forever, then there's no guarantee the signal will have any","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11027,"byte_end":11122,"line_start":194,"line_end":194,"column_start":1,"column_end":96}},{"value":"/         // effect).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11123,"byte_end":11146,"line_start":195,"line_end":195,"column_start":1,"column_end":24}},{"value":"/ #","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11147,"byte_end":11152,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ #       // Hack to terminate the example, not part of the real code.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11153,"byte_end":11225,"line_start":197,"line_end":197,"column_start":1,"column_end":73}},{"value":"/ #       term.store(true, Ordering::Relaxed);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11226,"byte_end":11274,"line_start":198,"line_end":198,"column_start":1,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11275,"byte_end":11284,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11285,"byte_end":11299,"line_start":200,"line_end":200,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11300,"byte_end":11305,"line_start":201,"line_end":201,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11306,"byte_end":11313,"line_start":202,"line_end":202,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11314,"byte_end":11317,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ ## A complex signal handling with a background thread","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11318,"byte_end":11375,"line_start":204,"line_end":204,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11376,"byte_end":11379,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ This also handles the double CTRL+C situation (eg. the second CTRL+C kills) and resetting the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11380,"byte_end":11477,"line_start":206,"line_end":206,"column_start":1,"column_end":98}},{"value":"/ terminal on `SIGTSTP` (CTRL+Z, curses-based applications should do something like this).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11478,"byte_end":11570,"line_start":207,"line_end":207,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11571,"byte_end":11574,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11575,"byte_end":11586,"line_start":209,"line_end":209,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"extended-siginfo\")] pub mod test {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11587,"byte_end":11644,"line_start":210,"line_end":210,"column_start":1,"column_end":58}},{"value":"/ use std::io::Error;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11645,"byte_end":11668,"line_start":211,"line_end":211,"column_start":1,"column_end":24}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11669,"byte_end":11692,"line_start":212,"line_end":212,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11693,"byte_end":11731,"line_start":213,"line_end":213,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11732,"byte_end":11735,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ use signal_hook::consts::signal::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11736,"byte_end":11775,"line_start":215,"line_end":215,"column_start":1,"column_end":40}},{"value":"/ use signal_hook::consts::TERM_SIGNALS;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11776,"byte_end":11818,"line_start":216,"line_end":216,"column_start":1,"column_end":43}},{"value":"/ use signal_hook::flag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11819,"byte_end":11845,"line_start":217,"line_end":217,"column_start":1,"column_end":27}},{"value":"/ // A friend of the Signals iterator, but can be customized by what we want yielded about each","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11846,"byte_end":11943,"line_start":218,"line_end":218,"column_start":1,"column_end":98}},{"value":"/ // signal.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11944,"byte_end":11958,"line_start":219,"line_end":219,"column_start":1,"column_end":15}},{"value":"/ use signal_hook::iterator::SignalsInfo;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":11959,"byte_end":12002,"line_start":220,"line_end":220,"column_start":1,"column_end":44}},{"value":"/ use signal_hook::iterator::exfiltrator::WithOrigin;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12003,"byte_end":12058,"line_start":221,"line_end":221,"column_start":1,"column_end":56}},{"value":"/ use signal_hook::low_level;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12059,"byte_end":12090,"line_start":222,"line_end":222,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12091,"byte_end":12094,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ # struct App;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12095,"byte_end":12112,"line_start":224,"line_end":224,"column_start":1,"column_end":18}},{"value":"/ # impl App {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12113,"byte_end":12129,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/ # fn run_background() -> Self { Self }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12130,"byte_end":12172,"line_start":226,"line_end":226,"column_start":1,"column_end":43}},{"value":"/ # fn wait_for_stop(self) {}","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12173,"byte_end":12204,"line_start":227,"line_end":227,"column_start":1,"column_end":32}},{"value":"/ # fn restore_term(&self) {}","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12205,"byte_end":12236,"line_start":228,"line_end":228,"column_start":1,"column_end":32}},{"value":"/ # fn claim_term(&self) {}","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12237,"byte_end":12266,"line_start":229,"line_end":229,"column_start":1,"column_end":30}},{"value":"/ # fn resize_term(&self) {}","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12267,"byte_end":12297,"line_start":230,"line_end":230,"column_start":1,"column_end":31}},{"value":"/ # fn reload_config(&self) {}","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12298,"byte_end":12330,"line_start":231,"line_end":231,"column_start":1,"column_end":33}},{"value":"/ # fn print_stats(&self) {}","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12331,"byte_end":12361,"line_start":232,"line_end":232,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12362,"byte_end":12369,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12370,"byte_end":12373,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ # pub","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12374,"byte_end":12383,"line_start":235,"line_end":235,"column_start":1,"column_end":10}},{"value":"/ fn main() -> Result<(), Error> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12384,"byte_end":12420,"line_start":236,"line_end":236,"column_start":1,"column_end":37}},{"value":"/     // Make sure double CTRL+C and similar kills","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12421,"byte_end":12473,"line_start":237,"line_end":237,"column_start":1,"column_end":53}},{"value":"/     let term_now = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12474,"byte_end":12530,"line_start":238,"line_end":238,"column_start":1,"column_end":57}},{"value":"/     for sig in TERM_SIGNALS {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12531,"byte_end":12564,"line_start":239,"line_end":239,"column_start":1,"column_end":34}},{"value":"/         // When terminated by a second term signal, exit with exit code 1.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12565,"byte_end":12643,"line_start":240,"line_end":240,"column_start":1,"column_end":79}},{"value":"/         // This will do nothing the first time (because term_now is false).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12644,"byte_end":12723,"line_start":241,"line_end":241,"column_start":1,"column_end":80}},{"value":"/         flag::register_conditional_shutdown(*sig, 1, Arc::clone(&term_now))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12724,"byte_end":12805,"line_start":242,"line_end":242,"column_start":1,"column_end":82}},{"value":"/         // But this will \"arm\" the above for the second time, by setting it to true.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12806,"byte_end":12894,"line_start":243,"line_end":243,"column_start":1,"column_end":89}},{"value":"/         // The order of registering these is important, if you put this one first, it will","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12895,"byte_end":12989,"line_start":244,"line_end":244,"column_start":1,"column_end":95}},{"value":"/         // first arm and then terminate ‒ all in the first round.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":12990,"byte_end":13061,"line_start":245,"line_end":245,"column_start":1,"column_end":70}},{"value":"/         flag::register(*sig, Arc::clone(&term_now))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":13062,"byte_end":13119,"line_start":246,"line_end":246,"column_start":1,"column_end":58}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":13120,"byte_end":13129,"line_start":247,"line_end":247,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":13130,"byte_end":13133,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/     // Subscribe to all these signals with information about where they come from. We use the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":13134,"byte_end":13231,"line_start":249,"line_end":249,"column_start":1,"column_end":98}},{"value":"/     // extra info only for logging in this example (it is not available on all the OSes or at","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":13232,"byte_end":13329,"line_start":250,"line_end":250,"column_start":1,"column_end":98}},{"value":"/     // all the occasions anyway, it may return `Unknown`).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":13330,"byte_end":13392,"line_start":251,"line_end":251,"column_start":1,"column_end":63}},{"value":"/     let mut sigs = vec![","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":13393,"byte_end":13421,"line_start":252,"line_end":252,"column_start":1,"column_end":29}},{"value":"/         // Some terminal handling","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":13422,"byte_end":13459,"line_start":253,"line_end":253,"column_start":1,"column_end":38}},{"value":"/         SIGTSTP, SIGCONT, SIGWINCH,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":13460,"byte_end":13499,"line_start":254,"line_end":254,"column_start":1,"column_end":40}},{"value":"/         // Reload of configuration for daemons ‒ um, is this example for a TUI app or a daemon","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":13500,"byte_end":13600,"line_start":255,"line_end":255,"column_start":1,"column_end":99}},{"value":"/         // O:-)? You choose...","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":13601,"byte_end":13635,"line_start":256,"line_end":256,"column_start":1,"column_end":35}},{"value":"/         SIGHUP,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":13636,"byte_end":13655,"line_start":257,"line_end":257,"column_start":1,"column_end":20}},{"value":"/         // Application-specific action, to print some statistics.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":13656,"byte_end":13725,"line_start":258,"line_end":258,"column_start":1,"column_end":70}},{"value":"/         SIGUSR1,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":13726,"byte_end":13746,"line_start":259,"line_end":259,"column_start":1,"column_end":21}},{"value":"/     ];","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":13747,"byte_end":13757,"line_start":260,"line_end":260,"column_start":1,"column_end":11}},{"value":"/     sigs.extend(TERM_SIGNALS);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":13758,"byte_end":13792,"line_start":261,"line_end":261,"column_start":1,"column_end":35}},{"value":"/     let mut signals = SignalsInfo::<WithOrigin>::new(&sigs)?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":13793,"byte_end":13858,"line_start":262,"line_end":262,"column_start":1,"column_end":66}},{"value":"/ #   low_level::raise(SIGTERM)?; // Trick to terminate the example","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":13859,"byte_end":13928,"line_start":263,"line_end":263,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":13929,"byte_end":13932,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/     // This is the actual application that'll start in its own thread. We'll control it from","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":13933,"byte_end":14029,"line_start":265,"line_end":265,"column_start":1,"column_end":97}},{"value":"/     // this thread based on the signals, but it keeps running.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":14030,"byte_end":14096,"line_start":266,"line_end":266,"column_start":1,"column_end":67}},{"value":"/     // This is called after all the signals got registered, to avoid the short race condition","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":14097,"byte_end":14194,"line_start":267,"line_end":267,"column_start":1,"column_end":98}},{"value":"/     // in the first registration of each signal in multi-threaded programs.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":14195,"byte_end":14274,"line_start":268,"line_end":268,"column_start":1,"column_end":80}},{"value":"/     let app = App::run_background();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":14275,"byte_end":14315,"line_start":269,"line_end":269,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":14316,"byte_end":14319,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/     // Consume all the incoming signals. This happens in \"normal\" Rust thread, not in the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":14320,"byte_end":14413,"line_start":271,"line_end":271,"column_start":1,"column_end":94}},{"value":"/     // signal handlers. This means that we are allowed to do whatever we like in here, without","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":14414,"byte_end":14512,"line_start":272,"line_end":272,"column_start":1,"column_end":99}},{"value":"/     // restrictions, but it also means the kernel believes the signal already got delivered, we","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":14513,"byte_end":14612,"line_start":273,"line_end":273,"column_start":1,"column_end":100}},{"value":"/     // handle them in delayed manner. This is in contrast with eg the above","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":14613,"byte_end":14692,"line_start":274,"line_end":274,"column_start":1,"column_end":80}},{"value":"/     // `register_conditional_shutdown` where the shutdown happens *inside* the handler.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":14693,"byte_end":14784,"line_start":275,"line_end":275,"column_start":1,"column_end":92}},{"value":"/     let mut has_terminal = true;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":14785,"byte_end":14821,"line_start":276,"line_end":276,"column_start":1,"column_end":37}},{"value":"/     for info in &mut signals {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":14822,"byte_end":14856,"line_start":277,"line_end":277,"column_start":1,"column_end":35}},{"value":"/         // Will print info about signal + where it comes from.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":14857,"byte_end":14923,"line_start":278,"line_end":278,"column_start":1,"column_end":67}},{"value":"/         eprintln!(\"Received a signal {:?}\", info);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":14924,"byte_end":14978,"line_start":279,"line_end":279,"column_start":1,"column_end":55}},{"value":"/         match info.signal {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":14979,"byte_end":15010,"line_start":280,"line_end":280,"column_start":1,"column_end":32}},{"value":"/             SIGTSTP => {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15011,"byte_end":15039,"line_start":281,"line_end":281,"column_start":1,"column_end":29}},{"value":"/                 // Restore the terminal to non-TUI mode","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15040,"byte_end":15099,"line_start":282,"line_end":282,"column_start":1,"column_end":60}},{"value":"/                 if has_terminal {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15100,"byte_end":15137,"line_start":283,"line_end":283,"column_start":1,"column_end":38}},{"value":"/                     app.restore_term();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15138,"byte_end":15181,"line_start":284,"line_end":284,"column_start":1,"column_end":44}},{"value":"/                     has_terminal = false;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15182,"byte_end":15227,"line_start":285,"line_end":285,"column_start":1,"column_end":46}},{"value":"/                     // And actually stop ourselves.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15228,"byte_end":15283,"line_start":286,"line_end":286,"column_start":1,"column_end":56}},{"value":"/                     low_level::emulate_default_handler(SIGTSTP)?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15284,"byte_end":15353,"line_start":287,"line_end":287,"column_start":1,"column_end":70}},{"value":"/                 }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15354,"byte_end":15375,"line_start":288,"line_end":288,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15376,"byte_end":15393,"line_start":289,"line_end":289,"column_start":1,"column_end":18}},{"value":"/             SIGCONT => {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15394,"byte_end":15422,"line_start":290,"line_end":290,"column_start":1,"column_end":29}},{"value":"/                 if !has_terminal {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15423,"byte_end":15461,"line_start":291,"line_end":291,"column_start":1,"column_end":39}},{"value":"/                     app.claim_term();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15462,"byte_end":15503,"line_start":292,"line_end":292,"column_start":1,"column_end":42}},{"value":"/                     has_terminal = true;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15504,"byte_end":15548,"line_start":293,"line_end":293,"column_start":1,"column_end":45}},{"value":"/                 }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15549,"byte_end":15570,"line_start":294,"line_end":294,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15571,"byte_end":15588,"line_start":295,"line_end":295,"column_start":1,"column_end":18}},{"value":"/             SIGWINCH => app.resize_term(),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15589,"byte_end":15635,"line_start":296,"line_end":296,"column_start":1,"column_end":47}},{"value":"/             SIGHUP => app.reload_config(),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15636,"byte_end":15682,"line_start":297,"line_end":297,"column_start":1,"column_end":47}},{"value":"/             SIGUSR1 => app.print_stats(),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15683,"byte_end":15728,"line_start":298,"line_end":298,"column_start":1,"column_end":46}},{"value":"/             term_sig => { // These are all the ones left","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15729,"byte_end":15789,"line_start":299,"line_end":299,"column_start":1,"column_end":61}},{"value":"/                 eprintln!(\"Terminating\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15790,"byte_end":15835,"line_start":300,"line_end":300,"column_start":1,"column_end":46}},{"value":"/                 assert!(TERM_SIGNALS.contains(&term_sig));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15836,"byte_end":15898,"line_start":301,"line_end":301,"column_start":1,"column_end":63}},{"value":"/                 break;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15899,"byte_end":15925,"line_start":302,"line_end":302,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15926,"byte_end":15943,"line_start":303,"line_end":303,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15944,"byte_end":15957,"line_start":304,"line_end":304,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15958,"byte_end":15967,"line_start":305,"line_end":305,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15968,"byte_end":15971,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/     // If during this another termination signal comes, the trick at the top would kick in and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":15972,"byte_end":16070,"line_start":307,"line_end":307,"column_start":1,"column_end":99}},{"value":"/     // terminate early. But if it doesn't, the application shuts down gracefully.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16071,"byte_end":16156,"line_start":308,"line_end":308,"column_start":1,"column_end":86}},{"value":"/     app.wait_for_stop();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16157,"byte_end":16185,"line_start":309,"line_end":309,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16186,"byte_end":16189,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16190,"byte_end":16204,"line_start":311,"line_end":311,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16205,"byte_end":16210,"line_start":312,"line_end":312,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16211,"byte_end":16218,"line_start":313,"line_end":313,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16219,"byte_end":16236,"line_start":314,"line_end":314,"column_start":1,"column_end":18}},{"value":"/ # #[cfg(feature = \"extended-siginfo\")] test::main().unwrap();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16237,"byte_end":16302,"line_start":315,"line_end":315,"column_start":1,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16303,"byte_end":16310,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16311,"byte_end":16318,"line_start":317,"line_end":317,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16319,"byte_end":16322,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ # Asynchronous runtime support","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16323,"byte_end":16357,"line_start":319,"line_end":319,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16358,"byte_end":16361,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ If you are looking for integration with an asynchronous runtime take a look at one of the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16362,"byte_end":16455,"line_start":321,"line_end":321,"column_start":1,"column_end":94}},{"value":"/ following adapter crates:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16456,"byte_end":16485,"line_start":322,"line_end":322,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16486,"byte_end":16489,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ * [`signal-hook-async-std`](https://docs.rs/signal-hook-async-std) for async-std support","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16490,"byte_end":16582,"line_start":324,"line_end":324,"column_start":1,"column_end":93}},{"value":"/ * [`signal-hook-mio`](https://docs.rs/signal-hook-mio) for MIO support","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16583,"byte_end":16657,"line_start":325,"line_end":325,"column_start":1,"column_end":75}},{"value":"/ * [`signal-hook-tokio`](https://docs.rs/signal-hook-tokio) for Tokio support","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16658,"byte_end":16738,"line_start":326,"line_end":326,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16739,"byte_end":16742,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ Feel free to open a pull requests if you want to add support for runtimes not mentioned above.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16743,"byte_end":16841,"line_start":328,"line_end":328,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16842,"byte_end":16845,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ # Porting from previous versions","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16846,"byte_end":16882,"line_start":330,"line_end":330,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16883,"byte_end":16886,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ There were some noisy changes when going from 0.2 version to the 0.3 version. In particular:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16887,"byte_end":16983,"line_start":332,"line_end":332,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16984,"byte_end":16987,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ * A lot of things moved around to make the structure of the crate a bit more understandable.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":16988,"byte_end":17084,"line_start":334,"line_end":334,"column_start":1,"column_end":97}},{"value":"/   Most of the time it should be possible to just search the documentation for the name that","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":17085,"byte_end":17180,"line_start":335,"line_end":335,"column_start":1,"column_end":96}},{"value":"/   can't be resolved to discover the new location.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":17181,"byte_end":17234,"line_start":336,"line_end":336,"column_start":1,"column_end":54}},{"value":"/   - The signal constants (`SIGTERM`, for example) are in [`consts`] submodule (individual","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":17235,"byte_end":17328,"line_start":337,"line_end":337,"column_start":1,"column_end":94}},{"value":"/     imports) and in the [`consts::signal`] (for wildcard import of all of them).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":17329,"byte_end":17413,"line_start":338,"line_end":338,"column_start":1,"column_end":85}},{"value":"/   - Some APIs that are considered more of a low-level building blocks than for casual day to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":17414,"byte_end":17510,"line_start":339,"line_end":339,"column_start":1,"column_end":97}},{"value":"/     day use are now in the [`low_level`] submodule.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":17511,"byte_end":17566,"line_start":340,"line_end":340,"column_start":1,"column_end":56}},{"value":"/ * The previous version contained the `cleanup` module that allowed for removal of the actions","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":17567,"byte_end":17664,"line_start":341,"line_end":341,"column_start":1,"column_end":98}},{"value":"/   in rather destructive way (nuking actions of arbitrary other parts of the program). This is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":17665,"byte_end":17762,"line_start":342,"line_end":342,"column_start":1,"column_end":98}},{"value":"/   completely gone in this version. The use case of shutting down the application on second","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":17763,"byte_end":17857,"line_start":343,"line_end":343,"column_start":1,"column_end":95}},{"value":"/   CTRL+C is now supported by a pattern described in the [`flag`] submodule. For other similar","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":17858,"byte_end":17955,"line_start":344,"line_end":344,"column_start":1,"column_end":98}},{"value":"/   needs, refer above for emulating default handlers.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":17956,"byte_end":18012,"line_start":345,"line_end":345,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flag","qualname":"::flag","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22}],"decl_id":null,"docs":" Module for actions setting flags.","sig":null,"attributes":[{"value":"/ Module for actions setting flags.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":19828,"byte_end":19865,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":19866,"byte_end":19869,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This contains helper functions to set flags whenever a signal happens. The flags are atomic","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":19870,"byte_end":19965,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ bools or numbers and the library manipulates them with the `SeqCst` ordering, in case someone","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":19966,"byte_end":20063,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ cares about relative order to some *other* atomic variables. If you don't care about the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":20064,"byte_end":20156,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/ relative order, you are free to use `Ordering::Relaxed` when reading and resetting the flags.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":20157,"byte_end":20254,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":20255,"byte_end":20258,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # When to use","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":20259,"byte_end":20276,"line_start":8,"line_end":8,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":20277,"byte_end":20280,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The flags in this module allow for polling if a signal arrived since the previous poll. The do","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":20281,"byte_end":20379,"line_start":10,"line_end":10,"column_start":1,"column_end":99}},{"value":"/ not allow blocking until something arrives.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":20380,"byte_end":20427,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":20428,"byte_end":20431,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Therefore, the natural way to use them is in applications that have some kind of iterative work","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":20432,"byte_end":20531,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ with both some upper and lower time limit on one iteration. If one iteration could block for","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":20532,"byte_end":20628,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ arbitrary time, the handling of the signal would be postponed for a long time. If the iteration","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":20629,"byte_end":20728,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ didn't block at all, the checking for the signal would turn into a busy-loop.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":20729,"byte_end":20810,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":20811,"byte_end":20814,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If what you need is blocking until a signal comes, you might find better tools in the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":20815,"byte_end":20904,"line_start":18,"line_end":18,"column_start":1,"column_end":90}},{"value":"/ [`pipe`][crate::low_level::pipe] and [`iterator`][crate::iterator] modules.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":20905,"byte_end":20984,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":20985,"byte_end":20988,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":20989,"byte_end":21003,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21004,"byte_end":21007,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Doing something until terminated. This also knows by which signal it was terminated. In case","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21008,"byte_end":21104,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ multiple termination signals arrive before it is handled, it recognizes the last one.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21105,"byte_end":21194,"line_start":24,"line_end":24,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21195,"byte_end":21198,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21199,"byte_end":21210,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ use std::io::Error;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21211,"byte_end":21234,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21235,"byte_end":21258,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21259,"byte_end":21310,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21311,"byte_end":21314,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ use signal_hook::consts::signal::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21315,"byte_end":21354,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/ use signal_hook::flag as signal_flag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21355,"byte_end":21396,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21397,"byte_end":21400,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Error> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21401,"byte_end":21437,"line_start":34,"line_end":34,"column_start":1,"column_end":37}},{"value":"/     let term = Arc::new(AtomicUsize::new(0));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21438,"byte_end":21487,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/     const SIGTERM_U: usize = SIGTERM as usize;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21488,"byte_end":21538,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/     const SIGINT_U: usize = SIGINT as usize;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21539,"byte_end":21587,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/ #   #[cfg(not(windows))]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21588,"byte_end":21616,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/     const SIGQUIT_U: usize = SIGQUIT as usize;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21617,"byte_end":21667,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/     signal_flag::register_usize(SIGTERM, Arc::clone(&term), SIGTERM_U)?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21668,"byte_end":21744,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/     signal_flag::register_usize(SIGINT, Arc::clone(&term), SIGINT_U)?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21745,"byte_end":21819,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ #   #[cfg(not(windows))]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21820,"byte_end":21848,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/     signal_flag::register_usize(SIGQUIT, Arc::clone(&term), SIGQUIT_U)?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21849,"byte_end":21925,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21926,"byte_end":21929,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #   // Hack to terminate the example when run as a doc-test.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21930,"byte_end":21994,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"/ #   term.store(SIGTERM_U, Ordering::Relaxed);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":21995,"byte_end":22044,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     loop {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22045,"byte_end":22059,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/         match term.load(Ordering::Relaxed) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22060,"byte_end":22108,"line_start":48,"line_end":48,"column_start":1,"column_end":49}},{"value":"/             0 => {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22109,"byte_end":22131,"line_start":49,"line_end":49,"column_start":1,"column_end":23}},{"value":"/                 // Do some useful stuff here","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22132,"byte_end":22180,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/             }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22181,"byte_end":22198,"line_start":51,"line_end":51,"column_start":1,"column_end":18}},{"value":"/             SIGTERM_U => {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22199,"byte_end":22229,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/                 eprintln!(\"Terminating on the TERM signal\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22230,"byte_end":22294,"line_start":53,"line_end":53,"column_start":1,"column_end":65}},{"value":"/                 break;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22295,"byte_end":22321,"line_start":54,"line_end":54,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22322,"byte_end":22339,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"/             SIGINT_U => {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22340,"byte_end":22369,"line_start":56,"line_end":56,"column_start":1,"column_end":30}},{"value":"/                 eprintln!(\"Terminating on the INT signal\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22370,"byte_end":22433,"line_start":57,"line_end":57,"column_start":1,"column_end":64}},{"value":"/                 break;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22434,"byte_end":22460,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22461,"byte_end":22478,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ #           #[cfg(not(windows))]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22479,"byte_end":22515,"line_start":60,"line_end":60,"column_start":1,"column_end":37}},{"value":"/             SIGQUIT_U => {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22516,"byte_end":22546,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/                 eprintln!(\"Terminating on the QUIT signal\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22547,"byte_end":22611,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/                 break;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22612,"byte_end":22638,"line_start":63,"line_end":63,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22639,"byte_end":22656,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"/             _ => unreachable!(),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22657,"byte_end":22693,"line_start":65,"line_end":65,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22694,"byte_end":22707,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22708,"byte_end":22717,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22718,"byte_end":22721,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22722,"byte_end":22736,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22737,"byte_end":22742,"line_start":70,"line_end":70,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22743,"byte_end":22750,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22751,"byte_end":22754,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Sending a signal to self and seeing it arrived (not of a practical usage on itself):","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22755,"byte_end":22843,"line_start":73,"line_end":73,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22844,"byte_end":22847,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22848,"byte_end":22859,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/ use std::io::Error;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22860,"byte_end":22883,"line_start":76,"line_end":76,"column_start":1,"column_end":24}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22884,"byte_end":22907,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::{AtomicBool, Ordering};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22908,"byte_end":22958,"line_start":78,"line_end":78,"column_start":1,"column_end":51}},{"value":"/ use std::thread;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22959,"byte_end":22979,"line_start":79,"line_end":79,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":22980,"byte_end":23008,"line_start":80,"line_end":80,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23009,"byte_end":23012,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ use signal_hook::consts::signal::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23013,"byte_end":23052,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/ use signal_hook::low_level::raise;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23053,"byte_end":23091,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23092,"byte_end":23095,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Error> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23096,"byte_end":23132,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/     let got = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23133,"byte_end":23184,"line_start":86,"line_end":86,"column_start":1,"column_end":52}},{"value":"/ #   #[cfg(not(windows))]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23185,"byte_end":23213,"line_start":87,"line_end":87,"column_start":1,"column_end":29}},{"value":"/     signal_hook::flag::register(SIGUSR1, Arc::clone(&got))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23214,"byte_end":23278,"line_start":88,"line_end":88,"column_start":1,"column_end":65}},{"value":"/ #   #[cfg(windows)]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23279,"byte_end":23302,"line_start":89,"line_end":89,"column_start":1,"column_end":24}},{"value":"/ #   signal_hook::flag::register(SIGTERM, Arc::clone(&got))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23303,"byte_end":23367,"line_start":90,"line_end":90,"column_start":1,"column_end":65}},{"value":"/ #   #[cfg(not(windows))]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23368,"byte_end":23396,"line_start":91,"line_end":91,"column_start":1,"column_end":29}},{"value":"/     raise(SIGUSR1).unwrap();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23397,"byte_end":23429,"line_start":92,"line_end":92,"column_start":1,"column_end":33}},{"value":"/ #   #[cfg(windows)]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23430,"byte_end":23453,"line_start":93,"line_end":93,"column_start":1,"column_end":24}},{"value":"/ #   raise(SIGTERM).unwrap();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23454,"byte_end":23486,"line_start":94,"line_end":94,"column_start":1,"column_end":33}},{"value":"/     // A sleep here, because it could run the signal handler in another thread and we may not","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23487,"byte_end":23584,"line_start":95,"line_end":95,"column_start":1,"column_end":98}},{"value":"/     // see the flag right away. This is still a hack and not guaranteed to work, it is just an","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23585,"byte_end":23683,"line_start":96,"line_end":96,"column_start":1,"column_end":99}},{"value":"/     // example!","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23684,"byte_end":23703,"line_start":97,"line_end":97,"column_start":1,"column_end":20}},{"value":"/     thread::sleep(Duration::from_secs(1));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23704,"byte_end":23750,"line_start":98,"line_end":98,"column_start":1,"column_end":47}},{"value":"/     assert!(got.load(Ordering::Relaxed));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23751,"byte_end":23796,"line_start":99,"line_end":99,"column_start":1,"column_end":46}},{"value":"/     Ok(())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23797,"byte_end":23811,"line_start":100,"line_end":100,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23812,"byte_end":23817,"line_start":101,"line_end":101,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23818,"byte_end":23825,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23826,"byte_end":23829,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ Reloading a configuration on `SIGHUP` (which is a common behaviour of many UNIX daemons,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23830,"byte_end":23922,"line_start":104,"line_end":104,"column_start":1,"column_end":93}},{"value":"/ together with reopening the log file).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23923,"byte_end":23965,"line_start":105,"line_end":105,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23966,"byte_end":23969,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23970,"byte_end":23981,"line_start":107,"line_end":107,"column_start":1,"column_end":12}},{"value":"/ use std::io::Error;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":23982,"byte_end":24005,"line_start":108,"line_end":108,"column_start":1,"column_end":24}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24006,"byte_end":24029,"line_start":109,"line_end":109,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::{AtomicBool, Ordering};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24030,"byte_end":24080,"line_start":110,"line_end":110,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24081,"byte_end":24084,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ use signal_hook::consts::signal::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24085,"byte_end":24124,"line_start":112,"line_end":112,"column_start":1,"column_end":40}},{"value":"/ use signal_hook::flag as signal_flag;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24125,"byte_end":24166,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24167,"byte_end":24170,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Error> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24171,"byte_end":24207,"line_start":115,"line_end":115,"column_start":1,"column_end":37}},{"value":"/     // We start with true, to load the configuration in the very first iteration too.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24208,"byte_end":24297,"line_start":116,"line_end":116,"column_start":1,"column_end":90}},{"value":"/     let reload = Arc::new(AtomicBool::new(true));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24298,"byte_end":24351,"line_start":117,"line_end":117,"column_start":1,"column_end":54}},{"value":"/     let term = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24352,"byte_end":24404,"line_start":118,"line_end":118,"column_start":1,"column_end":53}},{"value":"/ #   #[cfg(not(windows))]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24405,"byte_end":24433,"line_start":119,"line_end":119,"column_start":1,"column_end":29}},{"value":"/     signal_flag::register(SIGHUP, Arc::clone(&reload))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24434,"byte_end":24494,"line_start":120,"line_end":120,"column_start":1,"column_end":61}},{"value":"/     signal_flag::register(SIGINT, Arc::clone(&term))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24495,"byte_end":24553,"line_start":121,"line_end":121,"column_start":1,"column_end":59}},{"value":"/     signal_flag::register(SIGTERM, Arc::clone(&term))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24554,"byte_end":24613,"line_start":122,"line_end":122,"column_start":1,"column_end":60}},{"value":"/ #   #[cfg(not(windows))]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24614,"byte_end":24642,"line_start":123,"line_end":123,"column_start":1,"column_end":29}},{"value":"/     signal_flag::register(SIGQUIT, Arc::clone(&term))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24643,"byte_end":24702,"line_start":124,"line_end":124,"column_start":1,"column_end":60}},{"value":"/     while !term.load(Ordering::Relaxed) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24703,"byte_end":24748,"line_start":125,"line_end":125,"column_start":1,"column_end":46}},{"value":"/         // Using swap here, not load, to reset it back to false once it is reloaded.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24749,"byte_end":24837,"line_start":126,"line_end":126,"column_start":1,"column_end":89}},{"value":"/         if reload.swap(false, Ordering::Relaxed) {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24838,"byte_end":24892,"line_start":127,"line_end":127,"column_start":1,"column_end":55}},{"value":"/             // Reload the config here","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24893,"byte_end":24934,"line_start":128,"line_end":128,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24935,"byte_end":24940,"line_start":129,"line_end":129,"column_start":1,"column_end":6}},{"value":"/ #           // Hiden hack to make the example terminate when run as doc-test. Not part of the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":24941,"byte_end":25038,"line_start":130,"line_end":130,"column_start":1,"column_end":98}},{"value":"/ #           // real code.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":25039,"byte_end":25068,"line_start":131,"line_end":131,"column_start":1,"column_end":30}},{"value":"/ #           term.store(true, Ordering::Relaxed);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":25069,"byte_end":25121,"line_start":132,"line_end":132,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":25122,"byte_end":25135,"line_start":133,"line_end":133,"column_start":1,"column_end":14}},{"value":"/         // Serve one request","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":25136,"byte_end":25168,"line_start":134,"line_end":134,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":25169,"byte_end":25178,"line_start":135,"line_end":135,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":25179,"byte_end":25193,"line_start":136,"line_end":136,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":25194,"byte_end":25199,"line_start":137,"line_end":137,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":25200,"byte_end":25207,"line_start":138,"line_end":138,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":16},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":25526,"byte_end":25534,"line_start":153,"line_end":153,"column_start":8,"column_end":16},"name":"register","qualname":"::flag::register","value":"pub fn register(c_int, Arc<AtomicBool>) -> Result<SigId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Registers an action to set the flag to `true` whenever the given signal arrives.","sig":null,"attributes":[{"value":"/ Registers an action to set the flag to `true` whenever the given signal arrives.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":25370,"byte_end":25454,"line_start":148,"line_end":148,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":25455,"byte_end":25458,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":25459,"byte_end":25471,"line_start":150,"line_end":150,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":25472,"byte_end":25475,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ If the signal is one of the forbidden.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":25476,"byte_end":25518,"line_start":152,"line_end":152,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":26056,"byte_end":26070,"line_start":162,"line_end":162,"column_start":8,"column_end":22},"name":"register_usize","qualname":"::flag::register_usize","value":"pub fn register_usize(c_int, Arc<AtomicUsize>, usize) -> Result<SigId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Registers an action to set the flag to the given value whenever the signal arrives.\n","sig":null,"attributes":[{"value":"/ Registers an action to set the flag to the given value whenever the signal arrives.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":25961,"byte_end":26048,"line_start":161,"line_end":161,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":27387,"byte_end":27416,"line_start":186,"line_end":186,"column_start":8,"column_end":37},"name":"register_conditional_shutdown","qualname":"::flag::register_conditional_shutdown","value":"pub fn register_conditional_shutdown(c_int, c_int, Arc<AtomicBool>)\n-> Result<SigId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Terminate the application on a signal if the given condition is true.","sig":null,"attributes":[{"value":"/ Terminate the application on a signal if the given condition is true.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":26241,"byte_end":26314,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":26315,"byte_end":26318,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ This can be used for different use cases. One of them (with the condition being always true) is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":26319,"byte_end":26418,"line_start":168,"line_end":168,"column_start":1,"column_end":100}},{"value":"/ just unconditionally terminate on the given signal.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":26419,"byte_end":26474,"line_start":169,"line_end":169,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":26475,"byte_end":26478,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Another is being able to turn on and off the behaviour by the shared flag.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":26479,"byte_end":26557,"line_start":171,"line_end":171,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":26558,"byte_end":26561,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ The last one is handling double CTRL+C ‒ if the user presses CTRL+C, we would like to start a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":26562,"byte_end":26661,"line_start":173,"line_end":173,"column_start":1,"column_end":98}},{"value":"/ graceful shutdown. But if anything ever gets stuck in the shutdown, second CTRL+C (or other","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":26662,"byte_end":26757,"line_start":174,"line_end":174,"column_start":1,"column_end":96}},{"value":"/ such termination signal) should terminate the application without further delay.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":26758,"byte_end":26842,"line_start":175,"line_end":175,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":26843,"byte_end":26846,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ To do that, one can combine this with [`register`]. On the first run, the flag is `false` and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":26847,"byte_end":26944,"line_start":177,"line_end":177,"column_start":1,"column_end":98}},{"value":"/ this doesn't terminate. But then the flag is set to true during the first run and „arms“ the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":26945,"byte_end":27045,"line_start":178,"line_end":178,"column_start":1,"column_end":97}},{"value":"/ shutdown on the second run. Note that it matters in which order the actions are registered (the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":27046,"byte_end":27145,"line_start":179,"line_end":179,"column_start":1,"column_end":100}},{"value":"/ shutdown must go first). And yes, this also allows asking the user „Do you want to terminate“","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":27146,"byte_end":27247,"line_start":180,"line_end":180,"column_start":1,"column_end":98}},{"value":"/ and disarming the abrupt shutdown if the user answers „No“.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":27248,"byte_end":27315,"line_start":181,"line_end":181,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":27316,"byte_end":27319,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":27320,"byte_end":27332,"line_start":183,"line_end":183,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":27333,"byte_end":27336,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ If the signal is one of the forbidden.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":27337,"byte_end":27379,"line_start":185,"line_end":185,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":28472,"byte_end":28500,"line_start":217,"line_end":217,"column_start":8,"column_end":36},"name":"register_conditional_default","qualname":"::flag::register_conditional_default","value":"pub fn register_conditional_default(c_int, Arc<AtomicBool>)\n-> Result<SigId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Conditionally runs an emulation of the default action on the given signal.","sig":null,"attributes":[{"value":"/ Conditionally runs an emulation of the default action on the given signal.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":27697,"byte_end":27775,"line_start":199,"line_end":199,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":27776,"byte_end":27779,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ If the provided condition is true at the time of invoking the signal handler, the equivalent of","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":27780,"byte_end":27879,"line_start":201,"line_end":201,"column_start":1,"column_end":100}},{"value":"/ the default action of the given signal is run. It is a bit similar to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":27880,"byte_end":27953,"line_start":202,"line_end":202,"column_start":1,"column_end":74}},{"value":"/ [`register_conditional_shutdown`], except that it doesn't terminate for non-termination","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":27954,"byte_end":28045,"line_start":203,"line_end":203,"column_start":1,"column_end":92}},{"value":"/ signals, it runs their default handler.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":28046,"byte_end":28089,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":28090,"byte_end":28093,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":28094,"byte_end":28106,"line_start":206,"line_end":206,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":28107,"byte_end":28110,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ If the signal is one of the forbidden","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":28111,"byte_end":28152,"line_start":208,"line_end":208,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":28153,"byte_end":28156,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":28157,"byte_end":28169,"line_start":210,"line_end":210,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":28170,"byte_end":28173,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ Similarly to the [`emulate_default_handler`][low_level::emulate_default_handler] function, this","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":28174,"byte_end":28273,"line_start":212,"line_end":212,"column_start":1,"column_end":100}},{"value":"/ one looks the signal up in a table. If it is unknown, an error is returned.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":28274,"byte_end":28353,"line_start":213,"line_end":213,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":28354,"byte_end":28357,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ Additionally to that, any errors that can be caused by a registration of a handler can happen","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":28358,"byte_end":28455,"line_start":215,"line_end":215,"column_start":1,"column_end":98}},{"value":"/ too.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/flag.rs","byte_start":28456,"byte_end":28464,"line_start":216,"line_end":216,"column_start":1,"column_end":9}}]},{"kind":"Mod","id":{"krate":0,"index":25},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iterator","qualname":"::iterator","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":145},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":547},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":577},{"krate":0,"index":216},{"krate":0,"index":220},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":244},{"krate":0,"index":249},{"krate":0,"index":254}],"decl_id":null,"docs":" An iterator over incoming signals.","sig":null,"attributes":[{"value":"cfg(all(not(windows), feature = \"iterator\"))","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18028,"byte_end":18075,"line_start":348,"line_end":348,"column_start":1,"column_end":48}},{"value":"/ An iterator over incoming signals.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":30710,"byte_end":30748,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":30749,"byte_end":30752,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This provides a higher abstraction over the signals, providing","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":30753,"byte_end":30819,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"/ the [`SignalsInfo`] structure which is able to iterate over the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":30820,"byte_end":30887,"line_start":4,"line_end":4,"column_start":1,"column_end":68}},{"value":"/ incoming signals. The structure is parametrized by an","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":30888,"byte_end":30945,"line_start":5,"line_end":5,"column_start":1,"column_end":58}},{"value":"/ [`Exfiltrator`][self::exfiltrator::Exfiltrator], which specifies what information is returned","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":30946,"byte_end":31043,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ for each delivered signal. Note that some exfiltrators are behind a feature flag.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31044,"byte_end":31129,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31130,"byte_end":31133,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The [`Signals`] is a type alias for the common case when it is enough to get the signal number.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31134,"byte_end":31233,"line_start":9,"line_end":9,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31234,"byte_end":31237,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This module (and everything in it) is turned by the `iterator` feature. It is **on** by","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31238,"byte_end":31329,"line_start":11,"line_end":11,"column_start":1,"column_end":92}},{"value":"/ default, the possibility to turn off is mostly possible for very special purposes (compiling on","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31330,"byte_end":31429,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ `<rustc-1.36`, minimizing the amount of code compiled, …). In a sense, this is the highest","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31430,"byte_end":31526,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ level abstraction of the crate and the API expected to be used by most of the people.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31527,"byte_end":31616,"line_start":14,"line_end":14,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31617,"byte_end":31620,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31621,"byte_end":31635,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31636,"byte_end":31639,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31640,"byte_end":31651,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ extern crate libc;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31652,"byte_end":31674,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/ extern crate signal_hook;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31675,"byte_end":31704,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31705,"byte_end":31708,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ use std::io::Error;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31709,"byte_end":31732,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31733,"byte_end":31736,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ use signal_hook::consts::signal::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31737,"byte_end":31776,"line_start":24,"line_end":24,"column_start":1,"column_end":40}},{"value":"/ use signal_hook::iterator::Signals;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31777,"byte_end":31816,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31817,"byte_end":31820,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Error> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31821,"byte_end":31857,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/     let mut signals = Signals::new(&[","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31858,"byte_end":31899,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/         SIGHUP,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31900,"byte_end":31919,"line_start":29,"line_end":29,"column_start":1,"column_end":20}},{"value":"/         SIGTERM,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31920,"byte_end":31940,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/         SIGINT,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31941,"byte_end":31960,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/         SIGQUIT,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31961,"byte_end":31981,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"/ #       SIGUSR1,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":31982,"byte_end":32002,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/     ])?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32003,"byte_end":32015,"line_start":34,"line_end":34,"column_start":1,"column_end":13}},{"value":"/ #   // A trick to terminate the example when run as doc-test. Not part of the real code.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32016,"byte_end":32108,"line_start":35,"line_end":35,"column_start":1,"column_end":93}},{"value":"/ #   signal_hook::low_level::raise(SIGUSR1).unwrap();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32109,"byte_end":32165,"line_start":36,"line_end":36,"column_start":1,"column_end":57}},{"value":"/     'outer: loop {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32166,"byte_end":32188,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/         // Pick up signals that arrived since last time","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32189,"byte_end":32248,"line_start":38,"line_end":38,"column_start":1,"column_end":60}},{"value":"/         for signal in signals.pending() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32249,"byte_end":32294,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"/             match signal as libc::c_int {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32295,"byte_end":32340,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/                 SIGHUP => {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32341,"byte_end":32372,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/                     // Reload configuration","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32373,"byte_end":32420,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/                     // Reopen the log file","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32421,"byte_end":32467,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/                 }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32468,"byte_end":32489,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/                 SIGTERM | SIGINT | SIGQUIT => {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32490,"byte_end":32541,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/                     break 'outer;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32542,"byte_end":32579,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/                 },","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32580,"byte_end":32602,"line_start":47,"line_end":47,"column_start":1,"column_end":23}},{"value":"/ #               SIGUSR1 => return Ok(()),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32603,"byte_end":32648,"line_start":48,"line_end":48,"column_start":1,"column_end":46}},{"value":"/                 _ => unreachable!(),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32649,"byte_end":32689,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32690,"byte_end":32707,"line_start":50,"line_end":50,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32708,"byte_end":32721,"line_start":51,"line_end":51,"column_start":1,"column_end":14}},{"value":"/         // Do some bit of work ‒ something with upper limit on waiting, so we don't block","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32722,"byte_end":32817,"line_start":52,"line_end":52,"column_start":1,"column_end":94}},{"value":"/         // forever with a SIGTERM already waiting.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32818,"byte_end":32872,"line_start":53,"line_end":53,"column_start":1,"column_end":55}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32873,"byte_end":32882,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/     println!(\"Terminating. Bye bye\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32883,"byte_end":32924,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/     Ok(())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32925,"byte_end":32939,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32940,"byte_end":32945,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32946,"byte_end":32953,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":26},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"backend","qualname":"::iterator::backend","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":483},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":69},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":391},{"krate":0,"index":397},{"krate":0,"index":395},{"krate":0,"index":82},{"krate":0,"index":399},{"krate":0,"index":405},{"krate":0,"index":88},{"krate":0,"index":409},{"krate":0,"index":413},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":111},{"krate":0,"index":123},{"krate":0,"index":128},{"krate":0,"index":138},{"krate":0,"index":141}],"decl_id":null,"docs":" A backend module for implementing the iterator like\n [`iterator`][crate::iterator] module and the asynchronous\n adapter crates.","sig":null,"attributes":[{"value":"/ A backend module for implementing the iterator like","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":42475,"byte_end":42530,"line_start":1,"line_end":1,"column_start":1,"column_end":56}},{"value":"/ [`iterator`][crate::iterator] module and the asynchronous","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":42531,"byte_end":42592,"line_start":2,"line_end":2,"column_start":1,"column_end":62}},{"value":"/ adapter crates.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":42593,"byte_end":42612,"line_start":3,"line_end":3,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":42613,"byte_end":42616,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains generic types which abstract over the concrete","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":42617,"byte_end":42688,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ IO type for the self-pipe. The motivation for having this abstraction","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":42689,"byte_end":42762,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/ are the adapter crates for different asynchronous runtimes. The runtimes","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":42763,"byte_end":42839,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ provide their own wrappers for [`std::os::unix::net::UnixStream`]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":42840,"byte_end":42909,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ which should be used as the internal self pipe. But large parts of the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":42910,"byte_end":42984,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ remaining functionality doesn't depend directly onto the IO type and can","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":42985,"byte_end":43061,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ be reused.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":43062,"byte_end":43076,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":43077,"byte_end":43080,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See also the [`SignalDelivery::with_pipe`] method for more information","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":43081,"byte_end":43155,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ about requirements the IO types have to fulfill.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":43156,"byte_end":43208,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":43209,"byte_end":43212,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ As a regular user you shouldn't need to use the types in this module.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":43213,"byte_end":43286,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/ Use the [`Signals`][crate::iterator::Signals] struct or one of the types","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":43287,"byte_end":43363,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ contained in the adapter libraries instead.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":43364,"byte_end":43411,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":391},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":47574,"byte_end":47580,"line_start":158,"line_end":158,"column_start":12,"column_end":18},"name":"Handle","qualname":"::iterator::backend::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"decl_id":null,"docs":" A struct to control an instance of an associated type\n (like for example [`Signals`][super::Signals]).","sig":null,"attributes":[{"value":"/ A struct to control an instance of an associated type","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":47185,"byte_end":47242,"line_start":150,"line_end":150,"column_start":1,"column_end":58}},{"value":"/ (like for example [`Signals`][super::Signals]).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":47243,"byte_end":47294,"line_start":151,"line_end":151,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":47295,"byte_end":47298,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ It allows to register more signal handlers and to shutdown the signal","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":47299,"byte_end":47372,"line_start":153,"line_end":153,"column_start":1,"column_end":74}},{"value":"/ delivery. You can [`clone`][Handle::clone] this type which isn't a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":47373,"byte_end":47443,"line_start":154,"line_end":154,"column_start":1,"column_end":71}},{"value":"/ very expensive operation. The cloned instances can be shared between","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":47444,"byte_end":47516,"line_start":155,"line_end":155,"column_start":1,"column_end":73}},{"value":"/ multiple threads.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":47517,"byte_end":47538,"line_start":156,"line_end":156,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":48776,"byte_end":48786,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"add_signal","qualname":"<Handle>::add_signal","value":"pub fn add_signal(&Self, c_int) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Registers another signal to the set watched by the associated instance.","sig":null,"attributes":[{"value":"/ Registers another signal to the set watched by the associated instance.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":47974,"byte_end":48049,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":48054,"byte_end":48057,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":48062,"byte_end":48073,"line_start":178,"line_end":178,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":48078,"byte_end":48081,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ * This is safe to call concurrently from whatever thread.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":48086,"byte_end":48147,"line_start":180,"line_end":180,"column_start":5,"column_end":66}},{"value":"/ * This is *not* safe to call from within a signal handler.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":48152,"byte_end":48214,"line_start":181,"line_end":181,"column_start":5,"column_end":67}},{"value":"/ * If the signal number was already registered previously, this is a no-op.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":48219,"byte_end":48297,"line_start":182,"line_end":182,"column_start":5,"column_end":83}},{"value":"/ * If this errors, the original set of signals is left intact.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":48302,"byte_end":48367,"line_start":183,"line_end":183,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":48372,"byte_end":48375,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":48380,"byte_end":48392,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":48397,"byte_end":48400,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ * If the given signal is [forbidden][crate::FORBIDDEN].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":48405,"byte_end":48464,"line_start":187,"line_end":187,"column_start":5,"column_end":64}},{"value":"/ * If the signal number is negative or larger than internal limit. The limit should be","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":48469,"byte_end":48558,"line_start":188,"line_end":188,"column_start":5,"column_end":94}},{"value":"/   larger than any supported signal the OS supports.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":48563,"byte_end":48618,"line_start":189,"line_end":189,"column_start":5,"column_end":60}},{"value":"/ * If the relevant [`Exfiltrator`] does not support this particular signal. The default","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":48623,"byte_end":48713,"line_start":190,"line_end":190,"column_start":5,"column_end":95}},{"value":"/   [`SignalOnly`] one supports all signals.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":48718,"byte_end":48764,"line_start":191,"line_end":191,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":49842,"byte_end":49847,"line_start":219,"line_end":219,"column_start":12,"column_end":17},"name":"close","qualname":"<Handle>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the associated instance.","sig":null,"attributes":[{"value":"/ Closes the associated instance.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":49196,"byte_end":49231,"line_start":206,"line_end":206,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":49236,"byte_end":49239,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This is meant to signalize termination of the signal delivery process.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":49244,"byte_end":49318,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ After calling close:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":49323,"byte_end":49347,"line_start":209,"line_end":209,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":49352,"byte_end":49355,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ * [`is_closed`][Handle::is_closed] will return true.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":49360,"byte_end":49416,"line_start":211,"line_end":211,"column_start":5,"column_end":61}},{"value":"/ * All currently blocking operations of associated instances","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":49421,"byte_end":49484,"line_start":212,"line_end":212,"column_start":5,"column_end":68}},{"value":"/   are interrupted and terminate.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":49489,"byte_end":49525,"line_start":213,"line_end":213,"column_start":5,"column_end":41}},{"value":"/ * Any further operations will not block.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":49530,"byte_end":49574,"line_start":214,"line_end":214,"column_start":5,"column_end":49}},{"value":"/ * Further signals may or may not be returned from the iterators. However, if any are","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":49579,"byte_end":49667,"line_start":215,"line_end":215,"column_start":5,"column_end":93}},{"value":"/   returned, these are real signals that happened.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":49672,"byte_end":49725,"line_start":216,"line_end":216,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":49730,"byte_end":49733,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The goal is to be able to shut down any background thread that handles only the signals.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":49738,"byte_end":49830,"line_start":218,"line_end":218,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":50044,"byte_end":50053,"line_start":227,"line_end":227,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Handle>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is it closed?","sig":null,"attributes":[{"value":"/ Is it closed?","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":49969,"byte_end":49986,"line_start":224,"line_end":224,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":49991,"byte_end":49994,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ See [`close`][Handle::close].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":49999,"byte_end":50032,"line_start":226,"line_end":226,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":399},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":50373,"byte_end":50387,"line_start":237,"line_end":237,"column_start":12,"column_end":26},"name":"SignalDelivery","qualname":"::iterator::backend::SignalDelivery","value":"SignalDelivery {  }","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404}],"decl_id":null,"docs":" A struct for delivering received signals to the main program flow.\n The self-pipe IO type is generic. See the\n [`with_pipe`][SignalDelivery::with_pipe] method for requirements\n for the IO type.\n","sig":null,"attributes":[{"value":"/ A struct for delivering received signals to the main program flow.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":50138,"byte_end":50208,"line_start":232,"line_end":232,"column_start":1,"column_end":71}},{"value":"/ The self-pipe IO type is generic. See the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":50209,"byte_end":50254,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ [`with_pipe`][SignalDelivery::with_pipe] method for requirements","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":50255,"byte_end":50323,"line_start":234,"line_end":234,"column_start":1,"column_end":69}},{"value":"/ for the IO type.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":50324,"byte_end":50344,"line_start":235,"line_end":235,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":51345,"byte_end":51354,"line_start":263,"line_end":263,"column_start":12,"column_end":21},"name":"with_pipe","qualname":"<SignalDelivery<R, E>>::with_pipe","value":"pub fn with_pipe<I, S, W>(R, W, E, I) -> Result<Self, Error> where\nI: IntoIterator<Item = S>, S: Borrow<c_int>, W: 'static + AsRawFd + Debug +\nSend + Sync","parent":null,"children":[],"decl_id":null,"docs":" Creates the `SignalDelivery` structure.","sig":null,"attributes":[{"value":"/ Creates the `SignalDelivery` structure.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":50579,"byte_end":50622,"line_start":247,"line_end":247,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":50627,"byte_end":50630,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ The read and write arguments must be the ends of a suitable pipe type. These are used","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":50635,"byte_end":50724,"line_start":249,"line_end":249,"column_start":5,"column_end":94}},{"value":"/ for communication between the signal handler and main program flow.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":50729,"byte_end":50800,"line_start":250,"line_end":250,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":50805,"byte_end":50808,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Registers all the signals listed. The same restrictions (panics, errors) apply as with","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":50813,"byte_end":50903,"line_start":252,"line_end":252,"column_start":5,"column_end":95}},{"value":"/ [`add_signal`][Handle::add_signal].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":50908,"byte_end":50947,"line_start":253,"line_end":253,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":50952,"byte_end":50955,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Requirements for the pipe type","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":50960,"byte_end":50996,"line_start":255,"line_end":255,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":51001,"byte_end":51004,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ * Must support [`send`](https://man7.org/linux/man-pages/man2/send.2.html) for","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":51009,"byte_end":51091,"line_start":257,"line_end":257,"column_start":5,"column_end":87}},{"value":"/   asynchronously writing bytes to the write end","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":51096,"byte_end":51147,"line_start":258,"line_end":258,"column_start":5,"column_end":56}},{"value":"/ * Must support [`recv`](https://man7.org/linux/man-pages/man2/recv.2.html) for","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":51152,"byte_end":51234,"line_start":259,"line_end":259,"column_start":5,"column_end":87}},{"value":"/   reading bytes from the read end","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":51239,"byte_end":51276,"line_start":260,"line_end":260,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":51281,"byte_end":51284,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ So UnixStream is a good choice for this.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":51289,"byte_end":51333,"line_start":262,"line_end":262,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":52368,"byte_end":52376,"line_start":290,"line_end":290,"column_start":12,"column_end":20},"name":"get_read","qualname":"<SignalDelivery<R, E>>::get_read","value":"pub fn get_read(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the read end of the self pipe","sig":null,"attributes":[{"value":"/ Get a reference to the read end of the self pipe","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":51954,"byte_end":52006,"line_start":283,"line_end":283,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":52011,"byte_end":52014,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ You may use this method to register the underlying file descriptor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":52019,"byte_end":52089,"line_start":285,"line_end":285,"column_start":5,"column_end":75}},{"value":"/ with an eventing system (e. g. epoll) to get notified if there are","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":52094,"byte_end":52164,"line_start":286,"line_end":286,"column_start":5,"column_end":75}},{"value":"/ bytes in the pipe. If the event system reports the file descriptor","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":52169,"byte_end":52239,"line_start":287,"line_end":287,"column_start":5,"column_end":75}},{"value":"/ ready for reading you can then call [`pending`][SignalDelivery::pending]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":52244,"byte_end":52320,"line_start":288,"line_end":288,"column_start":5,"column_end":81}},{"value":"/ to get the arrived signals.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":52325,"byte_end":52356,"line_start":289,"line_end":289,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":52605,"byte_end":52617,"line_start":298,"line_end":298,"column_start":12,"column_end":24},"name":"get_read_mut","qualname":"<SignalDelivery<R, E>>::get_read_mut","value":"pub fn get_read_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the read end of the self pipe","sig":null,"attributes":[{"value":"/ Get a mutable reference to the read end of the self pipe","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":52422,"byte_end":52482,"line_start":294,"line_end":294,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":52487,"byte_end":52490,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ See the [`get_read`][SignalDelivery::get_read] method for some additional","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":52495,"byte_end":52572,"line_start":296,"line_end":296,"column_start":5,"column_end":82}},{"value":"/ information.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":52577,"byte_end":52593,"line_start":297,"line_end":297,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":53964,"byte_end":53971,"line_start":331,"line_end":331,"column_start":12,"column_end":19},"name":"pending","qualname":"<SignalDelivery<R, E>>::pending","value":"pub fn pending(&mut Self) -> Pending<E>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of already received signals.","sig":null,"attributes":[{"value":"/ Returns an iterator of already received signals.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":53422,"byte_end":53474,"line_start":322,"line_end":322,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":53479,"byte_end":53482,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This returns an iterator over all the signal numbers of the signals received since last","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":53487,"byte_end":53578,"line_start":324,"line_end":324,"column_start":5,"column_end":96}},{"value":"/ time they were read (out of the set registered by this `SignalDelivery` instance). Note","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":53583,"byte_end":53674,"line_start":325,"line_end":325,"column_start":5,"column_end":96}},{"value":"/ that they are returned in arbitrary order and a signal number is returned only once even","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":53679,"byte_end":53771,"line_start":326,"line_end":326,"column_start":5,"column_end":97}},{"value":"/ if it was received multiple times.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":53776,"byte_end":53814,"line_start":327,"line_end":327,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":53819,"byte_end":53822,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ This method returns immediately (does not block) and may produce an empty iterator if","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":53827,"byte_end":53916,"line_start":329,"line_end":329,"column_start":5,"column_end":94}},{"value":"/ there are no signals ready.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":53921,"byte_end":53952,"line_start":330,"line_end":330,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":54664,"byte_end":54676,"line_start":345,"line_end":345,"column_start":12,"column_end":24},"name":"poll_pending","qualname":"<SignalDelivery<R, E>>::poll_pending","value":"pub fn poll_pending<F>(&mut Self, &mut F) -> Result<Option<Pending<E>>, Error>\nwhere F: FnMut(&mut R) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Checks the reading end of the self pipe for available signals.","sig":null,"attributes":[{"value":"/ Checks the reading end of the self pipe for available signals.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":54080,"byte_end":54146,"line_start":336,"line_end":336,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":54151,"byte_end":54154,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ If there are no signals available or this instance was already closed it returns","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":54159,"byte_end":54243,"line_start":338,"line_end":338,"column_start":5,"column_end":89}},{"value":"/ [`Option::None`]. If there are some signals it returns a [`Pending`]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":54248,"byte_end":54320,"line_start":339,"line_end":339,"column_start":5,"column_end":77}},{"value":"/ instance wrapped inside a [`Option::Some`]. However, due to implementation details,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":54325,"byte_end":54412,"line_start":340,"line_end":340,"column_start":5,"column_end":92}},{"value":"/ this still can produce an empty iterator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":54417,"byte_end":54462,"line_start":341,"line_end":341,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":54467,"byte_end":54470,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ This method doesn't check the reading end by itself but uses the passed in callback.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":54475,"byte_end":54563,"line_start":343,"line_end":343,"column_start":5,"column_end":93}},{"value":"/ This method blocks if and only if the callback blocks trying to read some bytes.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":54568,"byte_end":54652,"line_start":344,"line_end":344,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":55258,"byte_end":55264,"line_start":364,"line_end":364,"column_start":12,"column_end":18},"name":"handle","qualname":"<SignalDelivery<R, E>>::handle","value":"pub fn handle(&Self) -> Handle","parent":null,"children":[],"decl_id":null,"docs":" Get a [`Handle`] for this `SignalDelivery` instance.","sig":null,"attributes":[{"value":"/ Get a [`Handle`] for this `SignalDelivery` instance.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":55080,"byte_end":55136,"line_start":360,"line_end":360,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":55141,"byte_end":55144,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ This can be used to add further signals or close the whole","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":55149,"byte_end":55211,"line_start":362,"line_end":362,"column_start":5,"column_end":67}},{"value":"/ signal delivery mechanism.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":55216,"byte_end":55246,"line_start":363,"line_end":363,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":409},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":55468,"byte_end":55475,"line_start":373,"line_end":373,"column_start":12,"column_end":19},"name":"Pending","qualname":"::iterator::backend::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412}],"decl_id":null,"docs":" The iterator of one batch of signals.","sig":null,"attributes":[{"value":"/ The iterator of one batch of signals.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":55321,"byte_end":55362,"line_start":369,"line_end":369,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":55363,"byte_end":55366,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`pending`][SignalDelivery::pending] method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":55367,"byte_end":55439,"line_start":371,"line_end":371,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":113},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":56369,"byte_end":56375,"line_start":409,"line_end":409,"column_start":5,"column_end":11},"name":"Signal","qualname":"::iterator::backend::PollResult::Signal","value":"PollResult::Signal(O)","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" A signal arrived\n","sig":null,"attributes":[{"value":"/ A signal arrived","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":56344,"byte_end":56364,"line_start":408,"line_end":408,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":116},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":56457,"byte_end":56464,"line_start":411,"line_end":411,"column_start":5,"column_end":12},"name":"Pending","qualname":"::iterator::backend::PollResult::Pending","value":"PollResult::Pending","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" There are no signals yet but there may arrive some in the future\n","sig":null,"attributes":[{"value":"/ There are no signals yet but there may arrive some in the future","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":56384,"byte_end":56452,"line_start":410,"line_end":410,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":118},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":56552,"byte_end":56558,"line_start":413,"line_end":413,"column_start":5,"column_end":11},"name":"Closed","qualname":"::iterator::backend::PollResult::Closed","value":"PollResult::Closed","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" The iterator was closed. There won't be any signals reported from now on.\n","sig":null,"attributes":[{"value":"/ The iterator was closed. There won't be any signals reported from now on.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":56470,"byte_end":56547,"line_start":412,"line_end":412,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":120},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":56626,"byte_end":56629,"line_start":415,"line_end":415,"column_start":5,"column_end":8},"name":"Err","qualname":"::iterator::backend::PollResult::Err","value":"PollResult::Err(Error)","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" An error happened during polling for arrived signals.\n","sig":null,"attributes":[{"value":"/ An error happened during polling for arrived signals.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":56564,"byte_end":56621,"line_start":414,"line_end":414,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":111},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":56324,"byte_end":56334,"line_start":407,"line_end":407,"column_start":10,"column_end":20},"name":"PollResult","qualname":"::iterator::backend::PollResult","value":"pub enum PollResult<O> {\n\n    /// A signal arrived\n    Signal(O),\n\n    /// There are no signals yet but there may arrive some in the future\n    Pending,\n\n    /// The iterator was closed. There won't be any signals reported from now on.\n    Closed,\n\n    /// An error happened during polling for arrived signals.\n    Err(Error),\n}","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120}],"decl_id":null,"docs":" Possible results of the [`poll_signal`][SignalIterator::poll_signal] function.\n","sig":null,"attributes":[{"value":"/ Possible results of the [`poll_signal`][SignalIterator::poll_signal] function.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":56232,"byte_end":56314,"line_start":406,"line_end":406,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":123},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":56698,"byte_end":56712,"line_start":419,"line_end":419,"column_start":12,"column_end":26},"name":"SignalIterator","qualname":"::iterator::backend::SignalIterator","value":"SignalIterator {  }","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127}],"decl_id":null,"docs":" An infinite iterator of received signals.\n","sig":null,"attributes":[{"value":"/ An infinite iterator of received signals.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":56641,"byte_end":56686,"line_start":418,"line_end":418,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":56955,"byte_end":56958,"line_start":427,"line_end":427,"column_start":12,"column_end":15},"name":"new","qualname":"<SignalIterator<SD, E>>::new","value":"pub fn new<R>(SD) -> Self where SD: BorrowMut<SignalDelivery<R, E>>,\nR: 'static + AsRawFd + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Create a new infinite iterator for signals registered with the passed\n in [`SignalDelivery`] instance.\n","sig":null,"attributes":[{"value":"/ Create a new infinite iterator for signals registered with the passed","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":56830,"byte_end":56903,"line_start":425,"line_end":425,"column_start":5,"column_end":78}},{"value":"/ in [`SignalDelivery`] instance.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":56908,"byte_end":56943,"line_start":426,"line_end":426,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":57994,"byte_end":58005,"line_start":447,"line_end":447,"column_start":12,"column_end":23},"name":"poll_signal","qualname":"<SignalIterator<SD, E>>::poll_signal","value":"pub fn poll_signal<R, F>(&mut Self, &mut F) -> PollResult<E::Output> where\nSD: BorrowMut<SignalDelivery<R, E>>, R: 'static + AsRawFd + Send + Sync,\nF: FnMut(&mut R) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Return a signal if there is one or tell the caller that there is none at the moment.","sig":null,"attributes":[{"value":"/ Return a signal if there is one or tell the caller that there is none at the moment.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":57185,"byte_end":57273,"line_start":436,"line_end":436,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":57278,"byte_end":57281,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ You have to pass in a callback which checks the underlying reading end of the pipe if","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":57286,"byte_end":57375,"line_start":438,"line_end":438,"column_start":5,"column_end":94}},{"value":"/ there may be any pending signals. This callback may or may not block. If the callback","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":57380,"byte_end":57469,"line_start":439,"line_end":439,"column_start":5,"column_end":94}},{"value":"/ returns [`true`] this method will try to fetch the next signal and return it as a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":57474,"byte_end":57559,"line_start":440,"line_end":440,"column_start":5,"column_end":90}},{"value":"/ [`PollResult::Signal`]. If the callback returns [`false`] the method will return","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":57564,"byte_end":57648,"line_start":441,"line_end":441,"column_start":5,"column_end":89}},{"value":"/ [`PollResult::Pending`] and assume it will be called again at a later point in time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":57653,"byte_end":57741,"line_start":442,"line_end":442,"column_start":5,"column_end":93}},{"value":"/ The callback may be called any number of times by this function.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":57746,"byte_end":57814,"line_start":443,"line_end":443,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":57819,"byte_end":57822,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ If the iterator was closed by the [`close`][Handle::close] method of the associtated","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":57827,"byte_end":57915,"line_start":445,"line_end":445,"column_start":5,"column_end":93}},{"value":"/ [`Handle`] this method will return [`PollResult::Closed`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":57920,"byte_end":57982,"line_start":446,"line_end":446,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":59174,"byte_end":59180,"line_start":475,"line_end":475,"column_start":12,"column_end":18},"name":"handle","qualname":"<SignalIterator<SD, E>>::handle","value":"pub fn handle<R>(&Self) -> Handle where SD: Borrow<SignalDelivery<R, E>>,\nR: 'static + AsRawFd + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Get a shareable [`Handle`] for this instance.","sig":null,"attributes":[{"value":"/ Get a shareable [`Handle`] for this instance.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":58966,"byte_end":59015,"line_start":471,"line_end":471,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":59020,"byte_end":59023,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ This can be used to add further signals or terminate the whole","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":59028,"byte_end":59094,"line_start":473,"line_end":473,"column_start":5,"column_end":71}},{"value":"/ signal iteration using the [`close`][Handle::close] method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":59099,"byte_end":59162,"line_start":474,"line_end":474,"column_start":5,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":138},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":59458,"byte_end":59478,"line_start":486,"line_end":486,"column_start":10,"column_end":30},"name":"OwningSignalIterator","qualname":"::iterator::backend::OwningSignalIterator","value":"SignalIterator<SignalDelivery<R, E>, E>","parent":null,"children":[],"decl_id":null,"docs":" A signal iterator which consumes a [`SignalDelivery`] instance and takes\n ownership of it.\n","sig":null,"attributes":[{"value":"/ A signal iterator which consumes a [`SignalDelivery`] instance and takes","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":59351,"byte_end":59427,"line_start":484,"line_end":484,"column_start":1,"column_end":77}},{"value":"/ ownership of it.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":59428,"byte_end":59448,"line_start":485,"line_end":485,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":141},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":59630,"byte_end":59647,"line_start":490,"line_end":490,"column_start":10,"column_end":27},"name":"RefSignalIterator","qualname":"::iterator::backend::RefSignalIterator","value":"SignalIterator<&'a mut SignalDelivery<R, E>, E>","parent":null,"children":[],"decl_id":null,"docs":" A signal iterator which takes a mutable reference to a [`SignalDelivery`]\n instance.\n","sig":null,"attributes":[{"value":"/ A signal iterator which takes a mutable reference to a [`SignalDelivery`]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":59529,"byte_end":59606,"line_start":488,"line_end":488,"column_start":1,"column_end":78}},{"value":"/ instance.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":59607,"byte_end":59620,"line_start":489,"line_end":489,"column_start":1,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":145},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"exfiltrator","qualname":"::iterator::exfiltrator","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":165},{"krate":0,"index":529},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":432},{"krate":0,"index":439},{"krate":0,"index":438},{"krate":0,"index":436},{"krate":0,"index":434},{"krate":0,"index":187}],"decl_id":null,"docs":" An abstraction over exfiltrating information out of signal handlers.","sig":null,"attributes":[{"value":"/ An abstraction over exfiltrating information out of signal handlers.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":59710,"byte_end":59782,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":59783,"byte_end":59786,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The [`Exfiltrator`] trait provides a way to abstract the information extracted from a signal","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":59787,"byte_end":59883,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"/ handler and the way it is extracted out of it.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":59884,"byte_end":59934,"line_start":4,"line_end":4,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":59935,"byte_end":59938,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The implementations can be used to parametrize the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":59939,"byte_end":59993,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/ [`SignalsInfo`][crate::iterator::SignalsInfo] to specify what results are returned.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":59994,"byte_end":60081,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":60082,"byte_end":60085,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Sealed","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":60086,"byte_end":60098,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":60099,"byte_end":60102,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Currently, the trait is sealed and all methods hidden. This is likely temporary, until some","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":60103,"byte_end":60198,"line_start":11,"line_end":11,"column_start":1,"column_end":96}},{"value":"/ experience with them is gained.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":60199,"byte_end":60234,"line_start":12,"line_end":12,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":146},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"raw","qualname":"::iterator::exfiltrator::raw","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":416},{"krate":0,"index":421},{"krate":0,"index":419},{"krate":0,"index":155},{"krate":0,"index":423},{"krate":0,"index":431},{"krate":0,"index":429},{"krate":0,"index":427},{"krate":0,"index":425},{"krate":0,"index":157}],"decl_id":null,"docs":" An exfiltrator providing the raw [`siginfo_t`].\n","sig":null,"attributes":[{"value":"/ An exfiltrator providing the raw [`siginfo_t`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":66289,"byte_end":66340,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":416},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":67115,"byte_end":67119,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"Slot","qualname":"::iterator::exfiltrator::raw::Slot","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":423},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":68451,"byte_end":68465,"line_start":61,"line_end":61,"column_start":12,"column_end":26},"name":"WithRawSiginfo","qualname":"::iterator::exfiltrator::raw::WithRawSiginfo","value":"","parent":null,"children":[],"decl_id":null,"docs":" The [`Exfiltrator`][crate::iterator::exfiltrator::Exfiltrator] that produces the raw\n [`libc::siginfo_t`]. Note that it might look differently on different OSes and its API is a\n little bit more limited than its C counterpart.","sig":null,"attributes":[{"value":"/ The [`Exfiltrator`][crate::iterator::exfiltrator::Exfiltrator] that produces the raw","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":67345,"byte_end":67433,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ [`libc::siginfo_t`]. Note that it might look differently on different OSes and its API is a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":67434,"byte_end":67529,"line_start":33,"line_end":33,"column_start":1,"column_end":96}},{"value":"/ little bit more limited than its C counterpart.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":67530,"byte_end":67581,"line_start":34,"line_end":34,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":67582,"byte_end":67585,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ You might prefer the [`WithOrigin`][super::WithOrigin] if you simply need information about the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":67586,"byte_end":67685,"line_start":36,"line_end":36,"column_start":1,"column_end":100}},{"value":"/ origin of the signal.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":67686,"byte_end":67711,"line_start":37,"line_end":37,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":67712,"byte_end":67715,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":67716,"byte_end":67730,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":67731,"byte_end":67734,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":67735,"byte_end":67746,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"/ # use signal_hook::consts::SIGUSR1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":67747,"byte_end":67786,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ # use signal_hook::iterator::SignalsInfo;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":67787,"byte_end":67832,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ # use signal_hook::iterator::exfiltrator::WithRawSiginfo;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":67833,"byte_end":67894,"line_start":44,"line_end":44,"column_start":1,"column_end":62}},{"value":"/ #","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":67895,"byte_end":67900,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":67901,"byte_end":67948,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ // Subscribe to SIGUSR1, with information about the process.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":67949,"byte_end":68013,"line_start":47,"line_end":47,"column_start":1,"column_end":65}},{"value":"/ let mut signals = SignalsInfo::<WithRawSiginfo>::new(&[SIGUSR1])?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":68014,"byte_end":68084,"line_start":48,"line_end":48,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":68085,"byte_end":68088,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Send ourselves a signal.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":68089,"byte_end":68120,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/ signal_hook::low_level::raise(SIGUSR1)?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":68121,"byte_end":68165,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":68166,"byte_end":68169,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Grab the signal and look into the details.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":68170,"byte_end":68219,"line_start":53,"line_end":53,"column_start":1,"column_end":50}},{"value":"/ let received = signals.wait().next().unwrap();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":68220,"byte_end":68270,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":68271,"byte_end":68274,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Not much else is useful in a cross-platform way :-(","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":68275,"byte_end":68333,"line_start":56,"line_end":56,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(SIGUSR1, received.si_signo);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":68334,"byte_end":68377,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":68378,"byte_end":68392,"line_start":58,"line_end":58,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":68393,"byte_end":68400,"line_start":59,"line_end":59,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":177},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":61272,"byte_end":61283,"line_start":41,"line_end":41,"column_start":22,"column_end":33},"name":"Exfiltrator","qualname":"::iterator::exfiltrator::sealed::Exfiltrator","value":"Exfiltrator: Debug + Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183}],"decl_id":null,"docs":" The actual implementation of the [`Exfiltrator`][super::Exfiltrator].","sig":null,"attributes":[{"value":"/ The actual implementation of the [`Exfiltrator`][super::Exfiltrator].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":60615,"byte_end":60688,"line_start":32,"line_end":32,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":60693,"byte_end":60696,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ For now, this is hidden from the public API, but the intention is to move it to a public","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":60701,"byte_end":60793,"line_start":34,"line_end":34,"column_start":5,"column_end":97}},{"value":"/ place so users can implement it eventually, once we verify that it works well.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":60798,"byte_end":60880,"line_start":35,"line_end":35,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":60885,"byte_end":60888,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The trait is unsafe as the [`Exfiltrator::store`] is called inside the signal handler and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":60893,"byte_end":60986,"line_start":37,"line_end":37,"column_start":5,"column_end":98}},{"value":"/ must be async-signal-safe. Implementing this correctly may be difficult, therefore care","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":60991,"byte_end":61082,"line_start":38,"line_end":38,"column_start":5,"column_end":96}},{"value":"/ needs to be taken. One method known to work is encoding the data into an atomic variable.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":61087,"byte_end":61180,"line_start":39,"line_end":39,"column_start":5,"column_end":98}},{"value":"/ Other, less limiting approaches, will be eventually explored.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":61185,"byte_end":61250,"line_start":40,"line_end":40,"column_start":5,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":178},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":61756,"byte_end":61763,"line_start":50,"line_end":50,"column_start":14,"column_end":21},"name":"Storage","qualname":"::iterator::exfiltrator::sealed::Exfiltrator::Storage","value":"type Storage: Debug + Default + Send + Sync + 'static;","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" One slot for storing the data.","sig":null,"attributes":[{"value":"/ One slot for storing the data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":61325,"byte_end":61359,"line_start":42,"line_end":42,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":61368,"byte_end":61371,"line_start":43,"line_end":43,"column_start":9,"column_end":12}},{"value":"/ Each signal will get its one slot of this type, independent of other signals. It can","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":61380,"byte_end":61468,"line_start":44,"line_end":44,"column_start":9,"column_end":97}},{"value":"/ store the information in there inside the signal handler and will be loaded from it in","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":61477,"byte_end":61567,"line_start":45,"line_end":45,"column_start":9,"column_end":99}},{"value":"/ load.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":61576,"byte_end":61585,"line_start":46,"line_end":46,"column_start":9,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":61594,"byte_end":61597,"line_start":47,"line_end":47,"column_start":9,"column_end":12}},{"value":"/ Each slot is initialized to the [`Default`] value. It is expected this value represents","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":61606,"byte_end":61697,"line_start":48,"line_end":48,"column_start":9,"column_end":100}},{"value":"/ „no signal delivered“ state.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":61706,"byte_end":61742,"line_start":49,"line_end":49,"column_start":9,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":179},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":61863,"byte_end":61869,"line_start":53,"line_end":53,"column_start":14,"column_end":20},"name":"Output","qualname":"::iterator::exfiltrator::sealed::Exfiltrator::Output","value":"type Output;","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" The type returned to the user.\n","sig":null,"attributes":[{"value":"/ The type returned to the user.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":61815,"byte_end":61849,"line_start":52,"line_end":52,"column_start":9,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":62221,"byte_end":62236,"line_start":60,"line_end":60,"column_start":12,"column_end":27},"name":"supports_signal","qualname":"::iterator::exfiltrator::sealed::Exfiltrator::supports_signal","value":"pub fn supports_signal(&Self, c_int) -> bool","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" If the given signal is supported by this specific exfiltrator.","sig":null,"attributes":[{"value":"/ If the given signal is supported by this specific exfiltrator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":61880,"byte_end":61946,"line_start":55,"line_end":55,"column_start":9,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":61955,"byte_end":61958,"line_start":56,"line_end":56,"column_start":9,"column_end":12}},{"value":"/ Not all information is available to all signals, therefore not all exfiltrators must","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":61967,"byte_end":62055,"line_start":57,"line_end":57,"column_start":9,"column_end":97}},{"value":"/ support all signals. If `false` is returned, the user is prevented for registering such","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":62064,"byte_end":62155,"line_start":58,"line_end":58,"column_start":9,"column_end":100}},{"value":"/ signal number with the given exfiltrator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":62164,"byte_end":62209,"line_start":59,"line_end":59,"column_start":9,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":62893,"byte_end":62898,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"store","qualname":"::iterator::exfiltrator::sealed::Exfiltrator::store","value":"pub fn store(&Self, &Self::Storage, c_int, &siginfo_t)","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Puts the signal information inside the slot.","sig":null,"attributes":[{"value":"/ Puts the signal information inside the slot.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":62274,"byte_end":62322,"line_start":62,"line_end":62,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":62331,"byte_end":62334,"line_start":63,"line_end":63,"column_start":9,"column_end":12}},{"value":"/ It needs to somehow store the relevant information and the fact that a signal happened.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":62343,"byte_end":62434,"line_start":64,"line_end":64,"column_start":9,"column_end":100}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":62443,"byte_end":62446,"line_start":65,"line_end":65,"column_start":9,"column_end":12}},{"value":"/ # Warning","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":62455,"byte_end":62468,"line_start":66,"line_end":66,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":62477,"byte_end":62480,"line_start":67,"line_end":67,"column_start":9,"column_end":12}},{"value":"/ This will be called inside the signal handler. It needs to be async-signal-safe. In","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":62489,"byte_end":62576,"line_start":68,"line_end":68,"column_start":9,"column_end":96}},{"value":"/ particular, very small amount of operations are allowed in there. This namely does","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":62585,"byte_end":62671,"line_start":69,"line_end":69,"column_start":9,"column_end":95}},{"value":"/ *not* include any locking nor allocation.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":62680,"byte_end":62725,"line_start":70,"line_end":70,"column_start":9,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":62734,"byte_end":62737,"line_start":71,"line_end":71,"column_start":9,"column_end":12}},{"value":"/ It is also possible that multiple store methods are called concurrently; it is up to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":62746,"byte_end":62834,"line_start":72,"line_end":72,"column_start":9,"column_end":97}},{"value":"/ the implementor to deal with that.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":62843,"byte_end":62881,"line_start":73,"line_end":73,"column_start":9,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":63979,"byte_end":63983,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"load","qualname":"::iterator::exfiltrator::sealed::Exfiltrator::load","value":"pub fn load(&Self, &Self::Storage, c_int) -> Option<Self::Output>","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Loads the signal information from the given slot.","sig":null,"attributes":[{"value":"/ Loads the signal information from the given slot.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":62971,"byte_end":63024,"line_start":76,"line_end":76,"column_start":9,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":63033,"byte_end":63036,"line_start":77,"line_end":77,"column_start":9,"column_end":12}},{"value":"/ The method shall check if the signal happened (it may be possible to be called without","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":63045,"byte_end":63135,"line_start":78,"line_end":78,"column_start":9,"column_end":99}},{"value":"/ the signal previously being delivered; it is up to the implementer to recognize it). It","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":63144,"byte_end":63235,"line_start":79,"line_end":79,"column_start":9,"column_end":100}},{"value":"/ is assumed the [`Default`] value is recognized as no signal delivered.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":63244,"byte_end":63318,"line_start":80,"line_end":80,"column_start":9,"column_end":83}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":63327,"byte_end":63330,"line_start":81,"line_end":81,"column_start":9,"column_end":12}},{"value":"/ If it was delivered, the method shall extract the relevant information *and reset the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":63339,"byte_end":63428,"line_start":82,"line_end":82,"column_start":9,"column_end":98}},{"value":"/ slot* to the no signal delivered state.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":63437,"byte_end":63480,"line_start":83,"line_end":83,"column_start":9,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":63489,"byte_end":63492,"line_start":84,"line_end":84,"column_start":9,"column_end":12}},{"value":"/ It shall return `Some(value)` if the signal was successfully received and `None` in","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":63501,"byte_end":63588,"line_start":85,"line_end":85,"column_start":9,"column_end":96}},{"value":"/ case no signal was delivered.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":63597,"byte_end":63630,"line_start":86,"line_end":86,"column_start":9,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":63639,"byte_end":63642,"line_start":87,"line_end":87,"column_start":9,"column_end":12}},{"value":"/ No blocking shall happen inside this method. It may be called concurrently with","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":63651,"byte_end":63734,"line_start":88,"line_end":88,"column_start":9,"column_end":92}},{"value":"/ [`store`][Exfiltrator::store] (due to how signals work, concurrently even inside the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":63743,"byte_end":63831,"line_start":89,"line_end":89,"column_start":9,"column_end":97}},{"value":"/ same thread ‒ a `store` may „interrupt“ a call to `load`). It is up to the implementer","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":63840,"byte_end":63936,"line_start":90,"line_end":90,"column_start":9,"column_end":99}},{"value":"/ to deal with that.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":63945,"byte_end":63967,"line_start":91,"line_end":91,"column_start":9,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":64805,"byte_end":64809,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"init","qualname":"::iterator::exfiltrator::sealed::Exfiltrator::init","value":"pub fn init(&Self, &Self::Storage, c_int)","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Initialize the given slot for the given signal before the first use.","sig":null,"attributes":[{"value":"/ Initialize the given slot for the given signal before the first use.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":64062,"byte_end":64134,"line_start":94,"line_end":94,"column_start":9,"column_end":81}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":64143,"byte_end":64146,"line_start":95,"line_end":95,"column_start":9,"column_end":12}},{"value":"/ This is called before the first use of the given slot (and it is annotated with the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":64155,"byte_end":64242,"line_start":96,"line_end":96,"column_start":9,"column_end":96}},{"value":"/ corresponding signal). The default does nothing, this is just an opportunity to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":64251,"byte_end":64334,"line_start":97,"line_end":97,"column_start":9,"column_end":92}},{"value":"/ allocate data lazily (this is called outside of the signal handler, so it doesn't have","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":64343,"byte_end":64433,"line_start":98,"line_end":98,"column_start":9,"column_end":99}},{"value":"/ to be async-signal-safe). It will be called at most once for each slot.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":64442,"byte_end":64517,"line_start":99,"line_end":99,"column_start":9,"column_end":84}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":64526,"byte_end":64529,"line_start":100,"line_end":100,"column_start":9,"column_end":12}},{"value":"/ Note that you can rely on this being called for correctness, but not for safety (this","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":64538,"byte_end":64627,"line_start":101,"line_end":101,"column_start":9,"column_end":98}},{"value":"/ crate calls it before the first use, but a user abusing the trait might not and in such","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":64636,"byte_end":64727,"line_start":102,"line_end":102,"column_start":9,"column_end":100}},{"value":"/ case it is OK to eg. lose signals, but not segfault).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":64736,"byte_end":64793,"line_start":103,"line_end":103,"column_start":9,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":184},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":65326,"byte_end":65337,"line_start":118,"line_end":118,"column_start":11,"column_end":22},"name":"Exfiltrator","qualname":"::iterator::exfiltrator::Exfiltrator","value":"Exfiltrator: sealed::Exfiltrator","parent":null,"children":[],"decl_id":null,"docs":" A trait describing what and how is extracted from signal handlers.","sig":null,"attributes":[{"value":"/ A trait describing what and how is extracted from signal handlers.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":65047,"byte_end":65117,"line_start":113,"line_end":113,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":65118,"byte_end":65121,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ By choosing a specific implementor as the type parameter for","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":65122,"byte_end":65186,"line_start":115,"line_end":115,"column_start":1,"column_end":65}},{"value":"/ [`SignalsInfo`][crate::iterator::SignalsInfo], one can pick how much and what information is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":65187,"byte_end":65283,"line_start":116,"line_end":116,"column_start":1,"column_end":97}},{"value":"/ returned from the iterator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":65284,"byte_end":65315,"line_start":117,"line_end":117,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":432},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":65694,"byte_end":65704,"line_start":127,"line_end":127,"column_start":12,"column_end":22},"name":"SignalOnly","qualname":"::iterator::exfiltrator::SignalOnly","value":"","parent":null,"children":[],"decl_id":null,"docs":" An [`Exfiltrator`] providing just the signal numbers.","sig":null,"attributes":[{"value":"/ An [`Exfiltrator`] providing just the signal numbers.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":65414,"byte_end":65471,"line_start":122,"line_end":122,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":65472,"byte_end":65475,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This is the basic exfiltrator for most needs. For that reason, there's the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":65476,"byte_end":65554,"line_start":124,"line_end":124,"column_start":1,"column_end":79}},{"value":"/ [`crate::iterator::Signals`] type alias, to simplify the type names for usual needs.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":65555,"byte_end":65643,"line_start":125,"line_end":125,"column_start":1,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":216},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35272,"byte_end":35283,"line_start":129,"line_end":129,"column_start":12,"column_end":23},"name":"SignalsInfo","qualname":"::iterator::SignalsInfo","value":"","parent":null,"children":[],"decl_id":null,"docs":" The main structure of the module, representing interest in some signals.","sig":null,"attributes":[{"value":"/ The main structure of the module, representing interest in some signals.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":33337,"byte_end":33413,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":33414,"byte_end":33417,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Unlike the helpers in other modules, this registers the signals when created and unregisters","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":33418,"byte_end":33514,"line_start":76,"line_end":76,"column_start":1,"column_end":97}},{"value":"/ them on drop. It provides the pending signals during its lifetime, either in batches or as an","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":33515,"byte_end":33612,"line_start":77,"line_end":77,"column_start":1,"column_end":98}},{"value":"/ infinite iterator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":33613,"byte_end":33635,"line_start":78,"line_end":78,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":33636,"byte_end":33639,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Most users will want to use it through the [`Signals`] type alias for simplicity.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":33640,"byte_end":33725,"line_start":80,"line_end":80,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":33726,"byte_end":33729,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ # Multiple threads","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":33730,"byte_end":33752,"line_start":82,"line_end":82,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":33753,"byte_end":33756,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Instances of this struct can be [sent][std::marker::Send] to other threads. In a multithreaded","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":33757,"byte_end":33855,"line_start":84,"line_end":84,"column_start":1,"column_end":99}},{"value":"/ application this can be used to dedicate a separate thread for signal handling. In this case","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":33856,"byte_end":33952,"line_start":85,"line_end":85,"column_start":1,"column_end":97}},{"value":"/ you should get a [`Handle`] using the [`handle`][Signals::handle] method before sending the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":33953,"byte_end":34048,"line_start":86,"line_end":86,"column_start":1,"column_end":96}},{"value":"/ `Signals` instance to a background thread. With the handle you will be able to shut down the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34049,"byte_end":34145,"line_start":87,"line_end":87,"column_start":1,"column_end":97}},{"value":"/ background thread later, or to operatively add more signals.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34146,"byte_end":34210,"line_start":88,"line_end":88,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34211,"byte_end":34214,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ The controller handle can be shared between as many threads as you like using its","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34215,"byte_end":34300,"line_start":90,"line_end":90,"column_start":1,"column_end":86}},{"value":"/ [`clone`][Handle::clone] method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34301,"byte_end":34337,"line_start":91,"line_end":91,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34338,"byte_end":34341,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ # Exfiltrators","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34342,"byte_end":34360,"line_start":93,"line_end":93,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34361,"byte_end":34364,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The [`SignalOnly]` provides only the signal number. There are further exfiltrators available in","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34365,"byte_end":34464,"line_start":95,"line_end":95,"column_start":1,"column_end":100}},{"value":"/ the [`exfiltrator`] module. Note that some of them are behind feature flags that need to be","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34465,"byte_end":34560,"line_start":96,"line_end":96,"column_start":1,"column_end":96}},{"value":"/ enabled.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34561,"byte_end":34573,"line_start":97,"line_end":97,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34574,"byte_end":34577,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34578,"byte_end":34592,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34593,"byte_end":34596,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34597,"byte_end":34608,"line_start":101,"line_end":101,"column_start":1,"column_end":12}},{"value":"/ # extern crate signal_hook;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34609,"byte_end":34640,"line_start":102,"line_end":102,"column_start":1,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34641,"byte_end":34646,"line_start":103,"line_end":103,"column_start":1,"column_end":6}},{"value":"/ # use std::io::Error;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34647,"byte_end":34672,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/ # use std::thread;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34673,"byte_end":34695,"line_start":105,"line_end":105,"column_start":1,"column_end":23}},{"value":"/ use signal_hook::consts::signal::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34696,"byte_end":34735,"line_start":106,"line_end":106,"column_start":1,"column_end":40}},{"value":"/ use signal_hook::iterator::Signals;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34736,"byte_end":34775,"line_start":107,"line_end":107,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34776,"byte_end":34779,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34780,"byte_end":34785,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Error> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34786,"byte_end":34824,"line_start":110,"line_end":110,"column_start":1,"column_end":39}},{"value":"/ let mut signals = Signals::new(&[SIGUSR1, SIGUSR2])?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34825,"byte_end":34882,"line_start":111,"line_end":111,"column_start":1,"column_end":58}},{"value":"/ let handle = signals.handle();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34883,"byte_end":34917,"line_start":112,"line_end":112,"column_start":1,"column_end":35}},{"value":"/ let thread = thread::spawn(move || {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34918,"byte_end":34958,"line_start":113,"line_end":113,"column_start":1,"column_end":41}},{"value":"/     for signal in &mut signals {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34959,"byte_end":34995,"line_start":114,"line_end":114,"column_start":1,"column_end":37}},{"value":"/         match signal {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":34996,"byte_end":35022,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/             SIGUSR1 => {},","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35023,"byte_end":35053,"line_start":116,"line_end":116,"column_start":1,"column_end":31}},{"value":"/             SIGUSR2 => {},","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35054,"byte_end":35084,"line_start":117,"line_end":117,"column_start":1,"column_end":31}},{"value":"/             _ => unreachable!(),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35085,"byte_end":35121,"line_start":118,"line_end":118,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35122,"byte_end":35135,"line_start":119,"line_end":119,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35136,"byte_end":35145,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35146,"byte_end":35153,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35154,"byte_end":35157,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ // Some time later...","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35158,"byte_end":35183,"line_start":123,"line_end":123,"column_start":1,"column_end":26}},{"value":"/ handle.close();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35184,"byte_end":35203,"line_start":124,"line_end":124,"column_start":1,"column_end":20}},{"value":"/ thread.join().unwrap();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35204,"byte_end":35231,"line_start":125,"line_end":125,"column_start":1,"column_end":28}},{"value":"/ # Ok(())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35232,"byte_end":35244,"line_start":126,"line_end":126,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35245,"byte_end":35252,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35253,"byte_end":35260,"line_start":128,"line_end":128,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35586,"byte_end":35589,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<SignalsInfo<E>>::new","value":"pub fn new<I, S>(I) -> Result<Self, Error> where I: IntoIterator<Item = S>,\nS: Borrow<c_int>, E: Default","parent":null,"children":[],"decl_id":null,"docs":" Creates the `Signals` structure.","sig":null,"attributes":[{"value":"/ Creates the `Signals` structure.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35388,"byte_end":35424,"line_start":132,"line_end":132,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35429,"byte_end":35432,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This registers all the signals listed. The same restrictions (panics, errors) apply as","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35437,"byte_end":35527,"line_start":134,"line_end":134,"column_start":5,"column_end":95}},{"value":"/ for the [`Handle::add_signal`] method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35532,"byte_end":35574,"line_start":135,"line_end":135,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35863,"byte_end":35879,"line_start":146,"line_end":146,"column_start":12,"column_end":28},"name":"with_exfiltrator","qualname":"<SignalsInfo<E>>::with_exfiltrator","value":"pub fn with_exfiltrator<I, S>(I, E) -> Result<Self, Error> where\nI: IntoIterator<Item = S>, S: Borrow<c_int>","parent":null,"children":[],"decl_id":null,"docs":" An advanced constructor with explicit [`Exfiltrator`].\n","sig":null,"attributes":[{"value":"/ An advanced constructor with explicit [`Exfiltrator`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35793,"byte_end":35851,"line_start":145,"line_end":145,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":36420,"byte_end":36430,"line_start":164,"line_end":164,"column_start":12,"column_end":22},"name":"add_signal","qualname":"<SignalsInfo<E>>::add_signal","value":"pub fn add_signal(&Self, c_int) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Registers another signal to the set watched by this [`Signals`] instance.","sig":null,"attributes":[{"value":"/ Registers another signal to the set watched by this [`Signals`] instance.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":36220,"byte_end":36297,"line_start":160,"line_end":160,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":36302,"byte_end":36305,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ The same restrictions (panics, errors) apply as for the [`Handle::add_signal`]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":36310,"byte_end":36392,"line_start":162,"line_end":162,"column_start":5,"column_end":87}},{"value":"/ method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":36397,"byte_end":36408,"line_start":163,"line_end":163,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":37066,"byte_end":37073,"line_start":177,"line_end":177,"column_start":12,"column_end":19},"name":"pending","qualname":"<SignalsInfo<E>>::pending","value":"pub fn pending(&mut Self) -> Pending<E>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of already received signals.","sig":null,"attributes":[{"value":"/ Returns an iterator of already received signals.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":36528,"byte_end":36580,"line_start":168,"line_end":168,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":36585,"byte_end":36588,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This returns an iterator over all the signal numbers of the signals received since last","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":36593,"byte_end":36684,"line_start":170,"line_end":170,"column_start":5,"column_end":96}},{"value":"/ time they were read (out of the set registered by this `Signals` instance). Note that they","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":36689,"byte_end":36783,"line_start":171,"line_end":171,"column_start":5,"column_end":99}},{"value":"/ are returned in arbitrary order and a signal instance may returned only once even if it was","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":36788,"byte_end":36883,"line_start":172,"line_end":172,"column_start":5,"column_end":100}},{"value":"/ received multiple times.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":36888,"byte_end":36916,"line_start":173,"line_end":173,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":36921,"byte_end":36924,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This method returns immediately (does not block) and may produce an empty iterator if there","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":36929,"byte_end":37024,"line_start":175,"line_end":175,"column_start":5,"column_end":100}},{"value":"/ are no signals ready.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":37029,"byte_end":37054,"line_start":176,"line_end":176,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":38381,"byte_end":38385,"line_start":209,"line_end":209,"column_start":12,"column_end":16},"name":"wait","qualname":"<SignalsInfo<E>>::wait","value":"pub fn wait(&mut Self) -> Pending<E>","parent":null,"children":[],"decl_id":null,"docs":" Waits for some signals to be available and returns an iterator.","sig":null,"attributes":[{"value":"/ Waits for some signals to be available and returns an iterator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":37823,"byte_end":37890,"line_start":199,"line_end":199,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":37895,"byte_end":37898,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`pending`][Signals::pending]. If there are no signals available, it","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":37903,"byte_end":37994,"line_start":201,"line_end":201,"column_start":5,"column_end":96}},{"value":"/ tries to wait for some to arrive. However, due to implementation details, this still can","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":37999,"byte_end":38091,"line_start":202,"line_end":202,"column_start":5,"column_end":97}},{"value":"/ produce an empty iterator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":38096,"byte_end":38126,"line_start":203,"line_end":203,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":38131,"byte_end":38134,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This can block for arbitrary long time. If the [`Handle::close`] method is used in","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":38139,"byte_end":38225,"line_start":205,"line_end":205,"column_start":5,"column_end":91}},{"value":"/ another thread this method will return immediately.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":38230,"byte_end":38285,"line_start":206,"line_end":206,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":38290,"byte_end":38293,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Note that the blocking is done in this method, not in the iterator.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":38298,"byte_end":38369,"line_start":208,"line_end":208,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39094,"byte_end":39103,"line_start":225,"line_end":225,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<SignalsInfo<E>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is it closed?","sig":null,"attributes":[{"value":"/ Is it closed?","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39019,"byte_end":39036,"line_start":222,"line_end":222,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39041,"byte_end":39044,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ See [`close`][Handle::close].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39049,"byte_end":39082,"line_start":224,"line_end":224,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40559,"byte_end":40566,"line_start":268,"line_end":268,"column_start":12,"column_end":19},"name":"forever","qualname":"<SignalsInfo<E>>::forever","value":"pub fn forever(&mut Self) -> Forever<, E>","parent":null,"children":[],"decl_id":null,"docs":" Get an infinite iterator over arriving signals.","sig":null,"attributes":[{"value":"/ Get an infinite iterator over arriving signals.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39166,"byte_end":39217,"line_start":229,"line_end":229,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39222,"byte_end":39225,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The iterator's `next()` blocks as necessary to wait for signals to arrive. This is adequate","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39230,"byte_end":39325,"line_start":231,"line_end":231,"column_start":5,"column_end":100}},{"value":"/ if you want to designate a thread solely to handling signals. If multiple signals come at","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39330,"byte_end":39423,"line_start":232,"line_end":232,"column_start":5,"column_end":98}},{"value":"/ the same time (between two values produced by the iterator), they will be returned in","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39428,"byte_end":39517,"line_start":233,"line_end":233,"column_start":5,"column_end":94}},{"value":"/ arbitrary order. Multiple instances of the same signal may be collated.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39522,"byte_end":39597,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39602,"byte_end":39605,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This is also the iterator returned by `IntoIterator` implementation on `&mut Signals`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39610,"byte_end":39700,"line_start":236,"line_end":236,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39705,"byte_end":39708,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This iterator terminates only if explicitly [closed][Handle::close].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39713,"byte_end":39785,"line_start":238,"line_end":238,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39790,"byte_end":39793,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39798,"byte_end":39812,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39817,"byte_end":39820,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39825,"byte_end":39836,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/ # extern crate libc;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39841,"byte_end":39865,"line_start":243,"line_end":243,"column_start":5,"column_end":29}},{"value":"/ # extern crate signal_hook;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39870,"byte_end":39901,"line_start":244,"line_end":244,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39906,"byte_end":39911,"line_start":245,"line_end":245,"column_start":5,"column_end":10}},{"value":"/ # use std::io::Error;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39916,"byte_end":39941,"line_start":246,"line_end":246,"column_start":5,"column_end":30}},{"value":"/ # use std::thread;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39946,"byte_end":39968,"line_start":247,"line_end":247,"column_start":5,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39973,"byte_end":39978,"line_start":248,"line_end":248,"column_start":5,"column_end":10}},{"value":"/ use signal_hook::consts::signal::*;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":39983,"byte_end":40022,"line_start":249,"line_end":249,"column_start":5,"column_end":44}},{"value":"/ use signal_hook::iterator::Signals;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40027,"byte_end":40066,"line_start":250,"line_end":250,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40071,"byte_end":40074,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> Result<(), Error> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40079,"byte_end":40117,"line_start":252,"line_end":252,"column_start":5,"column_end":43}},{"value":"/ let mut signals = Signals::new(&[SIGUSR1, SIGUSR2])?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40122,"byte_end":40179,"line_start":253,"line_end":253,"column_start":5,"column_end":62}},{"value":"/ let handle = signals.handle();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40184,"byte_end":40218,"line_start":254,"line_end":254,"column_start":5,"column_end":39}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40223,"byte_end":40250,"line_start":255,"line_end":255,"column_start":5,"column_end":32}},{"value":"/     for signal in signals.forever() {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40255,"byte_end":40296,"line_start":256,"line_end":256,"column_start":5,"column_end":46}},{"value":"/         match signal {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40301,"byte_end":40327,"line_start":257,"line_end":257,"column_start":5,"column_end":31}},{"value":"/             SIGUSR1 => {},","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40332,"byte_end":40362,"line_start":258,"line_end":258,"column_start":5,"column_end":35}},{"value":"/             SIGUSR2 => {},","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40367,"byte_end":40397,"line_start":259,"line_end":259,"column_start":5,"column_end":35}},{"value":"/             _ => unreachable!(),","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40402,"byte_end":40438,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40443,"byte_end":40456,"line_start":261,"line_end":261,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40461,"byte_end":40470,"line_start":262,"line_end":262,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40475,"byte_end":40482,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ handle.close();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40487,"byte_end":40506,"line_start":264,"line_end":264,"column_start":5,"column_end":24}},{"value":"/ # Ok(())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40511,"byte_end":40523,"line_start":265,"line_end":265,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40528,"byte_end":40535,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40540,"byte_end":40547,"line_start":267,"line_end":267,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40822,"byte_end":40828,"line_start":275,"line_end":275,"column_start":12,"column_end":18},"name":"handle","qualname":"<SignalsInfo<E>>::handle","value":"pub fn handle(&Self) -> Handle","parent":null,"children":[],"decl_id":null,"docs":" Get a shareable handle to a [`Handle`] for this instance.","sig":null,"attributes":[{"value":"/ Get a shareable handle to a [`Handle`] for this instance.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40658,"byte_end":40719,"line_start":272,"line_end":272,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40724,"byte_end":40727,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ This can be used to add further signals or close the [`Signals`] instance.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40732,"byte_end":40810,"line_start":274,"line_end":274,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":244},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":41356,"byte_end":41363,"line_start":299,"line_end":299,"column_start":12,"column_end":19},"name":"Forever","qualname":"::iterator::Forever","value":"","parent":null,"children":[],"decl_id":null,"docs":" An infinit iterator of arriving signals.\n","sig":null,"attributes":[{"value":"/ An infinit iterator of arriving signals.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":41300,"byte_end":41344,"line_start":298,"line_end":298,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":254},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":42439,"byte_end":42446,"line_start":323,"line_end":323,"column_start":10,"column_end":17},"name":"Signals","qualname":"::iterator::Signals","value":"SignalsInfo<SignalOnly>","parent":null,"children":[],"decl_id":null,"docs":" A type alias for an iterator returning just the signal numbers.","sig":null,"attributes":[{"value":"/ A type alias for an iterator returning just the signal numbers.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":42203,"byte_end":42270,"line_start":319,"line_end":319,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":42271,"byte_end":42274,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ This is the simplified version for most of the use cases. For advanced usages, the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":42275,"byte_end":42361,"line_start":321,"line_end":321,"column_start":1,"column_end":87}},{"value":"/ [`SignalsInfo`] with explicit [`Exfiltrator`] type can be used.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":42362,"byte_end":42429,"line_start":322,"line_end":322,"column_start":1,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":255},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"low_level","qualname":"::low_level","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":290},{"krate":0,"index":317},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348}],"decl_id":null,"docs":" Some low level utilities","sig":null,"attributes":[{"value":"/ Some low level utilities","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":69734,"byte_end":69762,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":69763,"byte_end":69766,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ More often to build other abstractions than used directly.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":69767,"byte_end":69829,"line_start":3,"line_end":3,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":258},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::low_level::channel","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":277},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":288}],"decl_id":null,"docs":" A restricted channel to pass data from signal handler.","sig":null,"attributes":[{"value":"cfg(feature = \"channel\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":69870,"byte_end":69897,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/ A restricted channel to pass data from signal handler.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":71409,"byte_end":71467,"line_start":1,"line_end":1,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":71468,"byte_end":71471,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ When trying to communicate data from signal handler to the outside world, one can use an atomic","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":71472,"byte_end":71571,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"/ variable (as it doesn't lock, so it can be made async-signal-safe). But this won't work for","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":71572,"byte_end":71667,"line_start":4,"line_end":4,"column_start":1,"column_end":96}},{"value":"/ larger data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":71668,"byte_end":71684,"line_start":5,"line_end":5,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":71685,"byte_end":71688,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This module provides a channel that can be used for that purpose. It is used by certain","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":71689,"byte_end":71780,"line_start":7,"line_end":7,"column_start":1,"column_end":92}},{"value":"/ [exfiltrators][crate::iterator::exfiltrator], but can be used as building block for custom","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":71781,"byte_end":71875,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/ actions. In general, this is not a ready-made end-user API.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":71876,"byte_end":71939,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":71940,"byte_end":71943,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # How does it work","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":71944,"byte_end":71966,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":71967,"byte_end":71970,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Each channel has a fixed number of slots and two queues (one for empty slots, one for full","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":71971,"byte_end":72065,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ slots). A signal handler takes a slot out of the empty one, fills it and passes it into the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":72066,"byte_end":72161,"line_start":14,"line_end":14,"column_start":1,"column_end":96}},{"value":"/ full one. Outside of signal handler, it can take the value out of the full queue and return the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":72162,"byte_end":72261,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ slot to the empty queue.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":72262,"byte_end":72290,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":72291,"byte_end":72294,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The queues are implemented as bit-encoded indexes of the slots in the storage. The bits are","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":72295,"byte_end":72390,"line_start":18,"line_end":18,"column_start":1,"column_end":96}},{"value":"/ stored in an atomic variable.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":72391,"byte_end":72424,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":72425,"byte_end":72428,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that the algorithm allows for a slot to be in neither queue (when it is being emptied or","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":72429,"byte_end":72526,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/ filled).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":72527,"byte_end":72539,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":72540,"byte_end":72543,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Fallible allocation of a slot","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":72544,"byte_end":72579,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":72580,"byte_end":72583,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ It is apparent that allocation of a new slot can fail (there's nothing in the empty slot). In","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":72584,"byte_end":72681,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ such case, there's no way to send the new value out of the handler (there's no way to safely","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":72682,"byte_end":72778,"line_start":27,"line_end":27,"column_start":1,"column_end":97}},{"value":"/ wait for a slot to appear, because the handler can be blocking the thread that is responsible","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":72779,"byte_end":72876,"line_start":28,"line_end":28,"column_start":1,"column_end":98}},{"value":"/ for emptying them). But that's considered acceptable ‒ even the kernel collates the same kinds","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":72877,"byte_end":72977,"line_start":29,"line_end":29,"column_start":1,"column_end":99}},{"value":"/ of signals together if they are not consumed by application fast enough and there are no free","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":72978,"byte_end":73075,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ slots exactly because some are being filled, emptied or are full ‒ in particular, the whole","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":73076,"byte_end":73173,"line_start":31,"line_end":31,"column_start":1,"column_end":96}},{"value":"/ system will yield a signal.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":73174,"byte_end":73205,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":73206,"byte_end":73209,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This assumes that separate signals don't share the same buffer and that there's only one reader","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":73210,"byte_end":73309,"line_start":34,"line_end":34,"column_start":1,"column_end":100}},{"value":"/ (using multiple readers is still safe, but it is possible that all slots would be inside the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":73310,"byte_end":73406,"line_start":35,"line_end":35,"column_start":1,"column_end":97}},{"value":"/ readers, but already empty, so the above argument would not hold).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":73407,"byte_end":73477,"line_start":36,"line_end":36,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":271},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":76307,"byte_end":76314,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"Channel","qualname":"::low_level::channel::Channel","value":"Channel {  }","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":276}],"decl_id":null,"docs":" A restricted async-signal-safe channel","sig":null,"attributes":[{"value":"/ A restricted async-signal-safe channel","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":74856,"byte_end":74898,"line_start":87,"line_end":87,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":74899,"byte_end":74902,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ This is a bit like the usual channel used for inter-thread communication, but with several","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":74903,"byte_end":74997,"line_start":89,"line_end":89,"column_start":1,"column_end":95}},{"value":"/ restrictions:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":74998,"byte_end":75015,"line_start":90,"line_end":90,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":75016,"byte_end":75019,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ * There's a limited number of slots (currently 5).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":75020,"byte_end":75074,"line_start":92,"line_end":92,"column_start":1,"column_end":55}},{"value":"/ * There's no way to wait for a place in it or for a value. If value is not available, `None` is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":75075,"byte_end":75174,"line_start":93,"line_end":93,"column_start":1,"column_end":100}},{"value":"/   returned. If there's no space for a value, the value is silently dropped.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":75175,"byte_end":75254,"line_start":94,"line_end":94,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":75255,"byte_end":75258,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ In exchange for that, all the operations on that channel are async-signal-safe. That means it","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":75259,"byte_end":75356,"line_start":96,"line_end":96,"column_start":1,"column_end":98}},{"value":"/ is possible to use it to communicate between a signal handler and the rest of the world with it","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":75357,"byte_end":75456,"line_start":97,"line_end":97,"column_start":1,"column_end":100}},{"value":"/ (specifically, it's designed to send information from the handler to the rest of the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":75457,"byte_end":75545,"line_start":98,"line_end":98,"column_start":1,"column_end":89}},{"value":"/ application). The throwing out of values when full is in line with collating of the same type","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":75546,"byte_end":75643,"line_start":99,"line_end":99,"column_start":1,"column_end":98}},{"value":"/ in kernel (you should not use the same channel for multiple different signals).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":75644,"byte_end":75727,"line_start":100,"line_end":100,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":75728,"byte_end":75731,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Technically, this is a MPMC queue which preserves order, but it is expected to be used in MPSC","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":75732,"byte_end":75830,"line_start":102,"line_end":102,"column_start":1,"column_end":99}},{"value":"/ mode mostly (in theory, multiple threads can be executing a signal handler for the same signal","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":75831,"byte_end":75929,"line_start":103,"line_end":103,"column_start":1,"column_end":99}},{"value":"/ at the same time). The channel is not responsible for wakeups.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":75930,"byte_end":75996,"line_start":104,"line_end":104,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":75997,"byte_end":76000,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ While the channel is async-signal-safe, you still need to make sure *creating* of the values is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":76001,"byte_end":76100,"line_start":106,"line_end":106,"column_start":1,"column_end":100}},{"value":"/ too (it should not contain anything that allocates, for example ‒ so no `String`s inside, etc).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":76101,"byte_end":76202,"line_start":107,"line_end":107,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":76203,"byte_end":76206,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ The code was *not* tuned for performance (signals are not expected to happen often).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":76207,"byte_end":76295,"line_start":109,"line_end":109,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":76493,"byte_end":76496,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"new","qualname":"<Channel<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new channel with nothing in it.\n","sig":null,"attributes":[{"value":"/ Creates a new channel with nothing in it.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":76436,"byte_end":76481,"line_start":117,"line_end":117,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":76919,"byte_end":76923,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"send","qualname":"<Channel<T>>::send","value":"pub fn send(&Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value into the channel.","sig":null,"attributes":[{"value":"/ Inserts a value into the channel.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":76790,"byte_end":76827,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":76832,"byte_end":76835,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If the value doesn't fit, it is silently dropped. Never blocks.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":76840,"byte_end":76907,"line_start":135,"line_end":135,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":77262,"byte_end":77266,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"recv","qualname":"<Channel<T>>::recv","value":"pub fn recv(&Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes a value from the channel.","sig":null,"attributes":[{"value":"/ Takes a value from the channel.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":77142,"byte_end":77177,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":77182,"byte_end":77185,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Or returns `None` if the channel is empty. Never blocks.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":77190,"byte_end":77250,"line_start":145,"line_end":145,"column_start":5,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":290},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pipe","qualname":"::low_level::pipe","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":441},{"krate":0,"index":448},{"krate":0,"index":446},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":315}],"decl_id":null,"docs":" Module with the self-pipe pattern.","sig":null,"attributes":[{"value":"cfg(not(windows))","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":69966,"byte_end":69986,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"/ Module with the self-pipe pattern.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":79359,"byte_end":79397,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":79398,"byte_end":79401,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ One of the common patterns around signals is to have a pipe with both ends in the same program.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":79402,"byte_end":79501,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"/ Whenever there's a signal, the signal handler writes one byte of garbage data to the write end,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":79502,"byte_end":79601,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ unless the pipe's already full. The application then can handle the read end.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":79602,"byte_end":79683,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":79684,"byte_end":79687,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This has two advantages. First, the real signal action moves outside of the signal handler","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":79688,"byte_end":79782,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/ where there are a lot less restrictions. Second, it fits nicely in all kinds of asynchronous","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":79783,"byte_end":79879,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ loops and has less chance of race conditions.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":79880,"byte_end":79929,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":79930,"byte_end":79933,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This module offers premade functions for the write end (and doesn't insist that it must be a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":79934,"byte_end":80030,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"/ pipe ‒ anything that can be written to is fine ‒ sockets too, therefore `UnixStream::pair` is a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":80031,"byte_end":80134,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ good candidate).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":80135,"byte_end":80155,"line_start":13,"line_end":13,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":80156,"byte_end":80159,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ If you want to integrate with some asynchronous library, plugging streams from `mio-uds` or","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":80160,"byte_end":80255,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ `tokio-uds` libraries should work.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":80256,"byte_end":80294,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":80295,"byte_end":80298,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If it looks too low-level for your needs, the [`iterator`][crate::iterator] module contains some","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":80299,"byte_end":80399,"line_start":18,"line_end":18,"column_start":1,"column_end":101}},{"value":"/ higher-lever interface that also uses a self-pipe pattern under the hood.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":80400,"byte_end":80477,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":80478,"byte_end":80481,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Correct order of handling","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":80482,"byte_end":80513,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":80514,"byte_end":80517,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ A care needs to be taken to avoid race conditions, especially when handling the same signal in","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":80518,"byte_end":80616,"line_start":23,"line_end":23,"column_start":1,"column_end":99}},{"value":"/ a loop. Specifically, another signal might come when the action for the previous signal is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":80617,"byte_end":80711,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"/ being taken. The correct order is first to clear the content of the pipe (read some/all data","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":80712,"byte_end":80808,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"/ from it) and then take the action. This way a spurious wakeup can happen (the pipe could wake","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":80809,"byte_end":80906,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ up even when no signal came after the signal was taken, because ‒ it arrived between cleaning","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":80907,"byte_end":81006,"line_start":27,"line_end":27,"column_start":1,"column_end":98}},{"value":"/ the pipe and taking the action). Note that some OS primitives (eg. `select`) suffer from","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":81007,"byte_end":81099,"line_start":28,"line_end":28,"column_start":1,"column_end":93}},{"value":"/ spurious wakeups themselves (they can claim a FD is readable when it is not true) and blocking","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":81100,"byte_end":81198,"line_start":29,"line_end":29,"column_start":1,"column_end":99}},{"value":"/ `read` might return prematurely (with eg. `EINTR`).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":81199,"byte_end":81254,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":81255,"byte_end":81258,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The reverse order of first taking the action and then clearing the pipe might lose signals,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":81259,"byte_end":81354,"line_start":32,"line_end":32,"column_start":1,"column_end":96}},{"value":"/ which is usually worse.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":81355,"byte_end":81382,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":81383,"byte_end":81386,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This is not a problem with blocking on reading from the pipe (because both the blocking and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":81387,"byte_end":81482,"line_start":35,"line_end":35,"column_start":1,"column_end":96}},{"value":"/ cleaning is the same action), but in case of asynchronous handling it matters.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":81483,"byte_end":81565,"line_start":36,"line_end":36,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":81566,"byte_end":81569,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ If you want to combine setting some flags with a self-pipe pattern, the flag needs to be set","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":81570,"byte_end":81666,"line_start":38,"line_end":38,"column_start":1,"column_end":97}},{"value":"/ first, then the pipe written. On the read end, first the pipe needs to be cleaned, then the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":81667,"byte_end":81762,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/ flag and then the action taken. This is what the [`SignalsInfo`][crate::iterator::SignalsInfo]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":81763,"byte_end":81861,"line_start":40,"line_end":40,"column_start":1,"column_end":99}},{"value":"/ structure does internally.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":81862,"byte_end":81892,"line_start":41,"line_end":41,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":81893,"byte_end":81896,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Write collating","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":81897,"byte_end":81918,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":81919,"byte_end":81922,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ While unlikely if handled correctly, it is possible the write end is full when a signal comes.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":81923,"byte_end":82021,"line_start":45,"line_end":45,"column_start":1,"column_end":99}},{"value":"/ In such case the signal handler simply does nothing. If the write end is full, the read end is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82022,"byte_end":82120,"line_start":46,"line_end":46,"column_start":1,"column_end":99}},{"value":"/ readable and therefore will wake up. On the other hand, blocking in the signal handler would","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82121,"byte_end":82217,"line_start":47,"line_end":47,"column_start":1,"column_end":97}},{"value":"/ definitely be a bad idea.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82218,"byte_end":82247,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82248,"byte_end":82251,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ However, this also means the number of bytes read from the end might be lower than the number","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82252,"byte_end":82349,"line_start":50,"line_end":50,"column_start":1,"column_end":98}},{"value":"/ of signals that arrived. This should not generally be a problem, since the OS already collates","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82350,"byte_end":82448,"line_start":51,"line_end":51,"column_start":1,"column_end":99}},{"value":"/ signals of the same kind together.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82449,"byte_end":82487,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82488,"byte_end":82491,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82492,"byte_end":82506,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82507,"byte_end":82510,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This example waits for at last one `SIGUSR1` signal to come before continuing (and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82511,"byte_end":82597,"line_start":56,"line_end":56,"column_start":1,"column_end":87}},{"value":"/ terminating). It sends the signal to itself, so it correctly terminates.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82598,"byte_end":82674,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82675,"byte_end":82678,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82679,"byte_end":82690,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ use std::io::{Error, Read};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82691,"byte_end":82722,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ use std::os::unix::net::UnixStream;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82723,"byte_end":82762,"line_start":61,"line_end":61,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82763,"byte_end":82766,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ use signal_hook::consts::SIGUSR1;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82767,"byte_end":82804,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/ use signal_hook::low_level::{pipe, raise};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82805,"byte_end":82851,"line_start":64,"line_end":64,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82852,"byte_end":82855,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Error> {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82856,"byte_end":82892,"line_start":66,"line_end":66,"column_start":1,"column_end":37}},{"value":"/     let (mut read, write) = UnixStream::pair()?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82893,"byte_end":82945,"line_start":67,"line_end":67,"column_start":1,"column_end":53}},{"value":"/     pipe::register(SIGUSR1, write)?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82946,"byte_end":82986,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/     // This will write into the pipe write end through the signal handler","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":82987,"byte_end":83064,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/     raise(SIGUSR1).unwrap();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":83065,"byte_end":83097,"line_start":70,"line_end":70,"column_start":1,"column_end":33}},{"value":"/     let mut buff = [0];","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":83098,"byte_end":83125,"line_start":71,"line_end":71,"column_start":1,"column_end":28}},{"value":"/     read.read_exact(&mut buff)?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":83126,"byte_end":83162,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/     println!(\"Happily terminating\");","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":83163,"byte_end":83203,"line_start":73,"line_end":73,"column_start":1,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":83204,"byte_end":83218,"line_start":74,"line_end":74,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":83219,"byte_end":83224,"line_start":75,"line_end":75,"column_start":1,"column_end":6}}]},{"kind":"Function","id":{"krate":0,"index":313},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":86711,"byte_end":86723,"line_start":172,"line_end":172,"column_start":8,"column_end":20},"name":"register_raw","qualname":"::low_level::pipe::register_raw","value":"pub fn register_raw(c_int, RawFd) -> Result<SigId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Registers a write to a self-pipe whenever there's the signal.","sig":null,"attributes":[{"value":"/ Registers a write to a self-pipe whenever there's the signal.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":85352,"byte_end":85417,"line_start":149,"line_end":149,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":85418,"byte_end":85421,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ In this case, the pipe is taken as the `RawFd`. It'll be closed on deregistration. Effectively,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":85422,"byte_end":85521,"line_start":151,"line_end":151,"column_start":1,"column_end":100}},{"value":"/ the function takes ownership of the file descriptor. This includes feeling free to set arbitrary","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":85522,"byte_end":85622,"line_start":152,"line_end":152,"column_start":1,"column_end":101}},{"value":"/ flags on it, including file status flags (that are shared across file descriptors created by","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":85623,"byte_end":85719,"line_start":153,"line_end":153,"column_start":1,"column_end":97}},{"value":"/ `dup`).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":85720,"byte_end":85731,"line_start":154,"line_end":154,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":85732,"byte_end":85735,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ Note that passing the wrong file descriptor won't cause UB, but can still lead to severe bugs ‒","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":85736,"byte_end":85837,"line_start":156,"line_end":156,"column_start":1,"column_end":100}},{"value":"/ like data corruptions in files. Prefer using [`register`] if possible.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":85838,"byte_end":85912,"line_start":157,"line_end":157,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":85913,"byte_end":85916,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ Also, it is perfectly legal for multiple writes to be collated together (if not consumed) and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":85917,"byte_end":86014,"line_start":159,"line_end":159,"column_start":1,"column_end":98}},{"value":"/ to generate spurious wakeups (but will not generate spurious *bytes* in the pipe).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":86015,"byte_end":86101,"line_start":160,"line_end":160,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":86102,"byte_end":86105,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ # Internal details","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":86106,"byte_end":86128,"line_start":162,"line_end":162,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":86129,"byte_end":86132,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ Internally, it *currently* does following. Note that this is *not* part of the stability","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":86133,"byte_end":86225,"line_start":164,"line_end":164,"column_start":1,"column_end":93}},{"value":"/ guarantees and may change if necessary.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":86226,"byte_end":86269,"line_start":165,"line_end":165,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":86270,"byte_end":86273,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ * If the file descriptor can be used with [`send`][libc::send], it'll be used together with","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":86274,"byte_end":86369,"line_start":167,"line_end":167,"column_start":1,"column_end":96}},{"value":"/   [`MSG_DONTWAIT`][libc::MSG_DONTWAIT]. This is tested by sending `0` bytes of data (depending","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":86370,"byte_end":86468,"line_start":168,"line_end":168,"column_start":1,"column_end":99}},{"value":"/   on the socket type, this might wake the read end with an empty message).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":86469,"byte_end":86547,"line_start":169,"line_end":169,"column_start":1,"column_end":79}},{"value":"/ * If it is not possible, the [`O_NONBLOCK`][libc::O_NONBLOCK] will be set on the file","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":86548,"byte_end":86637,"line_start":170,"line_end":170,"column_start":1,"column_end":90}},{"value":"/   descriptor and [`write`][libc::write] will be used instead.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":86638,"byte_end":86703,"line_start":171,"line_end":171,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":315},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":87690,"byte_end":87698,"line_start":200,"line_end":200,"column_start":8,"column_end":16},"name":"register","qualname":"::low_level::pipe::register","value":"pub fn register<P>(c_int, P) -> Result<SigId, Error> where P: IntoRawFd +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Registers a write to a self-pipe whenever there's the signal.","sig":null,"attributes":[{"value":"/ Registers a write to a self-pipe whenever there's the signal.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":87323,"byte_end":87388,"line_start":192,"line_end":192,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":87389,"byte_end":87392,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ The ownership of pipe is taken and will be closed whenever the created action is unregistered.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":87393,"byte_end":87491,"line_start":194,"line_end":194,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":87492,"byte_end":87495,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ Note that if you want to register the same pipe for multiple signals, there's `try_clone`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":87496,"byte_end":87589,"line_start":196,"line_end":196,"column_start":1,"column_end":94}},{"value":"/ method on many unix socket primitives.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":87590,"byte_end":87632,"line_start":197,"line_end":197,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":87633,"byte_end":87636,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ See [`register_raw`] for further details.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":87637,"byte_end":87682,"line_start":199,"line_end":199,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":332},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":91461,"byte_end":91472,"line_start":94,"line_end":94,"column_start":8,"column_end":19},"name":"signal_name","qualname":"::low_level::signal_details::signal_name","value":"pub fn signal_name(c_int) -> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Provides a human-readable name of a signal.","sig":null,"attributes":[{"value":"/ Provides a human-readable name of a signal.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":91112,"byte_end":91159,"line_start":82,"line_end":82,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":91160,"byte_end":91163,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Note that the name does not have to be known (in case it is some less common, or non-standard","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":91164,"byte_end":91261,"line_start":84,"line_end":84,"column_start":1,"column_end":98}},{"value":"/ signal).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":91262,"byte_end":91274,"line_start":85,"line_end":85,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":91275,"byte_end":91278,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":91279,"byte_end":91293,"line_start":87,"line_end":87,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":91294,"byte_end":91297,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":91298,"byte_end":91305,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ # use signal_hook::low_level::signal_name;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":91306,"byte_end":91352,"line_start":90,"line_end":90,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(\"SIGKILL\", signal_name(9).unwrap());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":91353,"byte_end":91404,"line_start":91,"line_end":91,"column_start":1,"column_end":52}},{"value":"/ assert!(signal_name(142).is_none());","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":91405,"byte_end":91445,"line_start":92,"line_end":92,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":91446,"byte_end":91453,"line_start":93,"line_end":93,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":336},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":94164,"byte_end":94187,"line_start":155,"line_end":155,"column_start":8,"column_end":31},"name":"emulate_default_handler","qualname":"::low_level::signal_details::emulate_default_handler","value":"pub fn emulate_default_handler(c_int) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Emulates the behaviour of a default handler for the provided signal.","sig":null,"attributes":[{"value":"/ Emulates the behaviour of a default handler for the provided signal.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":92274,"byte_end":92346,"line_start":124,"line_end":124,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":92347,"byte_end":92350,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ This function does its best to provide the same action as the default handler would do, without","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":92351,"byte_end":92450,"line_start":126,"line_end":126,"column_start":1,"column_end":100}},{"value":"/ disrupting the rest of the handling of such signal in the application. It is also","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":92451,"byte_end":92536,"line_start":127,"line_end":127,"column_start":1,"column_end":86}},{"value":"/ async-signal-safe.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":92537,"byte_end":92559,"line_start":128,"line_end":128,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":92560,"byte_end":92563,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This function necessarily looks up the appropriate action in a table. That means it is possible","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":92564,"byte_end":92663,"line_start":130,"line_end":130,"column_start":1,"column_end":100}},{"value":"/ your system has a signal that is not known to this function. In such case an error is returned","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":92664,"byte_end":92762,"line_start":131,"line_end":131,"column_start":1,"column_end":99}},{"value":"/ (equivalent of `EINVAL`).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":92763,"byte_end":92792,"line_start":132,"line_end":132,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":92793,"byte_end":92796,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ See also the [`register_conditional_default`][crate::flag::register_conditional_default].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":92797,"byte_end":92890,"line_start":134,"line_end":134,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":92891,"byte_end":92894,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":92895,"byte_end":92908,"line_start":136,"line_end":136,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":92909,"byte_end":92912,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ There's a short race condition in case of signals that terminate (either with or without a core","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":92913,"byte_end":93012,"line_start":138,"line_end":138,"column_start":1,"column_end":100}},{"value":"/ dump). The emulation first resets the signal handler back to default (as the application is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":93013,"byte_end":93108,"line_start":139,"line_end":139,"column_start":1,"column_end":96}},{"value":"/ going to end, it's not a problem) and invokes it. But if some other thread installs a signal","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":93109,"byte_end":93205,"line_start":140,"line_end":140,"column_start":1,"column_end":97}},{"value":"/ handler in the meantime (without assistance from `signal-hook`), it can happen this will be","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":93206,"byte_end":93301,"line_start":141,"line_end":141,"column_start":1,"column_end":96}},{"value":"/ invoked by the re-raised signal.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":93302,"byte_end":93338,"line_start":142,"line_end":142,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":93339,"byte_end":93342,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ This function will still terminate the application (there's a fallback on `abort`), the risk is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":93343,"byte_end":93442,"line_start":144,"line_end":144,"column_start":1,"column_end":100}},{"value":"/ invoking the newly installed signal handler. Note that manipulating the low-level signals is","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":93443,"byte_end":93539,"line_start":145,"line_end":145,"column_start":1,"column_end":97}},{"value":"/ always racy in a multi-threaded program, therefore the described situation is already","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":93540,"byte_end":93629,"line_start":146,"line_end":146,"column_start":1,"column_end":90}},{"value":"/ discouraged.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":93630,"byte_end":93646,"line_start":147,"line_end":147,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":93647,"byte_end":93650,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ If you are uneasy about such race condition, the recommendation is to run relevant termination","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":93651,"byte_end":93749,"line_start":149,"line_end":149,"column_start":1,"column_end":99}},{"value":"/ routine manually ([`exit`][super::exit] or [`abort`][super::abort]); they always do what they","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":93750,"byte_end":93847,"line_start":150,"line_end":150,"column_start":1,"column_end":98}},{"value":"/ say, but slightly differ in externally observable behaviour from termination by a signal (the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":93848,"byte_end":93945,"line_start":151,"line_end":151,"column_start":1,"column_end":98}},{"value":"/ exit code will specify that the application exited, not that it terminated with a signal in the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":93946,"byte_end":94045,"line_start":152,"line_end":152,"column_start":1,"column_end":100}},{"value":"/ first case, and `abort` terminates on `SIGABRT`, so the detected termination signal may be","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":94046,"byte_end":94140,"line_start":153,"line_end":153,"column_start":1,"column_end":95}},{"value":"/ different).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/signal_details.rs","byte_start":94141,"byte_end":94156,"line_start":154,"line_end":154,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":346},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":70410,"byte_end":70415,"line_start":27,"line_end":27,"column_start":8,"column_end":13},"name":"raise","qualname":"::low_level::raise","value":"pub fn raise(c_int) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" The usual raise, just the safe wrapper around it.","sig":null,"attributes":[{"value":"/ The usual raise, just the safe wrapper around it.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":70314,"byte_end":70367,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":70368,"byte_end":70371,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is async-signal-safe.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":70372,"byte_end":70402,"line_start":26,"line_end":26,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":347},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":70843,"byte_end":70848,"line_start":41,"line_end":41,"column_start":8,"column_end":13},"name":"abort","qualname":"::low_level::abort","value":"pub fn abort() -> !","parent":null,"children":[],"decl_id":null,"docs":" A bare libc abort.","sig":null,"attributes":[{"value":"/ A bare libc abort.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":70592,"byte_end":70614,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":70615,"byte_end":70618,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Unlike the [std::process::abort], this one is guaranteed to contain no additions or wrappers","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":70619,"byte_end":70715,"line_start":38,"line_end":38,"column_start":1,"column_end":97}},{"value":"/ and therefore is async-signal-safe. You can use this to terminate the application from within a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":70716,"byte_end":70815,"line_start":39,"line_end":39,"column_start":1,"column_end":100}},{"value":"/ signal handler.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":70816,"byte_end":70835,"line_start":40,"line_end":40,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":348},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":71249,"byte_end":71253,"line_start":54,"line_end":54,"column_start":8,"column_end":12},"name":"exit","qualname":"::low_level::exit","value":"pub fn exit(c_int) -> !","parent":null,"children":[],"decl_id":null,"docs":" A bare libc exit.","sig":null,"attributes":[{"value":"/ A bare libc exit.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":70903,"byte_end":70924,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":70925,"byte_end":70928,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Unlike the [std::process::exit], this one is guaranteed to contain no additions or wrappers and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":70929,"byte_end":71028,"line_start":49,"line_end":49,"column_start":1,"column_end":100}},{"value":"/ therefore is async-signal-safe. You can use this to terminate the application from within a","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":71029,"byte_end":71124,"line_start":50,"line_end":50,"column_start":1,"column_end":96}},{"value":"/ signal handler.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":71125,"byte_end":71144,"line_start":51,"line_end":51,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":71145,"byte_end":71148,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Also, see [`register_conditional_shutdown`][crate::flag::register_conditional_shutdown].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":71149,"byte_end":71241,"line_start":53,"line_end":53,"column_start":1,"column_end":93}}]},{"kind":"Mod","id":{"krate":0,"index":349},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18255,"byte_end":18261,"line_start":356,"line_end":356,"column_start":9,"column_end":15},"name":"consts","qualname":"::consts","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384}],"decl_id":null,"docs":" The low-level constants.","sig":null,"attributes":[{"value":"/ The low-level constants.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18185,"byte_end":18213,"line_start":353,"line_end":353,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18214,"byte_end":18217,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ Like the signal numbers.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18218,"byte_end":18246,"line_start":355,"line_end":355,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":351},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18564,"byte_end":18570,"line_start":365,"line_end":365,"column_start":13,"column_end":19},"name":"signal","qualname":"::consts::signal","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381}],"decl_id":null,"docs":" The signal constants.","sig":null,"attributes":[{"value":"/ The signal constants.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18291,"byte_end":18316,"line_start":360,"line_end":360,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18321,"byte_end":18324,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Can be mass-imported by `use signal_hook::consts::signal::*`, without polluting the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18329,"byte_end":18416,"line_start":362,"line_end":362,"column_start":5,"column_end":92}},{"value":"/ namespace with other names. Also available in the [`consts`][crate::consts] directly (but","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18421,"byte_end":18514,"line_start":363,"line_end":363,"column_start":5,"column_end":98}},{"value":"/ with more constants around).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18519,"byte_end":18551,"line_start":364,"line_end":364,"column_start":5,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":384},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":19581,"byte_end":19593,"line_start":392,"line_end":392,"column_start":15,"column_end":27},"name":"TERM_SIGNALS","qualname":"::consts::TERM_SIGNALS","value":"&[c_int]","parent":null,"children":[],"decl_id":null,"docs":" Various signals commonly requesting shutdown of an application.\n","sig":null,"attributes":[{"value":"/ Various signals commonly requesting shutdown of an application.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":19474,"byte_end":19541,"line_start":390,"line_end":390,"column_start":5,"column_end":72}},{"value":"cfg(not(windows))","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":19546,"byte_end":19566,"line_start":391,"line_end":391,"column_start":5,"column_end":25}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":44007,"byte_end":44008,"line_start":42,"line_end":42,"column_start":58,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":44231,"byte_end":44244,"line_start":54,"line_end":54,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":44473,"byte_end":44486,"line_start":64,"line_end":64,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":44814,"byte_end":44828,"line_start":78,"line_end":78,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":45868,"byte_end":45882,"line_start":109,"line_end":109,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":46222,"byte_end":46236,"line_start":119,"line_end":119,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":47699,"byte_end":47705,"line_start":164,"line_end":164,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":50506,"byte_end":50520,"line_start":243,"line_end":243,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":55576,"byte_end":55583,"line_start":378,"line_end":378,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":55757,"byte_end":55764,"line_start":387,"line_end":387,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":56802,"byte_end":56816,"line_start":424,"line_end":424,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":67167,"byte_end":67171,"line_start":23,"line_end":23,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":68496,"byte_end":68510,"line_start":63,"line_end":63,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":65408,"byte_end":65409,"line_start":120,"line_end":120,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":65743,"byte_end":65753,"line_start":129,"line_end":129,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35367,"byte_end":35378,"line_start":131,"line_end":131,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40899,"byte_end":40910,"line_start":280,"line_end":280,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":41462,"byte_end":41469,"line_start":301,"line_end":301,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":76419,"byte_end":76426,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":77587,"byte_end":77594,"line_start":157,"line_end":157,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":77686,"byte_end":77693,"line_start":163,"line_end":163,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":77841,"byte_end":77848,"line_start":167,"line_end":167,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":83496,"byte_end":83502,"line_start":95,"line_end":95,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":84130,"byte_end":84136,"line_start":115,"line_end":115,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":84213,"byte_end":84219,"line_start":121,"line_end":121,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18022,"byte_end":18026,"line_start":347,"line_end":347,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18155,"byte_end":18163,"line_start":350,"line_end":350,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":25}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32963,"byte_end":32970,"line_start":60,"line_end":60,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":26}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":32980,"byte_end":32991,"line_start":61,"line_end":61,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":145}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":60357,"byte_end":60360,"line_start":17,"line_end":17,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":146}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/lib.rs","byte_start":18173,"byte_end":18182,"line_start":351,"line_end":351,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":255}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":69957,"byte_end":69964,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":258}},{"kind":"Mod","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/mod.rs","byte_start":70039,"byte_end":70043,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":290}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":43897,"byte_end":43902,"line_start":38,"line_end":38,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":6599},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":43905,"byte_end":43909,"line_start":38,"line_end":38,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":43912,"byte_end":43916,"line_start":38,"line_end":38,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":44007,"byte_end":44008,"line_start":42,"line_end":42,"column_start":58,"column_end":59},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":56},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":44231,"byte_end":44244,"line_start":54,"line_end":54,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":44473,"byte_end":44486,"line_start":64,"line_end":64,"column_start":15,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":386},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":44814,"byte_end":44828,"line_start":78,"line_end":78,"column_start":22,"column_end":36},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":64},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":45589,"byte_end":45594,"line_start":100,"line_end":100,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":6599},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":45597,"byte_end":45601,"line_start":100,"line_end":100,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":45604,"byte_end":45608,"line_start":100,"line_end":100,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":45868,"byte_end":45882,"line_start":109,"line_end":109,"column_start":32,"column_end":46},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":64},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":46222,"byte_end":46236,"line_start":119,"line_end":119,"column_start":36,"column_end":50},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":64},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":47699,"byte_end":47705,"line_start":164,"line_end":164,"column_start":6,"column_end":12},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":50506,"byte_end":50520,"line_start":243,"line_end":243,"column_start":25,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":55576,"byte_end":55583,"line_start":378,"line_end":378,"column_start":22,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":55757,"byte_end":55764,"line_start":387,"line_end":387,"column_start":35,"column_end":42},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":409},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/backend.rs","byte_start":56802,"byte_end":56816,"line_start":424,"line_end":424,"column_start":26,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":67167,"byte_end":67171,"line_start":23,"line_end":23,"column_start":15,"column_end":19},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/raw.rs","byte_start":68496,"byte_end":68510,"line_start":63,"line_end":63,"column_start":29,"column_end":43},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":423},"to":{"krate":0,"index":177}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":61285,"byte_end":61290,"line_start":41,"line_end":41,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":6599},"to":{"krate":0,"index":177}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":61293,"byte_end":61297,"line_start":41,"line_end":41,"column_start":43,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":177}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":61300,"byte_end":61304,"line_start":41,"line_end":41,"column_start":50,"column_end":54},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":177}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":65347,"byte_end":65358,"line_start":118,"line_end":118,"column_start":32,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":177},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":65408,"byte_end":65409,"line_start":120,"line_end":120,"column_start":46,"column_end":47},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":186},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/exfiltrator/mod.rs","byte_start":65743,"byte_end":65753,"line_start":129,"line_end":129,"column_start":37,"column_end":47},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":432},"to":{"krate":0,"index":177}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":35367,"byte_end":35378,"line_start":131,"line_end":131,"column_start":22,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":40899,"byte_end":40910,"line_start":280,"line_end":280,"column_start":19,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/iterator/mod.rs","byte_start":41462,"byte_end":41469,"line_start":301,"line_end":301,"column_start":39,"column_end":46},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":244},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":76419,"byte_end":76426,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":77587,"byte_end":77594,"line_start":157,"line_end":157,"column_start":21,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":271},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":77686,"byte_end":77693,"line_start":163,"line_end":163,"column_start":31,"column_end":38},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":271},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/channel.rs","byte_start":77841,"byte_end":77848,"line_start":167,"line_end":167,"column_start":31,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":271},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":83496,"byte_end":83502,"line_start":95,"line_end":95,"column_start":6,"column_end":12},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":84130,"byte_end":84136,"line_start":115,"line_end":115,"column_start":18,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":302},"to":{"krate":1,"index":8841}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.6/src/low_level/pipe.rs","byte_start":84213,"byte_end":84219,"line_start":121,"line_end":121,"column_start":15,"column_end":21},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":302},"to":{"krate":2,"index":2266}}]}