{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1","program":"/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","async_io","--edition=2018","/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=02cd0c407b6b6eec","-C","extra-filename=-02cd0c407b6b6eec","--out-dir","/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps","-L","dependency=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps","--extern","concurrent_queue=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libconcurrent_queue-ecb58e6bd6139881.rmeta","--extern","fastrand=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libfastrand-5d24534681b0a056.rmeta","--extern","futures_lite=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libfutures_lite-12ae348ae6641bca.rmeta","--extern","libc=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/liblibc-cebc448cccd95954.rmeta","--extern","log=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/liblog-2a69b353d1035ca7.rmeta","--extern","nb_connect=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libnb_connect-6db175e42a0b824e.rmeta","--extern","once_cell=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libonce_cell-9322d05a031c7470.rmeta","--extern","parking=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libparking-3cfc1145b69e198c.rmeta","--extern","polling=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libpolling-edf9be8e53f12f41.rmeta","--extern","vec_arena=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libvec_arena-79d768b1bd086020.rmeta","--extern","waker_fn=/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libwaker_fn-b0f5a196fa27ca08.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ytakasugi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ytakasugi/000_learning/workspace/Rust_workspace/rust_basics/practice/forcia/chapter07/timer/target/rls/debug/deps/libasync_io-02cd0c407b6b6eec.rmeta"},"prelude":{"crate_id":{"name":"async_io","disambiguator":[3136375700161750621,14936045025028152891]},"crate_root":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src","external_crates":[{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3329901521826220148,8779651902869174066]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-lite-1.11.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11533795067257537051,6600409280955634707]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12614123221401343543,9564301585503608515]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1785005413158388284,2453622026203223019]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12957079427417428001,17718260667887668647]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10214993728156300765,14618204673916620187]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12453517098623888364,4709794086161820998]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12634510118091288440,7983944581587655387]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14017342134866723280,9256858969587329629]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7061025862014072460,14171357653989770935]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2285728033677722481,16182084057206383065]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7305883247437987566,266452839079745451]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13956229687295891598,15294992126055156716]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[931598532372339641,10024719927090962737]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[11150552510595322945,15608256962932530162]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4217706585212656622,592289864015908737]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[2229008352226773351,3496425060661471051]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":18,"id":{"name":"futures_lite","disambiguator":[3270574104848016163,6475127915546221053]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":19,"id":{"name":"pin_project_lite","disambiguator":[5451979413912480634,3315749171994529137]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/driver.rs","num":20,"id":{"name":"parking","disambiguator":[557762954607312618,9598271235198617475]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/driver.rs","num":21,"id":{"name":"waker_fn","disambiguator":[15344459086643757242,15582702370677270888]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":22,"id":{"name":"futures_core","disambiguator":[6078039972692636654,3556027341069099362]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":23,"id":{"name":"futures_io","disambiguator":[16141740624011749928,9597051049152607161]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":24,"id":{"name":"fastrand","disambiguator":[13494850016202853761,11911527756278934652]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":25,"id":{"name":"memchr","disambiguator":[963486640598333284,2939605057166475393]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/driver.rs","num":26,"id":{"name":"once_cell","disambiguator":[16470873925282492797,14819406733220066589]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/reactor.rs","num":27,"id":{"name":"concurrent_queue","disambiguator":[15473339872719367366,4991876914407320509]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/reactor.rs","num":28,"id":{"name":"cache_padded","disambiguator":[5242769499696812714,678399743034637830]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/reactor.rs","num":29,"id":{"name":"polling","disambiguator":[4134544302828583531,18142628777346603010]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/reactor.rs","num":30,"id":{"name":"cfg_if","disambiguator":[9015421078749522011,4315844557797051765]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/driver.rs","num":31,"id":{"name":"log","disambiguator":[15023639168608180861,18039869484860833466]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/reactor.rs","num":32,"id":{"name":"cfg_if","disambiguator":[17405709527175409947,1096695995382631820]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/reactor.rs","num":33,"id":{"name":"value_bag","disambiguator":[17683222284734379674,1469789403133961335]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/reactor.rs","num":34,"id":{"name":"ctor","disambiguator":[13094809719813952805,11882337333484102486]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":35,"id":{"name":"libc","disambiguator":[3800494124530081931,3463518720461322788]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/reactor.rs","num":36,"id":{"name":"vec_arena","disambiguator":[5682896428784634481,2331341286297997565]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":37,"id":{"name":"nb_connect","disambiguator":[11331209626216024785,230895279324432942]}},{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","num":38,"id":{"name":"socket2","disambiguator":[6347961611624911856,1108877708034825851]}}],"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":0,"byte_end":56078,"line_start":1,"line_end":1716,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":73},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":2926,"byte_end":2934,"line_start":86,"line_end":86,"column_start":17,"column_end":25},"alias_span":null,"name":"block_on","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":0,"byte_end":56078,"line_start":1,"line_end":1716,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":91},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":405},{"krate":0,"index":409},{"krate":0,"index":190},{"krate":0,"index":199},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":411},{"krate":0,"index":415},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":255},{"krate":0,"index":260},{"krate":0,"index":266},{"krate":0,"index":273},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":377},{"krate":0,"index":380}],"decl_id":null,"docs":" Async I/O and timers.","sig":null,"attributes":[{"value":"/ Async I/O and timers.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":26,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides two tools:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":30,"byte_end":64,"line_start":3,"line_end":3,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":65,"byte_end":68,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * [`Async`], an adapter for standard networking types (and [many other] types) to use in","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":69,"byte_end":161,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/   async programs.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":162,"byte_end":183,"line_start":6,"line_end":6,"column_start":1,"column_end":22}},{"value":"/ * [`Timer`], a future or stream that emits timed events.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":184,"byte_end":244,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":245,"byte_end":248,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For concrete async networking types built on top of this crate, see [`async-net`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":249,"byte_end":335,"line_start":9,"line_end":9,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":336,"byte_end":339,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [many other]: https://github.com/stjepang/async-io/tree/master/examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":340,"byte_end":415,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ [`async-net`]: https://docs.rs/async-net","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":416,"byte_end":460,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":461,"byte_end":464,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":465,"byte_end":485,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":486,"byte_end":489,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The first time [`Async`] or [`Timer`] is used, a thread named \"async-io\" will be spawned.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":490,"byte_end":583,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/ The purpose of this thread is to wait for I/O events reported by the operating system, and then","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":584,"byte_end":683,"line_start":17,"line_end":17,"column_start":1,"column_end":100}},{"value":"/ wake appropriate futures blocked on I/O or timers when they can be resumed.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":684,"byte_end":763,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":764,"byte_end":767,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ To wait for the next I/O event, the \"async-io\" thread uses [epoll] on Linux/Android/illumos,","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":768,"byte_end":864,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ [kqueue] on macOS/iOS/BSD, [event ports] on illumos/Solaris, and [wepoll] on Windows. That","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":865,"byte_end":959,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"/ functionality is provided by the [`polling`] crate.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":960,"byte_end":1015,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1016,"byte_end":1019,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ However, note that you can also process I/O events and wake futures on any thread using the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1020,"byte_end":1115,"line_start":24,"line_end":24,"column_start":1,"column_end":96}},{"value":"/ [`block_on()`] function. The \"async-io\" thread is therefore just a fallback mechanism","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1116,"byte_end":1205,"line_start":25,"line_end":25,"column_start":1,"column_end":90}},{"value":"/ processing I/O events in case no other threads are.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1206,"byte_end":1261,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1262,"byte_end":1265,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [epoll]: https://en.wikipedia.org/wiki/Epoll","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1266,"byte_end":1314,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"/ [kqueue]: https://en.wikipedia.org/wiki/Kqueue","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1315,"byte_end":1365,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ [event ports]: https://illumos.org/man/port_create","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1366,"byte_end":1420,"line_start":30,"line_end":30,"column_start":1,"column_end":55}},{"value":"/ [wepoll]: https://github.com/piscisaureus/wepoll","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1421,"byte_end":1473,"line_start":31,"line_end":31,"column_start":1,"column_end":53}},{"value":"/ [`polling`]: https://docs.rs/polling","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1474,"byte_end":1514,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1515,"byte_end":1518,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1519,"byte_end":1533,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1534,"byte_end":1537,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Connect to `example.com:80`, or time out after 10 seconds.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1538,"byte_end":1600,"line_start":36,"line_end":36,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1601,"byte_end":1604,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1605,"byte_end":1612,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use async_io::{Async, Timer};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1613,"byte_end":1646,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/ use futures_lite::{future::FutureExt, io};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1647,"byte_end":1693,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1694,"byte_end":1697,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1698,"byte_end":1743,"line_start":42,"line_end":42,"column_start":1,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1744,"byte_end":1772,"line_start":43,"line_end":43,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1773,"byte_end":1776,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1777,"byte_end":1821,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1822,"byte_end":1889,"line_start":46,"line_end":46,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1890,"byte_end":1893,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).or(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1894,"byte_end":1955,"line_start":48,"line_end":48,"column_start":1,"column_end":62}},{"value":"/     Timer::after(Duration::from_secs(10)).await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":1956,"byte_end":2008,"line_start":49,"line_end":49,"column_start":1,"column_end":53}},{"value":"/     Err(io::ErrorKind::TimedOut.into())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":2009,"byte_end":2052,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/ })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":2053,"byte_end":2059,"line_start":51,"line_end":51,"column_start":1,"column_end":7}},{"value":"/ .await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":2060,"byte_end":2072,"line_start":52,"line_end":52,"column_start":1,"column_end":13}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":2073,"byte_end":2106,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":2107,"byte_end":2114,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":2116,"byte_end":2187,"line_start":56,"line_end":56,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":73},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/driver.rs","byte_start":59257,"byte_end":59265,"line_start":103,"line_end":103,"column_start":8,"column_end":16},"name":"block_on","qualname":"::driver::block_on","value":"pub fn block_on<T, impl Future<Output = T>: Future<Output =\n                T>>(impl Future<Output = T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread on a future, processing I/O events when idle.","sig":null,"attributes":[{"value":"/ Blocks the current thread on a future, processing I/O events when idle.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/driver.rs","byte_start":58860,"byte_end":58935,"line_start":89,"line_end":89,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/driver.rs","byte_start":58936,"byte_end":58939,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/driver.rs","byte_start":58940,"byte_end":58954,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/driver.rs","byte_start":58955,"byte_end":58958,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/driver.rs","byte_start":58959,"byte_end":58966,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/driver.rs","byte_start":58967,"byte_end":58991,"line_start":94,"line_end":94,"column_start":1,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/driver.rs","byte_start":58992,"byte_end":59020,"line_start":95,"line_end":95,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/driver.rs","byte_start":59021,"byte_end":59024,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ async_io::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/driver.rs","byte_start":59025,"byte_end":59055,"line_start":97,"line_end":97,"column_start":1,"column_end":31}},{"value":"/     // This timer will likely be processed by the current","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/driver.rs","byte_start":59056,"byte_end":59117,"line_start":98,"line_end":98,"column_start":1,"column_end":62}},{"value":"/     // thread rather than the fallback \"async-io\" thread.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/driver.rs","byte_start":59118,"byte_end":59179,"line_start":99,"line_end":99,"column_start":1,"column_end":62}},{"value":"/     Timer::after(Duration::from_millis(1)).await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/driver.rs","byte_start":59180,"byte_end":59233,"line_start":100,"line_end":100,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/driver.rs","byte_start":59234,"byte_end":59241,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/driver.rs","byte_start":59242,"byte_end":59249,"line_start":102,"line_end":102,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":405},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3977,"byte_end":3982,"line_start":129,"line_end":129,"column_start":12,"column_end":17},"name":"Timer","qualname":"::Timer","value":"Timer {  }","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408}],"decl_id":null,"docs":" A future or stream that emits timed events.","sig":null,"attributes":[{"value":"/ A future or stream that emits timed events.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3090,"byte_end":3137,"line_start":93,"line_end":93,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3138,"byte_end":3141,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Timers are futures that output a single [`Instant`] when they fire.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3142,"byte_end":3213,"line_start":95,"line_end":95,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3214,"byte_end":3217,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ Timers are also streams that can output [`Instant`]s periodically.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3218,"byte_end":3288,"line_start":97,"line_end":97,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3289,"byte_end":3292,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3293,"byte_end":3307,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3308,"byte_end":3311,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Sleep for 1 second:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3312,"byte_end":3335,"line_start":101,"line_end":101,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3336,"byte_end":3339,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3340,"byte_end":3347,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3348,"byte_end":3372,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3373,"byte_end":3401,"line_start":105,"line_end":105,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3402,"byte_end":3405,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3406,"byte_end":3450,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/ Timer::after(Duration::from_secs(1)).await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3451,"byte_end":3498,"line_start":108,"line_end":108,"column_start":1,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3499,"byte_end":3508,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3509,"byte_end":3516,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3517,"byte_end":3520,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ Timeout after 1 second:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3521,"byte_end":3548,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3549,"byte_end":3552,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3553,"byte_end":3560,"line_start":114,"line_end":114,"column_start":1,"column_end":8}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3561,"byte_end":3585,"line_start":115,"line_end":115,"column_start":1,"column_end":25}},{"value":"/ use futures_lite::FutureExt;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3586,"byte_end":3618,"line_start":116,"line_end":116,"column_start":1,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3619,"byte_end":3647,"line_start":117,"line_end":117,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3648,"byte_end":3651,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3652,"byte_end":3696,"line_start":119,"line_end":119,"column_start":1,"column_end":45}},{"value":"/ let addrs = async_net::resolve(\"google.com:80\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3697,"byte_end":3748,"line_start":120,"line_end":120,"column_start":1,"column_end":52}},{"value":"/     .or(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3749,"byte_end":3768,"line_start":121,"line_end":121,"column_start":1,"column_end":20}},{"value":"/         Timer::after(Duration::from_secs(10)).await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3769,"byte_end":3825,"line_start":122,"line_end":122,"column_start":1,"column_end":57}},{"value":"/         Err(std::io::ErrorKind::TimedOut.into())","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3826,"byte_end":3878,"line_start":123,"line_end":123,"column_start":1,"column_end":53}},{"value":"/     })","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3879,"byte_end":3889,"line_start":124,"line_end":124,"column_start":1,"column_end":11}},{"value":"/     .await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3890,"byte_end":3906,"line_start":125,"line_end":125,"column_start":1,"column_end":17}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3907,"byte_end":3940,"line_start":126,"line_end":126,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":3941,"byte_end":3948,"line_start":127,"line_end":127,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4646,"byte_end":4651,"line_start":155,"line_end":155,"column_start":12,"column_end":17},"name":"after","qualname":"<Timer>::after","value":"pub fn after(Duration) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that emits an event once after the given duration of time.","sig":null,"attributes":[{"value":"/ Creates a timer that emits an event once after the given duration of time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4312,"byte_end":4390,"line_start":143,"line_end":143,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4395,"byte_end":4398,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4403,"byte_end":4417,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4422,"byte_end":4425,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4430,"byte_end":4437,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4442,"byte_end":4466,"line_start":148,"line_end":148,"column_start":5,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4471,"byte_end":4499,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4504,"byte_end":4507,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4512,"byte_end":4556,"line_start":151,"line_end":151,"column_start":5,"column_end":49}},{"value":"/ Timer::after(Duration::from_secs(1)).await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4561,"byte_end":4608,"line_start":152,"line_end":152,"column_start":5,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4613,"byte_end":4622,"line_start":153,"line_end":153,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4627,"byte_end":4634,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5139,"byte_end":5141,"line_start":173,"line_end":173,"column_start":12,"column_end":14},"name":"at","qualname":"<Timer>::at","value":"pub fn at(Instant) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that emits an event once at the given time instant.","sig":null,"attributes":[{"value":"/ Creates a timer that emits an event once at the given time instant.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4739,"byte_end":4810,"line_start":159,"line_end":159,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4815,"byte_end":4818,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4823,"byte_end":4837,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4842,"byte_end":4845,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4850,"byte_end":4857,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4862,"byte_end":4886,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4891,"byte_end":4930,"line_start":165,"line_end":165,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4935,"byte_end":4938,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4943,"byte_end":4987,"line_start":167,"line_end":167,"column_start":5,"column_end":49}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4992,"byte_end":5021,"line_start":168,"line_end":168,"column_start":5,"column_end":34}},{"value":"/ let when = now + Duration::from_secs(1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5026,"byte_end":5070,"line_start":169,"line_end":169,"column_start":5,"column_end":49}},{"value":"/ Timer::at(when).await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5075,"byte_end":5101,"line_start":170,"line_end":170,"column_start":5,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5106,"byte_end":5115,"line_start":171,"line_end":171,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5120,"byte_end":5127,"line_start":172,"line_end":172,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5697,"byte_end":5705,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"interval","qualname":"<Timer>::interval","value":"pub fn interval(Duration) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that emits events periodically.","sig":null,"attributes":[{"value":"/ Creates a timer that emits events periodically.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5303,"byte_end":5354,"line_start":178,"line_end":178,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5359,"byte_end":5362,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5367,"byte_end":5381,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5386,"byte_end":5389,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5394,"byte_end":5401,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5406,"byte_end":5430,"line_start":183,"line_end":183,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::StreamExt;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5435,"byte_end":5467,"line_start":184,"line_end":184,"column_start":5,"column_end":37}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5472,"byte_end":5511,"line_start":185,"line_end":185,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5516,"byte_end":5519,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5524,"byte_end":5568,"line_start":187,"line_end":187,"column_start":5,"column_end":49}},{"value":"/ let period = Duration::from_secs(1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5573,"byte_end":5613,"line_start":188,"line_end":188,"column_start":5,"column_end":45}},{"value":"/ Timer::interval(period).next().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5618,"byte_end":5659,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5664,"byte_end":5673,"line_start":190,"line_end":190,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5678,"byte_end":5685,"line_start":191,"line_end":191,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6267,"byte_end":6278,"line_start":211,"line_end":211,"column_start":12,"column_end":23},"name":"interval_at","qualname":"<Timer>::interval_at","value":"pub fn interval_at(Instant, Duration) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that emits events periodically, starting at `start`.","sig":null,"attributes":[{"value":"/ Creates a timer that emits events periodically, starting at `start`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5806,"byte_end":5878,"line_start":196,"line_end":196,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5883,"byte_end":5886,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5891,"byte_end":5905,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5910,"byte_end":5913,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5918,"byte_end":5925,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5930,"byte_end":5954,"line_start":201,"line_end":201,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::StreamExt;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5959,"byte_end":5991,"line_start":202,"line_end":202,"column_start":5,"column_end":37}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":5996,"byte_end":6035,"line_start":203,"line_end":203,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6040,"byte_end":6043,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6048,"byte_end":6092,"line_start":205,"line_end":205,"column_start":5,"column_end":49}},{"value":"/ let start = Instant::now();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6097,"byte_end":6128,"line_start":206,"line_end":206,"column_start":5,"column_end":36}},{"value":"/ let period = Duration::from_secs(1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6133,"byte_end":6173,"line_start":207,"line_end":207,"column_start":5,"column_end":45}},{"value":"/ Timer::interval_at(start, period).next().await;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6178,"byte_end":6229,"line_start":208,"line_end":208,"column_start":5,"column_end":56}},{"value":"/ # });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6234,"byte_end":6243,"line_start":209,"line_end":209,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6248,"byte_end":6255,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7049,"byte_end":7058,"line_start":236,"line_end":236,"column_start":12,"column_end":21},"name":"set_after","qualname":"<Timer>::set_after","value":"pub fn set_after(&mut Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to emit an en event once after the given duration of time.","sig":null,"attributes":[{"value":"/ Sets the timer to emit an en event once after the given duration of time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6438,"byte_end":6515,"line_start":219,"line_end":219,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6520,"byte_end":6523,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6528,"byte_end":6606,"line_start":221,"line_end":221,"column_start":5,"column_end":83}},{"value":"/ [`set_after()`][`Timer::set_after()`] does not remove the waker associated with the task","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6611,"byte_end":6703,"line_start":222,"line_end":222,"column_start":5,"column_end":97}},{"value":"/ that is polling the timer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6708,"byte_end":6738,"line_start":223,"line_end":223,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6743,"byte_end":6746,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6751,"byte_end":6765,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6770,"byte_end":6773,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6778,"byte_end":6785,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6790,"byte_end":6814,"line_start":228,"line_end":228,"column_start":5,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6819,"byte_end":6847,"line_start":229,"line_end":229,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6852,"byte_end":6855,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6860,"byte_end":6904,"line_start":231,"line_end":231,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6909,"byte_end":6962,"line_start":232,"line_end":232,"column_start":5,"column_end":58}},{"value":"/ t.set_after(Duration::from_millis(100));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":6967,"byte_end":7011,"line_start":233,"line_end":233,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7016,"byte_end":7025,"line_start":234,"line_end":234,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7030,"byte_end":7037,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7823,"byte_end":7829,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"set_at","qualname":"<Timer>::set_at","value":"pub fn set_at(&mut Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to emit an event once at the given time instant.","sig":null,"attributes":[{"value":"/ Sets the timer to emit an event once at the given time instant.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7151,"byte_end":7218,"line_start":240,"line_end":240,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7223,"byte_end":7226,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7231,"byte_end":7309,"line_start":242,"line_end":242,"column_start":5,"column_end":83}},{"value":"/ [`set_at()`][`Timer::set_at()`] does not remove the waker associated with the task","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7314,"byte_end":7400,"line_start":243,"line_end":243,"column_start":5,"column_end":91}},{"value":"/ that is polling the timer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7405,"byte_end":7435,"line_start":244,"line_end":244,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7440,"byte_end":7443,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7448,"byte_end":7462,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7467,"byte_end":7470,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7475,"byte_end":7482,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7487,"byte_end":7511,"line_start":249,"line_end":249,"column_start":5,"column_end":29}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7516,"byte_end":7555,"line_start":250,"line_end":250,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7560,"byte_end":7563,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7568,"byte_end":7612,"line_start":252,"line_end":252,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7617,"byte_end":7670,"line_start":253,"line_end":253,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7675,"byte_end":7678,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7683,"byte_end":7712,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/ let when = now + Duration::from_secs(1);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7717,"byte_end":7761,"line_start":256,"line_end":256,"column_start":5,"column_end":49}},{"value":"/ t.set_at(when);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7766,"byte_end":7785,"line_start":257,"line_end":257,"column_start":5,"column_end":24}},{"value":"/ # });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7790,"byte_end":7799,"line_start":258,"line_end":258,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":7804,"byte_end":7811,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":8984,"byte_end":8996,"line_start":295,"line_end":295,"column_start":12,"column_end":24},"name":"set_interval","qualname":"<Timer>::set_interval","value":"pub fn set_interval(&mut Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to emit events periodically.","sig":null,"attributes":[{"value":"/ Sets the timer to emit events periodically.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":8313,"byte_end":8360,"line_start":275,"line_end":275,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":8365,"byte_end":8368,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":8373,"byte_end":8451,"line_start":277,"line_end":277,"column_start":5,"column_end":83}},{"value":"/ [`set_interval()`][`Timer::set_interval()`] does not remove the waker associated with the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":8456,"byte_end":8549,"line_start":278,"line_end":278,"column_start":5,"column_end":98}},{"value":"/ task that is polling the timer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":8554,"byte_end":8589,"line_start":279,"line_end":279,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":8594,"byte_end":8597,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":8602,"byte_end":8616,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":8621,"byte_end":8624,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":8629,"byte_end":8636,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":8641,"byte_end":8665,"line_start":284,"line_end":284,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::StreamExt;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":8670,"byte_end":8702,"line_start":285,"line_end":285,"column_start":5,"column_end":37}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":8707,"byte_end":8746,"line_start":286,"line_end":286,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":8751,"byte_end":8754,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":8759,"byte_end":8803,"line_start":288,"line_end":288,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":8808,"byte_end":8861,"line_start":289,"line_end":289,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":8866,"byte_end":8869,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let period = Duration::from_secs(2);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":8874,"byte_end":8914,"line_start":291,"line_end":291,"column_start":5,"column_end":45}},{"value":"/ t.set_interval(period);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":8919,"byte_end":8946,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":8951,"byte_end":8960,"line_start":293,"line_end":293,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":8965,"byte_end":8972,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9846,"byte_end":9861,"line_start":320,"line_end":320,"column_start":12,"column_end":27},"name":"set_interval_at","qualname":"<Timer>::set_interval_at","value":"pub fn set_interval_at(&mut Self, Instant, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to emit events periodically, starting at `start`.","sig":null,"attributes":[{"value":"/ Sets the timer to emit events periodically, starting at `start`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9102,"byte_end":9170,"line_start":299,"line_end":299,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9175,"byte_end":9178,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9183,"byte_end":9261,"line_start":301,"line_end":301,"column_start":5,"column_end":83}},{"value":"/ [`set_interval_at()`][`Timer::set_interval_at()`] does not remove the waker associated with","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9266,"byte_end":9361,"line_start":302,"line_end":302,"column_start":5,"column_end":100}},{"value":"/ the task that is polling the timer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9366,"byte_end":9405,"line_start":303,"line_end":303,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9410,"byte_end":9413,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9418,"byte_end":9432,"line_start":305,"line_end":305,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9437,"byte_end":9440,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9445,"byte_end":9452,"line_start":307,"line_end":307,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9457,"byte_end":9481,"line_start":308,"line_end":308,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::StreamExt;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9486,"byte_end":9518,"line_start":309,"line_end":309,"column_start":5,"column_end":37}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9523,"byte_end":9562,"line_start":310,"line_end":310,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9567,"byte_end":9570,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9575,"byte_end":9619,"line_start":312,"line_end":312,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9624,"byte_end":9677,"line_start":313,"line_end":313,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9682,"byte_end":9685,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let start = Instant::now();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9690,"byte_end":9721,"line_start":315,"line_end":315,"column_start":5,"column_end":36}},{"value":"/ let period = Duration::from_secs(2);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9726,"byte_end":9766,"line_start":316,"line_end":316,"column_start":5,"column_end":45}},{"value":"/ t.set_interval_at(start, period);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9771,"byte_end":9808,"line_start":317,"line_end":317,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9813,"byte_end":9822,"line_start":318,"line_end":318,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":9827,"byte_end":9834,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":411},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16339,"byte_end":16344,"line_start":489,"line_end":489,"column_start":12,"column_end":17},"name":"Async","qualname":"::Async","value":"Async {  }","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414}],"decl_id":null,"docs":" Async adapter for I/O types.","sig":null,"attributes":[{"value":"/ Async adapter for I/O types.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":12604,"byte_end":12636,"line_start":397,"line_end":397,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":12637,"byte_end":12640,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ This type puts an I/O handle into non-blocking mode, registers it in","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":12641,"byte_end":12713,"line_start":399,"line_end":399,"column_start":1,"column_end":73}},{"value":"/ [epoll]/[kqueue]/[event ports]/[wepoll], and then provides an async interface for it.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":12714,"byte_end":12803,"line_start":400,"line_end":400,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":12804,"byte_end":12807,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ [epoll]: https://en.wikipedia.org/wiki/Epoll","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":12808,"byte_end":12856,"line_start":402,"line_end":402,"column_start":1,"column_end":49}},{"value":"/ [kqueue]: https://en.wikipedia.org/wiki/Kqueue","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":12857,"byte_end":12907,"line_start":403,"line_end":403,"column_start":1,"column_end":51}},{"value":"/ [event ports]: https://illumos.org/man/port_create","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":12908,"byte_end":12962,"line_start":404,"line_end":404,"column_start":1,"column_end":55}},{"value":"/ [wepoll]: https://github.com/piscisaureus/wepoll","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":12963,"byte_end":13015,"line_start":405,"line_end":405,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13016,"byte_end":13019,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13020,"byte_end":13033,"line_start":407,"line_end":407,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13034,"byte_end":13037,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ [`Async`] is a low-level primitive, and as such it comes with some caveats.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13038,"byte_end":13117,"line_start":409,"line_end":409,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13118,"byte_end":13121,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ For higher-level primitives built on top of [`Async`], look into [`async-net`] or","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13122,"byte_end":13207,"line_start":411,"line_end":411,"column_start":1,"column_end":86}},{"value":"/ [`async-process`] (on Unix).","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13208,"byte_end":13240,"line_start":412,"line_end":412,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13241,"byte_end":13244,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ [`async-net`]: https://github.com/stjepang/async-net","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13245,"byte_end":13301,"line_start":414,"line_end":414,"column_start":1,"column_end":57}},{"value":"/ [`async-process`]: https://github.com/stjepang/async-process","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13302,"byte_end":13366,"line_start":415,"line_end":415,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13367,"byte_end":13370,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ ### Supported types","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13371,"byte_end":13394,"line_start":417,"line_end":417,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13395,"byte_end":13398,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/ [`Async`] supports all networking types, as well as some OS-specific file descriptors like","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13399,"byte_end":13493,"line_start":419,"line_end":419,"column_start":1,"column_end":95}},{"value":"/ [timerfd] and [inotify].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13494,"byte_end":13522,"line_start":420,"line_end":420,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13523,"byte_end":13526,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ However, do not use [`Async`] with types like [`File`][`std::fs::File`],","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13527,"byte_end":13603,"line_start":422,"line_end":422,"column_start":1,"column_end":77}},{"value":"/ [`Stdin`][`std::io::Stdin`], [`Stdout`][`std::io::Stdout`], or [`Stderr`][`std::io::Stderr`]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13604,"byte_end":13700,"line_start":423,"line_end":423,"column_start":1,"column_end":97}},{"value":"/ because all operating systems have issues with them when put in non-blocking mode.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13701,"byte_end":13787,"line_start":424,"line_end":424,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13788,"byte_end":13791,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ [timerfd]: https://github.com/stjepang/async-io/blob/master/examples/linux-timerfd.rs","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13792,"byte_end":13881,"line_start":426,"line_end":426,"column_start":1,"column_end":90}},{"value":"/ [inotify]: https://github.com/stjepang/async-io/blob/master/examples/linux-inotify.rs","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13882,"byte_end":13971,"line_start":427,"line_end":427,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13972,"byte_end":13975,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ ### Concurrent I/O","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13976,"byte_end":13998,"line_start":429,"line_end":429,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":13999,"byte_end":14002,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ Note that [`&Async<T>`][`Async`] implements [`AsyncRead`] and [`AsyncWrite`] if `&T`","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":14003,"byte_end":14091,"line_start":431,"line_end":431,"column_start":1,"column_end":89}},{"value":"/ implements those traits, which means tasks can concurrently read and write using shared","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":14092,"byte_end":14183,"line_start":432,"line_end":432,"column_start":1,"column_end":92}},{"value":"/ references.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":14184,"byte_end":14199,"line_start":433,"line_end":433,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":14200,"byte_end":14203,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ But there is a catch: only one task can read a time, and only one task can write at a time. It","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":14204,"byte_end":14302,"line_start":435,"line_end":435,"column_start":1,"column_end":99}},{"value":"/ is okay to have two tasks where one is reading and the other is writing at the same time, but","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":14303,"byte_end":14400,"line_start":436,"line_end":436,"column_start":1,"column_end":98}},{"value":"/ it is not okay to have two tasks reading at the same time or writing at the same time. If you","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":14401,"byte_end":14498,"line_start":437,"line_end":437,"column_start":1,"column_end":98}},{"value":"/ try to do that, conflicting tasks will just keep waking each other in turn, thus wasting CPU","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":14499,"byte_end":14595,"line_start":438,"line_end":438,"column_start":1,"column_end":97}},{"value":"/ time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":14596,"byte_end":14605,"line_start":439,"line_end":439,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":14606,"byte_end":14609,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ Besides [`AsyncRead`] and [`AsyncWrite`], this caveat also applies to","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":14610,"byte_end":14683,"line_start":441,"line_end":441,"column_start":1,"column_end":74}},{"value":"/ [`poll_readable()`][`Async::poll_readable()`] and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":14684,"byte_end":14737,"line_start":442,"line_end":442,"column_start":1,"column_end":54}},{"value":"/ [`poll_writable()`][`Async::poll_writable()`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":14738,"byte_end":14788,"line_start":443,"line_end":443,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":14789,"byte_end":14792,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ However, any number of tasks can be concurrently calling other methods like","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":14793,"byte_end":14872,"line_start":445,"line_end":445,"column_start":1,"column_end":80}},{"value":"/ [`readable()`][`Async::readable()`] or [`read_with()`][`Async::read_with()`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":14873,"byte_end":14954,"line_start":446,"line_end":446,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":14955,"byte_end":14958,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ ### Closing","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":14959,"byte_end":14974,"line_start":448,"line_end":448,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":14975,"byte_end":14978,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ Closing the write side of [`Async`] with [`close()`][`futures_lite::AsyncWriteExt::close()`]","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":14979,"byte_end":15075,"line_start":450,"line_end":450,"column_start":1,"column_end":97}},{"value":"/ simply flushes. If you want to shutdown a TCP or Unix socket, use","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15076,"byte_end":15145,"line_start":451,"line_end":451,"column_start":1,"column_end":70}},{"value":"/ [`Shutdown`][`std::net::Shutdown`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15146,"byte_end":15185,"line_start":452,"line_end":452,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15186,"byte_end":15189,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15190,"byte_end":15204,"line_start":454,"line_end":454,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15205,"byte_end":15208,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ Connect to a server and echo incoming messages back to the server:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15209,"byte_end":15279,"line_start":456,"line_end":456,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15280,"byte_end":15283,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15284,"byte_end":15297,"line_start":458,"line_end":458,"column_start":1,"column_end":14}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15298,"byte_end":15322,"line_start":459,"line_end":459,"column_start":1,"column_end":25}},{"value":"/ use futures_lite::io;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15323,"byte_end":15348,"line_start":460,"line_end":460,"column_start":1,"column_end":26}},{"value":"/ use std::net::TcpStream;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15349,"byte_end":15377,"line_start":461,"line_end":461,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15378,"byte_end":15381,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15382,"byte_end":15426,"line_start":463,"line_end":463,"column_start":1,"column_end":45}},{"value":"/ // Connect to a local server.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15427,"byte_end":15460,"line_start":464,"line_end":464,"column_start":1,"column_end":34}},{"value":"/ let stream = Async::<TcpStream>::connect(([127, 0, 0, 1], 8000)).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15461,"byte_end":15537,"line_start":465,"line_end":465,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15538,"byte_end":15541,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ // Echo all messages from the read side of the stream into the write side.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15542,"byte_end":15620,"line_start":467,"line_end":467,"column_start":1,"column_end":79}},{"value":"/ io::copy(&stream, &stream).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15621,"byte_end":15659,"line_start":468,"line_end":468,"column_start":1,"column_end":39}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15660,"byte_end":15693,"line_start":469,"line_end":469,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15694,"byte_end":15701,"line_start":470,"line_end":470,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15702,"byte_end":15705,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ You can use either predefined async methods or wrap blocking I/O operations in","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15706,"byte_end":15788,"line_start":472,"line_end":472,"column_start":1,"column_end":83}},{"value":"/ [`Async::read_with()`], [`Async::read_with_mut()`], [`Async::write_with()`], and","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15789,"byte_end":15873,"line_start":473,"line_end":473,"column_start":1,"column_end":85}},{"value":"/ [`Async::write_with_mut()`]:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15874,"byte_end":15906,"line_start":474,"line_end":474,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15907,"byte_end":15910,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15911,"byte_end":15924,"line_start":476,"line_end":476,"column_start":1,"column_end":14}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15925,"byte_end":15949,"line_start":477,"line_end":477,"column_start":1,"column_end":25}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15950,"byte_end":15980,"line_start":478,"line_end":478,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15981,"byte_end":15984,"line_start":479,"line_end":479,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":15985,"byte_end":16029,"line_start":480,"line_end":480,"column_start":1,"column_end":45}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16030,"byte_end":16098,"line_start":481,"line_end":481,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16099,"byte_end":16102,"line_start":482,"line_end":482,"column_start":1,"column_end":4}},{"value":"/ // These two lines are equivalent:","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16103,"byte_end":16141,"line_start":483,"line_end":483,"column_start":1,"column_end":39}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16142,"byte_end":16192,"line_start":484,"line_end":484,"column_start":1,"column_end":51}},{"value":"/ let (stream, addr) = listener.read_with(|inner| inner.accept()).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16193,"byte_end":16268,"line_start":485,"line_end":485,"column_start":1,"column_end":76}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16269,"byte_end":16302,"line_start":486,"line_end":486,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16303,"byte_end":16310,"line_start":487,"line_end":487,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":17449,"byte_end":17452,"line_start":525,"line_end":525,"column_start":12,"column_end":15},"name":"new","qualname":"<Async<T>>::new","value":"pub fn new(T) -> io::Result<Async<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an async I/O handle.","sig":null,"attributes":[{"value":"/ Creates an async I/O handle.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16548,"byte_end":16580,"line_start":501,"line_end":501,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16585,"byte_end":16588,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ This method will put the handle in non-blocking mode and register it in","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16593,"byte_end":16668,"line_start":503,"line_end":503,"column_start":5,"column_end":80}},{"value":"/ [epoll]/[kqueue]/[event ports]/[wepoll].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16673,"byte_end":16717,"line_start":504,"line_end":504,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16722,"byte_end":16725,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ On Unix systems, the handle must implement `AsRawFd`, while on Windows it must implement","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16730,"byte_end":16822,"line_start":506,"line_end":506,"column_start":5,"column_end":97}},{"value":"/ `AsRawSocket`.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16827,"byte_end":16845,"line_start":507,"line_end":507,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16850,"byte_end":16853,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ [epoll]: https://en.wikipedia.org/wiki/Epoll","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16858,"byte_end":16906,"line_start":509,"line_end":509,"column_start":5,"column_end":53}},{"value":"/ [kqueue]: https://en.wikipedia.org/wiki/Kqueue","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16911,"byte_end":16961,"line_start":510,"line_end":510,"column_start":5,"column_end":55}},{"value":"/ [event ports]: https://illumos.org/man/port_create","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16966,"byte_end":17020,"line_start":511,"line_end":511,"column_start":5,"column_end":59}},{"value":"/ [wepoll]: https://github.com/piscisaureus/wepoll","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":17025,"byte_end":17077,"line_start":512,"line_end":512,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":17082,"byte_end":17085,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":17090,"byte_end":17104,"line_start":514,"line_end":514,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":17109,"byte_end":17112,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":17117,"byte_end":17124,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":17129,"byte_end":17153,"line_start":517,"line_end":517,"column_start":5,"column_end":29}},{"value":"/ use std::net::{SocketAddr, TcpListener};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":17158,"byte_end":17202,"line_start":518,"line_end":518,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":17207,"byte_end":17210,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":17215,"byte_end":17259,"line_start":520,"line_end":520,"column_start":5,"column_end":49}},{"value":"/ let listener = TcpListener::bind(SocketAddr::from(([127, 0, 0, 1], 0)))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":17264,"byte_end":17341,"line_start":521,"line_end":521,"column_start":5,"column_end":82}},{"value":"/ let listener = Async::new(listener)?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":17346,"byte_end":17387,"line_start":522,"line_end":522,"column_start":5,"column_end":46}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":17392,"byte_end":17425,"line_start":523,"line_end":523,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":17430,"byte_end":17437,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20288,"byte_end":20295,"line_start":626,"line_end":626,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Async<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the inner I/O handle.","sig":null,"attributes":[{"value":"/ Gets a reference to the inner I/O handle.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":19900,"byte_end":19945,"line_start":613,"line_end":613,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":19950,"byte_end":19953,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":19958,"byte_end":19972,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":19977,"byte_end":19980,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":19985,"byte_end":19992,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":19997,"byte_end":20021,"line_start":618,"line_end":618,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20026,"byte_end":20056,"line_start":619,"line_end":619,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20061,"byte_end":20064,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20069,"byte_end":20113,"line_start":621,"line_end":621,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20118,"byte_end":20186,"line_start":622,"line_end":622,"column_start":5,"column_end":73}},{"value":"/ let inner = listener.get_ref();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20191,"byte_end":20226,"line_start":623,"line_end":623,"column_start":5,"column_end":40}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20231,"byte_end":20264,"line_start":624,"line_end":624,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20269,"byte_end":20276,"line_start":625,"line_end":625,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20756,"byte_end":20763,"line_start":643,"line_end":643,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Async<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the inner I/O handle.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the inner I/O handle.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20356,"byte_end":20409,"line_start":630,"line_end":630,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20414,"byte_end":20417,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20422,"byte_end":20436,"line_start":632,"line_end":632,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20441,"byte_end":20444,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20449,"byte_end":20456,"line_start":634,"line_end":634,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20461,"byte_end":20485,"line_start":635,"line_end":635,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20490,"byte_end":20520,"line_start":636,"line_end":636,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20525,"byte_end":20528,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20533,"byte_end":20577,"line_start":638,"line_end":638,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20582,"byte_end":20654,"line_start":639,"line_end":639,"column_start":5,"column_end":77}},{"value":"/ let inner = listener.get_mut();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20659,"byte_end":20694,"line_start":640,"line_end":640,"column_start":5,"column_end":40}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20699,"byte_end":20732,"line_start":641,"line_end":641,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20737,"byte_end":20744,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21397,"byte_end":21407,"line_start":665,"line_end":665,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Async<T>>::into_inner","value":"pub fn into_inner(Self) -> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the inner I/O handle.","sig":null,"attributes":[{"value":"/ Unwraps the inner I/O handle.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20832,"byte_end":20865,"line_start":647,"line_end":647,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20870,"byte_end":20873,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ This method will **not** put the I/O handle back into blocking mode.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20878,"byte_end":20950,"line_start":649,"line_end":649,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20955,"byte_end":20958,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20963,"byte_end":20977,"line_start":651,"line_end":651,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20982,"byte_end":20985,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":20990,"byte_end":20997,"line_start":653,"line_end":653,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21002,"byte_end":21026,"line_start":654,"line_end":654,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21031,"byte_end":21061,"line_start":655,"line_end":655,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21066,"byte_end":21069,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21074,"byte_end":21118,"line_start":657,"line_end":657,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21123,"byte_end":21191,"line_start":658,"line_end":658,"column_start":5,"column_end":73}},{"value":"/ let inner = listener.into_inner()?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21196,"byte_end":21235,"line_start":659,"line_end":659,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21240,"byte_end":21243,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ // Put the listener back into blocking mode.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21248,"byte_end":21296,"line_start":661,"line_end":661,"column_start":5,"column_end":53}},{"value":"/ inner.set_nonblocking(false)?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21301,"byte_end":21335,"line_start":662,"line_end":662,"column_start":5,"column_end":39}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21340,"byte_end":21373,"line_start":663,"line_end":663,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21378,"byte_end":21385,"line_start":664,"line_end":664,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22103,"byte_end":22111,"line_start":688,"line_end":688,"column_start":18,"column_end":26},"name":"readable","qualname":"<Async<T>>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits until the I/O handle is readable.","sig":null,"attributes":[{"value":"/ Waits until the I/O handle is readable.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21554,"byte_end":21597,"line_start":671,"line_end":671,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21602,"byte_end":21605,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ This method completes when a read operation on this I/O handle wouldn't block.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21610,"byte_end":21692,"line_start":673,"line_end":673,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21697,"byte_end":21700,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21705,"byte_end":21719,"line_start":675,"line_end":675,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21724,"byte_end":21727,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21732,"byte_end":21745,"line_start":677,"line_end":677,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21750,"byte_end":21774,"line_start":678,"line_end":678,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21779,"byte_end":21809,"line_start":679,"line_end":679,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21814,"byte_end":21817,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21822,"byte_end":21866,"line_start":681,"line_end":681,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21871,"byte_end":21943,"line_start":682,"line_end":682,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21948,"byte_end":21951,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ // Wait until a client can be accepted.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":21956,"byte_end":21999,"line_start":684,"line_end":684,"column_start":5,"column_end":48}},{"value":"/ listener.readable().await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22004,"byte_end":22035,"line_start":685,"line_end":685,"column_start":5,"column_end":36}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22040,"byte_end":22073,"line_start":686,"line_end":686,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22078,"byte_end":22085,"line_start":687,"line_end":687,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22800,"byte_end":22808,"line_start":710,"line_end":710,"column_start":18,"column_end":26},"name":"writable","qualname":"<Async<T>>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits until the I/O handle is writable.","sig":null,"attributes":[{"value":"/ Waits until the I/O handle is writable.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22187,"byte_end":22230,"line_start":692,"line_end":692,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22235,"byte_end":22238,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ This method completes when a write operation on this I/O handle wouldn't block.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22243,"byte_end":22326,"line_start":694,"line_end":694,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22331,"byte_end":22334,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22339,"byte_end":22353,"line_start":696,"line_end":696,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22358,"byte_end":22361,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22366,"byte_end":22373,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22378,"byte_end":22402,"line_start":699,"line_end":699,"column_start":5,"column_end":29}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22407,"byte_end":22452,"line_start":700,"line_end":700,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22457,"byte_end":22460,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22465,"byte_end":22509,"line_start":702,"line_end":702,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22514,"byte_end":22581,"line_start":703,"line_end":703,"column_start":5,"column_end":72}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22586,"byte_end":22644,"line_start":704,"line_end":704,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22649,"byte_end":22652,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is writable.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22657,"byte_end":22698,"line_start":706,"line_end":706,"column_start":5,"column_end":46}},{"value":"/ stream.writable().await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22703,"byte_end":22732,"line_start":707,"line_end":707,"column_start":5,"column_end":34}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22737,"byte_end":22770,"line_start":708,"line_end":708,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22775,"byte_end":22782,"line_start":709,"line_end":709,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23917,"byte_end":23930,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"poll_readable","qualname":"<Async<T>>::poll_readable","value":"pub fn poll_readable(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the I/O handle for readability.","sig":null,"attributes":[{"value":"/ Polls the I/O handle for readability.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22884,"byte_end":22925,"line_start":714,"line_end":714,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22930,"byte_end":22933,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ When this method returns [`Poll::Ready`], that means the OS has delivered an event","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":22938,"byte_end":23024,"line_start":716,"line_end":716,"column_start":5,"column_end":91}},{"value":"/ indicating readability since the last time this task has called the method and received","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23029,"byte_end":23120,"line_start":717,"line_end":717,"column_start":5,"column_end":96}},{"value":"/ [`Poll::Pending`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23125,"byte_end":23147,"line_start":718,"line_end":718,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23152,"byte_end":23155,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23160,"byte_end":23173,"line_start":720,"line_end":720,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23178,"byte_end":23181,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ Two different tasks should not call this method concurrently. Otherwise, conflicting tasks","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23186,"byte_end":23280,"line_start":722,"line_end":722,"column_start":5,"column_end":99}},{"value":"/ will just keep waking each other in turn, thus wasting CPU time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23285,"byte_end":23353,"line_start":723,"line_end":723,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23358,"byte_end":23361,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ Note that the [`AsyncRead`] implementation for [`Async`] also uses this method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23366,"byte_end":23449,"line_start":725,"line_end":725,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23454,"byte_end":23457,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23462,"byte_end":23476,"line_start":727,"line_end":727,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23481,"byte_end":23484,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23489,"byte_end":23502,"line_start":729,"line_end":729,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23507,"byte_end":23531,"line_start":730,"line_end":730,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::future;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23536,"byte_end":23565,"line_start":731,"line_end":731,"column_start":5,"column_end":34}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23570,"byte_end":23600,"line_start":732,"line_end":732,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23605,"byte_end":23608,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23613,"byte_end":23657,"line_start":734,"line_end":734,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23662,"byte_end":23734,"line_start":735,"line_end":735,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23739,"byte_end":23742,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ // Wait until a client can be accepted.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23747,"byte_end":23790,"line_start":737,"line_end":737,"column_start":5,"column_end":48}},{"value":"/ future::poll_fn(|cx| listener.poll_readable(cx)).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23795,"byte_end":23855,"line_start":738,"line_end":738,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23860,"byte_end":23893,"line_start":739,"line_end":739,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":23898,"byte_end":23905,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25132,"byte_end":25145,"line_start":773,"line_end":773,"column_start":12,"column_end":25},"name":"poll_writable","qualname":"<Async<T>>::poll_writable","value":"pub fn poll_writable(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the I/O handle for writability.","sig":null,"attributes":[{"value":"/ Polls the I/O handle for writability.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24035,"byte_end":24076,"line_start":745,"line_end":745,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24081,"byte_end":24084,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ When this method returns [`Poll::Ready`], that means the OS has delivered an event","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24089,"byte_end":24175,"line_start":747,"line_end":747,"column_start":5,"column_end":91}},{"value":"/ indicating writability since the last time this task has called the method and received","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24180,"byte_end":24271,"line_start":748,"line_end":748,"column_start":5,"column_end":96}},{"value":"/ [`Poll::Pending`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24276,"byte_end":24298,"line_start":749,"line_end":749,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24303,"byte_end":24306,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24311,"byte_end":24324,"line_start":751,"line_end":751,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24329,"byte_end":24332,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ Two different tasks should not call this method concurrently. Otherwise, conflicting tasks","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24337,"byte_end":24431,"line_start":753,"line_end":753,"column_start":5,"column_end":99}},{"value":"/ will just keep waking each other in turn, thus wasting CPU time.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24436,"byte_end":24504,"line_start":754,"line_end":754,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24509,"byte_end":24512,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ Note that the [`AsyncWrite`] implementation for [`Async`] also uses this method.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24517,"byte_end":24601,"line_start":756,"line_end":756,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24606,"byte_end":24609,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24614,"byte_end":24628,"line_start":758,"line_end":758,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24633,"byte_end":24636,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24641,"byte_end":24648,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24653,"byte_end":24677,"line_start":761,"line_end":761,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::future;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24682,"byte_end":24711,"line_start":762,"line_end":762,"column_start":5,"column_end":34}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24716,"byte_end":24761,"line_start":763,"line_end":763,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24766,"byte_end":24769,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24774,"byte_end":24818,"line_start":765,"line_end":765,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24823,"byte_end":24890,"line_start":766,"line_end":766,"column_start":5,"column_end":72}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24895,"byte_end":24953,"line_start":767,"line_end":767,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24958,"byte_end":24961,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is writable.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":24966,"byte_end":25007,"line_start":769,"line_end":769,"column_start":5,"column_end":46}},{"value":"/ future::poll_fn(|cx| stream.poll_writable(cx)).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25012,"byte_end":25070,"line_start":770,"line_end":770,"column_start":5,"column_end":63}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25075,"byte_end":25108,"line_start":771,"line_end":771,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25113,"byte_end":25120,"line_start":772,"line_end":772,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":26164,"byte_end":26173,"line_start":799,"line_end":799,"column_start":18,"column_end":27},"name":"read_with","qualname":"<Async<T>>::read_with","value":"pub async fn read_with<R, '_, impl FnMut(&T) -> io::Result<R>: FnMut(&T) ->\n                       io::Result<R>>(&'_ Self,\n                                      impl FnMut(&T) -> io::Result<R>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Performs a read operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a read operation asynchronously.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25250,"byte_end":25295,"line_start":777,"line_end":777,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25300,"byte_end":25303,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This method","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25308,"byte_end":25397,"line_start":779,"line_end":779,"column_start":5,"column_end":94}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25402,"byte_end":25489,"line_start":780,"line_end":780,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25494,"byte_end":25585,"line_start":781,"line_end":781,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is readable.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25590,"byte_end":25647,"line_start":782,"line_end":782,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25652,"byte_end":25655,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ The closure receives a shared reference to the I/O handle.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25660,"byte_end":25722,"line_start":784,"line_end":784,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25727,"byte_end":25730,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25735,"byte_end":25749,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25754,"byte_end":25757,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25762,"byte_end":25775,"line_start":788,"line_end":788,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25780,"byte_end":25804,"line_start":789,"line_end":789,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25809,"byte_end":25839,"line_start":790,"line_end":790,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25844,"byte_end":25847,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25852,"byte_end":25896,"line_start":792,"line_end":792,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25901,"byte_end":25969,"line_start":793,"line_end":793,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25974,"byte_end":25977,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ // Accept a new client asynchronously.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":25982,"byte_end":26024,"line_start":795,"line_end":795,"column_start":5,"column_end":47}},{"value":"/ let (stream, addr) = listener.read_with(|l| l.accept()).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":26029,"byte_end":26096,"line_start":796,"line_end":796,"column_start":5,"column_end":72}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":26101,"byte_end":26134,"line_start":797,"line_end":797,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":26139,"byte_end":26146,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":27434,"byte_end":27447,"line_start":832,"line_end":832,"column_start":18,"column_end":31},"name":"read_with_mut","qualname":"<Async<T>>::read_with_mut","value":"pub async fn read_with_mut<R, '_,\n                           impl FnMut(&mut T) -> io::Result<R>: FnMut(&mut T)\n                           ->\n                           io::Result<R>>(&'_ mut Self,\n                                          impl FnMut(&mut T) -> io::Result<R>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Performs a read operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a read operation asynchronously.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":26511,"byte_end":26556,"line_start":810,"line_end":810,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":26561,"byte_end":26564,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This method","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":26569,"byte_end":26658,"line_start":812,"line_end":812,"column_start":5,"column_end":94}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":26663,"byte_end":26750,"line_start":813,"line_end":813,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":26755,"byte_end":26846,"line_start":814,"line_end":814,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is readable.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":26851,"byte_end":26908,"line_start":815,"line_end":815,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":26913,"byte_end":26916,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ The closure receives a mutable reference to the I/O handle.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":26921,"byte_end":26984,"line_start":817,"line_end":817,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":26989,"byte_end":26992,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":26997,"byte_end":27011,"line_start":819,"line_end":819,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":27016,"byte_end":27019,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":27024,"byte_end":27037,"line_start":821,"line_end":821,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":27042,"byte_end":27066,"line_start":822,"line_end":822,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":27071,"byte_end":27101,"line_start":823,"line_end":823,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":27106,"byte_end":27109,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":27114,"byte_end":27158,"line_start":825,"line_end":825,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":27163,"byte_end":27235,"line_start":826,"line_end":826,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":27240,"byte_end":27243,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ // Accept a new client asynchronously.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":27248,"byte_end":27290,"line_start":828,"line_end":828,"column_start":5,"column_end":47}},{"value":"/ let (stream, addr) = listener.read_with_mut(|l| l.accept()).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":27295,"byte_end":27366,"line_start":829,"line_end":829,"column_start":5,"column_end":76}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":27371,"byte_end":27404,"line_start":830,"line_end":830,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":27409,"byte_end":27416,"line_start":831,"line_end":831,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":28751,"byte_end":28761,"line_start":869,"line_end":869,"column_start":18,"column_end":28},"name":"write_with","qualname":"<Async<T>>::write_with","value":"pub async fn write_with<R, '_, impl FnMut(&T) -> io::Result<R>: FnMut(&T) ->\n                        io::Result<R>>(&'_ Self,\n                                       impl FnMut(&T) -> io::Result<R>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Performs a write operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a write operation asynchronously.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":27816,"byte_end":27862,"line_start":846,"line_end":846,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":27867,"byte_end":27870,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This method","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":27875,"byte_end":27964,"line_start":848,"line_end":848,"column_start":5,"column_end":94}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":27969,"byte_end":28056,"line_start":849,"line_end":849,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":28061,"byte_end":28152,"line_start":850,"line_end":850,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is writable.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":28157,"byte_end":28214,"line_start":851,"line_end":851,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":28219,"byte_end":28222,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ The closure receives a shared reference to the I/O handle.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":28227,"byte_end":28289,"line_start":853,"line_end":853,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":28294,"byte_end":28297,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":28302,"byte_end":28316,"line_start":855,"line_end":855,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":28321,"byte_end":28324,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":28329,"byte_end":28342,"line_start":857,"line_end":857,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":28347,"byte_end":28371,"line_start":858,"line_end":858,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":28376,"byte_end":28404,"line_start":859,"line_end":859,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":28409,"byte_end":28412,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":28417,"byte_end":28461,"line_start":861,"line_end":861,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":28466,"byte_end":28533,"line_start":862,"line_end":862,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":28538,"byte_end":28586,"line_start":863,"line_end":863,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":28591,"byte_end":28594,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":28599,"byte_end":28622,"line_start":865,"line_end":865,"column_start":5,"column_end":28}},{"value":"/ let len = socket.write_with(|s| s.send(msg)).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":28627,"byte_end":28683,"line_start":866,"line_end":866,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":28688,"byte_end":28721,"line_start":867,"line_end":867,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":28726,"byte_end":28733,"line_start":868,"line_end":868,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":30043,"byte_end":30057,"line_start":903,"line_end":903,"column_start":18,"column_end":32},"name":"write_with_mut","qualname":"<Async<T>>::write_with_mut","value":"pub async fn write_with_mut<R, '_,\n                            impl FnMut(&mut T) -> io::Result<R>: FnMut(&mut T)\n                            ->\n                            io::Result<R>>(&'_ mut Self,\n                                           impl FnMut(&mut T) -> io::Result<R>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Performs a write operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a write operation asynchronously.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29099,"byte_end":29145,"line_start":880,"line_end":880,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29150,"byte_end":29153,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This method","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29158,"byte_end":29247,"line_start":882,"line_end":882,"column_start":5,"column_end":94}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29252,"byte_end":29339,"line_start":883,"line_end":883,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29344,"byte_end":29435,"line_start":884,"line_end":884,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is writable.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29440,"byte_end":29497,"line_start":885,"line_end":885,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29502,"byte_end":29505,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ The closure receives a mutable reference to the I/O handle.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29510,"byte_end":29573,"line_start":887,"line_end":887,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29578,"byte_end":29581,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29586,"byte_end":29600,"line_start":889,"line_end":889,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29605,"byte_end":29608,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29613,"byte_end":29626,"line_start":891,"line_end":891,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29631,"byte_end":29655,"line_start":892,"line_end":892,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29660,"byte_end":29688,"line_start":893,"line_end":893,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29693,"byte_end":29696,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29701,"byte_end":29745,"line_start":895,"line_end":895,"column_start":5,"column_end":49}},{"value":"/ let mut socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29750,"byte_end":29821,"line_start":896,"line_end":896,"column_start":5,"column_end":76}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29826,"byte_end":29874,"line_start":897,"line_end":897,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29879,"byte_end":29882,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29887,"byte_end":29910,"line_start":899,"line_end":899,"column_start":5,"column_end":28}},{"value":"/ let len = socket.write_with_mut(|s| s.send(msg)).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29915,"byte_end":29975,"line_start":900,"line_end":900,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":29980,"byte_end":30013,"line_start":901,"line_end":901,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":30018,"byte_end":30025,"line_start":902,"line_end":902,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":35800,"byte_end":35804,"line_start":1100,"line_end":1100,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<TcpListener>>::bind","value":"pub fn bind<A: Into<SocketAddr>>(A) -> io::Result<Async<TcpListener>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a TCP listener bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a TCP listener bound to the specified address.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":35281,"byte_end":35339,"line_start":1085,"line_end":1085,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":35344,"byte_end":35347,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ Binding with port number 0 will request an available port from the OS.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":35352,"byte_end":35426,"line_start":1087,"line_end":1087,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":35431,"byte_end":35434,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":35439,"byte_end":35453,"line_start":1089,"line_end":1089,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":35458,"byte_end":35461,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":35466,"byte_end":35473,"line_start":1091,"line_end":1091,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":35478,"byte_end":35502,"line_start":1092,"line_end":1092,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":35507,"byte_end":35537,"line_start":1093,"line_end":1093,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":35542,"byte_end":35545,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":35550,"byte_end":35594,"line_start":1095,"line_end":1095,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":35599,"byte_end":35667,"line_start":1096,"line_end":1096,"column_start":5,"column_end":73}},{"value":"/ println!(\"Listening on {}\", listener.get_ref().local_addr()?);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":35672,"byte_end":35738,"line_start":1097,"line_end":1097,"column_start":5,"column_end":71}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":35743,"byte_end":35776,"line_start":1098,"line_end":1098,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":35781,"byte_end":35788,"line_start":1099,"line_end":1099,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36554,"byte_end":36560,"line_start":1122,"line_end":1122,"column_start":18,"column_end":24},"name":"accept","qualname":"<Async<TcpListener>>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming TCP connection.","sig":null,"attributes":[{"value":"/ Accepts a new incoming TCP connection.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":35964,"byte_end":36006,"line_start":1105,"line_end":1105,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36011,"byte_end":36014,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, it will be returned as a TCP stream together with its","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36019,"byte_end":36110,"line_start":1107,"line_end":1107,"column_start":5,"column_end":96}},{"value":"/ remote address.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36115,"byte_end":36134,"line_start":1108,"line_end":1108,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36139,"byte_end":36142,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36147,"byte_end":36161,"line_start":1110,"line_end":1110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36166,"byte_end":36169,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36174,"byte_end":36187,"line_start":1112,"line_end":1112,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36192,"byte_end":36216,"line_start":1113,"line_end":1113,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36221,"byte_end":36251,"line_start":1114,"line_end":1114,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36256,"byte_end":36259,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36264,"byte_end":36308,"line_start":1116,"line_end":1116,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36313,"byte_end":36384,"line_start":1117,"line_end":1117,"column_start":5,"column_end":76}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36389,"byte_end":36439,"line_start":1118,"line_end":1118,"column_start":5,"column_end":55}},{"value":"/ println!(\"Accepted client: {}\", addr);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36444,"byte_end":36486,"line_start":1119,"line_end":1119,"column_start":5,"column_end":47}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36491,"byte_end":36524,"line_start":1120,"line_end":1120,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36529,"byte_end":36536,"line_start":1121,"line_end":1121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":37480,"byte_end":37488,"line_start":1149,"line_end":1149,"column_start":12,"column_end":20},"name":"incoming","qualname":"<Async<TcpListener>>::incoming","value":"pub fn incoming(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming TCP connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming TCP connections.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36737,"byte_end":36786,"line_start":1127,"line_end":1127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36791,"byte_end":36794,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ The stream is infinite, i.e. it never stops with a [`None`].","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36799,"byte_end":36863,"line_start":1129,"line_end":1129,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36868,"byte_end":36871,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36876,"byte_end":36890,"line_start":1131,"line_end":1131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36895,"byte_end":36898,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36903,"byte_end":36916,"line_start":1133,"line_end":1133,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36921,"byte_end":36945,"line_start":1134,"line_end":1134,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::{pin, stream::StreamExt};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":36950,"byte_end":36997,"line_start":1135,"line_end":1135,"column_start":5,"column_end":52}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":37002,"byte_end":37032,"line_start":1136,"line_end":1136,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":37037,"byte_end":37040,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":37045,"byte_end":37089,"line_start":1138,"line_end":1138,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":37094,"byte_end":37165,"line_start":1139,"line_end":1139,"column_start":5,"column_end":76}},{"value":"/ let incoming = listener.incoming();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":37170,"byte_end":37209,"line_start":1140,"line_end":1140,"column_start":5,"column_end":44}},{"value":"/ pin!(incoming);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":37214,"byte_end":37233,"line_start":1141,"line_end":1141,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":37238,"byte_end":37241,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":37246,"byte_end":37298,"line_start":1143,"line_end":1143,"column_start":5,"column_end":57}},{"value":"/     let stream = stream?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":37303,"byte_end":37332,"line_start":1144,"line_end":1144,"column_start":5,"column_end":34}},{"value":"/     println!(\"Accepted client: {}\", stream.get_ref().peer_addr()?);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":37337,"byte_end":37408,"line_start":1145,"line_end":1145,"column_start":5,"column_end":76}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":37413,"byte_end":37418,"line_start":1146,"line_end":1146,"column_start":5,"column_end":10}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":37423,"byte_end":37456,"line_start":1147,"line_end":1147,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":37461,"byte_end":37468,"line_start":1148,"line_end":1148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":38419,"byte_end":38426,"line_start":1179,"line_end":1179,"column_start":18,"column_end":25},"name":"connect","qualname":"<Async<TcpStream>>::connect","value":"pub async fn connect<A: Into<SocketAddr>>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a TCP connection to the specified address.","sig":null,"attributes":[{"value":"/ Creates a TCP connection to the specified address.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":37979,"byte_end":38033,"line_start":1166,"line_end":1166,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":38038,"byte_end":38041,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":38046,"byte_end":38060,"line_start":1168,"line_end":1168,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":38065,"byte_end":38068,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":38073,"byte_end":38080,"line_start":1170,"line_end":1170,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":38085,"byte_end":38109,"line_start":1171,"line_end":1171,"column_start":5,"column_end":29}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":38114,"byte_end":38159,"line_start":1172,"line_end":1172,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":38164,"byte_end":38167,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":38172,"byte_end":38216,"line_start":1174,"line_end":1174,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":38221,"byte_end":38288,"line_start":1175,"line_end":1175,"column_start":5,"column_end":72}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":38293,"byte_end":38351,"line_start":1176,"line_end":1176,"column_start":5,"column_end":63}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":38356,"byte_end":38389,"line_start":1177,"line_end":1177,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":38394,"byte_end":38401,"line_start":1178,"line_end":1178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39695,"byte_end":39699,"line_start":1216,"line_end":1216,"column_start":18,"column_end":22},"name":"peek","qualname":"<Async<TcpStream>>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads data from the stream without removing it from the buffer.","sig":null,"attributes":[{"value":"/ Reads data from the stream without removing it from the buffer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":38864,"byte_end":38931,"line_start":1193,"line_end":1193,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":38936,"byte_end":38939,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read. Successive calls of this method read the same data.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":38944,"byte_end":39033,"line_start":1195,"line_end":1195,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39038,"byte_end":39041,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39046,"byte_end":39060,"line_start":1197,"line_end":1197,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39065,"byte_end":39068,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39073,"byte_end":39080,"line_start":1199,"line_end":1199,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39085,"byte_end":39109,"line_start":1200,"line_end":1200,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::{io::AsyncWriteExt, stream::StreamExt};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39114,"byte_end":39175,"line_start":1201,"line_end":1201,"column_start":5,"column_end":66}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39180,"byte_end":39225,"line_start":1202,"line_end":1202,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39230,"byte_end":39233,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39238,"byte_end":39282,"line_start":1204,"line_end":1204,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39287,"byte_end":39354,"line_start":1205,"line_end":1205,"column_start":5,"column_end":72}},{"value":"/ let mut stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39359,"byte_end":39421,"line_start":1206,"line_end":1206,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39426,"byte_end":39429,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ stream","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39434,"byte_end":39444,"line_start":1208,"line_end":1208,"column_start":5,"column_end":15}},{"value":"/     .write_all(b\"GET / HTTP/1.1\\r\\nHost: example.com\\r\\n\\r\\n\")","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39449,"byte_end":39515,"line_start":1209,"line_end":1209,"column_start":5,"column_end":71}},{"value":"/     .await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39520,"byte_end":39536,"line_start":1210,"line_end":1210,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39541,"byte_end":39544,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39549,"byte_end":39579,"line_start":1212,"line_end":1212,"column_start":5,"column_end":35}},{"value":"/ let len = stream.peek(&mut buf).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39584,"byte_end":39627,"line_start":1213,"line_end":1213,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39632,"byte_end":39665,"line_start":1214,"line_end":1214,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39670,"byte_end":39677,"line_start":1215,"line_end":1215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40535,"byte_end":40539,"line_start":1245,"line_end":1245,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<UdpSocket>>::bind","value":"pub fn bind<A: Into<SocketAddr>>(A) -> io::Result<Async<UdpSocket>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket bound to the specified address.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40030,"byte_end":40086,"line_start":1230,"line_end":1230,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40091,"byte_end":40094,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ Binding with port number 0 will request an available port from the OS.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40099,"byte_end":40173,"line_start":1232,"line_end":1232,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40178,"byte_end":40181,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40186,"byte_end":40200,"line_start":1234,"line_end":1234,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40205,"byte_end":40208,"line_start":1235,"line_end":1235,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40213,"byte_end":40220,"line_start":1236,"line_end":1236,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40225,"byte_end":40249,"line_start":1237,"line_end":1237,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40254,"byte_end":40282,"line_start":1238,"line_end":1238,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40287,"byte_end":40290,"line_start":1239,"line_end":1239,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40295,"byte_end":40339,"line_start":1240,"line_end":1240,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40344,"byte_end":40408,"line_start":1241,"line_end":1241,"column_start":5,"column_end":69}},{"value":"/ println!(\"Bound to {}\", socket.get_ref().local_addr()?);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40413,"byte_end":40473,"line_start":1242,"line_end":1242,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40478,"byte_end":40511,"line_start":1243,"line_end":1243,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40516,"byte_end":40523,"line_start":1244,"line_end":1244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41420,"byte_end":41429,"line_start":1270,"line_end":1270,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<Async<UdpSocket>>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message.","sig":null,"attributes":[{"value":"/ Receives a single datagram message.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40695,"byte_end":40734,"line_start":1250,"line_end":1250,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40739,"byte_end":40742,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40747,"byte_end":40822,"line_start":1252,"line_end":1252,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40827,"byte_end":40830,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40835,"byte_end":40929,"line_start":1254,"line_end":1254,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40934,"byte_end":41004,"line_start":1255,"line_end":1255,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41009,"byte_end":41012,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41017,"byte_end":41031,"line_start":1257,"line_end":1257,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41036,"byte_end":41039,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41044,"byte_end":41057,"line_start":1259,"line_end":1259,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41062,"byte_end":41086,"line_start":1260,"line_end":1260,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41091,"byte_end":41119,"line_start":1261,"line_end":1261,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41124,"byte_end":41127,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41132,"byte_end":41176,"line_start":1263,"line_end":1263,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41181,"byte_end":41248,"line_start":1264,"line_end":1264,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41253,"byte_end":41256,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41261,"byte_end":41291,"line_start":1266,"line_end":1266,"column_start":5,"column_end":35}},{"value":"/ let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41296,"byte_end":41352,"line_start":1267,"line_end":1267,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41357,"byte_end":41390,"line_start":1268,"line_end":1268,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41395,"byte_end":41402,"line_start":1269,"line_end":1269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42314,"byte_end":42323,"line_start":1294,"line_end":1294,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<Async<UdpSocket>>::peek_from","value":"pub async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives a single datagram message without removing it from the queue.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41554,"byte_end":41628,"line_start":1274,"line_end":1274,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41633,"byte_end":41636,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41641,"byte_end":41716,"line_start":1276,"line_end":1276,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41721,"byte_end":41724,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41729,"byte_end":41823,"line_start":1278,"line_end":1278,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41828,"byte_end":41898,"line_start":1279,"line_end":1279,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41903,"byte_end":41906,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41911,"byte_end":41925,"line_start":1281,"line_end":1281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41930,"byte_end":41933,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41938,"byte_end":41951,"line_start":1283,"line_end":1283,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41956,"byte_end":41980,"line_start":1284,"line_end":1284,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":41985,"byte_end":42013,"line_start":1285,"line_end":1285,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42018,"byte_end":42021,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42026,"byte_end":42070,"line_start":1287,"line_end":1287,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42075,"byte_end":42142,"line_start":1288,"line_end":1288,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42147,"byte_end":42150,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42155,"byte_end":42185,"line_start":1290,"line_end":1290,"column_start":5,"column_end":35}},{"value":"/ let (len, addr) = socket.peek_from(&mut buf).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42190,"byte_end":42246,"line_start":1291,"line_end":1291,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42251,"byte_end":42284,"line_start":1292,"line_end":1292,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42289,"byte_end":42296,"line_start":1293,"line_end":1293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42988,"byte_end":42995,"line_start":1316,"line_end":1316,"column_start":18,"column_end":25},"name":"send_to","qualname":"<Async<UdpSocket>>::send_to","value":"pub async fn send_to<A: Into<SocketAddr>, '_, '_>(&'_ Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the specified address.","sig":null,"attributes":[{"value":"/ Sends data to the specified address.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42448,"byte_end":42488,"line_start":1298,"line_end":1298,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42493,"byte_end":42496,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes writen.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42501,"byte_end":42540,"line_start":1300,"line_end":1300,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42545,"byte_end":42548,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42553,"byte_end":42567,"line_start":1302,"line_end":1302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42572,"byte_end":42575,"line_start":1303,"line_end":1303,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42580,"byte_end":42593,"line_start":1304,"line_end":1304,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42598,"byte_end":42622,"line_start":1305,"line_end":1305,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42627,"byte_end":42655,"line_start":1306,"line_end":1306,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42660,"byte_end":42663,"line_start":1307,"line_end":1307,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42668,"byte_end":42712,"line_start":1308,"line_end":1308,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42717,"byte_end":42781,"line_start":1309,"line_end":1309,"column_start":5,"column_end":69}},{"value":"/ let addr = socket.get_ref().local_addr()?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42786,"byte_end":42832,"line_start":1310,"line_end":1310,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42837,"byte_end":42840,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42845,"byte_end":42868,"line_start":1312,"line_end":1312,"column_start":5,"column_end":28}},{"value":"/ let len = socket.send_to(msg, addr).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42873,"byte_end":42920,"line_start":1313,"line_end":1313,"column_start":5,"column_end":52}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42925,"byte_end":42958,"line_start":1314,"line_end":1314,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":42963,"byte_end":42970,"line_start":1315,"line_end":1315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44087,"byte_end":44091,"line_start":1345,"line_end":1345,"column_start":18,"column_end":22},"name":"recv","qualname":"<Async<UdpSocket>>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message from the connected peer.","sig":null,"attributes":[{"value":"/ Receives a single datagram message from the connected peer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43169,"byte_end":43232,"line_start":1321,"line_end":1321,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43237,"byte_end":43240,"line_start":1322,"line_end":1322,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43245,"byte_end":43282,"line_start":1323,"line_end":1323,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43287,"byte_end":43290,"line_start":1324,"line_end":1324,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43295,"byte_end":43389,"line_start":1325,"line_end":1325,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43394,"byte_end":43464,"line_start":1326,"line_end":1326,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43469,"byte_end":43472,"line_start":1327,"line_end":1327,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UdpSocket::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43477,"byte_end":43569,"line_start":1328,"line_end":1328,"column_start":5,"column_end":97}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43574,"byte_end":43631,"line_start":1329,"line_end":1329,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43636,"byte_end":43639,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43644,"byte_end":43658,"line_start":1331,"line_end":1331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43663,"byte_end":43666,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43671,"byte_end":43684,"line_start":1333,"line_end":1333,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43689,"byte_end":43713,"line_start":1334,"line_end":1334,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43718,"byte_end":43746,"line_start":1335,"line_end":1335,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43751,"byte_end":43754,"line_start":1336,"line_end":1336,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43759,"byte_end":43803,"line_start":1337,"line_end":1337,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43808,"byte_end":43875,"line_start":1338,"line_end":1338,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43880,"byte_end":43928,"line_start":1339,"line_end":1339,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43933,"byte_end":43936,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43941,"byte_end":43971,"line_start":1341,"line_end":1341,"column_start":5,"column_end":35}},{"value":"/ let len = socket.recv(&mut buf).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":43976,"byte_end":44019,"line_start":1342,"line_end":1342,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44024,"byte_end":44057,"line_start":1343,"line_end":1343,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44062,"byte_end":44069,"line_start":1344,"line_end":1344,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45196,"byte_end":45200,"line_start":1374,"line_end":1374,"column_start":18,"column_end":22},"name":"peek","qualname":"<Async<UdpSocket>>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message from the connected peer without removing it from the\n queue.","sig":null,"attributes":[{"value":"/ Receives a single datagram message from the connected peer without removing it from the","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44197,"byte_end":44288,"line_start":1349,"line_end":1349,"column_start":5,"column_end":96}},{"value":"/ queue.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44293,"byte_end":44303,"line_start":1350,"line_end":1350,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44308,"byte_end":44311,"line_start":1351,"line_end":1351,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44316,"byte_end":44391,"line_start":1352,"line_end":1352,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44396,"byte_end":44399,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44404,"byte_end":44498,"line_start":1354,"line_end":1354,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44503,"byte_end":44573,"line_start":1355,"line_end":1355,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44578,"byte_end":44581,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UdpSocket::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44586,"byte_end":44678,"line_start":1357,"line_end":1357,"column_start":5,"column_end":97}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44683,"byte_end":44740,"line_start":1358,"line_end":1358,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44745,"byte_end":44748,"line_start":1359,"line_end":1359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44753,"byte_end":44767,"line_start":1360,"line_end":1360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44772,"byte_end":44775,"line_start":1361,"line_end":1361,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44780,"byte_end":44793,"line_start":1362,"line_end":1362,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44798,"byte_end":44822,"line_start":1363,"line_end":1363,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44827,"byte_end":44855,"line_start":1364,"line_end":1364,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44860,"byte_end":44863,"line_start":1365,"line_end":1365,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44868,"byte_end":44912,"line_start":1366,"line_end":1366,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44917,"byte_end":44984,"line_start":1367,"line_end":1367,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":44989,"byte_end":45037,"line_start":1368,"line_end":1368,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45042,"byte_end":45045,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45050,"byte_end":45080,"line_start":1370,"line_end":1370,"column_start":5,"column_end":35}},{"value":"/ let len = socket.peek(&mut buf).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45085,"byte_end":45128,"line_start":1371,"line_end":1371,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45133,"byte_end":45166,"line_start":1372,"line_end":1372,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45171,"byte_end":45178,"line_start":1373,"line_end":1373,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":46007,"byte_end":46011,"line_start":1399,"line_end":1399,"column_start":18,"column_end":22},"name":"send","qualname":"<Async<UdpSocket>>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the connected peer.","sig":null,"attributes":[{"value":"/ Sends data to the connected peer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45306,"byte_end":45343,"line_start":1378,"line_end":1378,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45348,"byte_end":45351,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45356,"byte_end":45396,"line_start":1380,"line_end":1380,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45401,"byte_end":45404,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UdpSocket::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45409,"byte_end":45501,"line_start":1382,"line_end":1382,"column_start":5,"column_end":97}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45506,"byte_end":45563,"line_start":1383,"line_end":1383,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45568,"byte_end":45571,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45576,"byte_end":45590,"line_start":1385,"line_end":1385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45595,"byte_end":45598,"line_start":1386,"line_end":1386,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45603,"byte_end":45616,"line_start":1387,"line_end":1387,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45621,"byte_end":45645,"line_start":1388,"line_end":1388,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45650,"byte_end":45678,"line_start":1389,"line_end":1389,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45683,"byte_end":45686,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45691,"byte_end":45735,"line_start":1391,"line_end":1391,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45740,"byte_end":45807,"line_start":1392,"line_end":1392,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45812,"byte_end":45860,"line_start":1393,"line_end":1393,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45865,"byte_end":45868,"line_start":1394,"line_end":1394,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45873,"byte_end":45896,"line_start":1395,"line_end":1395,"column_start":5,"column_end":28}},{"value":"/ let len = socket.send(msg).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45901,"byte_end":45939,"line_start":1396,"line_end":1396,"column_start":5,"column_end":43}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45944,"byte_end":45977,"line_start":1397,"line_end":1397,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":45982,"byte_end":45989,"line_start":1398,"line_end":1398,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":46798,"byte_end":46802,"line_start":1427,"line_end":1427,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<UnixListener>>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<Async<UnixListener>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDS listener bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a UDS listener bound to the specified path.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":46355,"byte_end":46410,"line_start":1414,"line_end":1414,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":46415,"byte_end":46418,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":46423,"byte_end":46437,"line_start":1416,"line_end":1416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":46442,"byte_end":46445,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":46450,"byte_end":46463,"line_start":1418,"line_end":1418,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":46468,"byte_end":46492,"line_start":1419,"line_end":1419,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixListener;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":46497,"byte_end":46538,"line_start":1420,"line_end":1420,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":46543,"byte_end":46546,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":46551,"byte_end":46595,"line_start":1422,"line_end":1422,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<UnixListener>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":46600,"byte_end":46663,"line_start":1423,"line_end":1423,"column_start":5,"column_end":68}},{"value":"/ println!(\"Listening on {:?}\", listener.get_ref().local_addr()?);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":46668,"byte_end":46736,"line_start":1424,"line_end":1424,"column_start":5,"column_end":73}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":46741,"byte_end":46774,"line_start":1425,"line_end":1425,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":46779,"byte_end":46786,"line_start":1426,"line_end":1426,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47570,"byte_end":47576,"line_start":1449,"line_end":1449,"column_start":18,"column_end":24},"name":"accept","qualname":"<Async<UnixListener>>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming UDS stream connection.","sig":null,"attributes":[{"value":"/ Accepts a new incoming UDS stream connection.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":46972,"byte_end":47021,"line_start":1432,"line_end":1432,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47026,"byte_end":47029,"line_start":1433,"line_end":1433,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, it will be returned as a stream together with its remote","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47034,"byte_end":47128,"line_start":1434,"line_end":1434,"column_start":5,"column_end":99}},{"value":"/ address.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47133,"byte_end":47145,"line_start":1435,"line_end":1435,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47150,"byte_end":47153,"line_start":1436,"line_end":1436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47158,"byte_end":47172,"line_start":1437,"line_end":1437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47177,"byte_end":47180,"line_start":1438,"line_end":1438,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47185,"byte_end":47198,"line_start":1439,"line_end":1439,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47203,"byte_end":47227,"line_start":1440,"line_end":1440,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixListener;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47232,"byte_end":47273,"line_start":1441,"line_end":1441,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47278,"byte_end":47281,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47286,"byte_end":47330,"line_start":1443,"line_end":1443,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<UnixListener>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47335,"byte_end":47398,"line_start":1444,"line_end":1444,"column_start":5,"column_end":68}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47403,"byte_end":47453,"line_start":1445,"line_end":1445,"column_start":5,"column_end":55}},{"value":"/ println!(\"Accepted client: {:?}\", addr);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47458,"byte_end":47502,"line_start":1446,"line_end":1446,"column_start":5,"column_end":49}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47507,"byte_end":47540,"line_start":1447,"line_end":1447,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47545,"byte_end":47552,"line_start":1448,"line_end":1448,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":48511,"byte_end":48519,"line_start":1476,"line_end":1476,"column_start":12,"column_end":20},"name":"incoming","qualname":"<Async<UnixListener>>::incoming","value":"pub fn incoming(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming UDS connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming UDS connections.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47758,"byte_end":47807,"line_start":1454,"line_end":1454,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47812,"byte_end":47815,"line_start":1455,"line_end":1455,"column_start":5,"column_end":8}},{"value":"/ The stream is infinite, i.e. it never stops with a [`None`] item.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47820,"byte_end":47889,"line_start":1456,"line_end":1456,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47894,"byte_end":47897,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47902,"byte_end":47916,"line_start":1458,"line_end":1458,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47921,"byte_end":47924,"line_start":1459,"line_end":1459,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47929,"byte_end":47942,"line_start":1460,"line_end":1460,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47947,"byte_end":47971,"line_start":1461,"line_end":1461,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::{pin, stream::StreamExt};","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":47976,"byte_end":48023,"line_start":1462,"line_end":1462,"column_start":5,"column_end":52}},{"value":"/ use std::os::unix::net::UnixListener;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":48028,"byte_end":48069,"line_start":1463,"line_end":1463,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":48074,"byte_end":48077,"line_start":1464,"line_end":1464,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":48082,"byte_end":48126,"line_start":1465,"line_end":1465,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<UnixListener>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":48131,"byte_end":48194,"line_start":1466,"line_end":1466,"column_start":5,"column_end":68}},{"value":"/ let incoming = listener.incoming();","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":48199,"byte_end":48238,"line_start":1467,"line_end":1467,"column_start":5,"column_end":44}},{"value":"/ pin!(incoming);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":48243,"byte_end":48262,"line_start":1468,"line_end":1468,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":48267,"byte_end":48270,"line_start":1469,"line_end":1469,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":48275,"byte_end":48327,"line_start":1470,"line_end":1470,"column_start":5,"column_end":57}},{"value":"/     let stream = stream?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":48332,"byte_end":48361,"line_start":1471,"line_end":1471,"column_start":5,"column_end":34}},{"value":"/     println!(\"Accepted client: {:?}\", stream.get_ref().peer_addr()?);","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":48366,"byte_end":48439,"line_start":1472,"line_end":1472,"column_start":5,"column_end":78}},{"value":"/ }","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":48444,"byte_end":48449,"line_start":1473,"line_end":1473,"column_start":5,"column_end":10}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":48454,"byte_end":48487,"line_start":1474,"line_end":1474,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":48492,"byte_end":48499,"line_start":1475,"line_end":1475,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":49452,"byte_end":49459,"line_start":1507,"line_end":1507,"column_start":18,"column_end":25},"name":"connect","qualname":"<Async<UnixStream>>::connect","value":"pub async fn connect<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDS stream connected to the specified path.","sig":null,"attributes":[{"value":"/ Creates a UDS stream connected to the specified path.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":49071,"byte_end":49128,"line_start":1495,"line_end":1495,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":49133,"byte_end":49136,"line_start":1496,"line_end":1496,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":49141,"byte_end":49155,"line_start":1497,"line_end":1497,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":49160,"byte_end":49163,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":49168,"byte_end":49181,"line_start":1499,"line_end":1499,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":49186,"byte_end":49210,"line_start":1500,"line_end":1500,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixStream;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":49215,"byte_end":49254,"line_start":1501,"line_end":1501,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":49259,"byte_end":49262,"line_start":1502,"line_end":1502,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":49267,"byte_end":49311,"line_start":1503,"line_end":1503,"column_start":5,"column_end":49}},{"value":"/ let stream = Async::<UnixStream>::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":49316,"byte_end":49384,"line_start":1504,"line_end":1504,"column_start":5,"column_end":73}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":49389,"byte_end":49422,"line_start":1505,"line_end":1505,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":49427,"byte_end":49434,"line_start":1506,"line_end":1506,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50319,"byte_end":50323,"line_start":1532,"line_end":1532,"column_start":12,"column_end":16},"name":"pair","qualname":"<Async<UnixStream>>::pair","value":"pub fn pair() -> io::Result<(Async<UnixStream>, Async<UnixStream>)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected UDS stream sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected UDS stream sockets.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":49951,"byte_end":50011,"line_start":1520,"line_end":1520,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50016,"byte_end":50019,"line_start":1521,"line_end":1521,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50024,"byte_end":50038,"line_start":1522,"line_end":1522,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50043,"byte_end":50046,"line_start":1523,"line_end":1523,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50051,"byte_end":50064,"line_start":1524,"line_end":1524,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50069,"byte_end":50093,"line_start":1525,"line_end":1525,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixStream;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50098,"byte_end":50137,"line_start":1526,"line_end":1526,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50142,"byte_end":50145,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50150,"byte_end":50194,"line_start":1528,"line_end":1528,"column_start":5,"column_end":49}},{"value":"/ let (stream1, stream2) = Async::<UnixStream>::pair()?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50199,"byte_end":50257,"line_start":1529,"line_end":1529,"column_start":5,"column_end":63}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50262,"byte_end":50295,"line_start":1530,"line_end":1530,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50300,"byte_end":50307,"line_start":1531,"line_end":1531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51166,"byte_end":51170,"line_start":1561,"line_end":1561,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<UnixDatagram>>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<Async<UnixDatagram>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDS datagram socket bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a UDS datagram socket bound to the specified path.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50791,"byte_end":50853,"line_start":1549,"line_end":1549,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50858,"byte_end":50861,"line_start":1550,"line_end":1550,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50866,"byte_end":50880,"line_start":1551,"line_end":1551,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50885,"byte_end":50888,"line_start":1552,"line_end":1552,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50893,"byte_end":50906,"line_start":1553,"line_end":1553,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50911,"byte_end":50935,"line_start":1554,"line_end":1554,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50940,"byte_end":50981,"line_start":1555,"line_end":1555,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50986,"byte_end":50989,"line_start":1556,"line_end":1556,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50994,"byte_end":51038,"line_start":1557,"line_end":1557,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51043,"byte_end":51104,"line_start":1558,"line_end":1558,"column_start":5,"column_end":66}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51109,"byte_end":51142,"line_start":1559,"line_end":1559,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51147,"byte_end":51154,"line_start":1560,"line_end":1560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51702,"byte_end":51709,"line_start":1578,"line_end":1578,"column_start":12,"column_end":19},"name":"unbound","qualname":"<Async<UnixDatagram>>::unbound","value":"pub fn unbound() -> io::Result<Async<UnixDatagram>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDS datagram socket not bound to any address.","sig":null,"attributes":[{"value":"/ Creates a UDS datagram socket not bound to any address.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51340,"byte_end":51399,"line_start":1566,"line_end":1566,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51404,"byte_end":51407,"line_start":1567,"line_end":1567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51412,"byte_end":51426,"line_start":1568,"line_end":1568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51431,"byte_end":51434,"line_start":1569,"line_end":1569,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51439,"byte_end":51452,"line_start":1570,"line_end":1570,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51457,"byte_end":51481,"line_start":1571,"line_end":1571,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51486,"byte_end":51527,"line_start":1572,"line_end":1572,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51532,"byte_end":51535,"line_start":1573,"line_end":1573,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51540,"byte_end":51584,"line_start":1574,"line_end":1574,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::unbound()?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51589,"byte_end":51640,"line_start":1575,"line_end":1575,"column_start":5,"column_end":56}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51645,"byte_end":51678,"line_start":1576,"line_end":1576,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51683,"byte_end":51690,"line_start":1577,"line_end":1577,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52185,"byte_end":52189,"line_start":1594,"line_end":1594,"column_start":12,"column_end":16},"name":"pair","qualname":"<Async<UnixDatagram>>::pair","value":"pub fn pair() -> io::Result<(Async<UnixDatagram>, Async<UnixDatagram>)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected Unix datagram sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected Unix datagram sockets.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51810,"byte_end":51873,"line_start":1582,"line_end":1582,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51878,"byte_end":51881,"line_start":1583,"line_end":1583,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51886,"byte_end":51900,"line_start":1584,"line_end":1584,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51905,"byte_end":51908,"line_start":1585,"line_end":1585,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51913,"byte_end":51926,"line_start":1586,"line_end":1586,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51931,"byte_end":51955,"line_start":1587,"line_end":1587,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":51960,"byte_end":52001,"line_start":1588,"line_end":1588,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52006,"byte_end":52009,"line_start":1589,"line_end":1589,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52014,"byte_end":52058,"line_start":1590,"line_end":1590,"column_start":5,"column_end":49}},{"value":"/ let (socket1, socket2) = Async::<UnixDatagram>::pair()?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52063,"byte_end":52123,"line_start":1591,"line_end":1591,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52128,"byte_end":52161,"line_start":1592,"line_end":1592,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52166,"byte_end":52173,"line_start":1593,"line_end":1593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52921,"byte_end":52930,"line_start":1616,"line_end":1616,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<Async<UnixDatagram>>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52376,"byte_end":52410,"line_start":1599,"line_end":1599,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52415,"byte_end":52418,"line_start":1600,"line_end":1600,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52423,"byte_end":52498,"line_start":1601,"line_end":1601,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52503,"byte_end":52506,"line_start":1602,"line_end":1602,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52511,"byte_end":52525,"line_start":1603,"line_end":1603,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52530,"byte_end":52533,"line_start":1604,"line_end":1604,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52538,"byte_end":52551,"line_start":1605,"line_end":1605,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52556,"byte_end":52580,"line_start":1606,"line_end":1606,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52585,"byte_end":52626,"line_start":1607,"line_end":1607,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52631,"byte_end":52634,"line_start":1608,"line_end":1608,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52639,"byte_end":52683,"line_start":1609,"line_end":1609,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52688,"byte_end":52749,"line_start":1610,"line_end":1610,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52754,"byte_end":52757,"line_start":1611,"line_end":1611,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52762,"byte_end":52792,"line_start":1612,"line_end":1612,"column_start":5,"column_end":35}},{"value":"/ let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52797,"byte_end":52853,"line_start":1613,"line_end":1613,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52858,"byte_end":52891,"line_start":1614,"line_end":1614,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":52896,"byte_end":52903,"line_start":1615,"line_end":1615,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53583,"byte_end":53590,"line_start":1638,"line_end":1638,"column_start":18,"column_end":25},"name":"send_to","qualname":"<Async<UnixDatagram>>::send_to","value":"pub async fn send_to<P: AsRef<Path>, '_, '_>(&'_ Self, &'_ [u8], P)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the specified address.","sig":null,"attributes":[{"value":"/ Sends data to the specified address.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53059,"byte_end":53099,"line_start":1620,"line_end":1620,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53104,"byte_end":53107,"line_start":1621,"line_end":1621,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53112,"byte_end":53152,"line_start":1622,"line_end":1622,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53157,"byte_end":53160,"line_start":1623,"line_end":1623,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53165,"byte_end":53179,"line_start":1624,"line_end":1624,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53184,"byte_end":53187,"line_start":1625,"line_end":1625,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53192,"byte_end":53205,"line_start":1626,"line_end":1626,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53210,"byte_end":53234,"line_start":1627,"line_end":1627,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53239,"byte_end":53280,"line_start":1628,"line_end":1628,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53285,"byte_end":53288,"line_start":1629,"line_end":1629,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53293,"byte_end":53337,"line_start":1630,"line_end":1630,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::unbound()?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53342,"byte_end":53393,"line_start":1631,"line_end":1631,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53398,"byte_end":53401,"line_start":1632,"line_end":1632,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53406,"byte_end":53429,"line_start":1633,"line_end":1633,"column_start":5,"column_end":28}},{"value":"/ let addr = \"/tmp/socket\";","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53434,"byte_end":53463,"line_start":1634,"line_end":1634,"column_start":5,"column_end":34}},{"value":"/ let len = socket.send_to(msg, addr).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53468,"byte_end":53515,"line_start":1635,"line_end":1635,"column_start":5,"column_end":52}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53520,"byte_end":53553,"line_start":1636,"line_end":1636,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53558,"byte_end":53565,"line_start":1637,"line_end":1637,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54490,"byte_end":54494,"line_start":1663,"line_end":1663,"column_start":18,"column_end":22},"name":"recv","qualname":"<Async<UnixDatagram>>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the connected peer.","sig":null,"attributes":[{"value":"/ Receives data from the connected peer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53728,"byte_end":53770,"line_start":1642,"line_end":1642,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53775,"byte_end":53778,"line_start":1643,"line_end":1643,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53783,"byte_end":53858,"line_start":1644,"line_end":1644,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53863,"byte_end":53866,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UnixDatagram::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53871,"byte_end":53966,"line_start":1646,"line_end":1646,"column_start":5,"column_end":100}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":53971,"byte_end":54028,"line_start":1647,"line_end":1647,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54033,"byte_end":54036,"line_start":1648,"line_end":1648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54041,"byte_end":54055,"line_start":1649,"line_end":1649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54060,"byte_end":54063,"line_start":1650,"line_end":1650,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54068,"byte_end":54081,"line_start":1651,"line_end":1651,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54086,"byte_end":54110,"line_start":1652,"line_end":1652,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54115,"byte_end":54156,"line_start":1653,"line_end":1653,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54161,"byte_end":54164,"line_start":1654,"line_end":1654,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54169,"byte_end":54213,"line_start":1655,"line_end":1655,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::bind(\"/tmp/socket1\")?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54218,"byte_end":54280,"line_start":1656,"line_end":1656,"column_start":5,"column_end":67}},{"value":"/ socket.get_ref().connect(\"/tmp/socket2\")?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54285,"byte_end":54331,"line_start":1657,"line_end":1657,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54336,"byte_end":54339,"line_start":1658,"line_end":1658,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54344,"byte_end":54374,"line_start":1659,"line_end":1659,"column_start":5,"column_end":35}},{"value":"/ let len = socket.recv(&mut buf).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54379,"byte_end":54422,"line_start":1660,"line_end":1660,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54427,"byte_end":54460,"line_start":1661,"line_end":1661,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54465,"byte_end":54472,"line_start":1662,"line_end":1662,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":55310,"byte_end":55314,"line_start":1688,"line_end":1688,"column_start":18,"column_end":22},"name":"send","qualname":"<Async<UnixDatagram>>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the connected peer.","sig":null,"attributes":[{"value":"/ Sends data to the connected peer.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54600,"byte_end":54637,"line_start":1667,"line_end":1667,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54642,"byte_end":54645,"line_start":1668,"line_end":1668,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54650,"byte_end":54690,"line_start":1669,"line_end":1669,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54695,"byte_end":54698,"line_start":1670,"line_end":1670,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UnixDatagram::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54703,"byte_end":54798,"line_start":1671,"line_end":1671,"column_start":5,"column_end":100}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54803,"byte_end":54860,"line_start":1672,"line_end":1672,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54865,"byte_end":54868,"line_start":1673,"line_end":1673,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54873,"byte_end":54887,"line_start":1674,"line_end":1674,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54892,"byte_end":54895,"line_start":1675,"line_end":1675,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54900,"byte_end":54913,"line_start":1676,"line_end":1676,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54918,"byte_end":54942,"line_start":1677,"line_end":1677,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54947,"byte_end":54988,"line_start":1678,"line_end":1678,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":54993,"byte_end":54996,"line_start":1679,"line_end":1679,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":55001,"byte_end":55045,"line_start":1680,"line_end":1680,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::bind(\"/tmp/socket1\")?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":55050,"byte_end":55112,"line_start":1681,"line_end":1681,"column_start":5,"column_end":67}},{"value":"/ socket.get_ref().connect(\"/tmp/socket2\")?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":55117,"byte_end":55163,"line_start":1682,"line_end":1682,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":55168,"byte_end":55171,"line_start":1683,"line_end":1683,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":55176,"byte_end":55199,"line_start":1684,"line_end":1684,"column_start":5,"column_end":28}},{"value":"/ let len = socket.send(msg).await?;","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":55204,"byte_end":55242,"line_start":1685,"line_end":1685,"column_start":5,"column_end":43}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":55247,"byte_end":55280,"line_start":1686,"line_end":1686,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":55285,"byte_end":55292,"line_start":1687,"line_end":1687,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/driver.rs","byte_start":63995,"byte_end":64005,"line_start":226,"line_end":226,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/reactor.rs","byte_start":66182,"byte_end":66189,"line_start":62,"line_end":62,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/reactor.rs","byte_start":71916,"byte_end":71927,"line_start":236,"line_end":236,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/reactor.rs","byte_start":76390,"byte_end":76399,"line_start":368,"line_end":368,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/reactor.rs","byte_start":76929,"byte_end":76935,"line_start":387,"line_end":387,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/reactor.rs","byte_start":81333,"byte_end":81343,"line_start":514,"line_end":514,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4300,"byte_end":4305,"line_start":142,"line_end":142,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":10370,"byte_end":10375,"line_start":336,"line_end":336,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":10606,"byte_end":10611,"line_start":345,"line_end":345,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":10943,"byte_end":10948,"line_start":357,"line_end":357,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16490,"byte_end":16495,"line_start":497,"line_end":497,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16533,"byte_end":16538,"line_start":500,"line_end":500,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":18037,"byte_end":18042,"line_start":547,"line_end":547,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":19885,"byte_end":19890,"line_start":612,"line_end":612,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":233},{"krate":0,"index":238},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":30441,"byte_end":30446,"line_start":918,"line_end":918,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":30771,"byte_end":30776,"line_start":930,"line_end":930,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":32557,"byte_end":32562,"line_start":993,"line_end":993,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":35256,"byte_end":35261,"line_start":1084,"line_end":1084,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":37782,"byte_end":37787,"line_start":1157,"line_end":1157,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":37956,"byte_end":37961,"line_start":1165,"line_end":1165,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39841,"byte_end":39846,"line_start":1221,"line_end":1221,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40007,"byte_end":40012,"line_start":1229,"line_end":1229,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":307},{"krate":0,"index":311},{"krate":0,"index":316},{"krate":0,"index":320},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":46150,"byte_end":46155,"line_start":1404,"line_end":1404,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":46329,"byte_end":46334,"line_start":1413,"line_end":1413,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":48838,"byte_end":48843,"line_start":1485,"line_end":1485,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":49047,"byte_end":49052,"line_start":1494,"line_end":1494,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50564,"byte_end":50569,"line_start":1539,"line_end":1539,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50765,"byte_end":50770,"line_start":1548,"line_end":1548,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":364},{"krate":0,"index":369},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":55479,"byte_end":55484,"line_start":1694,"line_end":1694,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/driver.rs","byte_start":63995,"byte_end":64005,"line_start":226,"line_end":226,"column_start":24,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":84},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/reactor.rs","byte_start":66182,"byte_end":66189,"line_start":62,"line_end":62,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/reactor.rs","byte_start":71916,"byte_end":71927,"line_start":236,"line_end":236,"column_start":6,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/reactor.rs","byte_start":76390,"byte_end":76399,"line_start":368,"line_end":368,"column_start":6,"column_end":15},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":396},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/reactor.rs","byte_start":76929,"byte_end":76935,"line_start":387,"line_end":387,"column_start":6,"column_end":12},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/reactor.rs","byte_start":81333,"byte_end":81343,"line_start":514,"line_end":514,"column_start":24,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":181},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":4300,"byte_end":4305,"line_start":142,"line_end":142,"column_start":6,"column_end":11},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":10370,"byte_end":10375,"line_start":336,"line_end":336,"column_start":15,"column_end":20},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":405},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":10606,"byte_end":10611,"line_start":345,"line_end":345,"column_start":17,"column_end":22},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":405},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":10943,"byte_end":10948,"line_start":357,"line_end":357,"column_start":17,"column_end":22},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":405},"to":{"krate":22,"index":68}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16490,"byte_end":16495,"line_start":497,"line_end":497,"column_start":19,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":16533,"byte_end":16538,"line_start":500,"line_end":500,"column_start":18,"column_end":23},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":18037,"byte_end":18042,"line_start":547,"line_end":547,"column_start":30,"column_end":35},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":411},"to":{"krate":1,"index":8841}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":19885,"byte_end":19890,"line_start":612,"line_end":612,"column_start":9,"column_end":14},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":30441,"byte_end":30446,"line_start":918,"line_end":918,"column_start":18,"column_end":23},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":30771,"byte_end":30776,"line_start":930,"line_end":930,"column_start":29,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":411},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":32557,"byte_end":32562,"line_start":993,"line_end":993,"column_start":31,"column_end":36},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":411},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":35256,"byte_end":35261,"line_start":1084,"line_end":1084,"column_start":6,"column_end":11},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":37782,"byte_end":37787,"line_start":1157,"line_end":1157,"column_start":41,"column_end":46},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":37956,"byte_end":37961,"line_start":1165,"line_end":1165,"column_start":6,"column_end":11},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":39841,"byte_end":39846,"line_start":1221,"line_end":1221,"column_start":39,"column_end":44},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":40007,"byte_end":40012,"line_start":1229,"line_end":1229,"column_start":6,"column_end":11},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":46150,"byte_end":46155,"line_start":1404,"line_end":1404,"column_start":39,"column_end":44},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":46329,"byte_end":46334,"line_start":1413,"line_end":1413,"column_start":6,"column_end":11},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":48838,"byte_end":48843,"line_start":1485,"line_end":1485,"column_start":52,"column_end":57},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":49047,"byte_end":49052,"line_start":1494,"line_end":1494,"column_start":6,"column_end":11},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50564,"byte_end":50569,"line_start":1539,"line_end":1539,"column_start":50,"column_end":55},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":50765,"byte_end":50770,"line_start":1548,"line_end":1548,"column_start":6,"column_end":11},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ytakasugi/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.3.1/src/lib.rs","byte_start":55479,"byte_end":55484,"line_start":1694,"line_end":1694,"column_start":52,"column_end":57},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":1970}}]}